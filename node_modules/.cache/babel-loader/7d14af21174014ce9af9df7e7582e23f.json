{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_list-source.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listSource = void 0;\n\nvar _formatter_1 = require(\"./_formatter\");\n\nvar listSource = function () {\n  function listSource(dataSource, dataMembers) {\n    this.dataSource = this._wrapIfRequired(dataSource, dataMembers);\n    this.dataMembers = dataMembers;\n\n    if (this.dataSource && this.dataMembers) {\n      this.rowCount = this.dataSource.length;\n      this.columnCount = this.dataMembers.length;\n    } else {\n      this.dataSource = [];\n      this.dataMembers = [];\n      this.rowCount = 0;\n      this.columnCount = 0;\n    }\n  }\n\n  listSource.prototype._wrapIfRequired = function (dataSource, dataMembers) {\n    var dataRow,\n        dataSourceWrapper = [],\n        isWrapRequired = dataSource && dataSource.length > 0 && Array.isArray(dataSource) && Array.isArray(dataSource[0]);\n\n    if (isWrapRequired) {\n      for (var i = 0; i < dataSource.length; i++) {\n        dataRow = dataSource[i];\n\n        if (dataMembers && dataRow && dataRow.length === dataMembers.length) {\n          dataSourceWrapper[i] = {};\n\n          for (var j = 0; j < dataRow.length; j++) {\n            dataSourceWrapper[i][dataMembers[j]] = dataRow[j];\n          }\n        } else {\n          isWrapRequired = false;\n          break;\n        }\n      }\n    }\n\n    return isWrapRequired ? dataSourceWrapper : dataSource;\n  };\n\n  listSource.prototype.getRowValue = function (rowIndex, dataMember) {\n    return this.dataSource[rowIndex][dataMember];\n  };\n\n  listSource.prototype.getFormattedRowValue = function (rowIndex, dataMember, formatInfo) {\n    var value = this.getRowValue(rowIndex, dataMember);\n    return _formatter_1.formatNumeric(value, formatInfo);\n  };\n\n  listSource.prototype.getFormattedArgumentRowValue = function (rowIndex, dataMember, formatInfo) {\n    var value = this.getRowValue(rowIndex, dataMember);\n    return _formatter_1.format(value, formatInfo);\n  };\n\n  listSource.prototype.getColumnIndex = function (dataMember) {\n    return this.dataMembers.indexOf(dataMember);\n  };\n\n  listSource.prototype.getRowCount = function () {\n    return this.rowCount;\n  };\n\n  return listSource;\n}();\n\nexports.listSource = listSource;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/_list-source.js"],"names":["Object","defineProperty","exports","value","listSource","_formatter_1","require","dataSource","dataMembers","_wrapIfRequired","rowCount","length","columnCount","prototype","dataRow","dataSourceWrapper","isWrapRequired","Array","isArray","i","j","getRowValue","rowIndex","dataMember","getFormattedRowValue","formatInfo","formatNumeric","getFormattedArgumentRowValue","format","getColumnIndex","indexOf","getRowCount"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_list-source.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listSource = void 0;\nvar _formatter_1 = require(\"./_formatter\");\nvar listSource = (function () {\n    function listSource(dataSource, dataMembers) {\n        this.dataSource = this._wrapIfRequired(dataSource, dataMembers);\n        this.dataMembers = dataMembers;\n        if (this.dataSource && this.dataMembers) {\n            this.rowCount = this.dataSource.length;\n            this.columnCount = this.dataMembers.length;\n        }\n        else {\n            this.dataSource = [];\n            this.dataMembers = [];\n            this.rowCount = 0;\n            this.columnCount = 0;\n        }\n    }\n    listSource.prototype._wrapIfRequired = function (dataSource, dataMembers) {\n        var dataRow, dataSourceWrapper = [], isWrapRequired = dataSource && dataSource.length > 0 && Array.isArray(dataSource) && Array.isArray(dataSource[0]);\n        if (isWrapRequired) {\n            for (var i = 0; i < dataSource.length; i++) {\n                dataRow = dataSource[i];\n                if (dataMembers && dataRow && dataRow.length === dataMembers.length) {\n                    dataSourceWrapper[i] = {};\n                    for (var j = 0; j < dataRow.length; j++) {\n                        dataSourceWrapper[i][dataMembers[j]] = dataRow[j];\n                    }\n                }\n                else {\n                    isWrapRequired = false;\n                    break;\n                }\n            }\n        }\n        return isWrapRequired ? dataSourceWrapper : dataSource;\n    };\n    listSource.prototype.getRowValue = function (rowIndex, dataMember) {\n        return this.dataSource[rowIndex][dataMember];\n    };\n    listSource.prototype.getFormattedRowValue = function (rowIndex, dataMember, formatInfo) {\n        var value = this.getRowValue(rowIndex, dataMember);\n        return _formatter_1.formatNumeric(value, formatInfo);\n    };\n    listSource.prototype.getFormattedArgumentRowValue = function (rowIndex, dataMember, formatInfo) {\n        var value = this.getRowValue(rowIndex, dataMember);\n        return _formatter_1.format(value, formatInfo);\n    };\n    listSource.prototype.getColumnIndex = function (dataMember) {\n        return this.dataMembers.indexOf(dataMember);\n    };\n    listSource.prototype.getRowCount = function () {\n        return this.rowCount;\n    };\n    return listSource;\n}());\nexports.listSource = listSource;\n"]},"metadata":{},"sourceType":"script"}