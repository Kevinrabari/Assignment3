{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.toolbox.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight, setHeight, getOuterHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport messageLocalization from \"../../localization/message\";\nimport TextBox from \"../text_box\";\nimport Accordion from \"../accordion\";\nimport ScrollView from \"../scroll_view\";\nimport Tooltip from \"../tooltip\";\nimport { getDiagram } from \"./diagram.importer\";\nimport DiagramFloatingPanel from \"./ui.diagram.floating_panel\";\nvar DIAGRAM_TOOLBOX_MIN_HEIGHT = 130;\nvar DIAGRAM_TOOLBOX_POPUP_CLASS = \"dx-diagram-toolbox-popup\";\nvar DIAGRAM_TOOLBOX_PANEL_CLASS = \"dx-diagram-toolbox-panel\";\nvar DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS = \"dx-diagram-toolbox-input-container\";\nvar DIAGRAM_TOOLBOX_INPUT_CLASS = \"dx-diagram-toolbox-input\";\nvar DIAGRAM_TOOLTIP_DATATOGGLE = \"shape-toolbox-tooltip\";\nvar DIAGRAM_TOOLBOX_START_DRAG_CLASS = \".dxdi-tb-start-drag-flag\";\n\nclass DiagramToolbox extends DiagramFloatingPanel {\n  _init() {\n    super._init();\n\n    this._toolboxes = [];\n    this._filterText = \"\";\n\n    this._createOnShapeCategoryRenderedAction();\n\n    this._createOnFilterChangedAction();\n  }\n\n  _getPopupClass() {\n    return DIAGRAM_TOOLBOX_POPUP_CLASS;\n  }\n\n  _getPopupHeight() {\n    return this.isMobileView() ? \"100%\" : super._getPopupHeight();\n  }\n\n  _getPopupMaxHeight() {\n    return this.isMobileView() ? \"100%\" : super._getPopupMaxHeight();\n  }\n\n  _getPopupMinHeight() {\n    return DIAGRAM_TOOLBOX_MIN_HEIGHT;\n  }\n\n  _getPopupPosition() {\n    var $parent = this.option(\"offsetParent\");\n    var position = {\n      my: \"left top\",\n      at: \"left top\",\n      of: $parent\n    };\n\n    if (!this.isMobileView()) {\n      return extend(position, {\n        offset: this.option(\"offsetX\") + \" \" + this.option(\"offsetY\")\n      });\n    }\n\n    return position;\n  }\n\n  _getPopupAnimation() {\n    var $parent = this.option(\"offsetParent\");\n\n    if (this.isMobileView()) {\n      return {\n        hide: this._getPopupSlideAnimationObject({\n          direction: \"left\",\n          from: {\n            position: {\n              my: \"left top\",\n              at: \"left top\",\n              of: $parent\n            }\n          },\n          to: {\n            position: {\n              my: \"right top\",\n              at: \"left top\",\n              of: $parent\n            }\n          }\n        }),\n        show: this._getPopupSlideAnimationObject({\n          direction: \"right\",\n          from: {\n            position: {\n              my: \"right top\",\n              at: \"left top\",\n              of: $parent\n            }\n          },\n          to: {\n            position: {\n              my: \"left top\",\n              at: \"left top\",\n              of: $parent\n            }\n          }\n        })\n      };\n    }\n\n    return super._getPopupAnimation();\n  }\n\n  _getPopupOptions() {\n    var options = super._getPopupOptions();\n\n    if (!this.isMobileView()) {\n      return extend(options, {\n        showTitle: true,\n        toolbarItems: [{\n          widget: \"dxButton\",\n          location: \"center\",\n          options: {\n            activeStateEnabled: false,\n            focusStateEnabled: false,\n            hoverStateEnabled: false,\n            icon: \"diagram-toolbox-drag\",\n            stylingMode: \"outlined\",\n            type: \"normal\"\n          }\n        }]\n      });\n    }\n\n    return options;\n  }\n\n  _renderPopupContent($parent) {\n    var panelHeight = \"100%\";\n\n    if (this.option(\"showSearch\")) {\n      var $inputContainer = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS).appendTo($parent);\n\n      this._updateElementWidth($inputContainer);\n\n      this._renderSearchInput($inputContainer);\n\n      if (hasWindow()) {\n        panelHeight = \"calc(100% - \" + getHeight(this._searchInput.$element()) + \"px)\";\n      }\n    }\n\n    var $panel = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_PANEL_CLASS).appendTo($parent);\n    setHeight($panel, panelHeight);\n\n    this._updateElementWidth($panel);\n\n    this._renderScrollView($panel);\n  }\n\n  _updateElementWidth($element) {\n    if (void 0 !== this.option(\"toolboxWidth\")) {\n      $element.css(\"width\", this.option(\"toolboxWidth\"));\n    }\n  }\n\n  updateMaxHeight() {\n    if (this.isMobileView()) {\n      return;\n    }\n\n    var maxHeight = 6;\n\n    if (this._popup) {\n      var $title = this._getPopupTitle();\n\n      maxHeight += getOuterHeight($title);\n    }\n\n    if (this._accordion) {\n      maxHeight += getOuterHeight(this._accordion.$element());\n    }\n\n    if (this._searchInput) {\n      maxHeight += getOuterHeight(this._searchInput.$element());\n    }\n\n    this.option(\"maxHeight\", maxHeight);\n  }\n\n  _renderSearchInput($parent) {\n    var $input = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CLASS).appendTo($parent);\n    this._searchInput = this._createComponent($input, TextBox, {\n      stylingMode: \"outlined\",\n      placeholder: messageLocalization.format(\"dxDiagram-uiSearch\"),\n      onValueChanged: data => {\n        this._onInputChanged(data.value);\n      },\n      valueChangeEvent: \"keyup\",\n      buttons: [{\n        name: \"search\",\n        location: \"after\",\n        options: {\n          activeStateEnabled: false,\n          focusStateEnabled: false,\n          hoverStateEnabled: false,\n          icon: \"search\",\n          stylingMode: \"outlined\",\n          type: \"normal\",\n          onClick: () => {\n            this._searchInput.focus();\n          }\n        }\n      }]\n    });\n  }\n\n  _renderScrollView($parent) {\n    var $scrollViewWrapper = $(\"<div>\").appendTo($parent);\n    this._scrollView = this._createComponent($scrollViewWrapper, ScrollView);\n\n    var _moveIsAllowed = this._scrollView._moveIsAllowed.bind(this._scrollView);\n\n    this._scrollView._moveIsAllowed = e => {\n      for (var i = 0; i < this._toolboxes.length; i++) {\n        var $element = this._toolboxes[i];\n\n        if ($($element).children(DIAGRAM_TOOLBOX_START_DRAG_CLASS).length) {\n          return false;\n        }\n      }\n\n      return _moveIsAllowed(e);\n    };\n\n    var $accordion = $(\"<div>\").appendTo(this._scrollView.content());\n\n    this._updateElementWidth($accordion);\n\n    this._renderAccordion($accordion);\n  }\n\n  _getAccordionDataSource() {\n    var result = [];\n    var toolboxGroups = this.option(\"toolboxGroups\");\n\n    for (var i = 0; i < toolboxGroups.length; i++) {\n      var category = toolboxGroups[i].category;\n      var title = toolboxGroups[i].title;\n      var groupObj = {\n        category: category,\n        title: title || category,\n        expanded: toolboxGroups[i].expanded,\n        displayMode: toolboxGroups[i].displayMode,\n        shapes: toolboxGroups[i].shapes,\n        onTemplate: (widget, $element, data) => {\n          var $toolboxElement = $($element);\n\n          this._onShapeCategoryRenderedAction({\n            category: data.category,\n            displayMode: data.displayMode,\n            dataToggle: DIAGRAM_TOOLTIP_DATATOGGLE,\n            shapes: data.shapes,\n            $element: $toolboxElement\n          });\n\n          this._toolboxes.push($toolboxElement);\n\n          if (\"\" !== this._filterText) {\n            this._onFilterChangedAction({\n              text: this._filterText,\n              filteringToolboxes: this._toolboxes.length - 1\n            });\n          }\n\n          this._createTooltips($toolboxElement);\n        }\n      };\n      result.push(groupObj);\n    }\n\n    return result;\n  }\n\n  _createTooltips($toolboxElement) {\n    if (this._isTouchMode()) {\n      return;\n    }\n\n    var targets = $toolboxElement.find('[data-toggle=\"' + DIAGRAM_TOOLTIP_DATATOGGLE + '\"]');\n    var $container = this.$element();\n    targets.each((index, element) => {\n      var $target = $(element);\n      var title = $target.attr(\"title\");\n\n      if (title) {\n        var $tooltip = $(\"<div>\").text(title).appendTo($container);\n\n        this._createComponent($tooltip, Tooltip, {\n          target: $target.get(0),\n          showEvent: \"mouseenter\",\n          hideEvent: \"mouseleave\",\n          position: \"top\",\n          animation: {\n            show: {\n              type: \"fade\",\n              from: 0,\n              to: 1,\n              delay: 500\n            },\n            hide: {\n              type: \"fade\",\n              from: 1,\n              to: 0,\n              delay: 100\n            }\n          }\n        });\n      }\n    });\n  }\n\n  _isTouchMode() {\n    var {\n      Browser: Browser\n    } = getDiagram();\n    return Browser.TouchUI;\n  }\n\n  _renderAccordion($container) {\n    this._accordion = this._createComponent($container, Accordion, {\n      multiple: true,\n      animationDuration: 0,\n      activeStateEnabled: false,\n      focusStateEnabled: false,\n      hoverStateEnabled: false,\n      collapsible: true,\n      displayExpr: \"title\",\n      dataSource: this._getAccordionDataSource(),\n      disabled: this.option(\"disabled\"),\n      itemTemplate: (data, index, $element) => {\n        data.onTemplate(this, $element, data);\n      },\n      onSelectionChanged: e => {\n        this._updateScrollAnimateSubscription(e.component);\n      },\n      onContentReady: e => {\n        e.component.option(\"selectedItems\", []);\n        var items = e.component.option(\"dataSource\");\n\n        for (var i = 0; i < items.length; i++) {\n          if (false === items[i].expanded) {\n            e.component.collapseItem(i);\n          } else if (true === items[i].expanded) {\n            e.component.expandItem(i);\n          }\n        }\n\n        if (items.length && void 0 === items[0].expanded) {\n          e.component.expandItem(0);\n        }\n\n        this._updateScrollAnimateSubscription(e.component);\n      }\n    });\n  }\n\n  _updateScrollAnimateSubscription(component) {\n    component._deferredAnimate = new Deferred();\n\n    component._deferredAnimate.done(() => {\n      this.updateMaxHeight();\n\n      this._scrollView.update();\n\n      this._updateScrollAnimateSubscription(component);\n    });\n  }\n\n  _onInputChanged(text) {\n    this._filterText = text;\n\n    this._onFilterChangedAction({\n      text: this._filterText,\n      filteringToolboxes: this._toolboxes.map(($element, index) => index)\n    });\n\n    this.updateTooltips();\n    this.updateMaxHeight();\n\n    this._scrollView.update();\n  }\n\n  updateFilter() {\n    this._onInputChanged(this._filterText);\n  }\n\n  updateTooltips() {\n    this._toolboxes.forEach($element => {\n      var $tooltipContainer = $($element);\n\n      this._createTooltips($tooltipContainer);\n    });\n  }\n\n  _createOnShapeCategoryRenderedAction() {\n    this._onShapeCategoryRenderedAction = this._createActionByOption(\"onShapeCategoryRendered\");\n  }\n\n  _createOnFilterChangedAction() {\n    this._onFilterChangedAction = this._createActionByOption(\"onFilterChanged\");\n  }\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"onShapeCategoryRendered\":\n        this._createOnShapeCategoryRenderedAction();\n\n        break;\n\n      case \"onFilterChanged\":\n        this._createOnFilterChangedAction();\n\n        break;\n\n      case \"showSearch\":\n      case \"toolboxWidth\":\n        this._invalidate();\n\n        break;\n\n      case \"toolboxGroups\":\n        this._accordion.option(\"dataSource\", this._getAccordionDataSource());\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n}\n\nexport default DiagramToolbox;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/diagram/ui.diagram.toolbox.js"],"names":["getHeight","setHeight","getOuterHeight","$","extend","hasWindow","Deferred","messageLocalization","TextBox","Accordion","ScrollView","Tooltip","getDiagram","DiagramFloatingPanel","DIAGRAM_TOOLBOX_MIN_HEIGHT","DIAGRAM_TOOLBOX_POPUP_CLASS","DIAGRAM_TOOLBOX_PANEL_CLASS","DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS","DIAGRAM_TOOLBOX_INPUT_CLASS","DIAGRAM_TOOLTIP_DATATOGGLE","DIAGRAM_TOOLBOX_START_DRAG_CLASS","DiagramToolbox","_init","_toolboxes","_filterText","_createOnShapeCategoryRenderedAction","_createOnFilterChangedAction","_getPopupClass","_getPopupHeight","isMobileView","_getPopupMaxHeight","_getPopupMinHeight","_getPopupPosition","$parent","option","position","my","at","of","offset","_getPopupAnimation","hide","_getPopupSlideAnimationObject","direction","from","to","show","_getPopupOptions","options","showTitle","toolbarItems","widget","location","activeStateEnabled","focusStateEnabled","hoverStateEnabled","icon","stylingMode","type","_renderPopupContent","panelHeight","$inputContainer","addClass","appendTo","_updateElementWidth","_renderSearchInput","_searchInput","$element","$panel","_renderScrollView","css","updateMaxHeight","maxHeight","_popup","$title","_getPopupTitle","_accordion","$input","_createComponent","placeholder","format","onValueChanged","data","_onInputChanged","value","valueChangeEvent","buttons","name","onClick","focus","$scrollViewWrapper","_scrollView","_moveIsAllowed","bind","e","i","length","children","$accordion","content","_renderAccordion","_getAccordionDataSource","result","toolboxGroups","category","title","groupObj","expanded","displayMode","shapes","onTemplate","$toolboxElement","_onShapeCategoryRenderedAction","dataToggle","push","_onFilterChangedAction","text","filteringToolboxes","_createTooltips","_isTouchMode","targets","find","$container","each","index","element","$target","attr","$tooltip","target","get","showEvent","hideEvent","animation","delay","Browser","TouchUI","multiple","animationDuration","collapsible","displayExpr","dataSource","disabled","itemTemplate","onSelectionChanged","_updateScrollAnimateSubscription","component","onContentReady","items","collapseItem","expandItem","_deferredAnimate","done","update","map","updateTooltips","updateFilter","forEach","$tooltipContainer","_createActionByOption","_optionChanged","args","_invalidate"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.toolbox.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    setHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport TextBox from \"../text_box\";\r\nimport Accordion from \"../accordion\";\r\nimport ScrollView from \"../scroll_view\";\r\nimport Tooltip from \"../tooltip\";\r\nimport {\r\n    getDiagram\r\n} from \"./diagram.importer\";\r\nimport DiagramFloatingPanel from \"./ui.diagram.floating_panel\";\r\nvar DIAGRAM_TOOLBOX_MIN_HEIGHT = 130;\r\nvar DIAGRAM_TOOLBOX_POPUP_CLASS = \"dx-diagram-toolbox-popup\";\r\nvar DIAGRAM_TOOLBOX_PANEL_CLASS = \"dx-diagram-toolbox-panel\";\r\nvar DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS = \"dx-diagram-toolbox-input-container\";\r\nvar DIAGRAM_TOOLBOX_INPUT_CLASS = \"dx-diagram-toolbox-input\";\r\nvar DIAGRAM_TOOLTIP_DATATOGGLE = \"shape-toolbox-tooltip\";\r\nvar DIAGRAM_TOOLBOX_START_DRAG_CLASS = \".dxdi-tb-start-drag-flag\";\r\nclass DiagramToolbox extends DiagramFloatingPanel {\r\n    _init() {\r\n        super._init();\r\n        this._toolboxes = [];\r\n        this._filterText = \"\";\r\n        this._createOnShapeCategoryRenderedAction();\r\n        this._createOnFilterChangedAction()\r\n    }\r\n    _getPopupClass() {\r\n        return DIAGRAM_TOOLBOX_POPUP_CLASS\r\n    }\r\n    _getPopupHeight() {\r\n        return this.isMobileView() ? \"100%\" : super._getPopupHeight()\r\n    }\r\n    _getPopupMaxHeight() {\r\n        return this.isMobileView() ? \"100%\" : super._getPopupMaxHeight()\r\n    }\r\n    _getPopupMinHeight() {\r\n        return DIAGRAM_TOOLBOX_MIN_HEIGHT\r\n    }\r\n    _getPopupPosition() {\r\n        var $parent = this.option(\"offsetParent\");\r\n        var position = {\r\n            my: \"left top\",\r\n            at: \"left top\",\r\n            of: $parent\r\n        };\r\n        if (!this.isMobileView()) {\r\n            return extend(position, {\r\n                offset: this.option(\"offsetX\") + \" \" + this.option(\"offsetY\")\r\n            })\r\n        }\r\n        return position\r\n    }\r\n    _getPopupAnimation() {\r\n        var $parent = this.option(\"offsetParent\");\r\n        if (this.isMobileView()) {\r\n            return {\r\n                hide: this._getPopupSlideAnimationObject({\r\n                    direction: \"left\",\r\n                    from: {\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    },\r\n                    to: {\r\n                        position: {\r\n                            my: \"right top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    }\r\n                }),\r\n                show: this._getPopupSlideAnimationObject({\r\n                    direction: \"right\",\r\n                    from: {\r\n                        position: {\r\n                            my: \"right top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    },\r\n                    to: {\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"left top\",\r\n                            of: $parent\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return super._getPopupAnimation()\r\n    }\r\n    _getPopupOptions() {\r\n        var options = super._getPopupOptions();\r\n        if (!this.isMobileView()) {\r\n            return extend(options, {\r\n                showTitle: true,\r\n                toolbarItems: [{\r\n                    widget: \"dxButton\",\r\n                    location: \"center\",\r\n                    options: {\r\n                        activeStateEnabled: false,\r\n                        focusStateEnabled: false,\r\n                        hoverStateEnabled: false,\r\n                        icon: \"diagram-toolbox-drag\",\r\n                        stylingMode: \"outlined\",\r\n                        type: \"normal\"\r\n                    }\r\n                }]\r\n            })\r\n        }\r\n        return options\r\n    }\r\n    _renderPopupContent($parent) {\r\n        var panelHeight = \"100%\";\r\n        if (this.option(\"showSearch\")) {\r\n            var $inputContainer = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CONTAINER_CLASS).appendTo($parent);\r\n            this._updateElementWidth($inputContainer);\r\n            this._renderSearchInput($inputContainer);\r\n            if (hasWindow()) {\r\n                panelHeight = \"calc(100% - \" + getHeight(this._searchInput.$element()) + \"px)\"\r\n            }\r\n        }\r\n        var $panel = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_PANEL_CLASS).appendTo($parent);\r\n        setHeight($panel, panelHeight);\r\n        this._updateElementWidth($panel);\r\n        this._renderScrollView($panel)\r\n    }\r\n    _updateElementWidth($element) {\r\n        if (void 0 !== this.option(\"toolboxWidth\")) {\r\n            $element.css(\"width\", this.option(\"toolboxWidth\"))\r\n        }\r\n    }\r\n    updateMaxHeight() {\r\n        if (this.isMobileView()) {\r\n            return\r\n        }\r\n        var maxHeight = 6;\r\n        if (this._popup) {\r\n            var $title = this._getPopupTitle();\r\n            maxHeight += getOuterHeight($title)\r\n        }\r\n        if (this._accordion) {\r\n            maxHeight += getOuterHeight(this._accordion.$element())\r\n        }\r\n        if (this._searchInput) {\r\n            maxHeight += getOuterHeight(this._searchInput.$element())\r\n        }\r\n        this.option(\"maxHeight\", maxHeight)\r\n    }\r\n    _renderSearchInput($parent) {\r\n        var $input = $(\"<div>\").addClass(DIAGRAM_TOOLBOX_INPUT_CLASS).appendTo($parent);\r\n        this._searchInput = this._createComponent($input, TextBox, {\r\n            stylingMode: \"outlined\",\r\n            placeholder: messageLocalization.format(\"dxDiagram-uiSearch\"),\r\n            onValueChanged: data => {\r\n                this._onInputChanged(data.value)\r\n            },\r\n            valueChangeEvent: \"keyup\",\r\n            buttons: [{\r\n                name: \"search\",\r\n                location: \"after\",\r\n                options: {\r\n                    activeStateEnabled: false,\r\n                    focusStateEnabled: false,\r\n                    hoverStateEnabled: false,\r\n                    icon: \"search\",\r\n                    stylingMode: \"outlined\",\r\n                    type: \"normal\",\r\n                    onClick: () => {\r\n                        this._searchInput.focus()\r\n                    }\r\n                }\r\n            }]\r\n        })\r\n    }\r\n    _renderScrollView($parent) {\r\n        var $scrollViewWrapper = $(\"<div>\").appendTo($parent);\r\n        this._scrollView = this._createComponent($scrollViewWrapper, ScrollView);\r\n        var _moveIsAllowed = this._scrollView._moveIsAllowed.bind(this._scrollView);\r\n        this._scrollView._moveIsAllowed = e => {\r\n            for (var i = 0; i < this._toolboxes.length; i++) {\r\n                var $element = this._toolboxes[i];\r\n                if ($($element).children(DIAGRAM_TOOLBOX_START_DRAG_CLASS).length) {\r\n                    return false\r\n                }\r\n            }\r\n            return _moveIsAllowed(e)\r\n        };\r\n        var $accordion = $(\"<div>\").appendTo(this._scrollView.content());\r\n        this._updateElementWidth($accordion);\r\n        this._renderAccordion($accordion)\r\n    }\r\n    _getAccordionDataSource() {\r\n        var result = [];\r\n        var toolboxGroups = this.option(\"toolboxGroups\");\r\n        for (var i = 0; i < toolboxGroups.length; i++) {\r\n            var category = toolboxGroups[i].category;\r\n            var title = toolboxGroups[i].title;\r\n            var groupObj = {\r\n                category: category,\r\n                title: title || category,\r\n                expanded: toolboxGroups[i].expanded,\r\n                displayMode: toolboxGroups[i].displayMode,\r\n                shapes: toolboxGroups[i].shapes,\r\n                onTemplate: (widget, $element, data) => {\r\n                    var $toolboxElement = $($element);\r\n                    this._onShapeCategoryRenderedAction({\r\n                        category: data.category,\r\n                        displayMode: data.displayMode,\r\n                        dataToggle: DIAGRAM_TOOLTIP_DATATOGGLE,\r\n                        shapes: data.shapes,\r\n                        $element: $toolboxElement\r\n                    });\r\n                    this._toolboxes.push($toolboxElement);\r\n                    if (\"\" !== this._filterText) {\r\n                        this._onFilterChangedAction({\r\n                            text: this._filterText,\r\n                            filteringToolboxes: this._toolboxes.length - 1\r\n                        })\r\n                    }\r\n                    this._createTooltips($toolboxElement)\r\n                }\r\n            };\r\n            result.push(groupObj)\r\n        }\r\n        return result\r\n    }\r\n    _createTooltips($toolboxElement) {\r\n        if (this._isTouchMode()) {\r\n            return\r\n        }\r\n        var targets = $toolboxElement.find('[data-toggle=\"' + DIAGRAM_TOOLTIP_DATATOGGLE + '\"]');\r\n        var $container = this.$element();\r\n        targets.each((index, element) => {\r\n            var $target = $(element);\r\n            var title = $target.attr(\"title\");\r\n            if (title) {\r\n                var $tooltip = $(\"<div>\").text(title).appendTo($container);\r\n                this._createComponent($tooltip, Tooltip, {\r\n                    target: $target.get(0),\r\n                    showEvent: \"mouseenter\",\r\n                    hideEvent: \"mouseleave\",\r\n                    position: \"top\",\r\n                    animation: {\r\n                        show: {\r\n                            type: \"fade\",\r\n                            from: 0,\r\n                            to: 1,\r\n                            delay: 500\r\n                        },\r\n                        hide: {\r\n                            type: \"fade\",\r\n                            from: 1,\r\n                            to: 0,\r\n                            delay: 100\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _isTouchMode() {\r\n        var {\r\n            Browser: Browser\r\n        } = getDiagram();\r\n        return Browser.TouchUI\r\n    }\r\n    _renderAccordion($container) {\r\n        this._accordion = this._createComponent($container, Accordion, {\r\n            multiple: true,\r\n            animationDuration: 0,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            collapsible: true,\r\n            displayExpr: \"title\",\r\n            dataSource: this._getAccordionDataSource(),\r\n            disabled: this.option(\"disabled\"),\r\n            itemTemplate: (data, index, $element) => {\r\n                data.onTemplate(this, $element, data)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._updateScrollAnimateSubscription(e.component)\r\n            },\r\n            onContentReady: e => {\r\n                e.component.option(\"selectedItems\", []);\r\n                var items = e.component.option(\"dataSource\");\r\n                for (var i = 0; i < items.length; i++) {\r\n                    if (false === items[i].expanded) {\r\n                        e.component.collapseItem(i)\r\n                    } else if (true === items[i].expanded) {\r\n                        e.component.expandItem(i)\r\n                    }\r\n                }\r\n                if (items.length && void 0 === items[0].expanded) {\r\n                    e.component.expandItem(0)\r\n                }\r\n                this._updateScrollAnimateSubscription(e.component)\r\n            }\r\n        })\r\n    }\r\n    _updateScrollAnimateSubscription(component) {\r\n        component._deferredAnimate = new Deferred;\r\n        component._deferredAnimate.done(() => {\r\n            this.updateMaxHeight();\r\n            this._scrollView.update();\r\n            this._updateScrollAnimateSubscription(component)\r\n        })\r\n    }\r\n    _onInputChanged(text) {\r\n        this._filterText = text;\r\n        this._onFilterChangedAction({\r\n            text: this._filterText,\r\n            filteringToolboxes: this._toolboxes.map(($element, index) => index)\r\n        });\r\n        this.updateTooltips();\r\n        this.updateMaxHeight();\r\n        this._scrollView.update()\r\n    }\r\n    updateFilter() {\r\n        this._onInputChanged(this._filterText)\r\n    }\r\n    updateTooltips() {\r\n        this._toolboxes.forEach($element => {\r\n            var $tooltipContainer = $($element);\r\n            this._createTooltips($tooltipContainer)\r\n        })\r\n    }\r\n    _createOnShapeCategoryRenderedAction() {\r\n        this._onShapeCategoryRenderedAction = this._createActionByOption(\"onShapeCategoryRendered\")\r\n    }\r\n    _createOnFilterChangedAction() {\r\n        this._onFilterChangedAction = this._createActionByOption(\"onFilterChanged\")\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"onShapeCategoryRendered\":\r\n                this._createOnShapeCategoryRenderedAction();\r\n                break;\r\n            case \"onFilterChanged\":\r\n                this._createOnFilterChangedAction();\r\n                break;\r\n            case \"showSearch\":\r\n            case \"toolboxWidth\":\r\n                this._invalidate();\r\n                break;\r\n            case \"toolboxGroups\":\r\n                this._accordion.option(\"dataSource\", this._getAccordionDataSource());\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nexport default DiagramToolbox;\r\n"]},"metadata":{},"sourceType":"module"}