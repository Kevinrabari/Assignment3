{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_expression-utils.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DimensionExpressionInserter = exports.insertDimensionsExpressionsIntoFilterExpression = exports.getFilterCriteria = void 0;\n\nvar analytics_criteria_utils_1 = require(\"@devexpress/analytics-core/analytics-criteria-utils\");\n\nvar analytics_widgets_internal_1 = require(\"@devexpress/analytics-core/analytics-widgets-internal\");\n\nfunction getFilterCriteria(filterString) {\n  var criteriaSerializer = new analytics_widgets_internal_1.FilterEditorSerializer();\n  return criteriaSerializer.deserialize(filterString);\n}\n\nexports.getFilterCriteria = getFilterCriteria;\n\nfunction insertDimensionsExpressionsIntoFilterExpression(filterString, dimensionsExpressions) {\n  var criteriaSerializer = new analytics_widgets_internal_1.FilterEditorSerializer();\n  var filterCriteria = criteriaSerializer.deserialize(filterString);\n  var dimensionsCriteria = {};\n\n  for (var dimensionName in dimensionsExpressions) dimensionsCriteria[dimensionName] = analytics_criteria_utils_1.CriteriaOperatorStateMachine.parse(dimensionsExpressions[dimensionName]);\n\n  var patched = DimensionExpressionInserter.patch(filterCriteria, dimensionsCriteria);\n  return criteriaSerializer.serialize(patched);\n}\n\nexports.insertDimensionsExpressionsIntoFilterExpression = insertDimensionsExpressionsIntoFilterExpression;\n\nvar DimensionExpressionInserter = function () {\n  function DimensionExpressionInserter(dimensionsCriteria) {\n    this._dimensionsCriteria = dimensionsCriteria;\n  }\n\n  DimensionExpressionInserter.patch = function (criteria, dimensionsCriteria) {\n    var patcher = new DimensionExpressionInserter(dimensionsCriteria);\n    return criteria.accept(patcher);\n  };\n\n  DimensionExpressionInserter.prototype.visitOperandProperty = function (element) {\n    return this._dimensionsCriteria[element.propertyName];\n  };\n\n  return DimensionExpressionInserter;\n}();\n\nexports.DimensionExpressionInserter = DimensionExpressionInserter;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/model/internal/_expression-utils.js"],"names":["Object","defineProperty","exports","value","DimensionExpressionInserter","insertDimensionsExpressionsIntoFilterExpression","getFilterCriteria","analytics_criteria_utils_1","require","analytics_widgets_internal_1","filterString","criteriaSerializer","FilterEditorSerializer","deserialize","dimensionsExpressions","filterCriteria","dimensionsCriteria","dimensionName","CriteriaOperatorStateMachine","parse","patched","patch","serialize","_dimensionsCriteria","criteria","patcher","accept","prototype","visitOperandProperty","element","propertyName"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,2BAAR,GAAsCF,OAAO,CAACG,+CAAR,GAA0DH,OAAO,CAACI,iBAAR,GAA4B,KAAK,CAAjI;;AACA,IAAIC,0BAA0B,GAAGC,OAAO,CAAC,qDAAD,CAAxC;;AACA,IAAIC,4BAA4B,GAAGD,OAAO,CAAC,uDAAD,CAA1C;;AACA,SAASF,iBAAT,CAA2BI,YAA3B,EAAyC;AACrC,MAAIC,kBAAkB,GAAG,IAAIF,4BAA4B,CAACG,sBAAjC,EAAzB;AACA,SAAOD,kBAAkB,CAACE,WAAnB,CAA+BH,YAA/B,CAAP;AACH;;AACDR,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B;;AACA,SAASD,+CAAT,CAAyDK,YAAzD,EAAuEI,qBAAvE,EAA8F;AAC1F,MAAIH,kBAAkB,GAAG,IAAIF,4BAA4B,CAACG,sBAAjC,EAAzB;AACA,MAAIG,cAAc,GAAGJ,kBAAkB,CAACE,WAAnB,CAA+BH,YAA/B,CAArB;AACA,MAAIM,kBAAkB,GAAG,EAAzB;;AACA,OAAK,IAAIC,aAAT,IAA0BH,qBAA1B,EACIE,kBAAkB,CAACC,aAAD,CAAlB,GAAoCV,0BAA0B,CAACW,4BAA3B,CAAwDC,KAAxD,CAA8DL,qBAAqB,CAACG,aAAD,CAAnF,CAApC;;AACJ,MAAIG,OAAO,GAAGhB,2BAA2B,CAACiB,KAA5B,CAAkCN,cAAlC,EAAkDC,kBAAlD,CAAd;AACA,SAAOL,kBAAkB,CAACW,SAAnB,CAA6BF,OAA7B,CAAP;AACH;;AACDlB,OAAO,CAACG,+CAAR,GAA0DA,+CAA1D;;AACA,IAAID,2BAA2B,GAAI,YAAY;AAC3C,WAASA,2BAAT,CAAqCY,kBAArC,EAAyD;AACrD,SAAKO,mBAAL,GAA2BP,kBAA3B;AACH;;AACDZ,EAAAA,2BAA2B,CAACiB,KAA5B,GAAoC,UAAUG,QAAV,EAAoBR,kBAApB,EAAwC;AACxE,QAAIS,OAAO,GAAG,IAAIrB,2BAAJ,CAAgCY,kBAAhC,CAAd;AACA,WAAOQ,QAAQ,CAACE,MAAT,CAAgBD,OAAhB,CAAP;AACH,GAHD;;AAIArB,EAAAA,2BAA2B,CAACuB,SAA5B,CAAsCC,oBAAtC,GAA6D,UAAUC,OAAV,EAAmB;AAC5E,WAAO,KAAKN,mBAAL,CAAyBM,OAAO,CAACC,YAAjC,CAAP;AACH,GAFD;;AAGA,SAAO1B,2BAAP;AACH,CAZkC,EAAnC;;AAaAF,OAAO,CAACE,2BAAR,GAAsCA,2BAAtC","sourcesContent":["/**\r\n* DevExpress Dashboard (_expression-utils.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DimensionExpressionInserter = exports.insertDimensionsExpressionsIntoFilterExpression = exports.getFilterCriteria = void 0;\nvar analytics_criteria_utils_1 = require(\"@devexpress/analytics-core/analytics-criteria-utils\");\nvar analytics_widgets_internal_1 = require(\"@devexpress/analytics-core/analytics-widgets-internal\");\nfunction getFilterCriteria(filterString) {\n    var criteriaSerializer = new analytics_widgets_internal_1.FilterEditorSerializer();\n    return criteriaSerializer.deserialize(filterString);\n}\nexports.getFilterCriteria = getFilterCriteria;\nfunction insertDimensionsExpressionsIntoFilterExpression(filterString, dimensionsExpressions) {\n    var criteriaSerializer = new analytics_widgets_internal_1.FilterEditorSerializer();\n    var filterCriteria = criteriaSerializer.deserialize(filterString);\n    var dimensionsCriteria = {};\n    for (var dimensionName in dimensionsExpressions)\n        dimensionsCriteria[dimensionName] = analytics_criteria_utils_1.CriteriaOperatorStateMachine.parse(dimensionsExpressions[dimensionName]);\n    var patched = DimensionExpressionInserter.patch(filterCriteria, dimensionsCriteria);\n    return criteriaSerializer.serialize(patched);\n}\nexports.insertDimensionsExpressionsIntoFilterExpression = insertDimensionsExpressionsIntoFilterExpression;\nvar DimensionExpressionInserter = (function () {\n    function DimensionExpressionInserter(dimensionsCriteria) {\n        this._dimensionsCriteria = dimensionsCriteria;\n    }\n    DimensionExpressionInserter.patch = function (criteria, dimensionsCriteria) {\n        var patcher = new DimensionExpressionInserter(dimensionsCriteria);\n        return criteria.accept(patcher);\n    };\n    DimensionExpressionInserter.prototype.visitOperandProperty = function (element) {\n        return this._dimensionsCriteria[element.propertyName];\n    };\n    return DimensionExpressionInserter;\n}());\nexports.DimensionExpressionInserter = DimensionExpressionInserter;\n"]},"metadata":{},"sourceType":"script"}