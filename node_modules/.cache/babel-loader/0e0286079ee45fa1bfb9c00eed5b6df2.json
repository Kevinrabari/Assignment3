{"ast":null,"code":"/**\n* DevExpress Analytics (widgets\\common\\_displayNameProvider.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DisplayExpressionConverter = void 0;\n\nvar $ = require(\"jquery\");\n\nvar property_1 = require(\"../criteria/operators/property\");\n\nvar _serializer_1 = require(\"../filtereditor/helpers/_serializer\");\n\nvar criteriaEnumeration_1 = require(\"../criteria/utils/criteriaEnumeration\");\n\nvar criteriaOperatorStateMachine_1 = require(\"../criteria/utils/criteriaOperatorStateMachine\");\n\nvar DisplayExpressionConverter = function () {\n  function DisplayExpressionConverter(displayNameProvider) {\n    this.displayNameProvider = displayNameProvider;\n  }\n\n  DisplayExpressionConverter.prototype._replaceNames = function (path, expression, getDisplayExpression) {\n    var _this = this;\n\n    var def = $.Deferred();\n    if (!expression) return def.resolve('').promise();\n\n    try {\n      var expressionCriteria = criteriaOperatorStateMachine_1.CriteriaOperatorStateMachine.parse(expression, true);\n    } catch (e) {\n      return def.reject().promise();\n    }\n\n    var requests = [];\n    var result = [];\n    var serializer = new _serializer_1.FilterEditorSerializer();\n    criteriaEnumeration_1.criteriaForEach(expressionCriteria, function (operator, innerPath) {\n      if (operator instanceof property_1.OperandProperty) {\n        var isContainsParentRelationshipTraversalOperator = operator.propertyName.indexOf('^.') === 0;\n        var propertyName = isContainsParentRelationshipTraversalOperator ? operator.propertyName.substring(2) : operator.propertyName;\n        propertyName = innerPath ? [innerPath, propertyName].join('.') : propertyName;\n        var request = getDisplayExpression ? _this.displayNameProvider.getDisplayNameByPath(path, propertyName) : _this.displayNameProvider.getRealName(path, propertyName);\n        requests.push(request.done(function (data) {\n          var convertedName = isContainsParentRelationshipTraversalOperator ? '^.' + data : data;\n          convertedName = innerPath ? convertedName.split('.').slice(innerPath.split('.').length).join('.') : convertedName;\n          result.push({\n            operand: operator,\n            convertedName: convertedName\n          });\n        }));\n      }\n    });\n\n    if (requests.length === 0) {\n      def.resolve(expression);\n    } else {\n      var processedRequestsCount = 0;\n\n      var onAlways = function () {\n        if (++processedRequestsCount < requests.length) return;\n        var lines = expression.split('\\n');\n\n        for (var i = 0; i < lines.length; i++) {\n          var operands = result.filter(function (value) {\n            return value.operand.startPosition.line === i;\n          }).sort(function (a, b) {\n            return a.operand.startPosition.column - b.operand.startPosition.column;\n          });\n\n          for (var j = 0, delta = 0; j < operands.length; j++) {\n            var column = operands[j].operand.startPosition.column;\n            var propertyName = operands[j].operand.propertyName;\n            var deltaName = 0;\n\n            if (operands[j].operand.originalPropertyLength !== propertyName.length) {\n              deltaName = Math.max(0, operands[j].operand.originalPropertyLength - serializer.serialize(operands[j].operand, false).length);\n            }\n\n            var convertedName = operands[j].convertedName;\n            if (!propertyName || column < 0) continue;\n            lines[i] = lines[i].substring(0, column + delta) + convertedName + lines[i].substring(column + propertyName.length + deltaName + delta);\n            delta += convertedName.length - propertyName.length - deltaName;\n          }\n        }\n\n        def.resolve(lines.join('\\n'));\n      };\n\n      requests.forEach(function (r) {\n        return r.always(onAlways);\n      });\n    }\n\n    return def.promise();\n  };\n\n  DisplayExpressionConverter.prototype.toDisplayExpression = function (path, expression) {\n    return this._replaceNames(path, expression, true);\n  };\n\n  DisplayExpressionConverter.prototype.toRealExpression = function (path, expression) {\n    return this._replaceNames(path, expression, false);\n  };\n\n  return DisplayExpressionConverter;\n}();\n\nexports.DisplayExpressionConverter = DisplayExpressionConverter;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/widgets/common/_displayNameProvider.js"],"names":["Object","defineProperty","exports","value","DisplayExpressionConverter","$","require","property_1","_serializer_1","criteriaEnumeration_1","criteriaOperatorStateMachine_1","displayNameProvider","prototype","_replaceNames","path","expression","getDisplayExpression","_this","def","Deferred","resolve","promise","expressionCriteria","CriteriaOperatorStateMachine","parse","e","reject","requests","result","serializer","FilterEditorSerializer","criteriaForEach","operator","innerPath","OperandProperty","isContainsParentRelationshipTraversalOperator","propertyName","indexOf","substring","join","request","getDisplayNameByPath","getRealName","push","done","data","convertedName","split","slice","length","operand","processedRequestsCount","onAlways","lines","i","operands","filter","startPosition","line","sort","a","b","column","j","delta","deltaName","originalPropertyLength","Math","max","serialize","forEach","r","always","toDisplayExpression","toRealExpression"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (widgets\\common\\_displayNameProvider.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisplayExpressionConverter = void 0;\nvar $ = require(\"jquery\");\nvar property_1 = require(\"../criteria/operators/property\");\nvar _serializer_1 = require(\"../filtereditor/helpers/_serializer\");\nvar criteriaEnumeration_1 = require(\"../criteria/utils/criteriaEnumeration\");\nvar criteriaOperatorStateMachine_1 = require(\"../criteria/utils/criteriaOperatorStateMachine\");\nvar DisplayExpressionConverter = (function () {\n    function DisplayExpressionConverter(displayNameProvider) {\n        this.displayNameProvider = displayNameProvider;\n    }\n    DisplayExpressionConverter.prototype._replaceNames = function (path, expression, getDisplayExpression) {\n        var _this = this;\n        var def = $.Deferred();\n        if (!expression)\n            return def.resolve('').promise();\n        try {\n            var expressionCriteria = criteriaOperatorStateMachine_1.CriteriaOperatorStateMachine.parse(expression, true);\n        }\n        catch (e) {\n            return def.reject().promise();\n        }\n        var requests = [];\n        var result = [];\n        var serializer = new _serializer_1.FilterEditorSerializer();\n        criteriaEnumeration_1.criteriaForEach(expressionCriteria, function (operator, innerPath) {\n            if (operator instanceof property_1.OperandProperty) {\n                var isContainsParentRelationshipTraversalOperator = operator.propertyName.indexOf('^.') === 0;\n                var propertyName = isContainsParentRelationshipTraversalOperator ? operator.propertyName.substring(2) : operator.propertyName;\n                propertyName = innerPath ? [innerPath, propertyName].join('.') : propertyName;\n                var request = getDisplayExpression ? _this.displayNameProvider.getDisplayNameByPath(path, propertyName) :\n                    _this.displayNameProvider.getRealName(path, propertyName);\n                requests.push(request.done(function (data) {\n                    var convertedName = isContainsParentRelationshipTraversalOperator ? '^.' + data : data;\n                    convertedName = innerPath ? convertedName.split('.').slice(innerPath.split('.').length).join('.') : convertedName;\n                    result.push({\n                        operand: operator,\n                        convertedName: convertedName\n                    });\n                }));\n            }\n        });\n        if (requests.length === 0) {\n            def.resolve(expression);\n        }\n        else {\n            var processedRequestsCount = 0;\n            var onAlways = function () {\n                if (++processedRequestsCount < requests.length)\n                    return;\n                var lines = expression.split('\\n');\n                for (var i = 0; i < lines.length; i++) {\n                    var operands = result.filter(function (value) { return value.operand.startPosition.line === i; }).sort(function (a, b) {\n                        return a.operand.startPosition.column - b.operand.startPosition.column;\n                    });\n                    for (var j = 0, delta = 0; j < operands.length; j++) {\n                        var column = operands[j].operand.startPosition.column;\n                        var propertyName = operands[j].operand.propertyName;\n                        var deltaName = 0;\n                        if (operands[j].operand.originalPropertyLength !== propertyName.length) {\n                            deltaName = Math.max(0, operands[j].operand.originalPropertyLength - serializer.serialize(operands[j].operand, false).length);\n                        }\n                        var convertedName = operands[j].convertedName;\n                        if (!propertyName || column < 0)\n                            continue;\n                        lines[i] = lines[i].substring(0, column + delta) + convertedName + lines[i].substring(column + propertyName.length + deltaName + delta);\n                        delta += convertedName.length - propertyName.length - deltaName;\n                    }\n                }\n                def.resolve(lines.join('\\n'));\n            };\n            requests.forEach(function (r) { return r.always(onAlways); });\n        }\n        return def.promise();\n    };\n    DisplayExpressionConverter.prototype.toDisplayExpression = function (path, expression) {\n        return this._replaceNames(path, expression, true);\n    };\n    DisplayExpressionConverter.prototype.toRealExpression = function (path, expression) {\n        return this._replaceNames(path, expression, false);\n    };\n    return DisplayExpressionConverter;\n}());\nexports.DisplayExpressionConverter = DisplayExpressionConverter;\n"]},"metadata":{},"sourceType":"script"}