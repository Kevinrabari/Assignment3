{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.context_menu.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isDefined, isString } from \"../../core/utils/type\";\nimport { ensureDefined } from \"../../core/utils/common\";\nimport Widget from \"../widget/ui.widget\";\nimport ContextMenu from \"../context_menu/ui.context_menu\";\nimport { extendAttributes } from \"./ui.file_manager.common\";\nvar FILEMANAGER_CONTEXT_MEMU_CLASS = \"dx-filemanager-context-menu\";\nvar DEFAULT_CONTEXT_MENU_ITEMS = {\n  create: {},\n  upload: {},\n  download: {},\n  rename: {},\n  move: {},\n  copy: {},\n  delete: {},\n  refresh: {\n    beginGroup: true\n  }\n};\nvar DEFAULT_ITEM_ALLOWED_PROPERTIES = [\"beginGroup\", \"closeMenuOnClick\", \"disabled\", \"icon\", \"selectable\", \"selected\", \"text\", \"visible\"];\n\nclass FileManagerContextMenu extends Widget {\n  _initMarkup() {\n    this._initActions();\n\n    this._isVisible = false;\n    var $menu = $(\"<div>\").appendTo(this.$element());\n    this._contextMenu = this._createComponent($menu, ContextMenu, {\n      cssClass: FILEMANAGER_CONTEXT_MEMU_CLASS,\n      showEvent: \"\",\n      onItemClick: args => this._onContextMenuItemClick(args.itemData.name, args),\n      onShowing: e => this._onContextMenuShowing(e),\n      onShown: () => this._onContextMenuShown(),\n      onHidden: () => this._onContextMenuHidden()\n    });\n\n    super._initMarkup();\n  }\n\n  showAt(fileItems, element, event, target) {\n    var {\n      itemData: itemData,\n      itemElement: itemElement,\n      isActionButton = false\n    } = target;\n\n    if (this._isVisible) {\n      this._onContextMenuHidden();\n    }\n\n    this._menuShowingContext = {\n      targetElement: itemElement,\n      itemData: itemData,\n      fileItems: fileItems,\n      event: event,\n      isActionButton: isActionButton\n    };\n    var position = {\n      of: element,\n      at: \"top left\",\n      my: \"top left\",\n      offset: \"\"\n    };\n\n    if (event) {\n      position.offset = event.offsetX + \" \" + event.offsetY;\n    } else {\n      position.my = \"left top\";\n      position.at = \"left bottom\";\n      position.boundaryOffset = \"1\";\n    }\n\n    this._contextMenu.option({\n      target: element,\n      position: position\n    });\n\n    this._contextMenu.show();\n  }\n\n  createContextMenuItems(fileItems, contextMenuItems, targetFileItem) {\n    this._targetFileItems = fileItems;\n    this._targetFileItem = isDefined(targetFileItem) ? targetFileItem : null === fileItems || void 0 === fileItems ? void 0 : fileItems[0];\n    var result = [];\n    var itemArray = contextMenuItems || this.option(\"items\");\n    itemArray.forEach(srcItem => {\n      var commandName = isString(srcItem) ? srcItem : srcItem.name;\n\n      var item = this._configureItemByCommandName(commandName, srcItem, fileItems, this._targetFileItem);\n\n      if (this._isContextMenuItemAvailable(item, fileItems)) {\n        result.push(item);\n      }\n    });\n    return result;\n  }\n\n  _isContextMenuItemAvailable(menuItem, fileItems) {\n    if (!this._isDefaultItem(menuItem.name) || !menuItem._autoHide) {\n      return ensureDefined(menuItem.visible, true);\n    }\n\n    if (this._isIsolatedCreationItemCommand(menuItem.name) && fileItems && fileItems.length) {\n      return false;\n    }\n\n    return this._commandManager.isCommandAvailable(menuItem.name, fileItems);\n  }\n\n  _isIsolatedCreationItemCommand(commandName) {\n    return (\"create\" === commandName || \"upload\" === commandName) && this.option(\"isolateCreationItemCommands\");\n  }\n\n  _isDefaultItem(commandName) {\n    return !!DEFAULT_CONTEXT_MENU_ITEMS[commandName];\n  }\n\n  _configureItemByCommandName(commandName, item, fileItems, targetFileItem) {\n    if (!this._isDefaultItem(commandName)) {\n      var res = extend(true, {}, item);\n      res.originalItemData = item;\n\n      this._addItemClickHandler(commandName, res);\n\n      if (Array.isArray(item.items)) {\n        res.items = this.createContextMenuItems(fileItems, item.items, targetFileItem);\n      }\n\n      return res;\n    }\n\n    var result = this._createMenuItemByCommandName(commandName);\n\n    var defaultConfig = DEFAULT_CONTEXT_MENU_ITEMS[commandName];\n    extend(result, defaultConfig);\n    result.originalItemData = item;\n    extendAttributes(result, item, DEFAULT_ITEM_ALLOWED_PROPERTIES);\n\n    if (!isDefined(result.visible)) {\n      result._autoHide = true;\n    }\n\n    if (commandName && !result.name) {\n      extend(result, {\n        name: commandName\n      });\n    }\n\n    return result;\n  }\n\n  _createMenuItemByCommandName(commandName) {\n    var {\n      text: text,\n      icon: icon\n    } = this._commandManager.getCommandByName(commandName);\n\n    var menuItem = {\n      name: commandName,\n      text: text,\n      icon: icon\n    };\n\n    this._addItemClickHandler(commandName, menuItem);\n\n    return menuItem;\n  }\n\n  _addItemClickHandler(commandName, contextMenuItem) {\n    contextMenuItem.onItemClick = args => this._onContextMenuItemClick(commandName, args);\n  }\n\n  _onContextMenuItemClick(commandName, args) {\n    var _this$_targetFileItem;\n\n    var changedArgs = extend(true, {}, args);\n    changedArgs.itemData = args.itemData.originalItemData;\n    changedArgs.fileSystemItem = null === (_this$_targetFileItem = this._targetFileItem) || void 0 === _this$_targetFileItem ? void 0 : _this$_targetFileItem.fileItem;\n    changedArgs.viewArea = this.option(\"viewArea\");\n\n    this._actions.onItemClick(changedArgs);\n\n    if (this._isDefaultItem(commandName)) {\n      var targetFileItems = this._isIsolatedCreationItemCommand(commandName) ? null : this._targetFileItems;\n\n      this._commandManager.executeCommand(commandName, targetFileItems);\n    }\n  }\n\n  _initActions() {\n    this._actions = {\n      onContextMenuHidden: this._createActionByOption(\"onContextMenuHidden\"),\n      onContextMenuShowing: this._createActionByOption(\"onContextMenuShowing\"),\n      onItemClick: this._createActionByOption(\"onItemClick\")\n    };\n  }\n\n  _onContextMenuShowing(e) {\n    if (this._isVisible) {\n      this._onContextMenuHidden(true);\n    }\n\n    e = extend(e, this._menuShowingContext, {\n      options: this.option(),\n      cancel: false\n    });\n\n    this._actions.onContextMenuShowing(e);\n\n    if (!e.cancel) {\n      var items = this.createContextMenuItems(this._menuShowingContext.fileItems, null, this._menuShowingContext.fileSystemItem);\n\n      this._contextMenu.option(\"dataSource\", items);\n    }\n  }\n\n  tryUpdateVisibleContextMenu() {\n    if (this._isVisible) {\n      var items = this.createContextMenuItems(this._targetFileItems);\n\n      this._contextMenu.option(\"dataSource\", items);\n    }\n  }\n\n  _onContextMenuShown() {\n    this._isVisible = true;\n  }\n\n  _onContextMenuHidden(preserveContext) {\n    this._isVisible = false;\n\n    if (!preserveContext) {\n      this._menuShowingContext = {};\n    }\n\n    this._contextMenu.option(\"visible\", false);\n\n    this._raiseContextMenuHidden();\n  }\n\n  _raiseContextMenuHidden() {\n    this._actions.onContextMenuHidden();\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      commandManager: null,\n      onContextMenuHidden: null,\n      onItemClick: null\n    });\n  }\n\n  _optionChanged(args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"commandManager\":\n        this.repaint();\n        break;\n\n      case \"items\":\n        this.tryUpdateVisibleContextMenu();\n        break;\n\n      case \"onItemClick\":\n      case \"onContextMenuShowing\":\n      case \"onContextMenuHidden\":\n        this._actions[name] = this._createActionByOption(name);\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  get _commandManager() {\n    return this.option(\"commandManager\");\n  }\n\n}\n\nexport default FileManagerContextMenu;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.context_menu.js"],"names":["$","extend","isDefined","isString","ensureDefined","Widget","ContextMenu","extendAttributes","FILEMANAGER_CONTEXT_MEMU_CLASS","DEFAULT_CONTEXT_MENU_ITEMS","create","upload","download","rename","move","copy","delete","refresh","beginGroup","DEFAULT_ITEM_ALLOWED_PROPERTIES","FileManagerContextMenu","_initMarkup","_initActions","_isVisible","$menu","appendTo","$element","_contextMenu","_createComponent","cssClass","showEvent","onItemClick","args","_onContextMenuItemClick","itemData","name","onShowing","e","_onContextMenuShowing","onShown","_onContextMenuShown","onHidden","_onContextMenuHidden","showAt","fileItems","element","event","target","itemElement","isActionButton","_menuShowingContext","targetElement","position","of","at","my","offset","offsetX","offsetY","boundaryOffset","option","show","createContextMenuItems","contextMenuItems","targetFileItem","_targetFileItems","_targetFileItem","result","itemArray","forEach","srcItem","commandName","item","_configureItemByCommandName","_isContextMenuItemAvailable","push","menuItem","_isDefaultItem","_autoHide","visible","_isIsolatedCreationItemCommand","length","_commandManager","isCommandAvailable","res","originalItemData","_addItemClickHandler","Array","isArray","items","_createMenuItemByCommandName","defaultConfig","text","icon","getCommandByName","contextMenuItem","_this$_targetFileItem","changedArgs","fileSystemItem","fileItem","viewArea","_actions","targetFileItems","executeCommand","onContextMenuHidden","_createActionByOption","onContextMenuShowing","options","cancel","tryUpdateVisibleContextMenu","preserveContext","_raiseContextMenuHidden","_getDefaultOptions","commandManager","_optionChanged","repaint"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.context_menu.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    ensureDefined\r\n} from \"../../core/utils/common\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport ContextMenu from \"../context_menu/ui.context_menu\";\r\nimport {\r\n    extendAttributes\r\n} from \"./ui.file_manager.common\";\r\nvar FILEMANAGER_CONTEXT_MEMU_CLASS = \"dx-filemanager-context-menu\";\r\nvar DEFAULT_CONTEXT_MENU_ITEMS = {\r\n    create: {},\r\n    upload: {},\r\n    download: {},\r\n    rename: {},\r\n    move: {},\r\n    copy: {},\r\n    delete: {},\r\n    refresh: {\r\n        beginGroup: true\r\n    }\r\n};\r\nvar DEFAULT_ITEM_ALLOWED_PROPERTIES = [\"beginGroup\", \"closeMenuOnClick\", \"disabled\", \"icon\", \"selectable\", \"selected\", \"text\", \"visible\"];\r\nclass FileManagerContextMenu extends Widget {\r\n    _initMarkup() {\r\n        this._initActions();\r\n        this._isVisible = false;\r\n        var $menu = $(\"<div>\").appendTo(this.$element());\r\n        this._contextMenu = this._createComponent($menu, ContextMenu, {\r\n            cssClass: FILEMANAGER_CONTEXT_MEMU_CLASS,\r\n            showEvent: \"\",\r\n            onItemClick: args => this._onContextMenuItemClick(args.itemData.name, args),\r\n            onShowing: e => this._onContextMenuShowing(e),\r\n            onShown: () => this._onContextMenuShown(),\r\n            onHidden: () => this._onContextMenuHidden()\r\n        });\r\n        super._initMarkup()\r\n    }\r\n    showAt(fileItems, element, event, target) {\r\n        var {\r\n            itemData: itemData,\r\n            itemElement: itemElement,\r\n            isActionButton: isActionButton = false\r\n        } = target;\r\n        if (this._isVisible) {\r\n            this._onContextMenuHidden()\r\n        }\r\n        this._menuShowingContext = {\r\n            targetElement: itemElement,\r\n            itemData: itemData,\r\n            fileItems: fileItems,\r\n            event: event,\r\n            isActionButton: isActionButton\r\n        };\r\n        var position = {\r\n            of: element,\r\n            at: \"top left\",\r\n            my: \"top left\",\r\n            offset: \"\"\r\n        };\r\n        if (event) {\r\n            position.offset = event.offsetX + \" \" + event.offsetY\r\n        } else {\r\n            position.my = \"left top\";\r\n            position.at = \"left bottom\";\r\n            position.boundaryOffset = \"1\"\r\n        }\r\n        this._contextMenu.option({\r\n            target: element,\r\n            position: position\r\n        });\r\n        this._contextMenu.show()\r\n    }\r\n    createContextMenuItems(fileItems, contextMenuItems, targetFileItem) {\r\n        this._targetFileItems = fileItems;\r\n        this._targetFileItem = isDefined(targetFileItem) ? targetFileItem : null === fileItems || void 0 === fileItems ? void 0 : fileItems[0];\r\n        var result = [];\r\n        var itemArray = contextMenuItems || this.option(\"items\");\r\n        itemArray.forEach(srcItem => {\r\n            var commandName = isString(srcItem) ? srcItem : srcItem.name;\r\n            var item = this._configureItemByCommandName(commandName, srcItem, fileItems, this._targetFileItem);\r\n            if (this._isContextMenuItemAvailable(item, fileItems)) {\r\n                result.push(item)\r\n            }\r\n        });\r\n        return result\r\n    }\r\n    _isContextMenuItemAvailable(menuItem, fileItems) {\r\n        if (!this._isDefaultItem(menuItem.name) || !menuItem._autoHide) {\r\n            return ensureDefined(menuItem.visible, true)\r\n        }\r\n        if (this._isIsolatedCreationItemCommand(menuItem.name) && fileItems && fileItems.length) {\r\n            return false\r\n        }\r\n        return this._commandManager.isCommandAvailable(menuItem.name, fileItems)\r\n    }\r\n    _isIsolatedCreationItemCommand(commandName) {\r\n        return (\"create\" === commandName || \"upload\" === commandName) && this.option(\"isolateCreationItemCommands\")\r\n    }\r\n    _isDefaultItem(commandName) {\r\n        return !!DEFAULT_CONTEXT_MENU_ITEMS[commandName]\r\n    }\r\n    _configureItemByCommandName(commandName, item, fileItems, targetFileItem) {\r\n        if (!this._isDefaultItem(commandName)) {\r\n            var res = extend(true, {}, item);\r\n            res.originalItemData = item;\r\n            this._addItemClickHandler(commandName, res);\r\n            if (Array.isArray(item.items)) {\r\n                res.items = this.createContextMenuItems(fileItems, item.items, targetFileItem)\r\n            }\r\n            return res\r\n        }\r\n        var result = this._createMenuItemByCommandName(commandName);\r\n        var defaultConfig = DEFAULT_CONTEXT_MENU_ITEMS[commandName];\r\n        extend(result, defaultConfig);\r\n        result.originalItemData = item;\r\n        extendAttributes(result, item, DEFAULT_ITEM_ALLOWED_PROPERTIES);\r\n        if (!isDefined(result.visible)) {\r\n            result._autoHide = true\r\n        }\r\n        if (commandName && !result.name) {\r\n            extend(result, {\r\n                name: commandName\r\n            })\r\n        }\r\n        return result\r\n    }\r\n    _createMenuItemByCommandName(commandName) {\r\n        var {\r\n            text: text,\r\n            icon: icon\r\n        } = this._commandManager.getCommandByName(commandName);\r\n        var menuItem = {\r\n            name: commandName,\r\n            text: text,\r\n            icon: icon\r\n        };\r\n        this._addItemClickHandler(commandName, menuItem);\r\n        return menuItem\r\n    }\r\n    _addItemClickHandler(commandName, contextMenuItem) {\r\n        contextMenuItem.onItemClick = args => this._onContextMenuItemClick(commandName, args)\r\n    }\r\n    _onContextMenuItemClick(commandName, args) {\r\n        var _this$_targetFileItem;\r\n        var changedArgs = extend(true, {}, args);\r\n        changedArgs.itemData = args.itemData.originalItemData;\r\n        changedArgs.fileSystemItem = null === (_this$_targetFileItem = this._targetFileItem) || void 0 === _this$_targetFileItem ? void 0 : _this$_targetFileItem.fileItem;\r\n        changedArgs.viewArea = this.option(\"viewArea\");\r\n        this._actions.onItemClick(changedArgs);\r\n        if (this._isDefaultItem(commandName)) {\r\n            var targetFileItems = this._isIsolatedCreationItemCommand(commandName) ? null : this._targetFileItems;\r\n            this._commandManager.executeCommand(commandName, targetFileItems)\r\n        }\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onContextMenuHidden: this._createActionByOption(\"onContextMenuHidden\"),\r\n            onContextMenuShowing: this._createActionByOption(\"onContextMenuShowing\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\")\r\n        }\r\n    }\r\n    _onContextMenuShowing(e) {\r\n        if (this._isVisible) {\r\n            this._onContextMenuHidden(true)\r\n        }\r\n        e = extend(e, this._menuShowingContext, {\r\n            options: this.option(),\r\n            cancel: false\r\n        });\r\n        this._actions.onContextMenuShowing(e);\r\n        if (!e.cancel) {\r\n            var items = this.createContextMenuItems(this._menuShowingContext.fileItems, null, this._menuShowingContext.fileSystemItem);\r\n            this._contextMenu.option(\"dataSource\", items)\r\n        }\r\n    }\r\n    tryUpdateVisibleContextMenu() {\r\n        if (this._isVisible) {\r\n            var items = this.createContextMenuItems(this._targetFileItems);\r\n            this._contextMenu.option(\"dataSource\", items)\r\n        }\r\n    }\r\n    _onContextMenuShown() {\r\n        this._isVisible = true\r\n    }\r\n    _onContextMenuHidden(preserveContext) {\r\n        this._isVisible = false;\r\n        if (!preserveContext) {\r\n            this._menuShowingContext = {}\r\n        }\r\n        this._contextMenu.option(\"visible\", false);\r\n        this._raiseContextMenuHidden()\r\n    }\r\n    _raiseContextMenuHidden() {\r\n        this._actions.onContextMenuHidden()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            commandManager: null,\r\n            onContextMenuHidden: null,\r\n            onItemClick: null\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"commandManager\":\r\n                this.repaint();\r\n                break;\r\n            case \"items\":\r\n                this.tryUpdateVisibleContextMenu();\r\n                break;\r\n            case \"onItemClick\":\r\n            case \"onContextMenuShowing\":\r\n            case \"onContextMenuHidden\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    get _commandManager() {\r\n        return this.option(\"commandManager\")\r\n    }\r\n}\r\nexport default FileManagerContextMenu;\r\n"]},"metadata":{},"sourceType":"module"}