{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.command_manager.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isString } from \"../../core/utils/type\";\nimport messageLocalization from \"../../localization/message\";\nexport var defaultPermissions = {\n  create: false,\n  copy: false,\n  move: false,\n  delete: false,\n  rename: false,\n  upload: false,\n  download: false\n};\nexport class FileManagerCommandManager {\n  constructor(permissions) {\n    this._actions = {};\n    this._permissions = permissions || {};\n\n    this._initCommands();\n  }\n\n  _initCommands() {\n    this._commands = [{\n      name: \"create\",\n      text: messageLocalization.format(\"dxFileManager-commandCreate\"),\n      icon: \"newfolder\",\n      enabled: this._permissions.create,\n      noFileItemRequired: true\n    }, {\n      name: \"rename\",\n      text: messageLocalization.format(\"dxFileManager-commandRename\"),\n      icon: \"rename\",\n      enabled: this._permissions.rename,\n      isSingleFileItemCommand: true\n    }, {\n      name: \"move\",\n      text: messageLocalization.format(\"dxFileManager-commandMove\"),\n      icon: \"movetofolder\",\n      enabled: this._permissions.move\n    }, {\n      name: \"copy\",\n      text: messageLocalization.format(\"dxFileManager-commandCopy\"),\n      icon: \"copy\",\n      enabled: this._permissions.copy\n    }, {\n      name: \"delete\",\n      text: messageLocalization.format(\"dxFileManager-commandDelete\"),\n      icon: \"trash\",\n      enabled: this._permissions.delete\n    }, {\n      name: \"download\",\n      text: messageLocalization.format(\"dxFileManager-commandDownload\"),\n      icon: \"download\",\n      enabled: this._permissions.download\n    }, {\n      name: \"upload\",\n      text: messageLocalization.format(\"dxFileManager-commandUpload\"),\n      icon: \"upload\",\n      enabled: this._permissions.upload,\n      noFileItemRequired: true\n    }, {\n      name: \"refresh\",\n      text: messageLocalization.format(\"dxFileManager-commandRefresh\"),\n      icon: \"dx-filemanager-i dx-filemanager-i-refresh\",\n      enabled: true,\n      noFileItemRequired: true\n    }, {\n      name: \"thumbnails\",\n      text: messageLocalization.format(\"dxFileManager-commandThumbnails\"),\n      icon: \"mediumiconslayout\",\n      enabled: true,\n      noFileItemRequired: true\n    }, {\n      name: \"details\",\n      text: messageLocalization.format(\"dxFileManager-commandDetails\"),\n      icon: \"detailslayout\",\n      enabled: true,\n      noFileItemRequired: true\n    }, {\n      name: \"clearSelection\",\n      text: messageLocalization.format(\"dxFileManager-commandClearSelection\"),\n      icon: \"remove\",\n      enabled: true\n    }, {\n      name: \"showNavPane\",\n      hint: messageLocalization.format(\"dxFileManager-commandShowNavPane\"),\n      icon: \"menu\",\n      enabled: false,\n      noFileItemRequired: true\n    }];\n    this._commandMap = {};\n\n    this._commands.forEach(command => {\n      this._commandMap[command.name] = command;\n    });\n  }\n\n  registerActions(actions) {\n    this._actions = extend(this._actions, actions);\n  }\n\n  executeCommand(command, arg) {\n    var commandName = isString(command) ? command : command.name;\n    var action = this._actions[commandName];\n\n    if (action) {\n      return action(arg);\n    }\n  }\n\n  updatePermissions(permissions) {\n    var resultPermissions = extend({}, defaultPermissions, permissions);\n    this._permissions = resultPermissions;\n    each(this._permissions, permission => {\n      this._commandMap[permission].enabled = this._permissions[permission];\n    });\n  }\n\n  setCommandEnabled(commandName, enabled) {\n    var command = this.getCommandByName(commandName);\n\n    if (command) {\n      command.enabled = enabled;\n    }\n  }\n\n  getCommandByName(name) {\n    return this._commandMap[name];\n  }\n\n  isCommandAvailable(commandName, itemInfos) {\n    var command = this.getCommandByName(commandName);\n\n    if (!command || !command.enabled) {\n      return false;\n    }\n\n    if (command.noFileItemRequired) {\n      return true;\n    }\n\n    var itemsLength = itemInfos && itemInfos.length || 0;\n\n    if (0 === itemsLength || itemInfos.some(item => item.fileItem.isRoot() || item.fileItem.isParentFolder)) {\n      return false;\n    }\n\n    if (\"download\" === commandName) {\n      return itemInfos.every(itemInfo => !itemInfo.fileItem.isDirectory);\n    }\n\n    return !command.isSingleFileItemCommand || 1 === itemsLength;\n  }\n\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.command_manager.js"],"names":["extend","each","isString","messageLocalization","defaultPermissions","create","copy","move","delete","rename","upload","download","FileManagerCommandManager","constructor","permissions","_actions","_permissions","_initCommands","_commands","name","text","format","icon","enabled","noFileItemRequired","isSingleFileItemCommand","hint","_commandMap","forEach","command","registerActions","actions","executeCommand","arg","commandName","action","updatePermissions","resultPermissions","permission","setCommandEnabled","getCommandByName","isCommandAvailable","itemInfos","itemsLength","length","some","item","fileItem","isRoot","isParentFolder","every","itemInfo","isDirectory"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.command_manager.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nexport var defaultPermissions = {\r\n    create: false,\r\n    copy: false,\r\n    move: false,\r\n    delete: false,\r\n    rename: false,\r\n    upload: false,\r\n    download: false\r\n};\r\nexport class FileManagerCommandManager {\r\n    constructor(permissions) {\r\n        this._actions = {};\r\n        this._permissions = permissions || {};\r\n        this._initCommands()\r\n    }\r\n    _initCommands() {\r\n        this._commands = [{\r\n            name: \"create\",\r\n            text: messageLocalization.format(\"dxFileManager-commandCreate\"),\r\n            icon: \"newfolder\",\r\n            enabled: this._permissions.create,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"rename\",\r\n            text: messageLocalization.format(\"dxFileManager-commandRename\"),\r\n            icon: \"rename\",\r\n            enabled: this._permissions.rename,\r\n            isSingleFileItemCommand: true\r\n        }, {\r\n            name: \"move\",\r\n            text: messageLocalization.format(\"dxFileManager-commandMove\"),\r\n            icon: \"movetofolder\",\r\n            enabled: this._permissions.move\r\n        }, {\r\n            name: \"copy\",\r\n            text: messageLocalization.format(\"dxFileManager-commandCopy\"),\r\n            icon: \"copy\",\r\n            enabled: this._permissions.copy\r\n        }, {\r\n            name: \"delete\",\r\n            text: messageLocalization.format(\"dxFileManager-commandDelete\"),\r\n            icon: \"trash\",\r\n            enabled: this._permissions.delete\r\n        }, {\r\n            name: \"download\",\r\n            text: messageLocalization.format(\"dxFileManager-commandDownload\"),\r\n            icon: \"download\",\r\n            enabled: this._permissions.download\r\n        }, {\r\n            name: \"upload\",\r\n            text: messageLocalization.format(\"dxFileManager-commandUpload\"),\r\n            icon: \"upload\",\r\n            enabled: this._permissions.upload,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"refresh\",\r\n            text: messageLocalization.format(\"dxFileManager-commandRefresh\"),\r\n            icon: \"dx-filemanager-i dx-filemanager-i-refresh\",\r\n            enabled: true,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"thumbnails\",\r\n            text: messageLocalization.format(\"dxFileManager-commandThumbnails\"),\r\n            icon: \"mediumiconslayout\",\r\n            enabled: true,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"details\",\r\n            text: messageLocalization.format(\"dxFileManager-commandDetails\"),\r\n            icon: \"detailslayout\",\r\n            enabled: true,\r\n            noFileItemRequired: true\r\n        }, {\r\n            name: \"clearSelection\",\r\n            text: messageLocalization.format(\"dxFileManager-commandClearSelection\"),\r\n            icon: \"remove\",\r\n            enabled: true\r\n        }, {\r\n            name: \"showNavPane\",\r\n            hint: messageLocalization.format(\"dxFileManager-commandShowNavPane\"),\r\n            icon: \"menu\",\r\n            enabled: false,\r\n            noFileItemRequired: true\r\n        }];\r\n        this._commandMap = {};\r\n        this._commands.forEach(command => {\r\n            this._commandMap[command.name] = command\r\n        })\r\n    }\r\n    registerActions(actions) {\r\n        this._actions = extend(this._actions, actions)\r\n    }\r\n    executeCommand(command, arg) {\r\n        var commandName = isString(command) ? command : command.name;\r\n        var action = this._actions[commandName];\r\n        if (action) {\r\n            return action(arg)\r\n        }\r\n    }\r\n    updatePermissions(permissions) {\r\n        var resultPermissions = extend({}, defaultPermissions, permissions);\r\n        this._permissions = resultPermissions;\r\n        each(this._permissions, permission => {\r\n            this._commandMap[permission].enabled = this._permissions[permission]\r\n        })\r\n    }\r\n    setCommandEnabled(commandName, enabled) {\r\n        var command = this.getCommandByName(commandName);\r\n        if (command) {\r\n            command.enabled = enabled\r\n        }\r\n    }\r\n    getCommandByName(name) {\r\n        return this._commandMap[name]\r\n    }\r\n    isCommandAvailable(commandName, itemInfos) {\r\n        var command = this.getCommandByName(commandName);\r\n        if (!command || !command.enabled) {\r\n            return false\r\n        }\r\n        if (command.noFileItemRequired) {\r\n            return true\r\n        }\r\n        var itemsLength = itemInfos && itemInfos.length || 0;\r\n        if (0 === itemsLength || itemInfos.some(item => item.fileItem.isRoot() || item.fileItem.isParentFolder)) {\r\n            return false\r\n        }\r\n        if (\"download\" === commandName) {\r\n            return itemInfos.every(itemInfo => !itemInfo.fileItem.isDirectory)\r\n        }\r\n        return !command.isSingleFileItemCommand || 1 === itemsLength\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}