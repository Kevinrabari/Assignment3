{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\dataSource\\dbColumn.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DBColumn = exports.DBColumnType = void 0;\nvar DBColumnType;\n\n(function (DBColumnType) {\n  DBColumnType[DBColumnType[\"Unknown\"] = 0] = \"Unknown\";\n  DBColumnType[DBColumnType[\"Boolean\"] = 1] = \"Boolean\";\n  DBColumnType[DBColumnType[\"Byte\"] = 2] = \"Byte\";\n  DBColumnType[DBColumnType[\"SByte\"] = 3] = \"SByte\";\n  DBColumnType[DBColumnType[\"Char\"] = 4] = \"Char\";\n  DBColumnType[DBColumnType[\"Decimal\"] = 5] = \"Decimal\";\n  DBColumnType[DBColumnType[\"Double\"] = 6] = \"Double\";\n  DBColumnType[DBColumnType[\"Single\"] = 7] = \"Single\";\n  DBColumnType[DBColumnType[\"Int32\"] = 8] = \"Int32\";\n  DBColumnType[DBColumnType[\"UInt32\"] = 9] = \"UInt32\";\n  DBColumnType[DBColumnType[\"Int16\"] = 10] = \"Int16\";\n  DBColumnType[DBColumnType[\"UInt16\"] = 11] = \"UInt16\";\n  DBColumnType[DBColumnType[\"Int64\"] = 12] = \"Int64\";\n  DBColumnType[DBColumnType[\"UInt64\"] = 13] = \"UInt64\";\n  DBColumnType[DBColumnType[\"String\"] = 14] = \"String\";\n  DBColumnType[DBColumnType[\"DateTime\"] = 15] = \"DateTime\";\n  DBColumnType[DBColumnType[\"Guid\"] = 16] = \"Guid\";\n  DBColumnType[DBColumnType[\"TimeSpan\"] = 17] = \"TimeSpan\";\n  DBColumnType[DBColumnType[\"ByteArray\"] = 18] = \"ByteArray\";\n})(DBColumnType = exports.DBColumnType || (exports.DBColumnType = {}));\n\nvar DBColumn = function () {\n  function DBColumn(model) {\n    this.name = model['Name'];\n    this.type = model['ColumnType'];\n    this.size = model['Size'];\n  }\n\n  DBColumn.GetType = function (dbColumnType) {\n    switch (dbColumnType) {\n      case DBColumnType.Boolean:\n        return 'System.Boolean';\n\n      case DBColumnType.Byte:\n        return 'System.Byte';\n\n      case DBColumnType.SByte:\n        return 'System.SByte';\n\n      case DBColumnType.Char:\n        return 'System.Char';\n\n      case DBColumnType.Decimal:\n        return 'System.Decimal';\n\n      case DBColumnType.Double:\n        return 'System.Double';\n\n      case DBColumnType.Single:\n        return 'System.Single';\n\n      case DBColumnType.Int32:\n        return 'System.Int32';\n\n      case DBColumnType.UInt32:\n        return 'System.UInt32';\n\n      case DBColumnType.Int16:\n        return 'System.Int16';\n\n      case DBColumnType.UInt16:\n        return 'System.UInt16';\n\n      case DBColumnType.Int64:\n        return 'System.Int64';\n\n      case DBColumnType.UInt64:\n        return 'System.UInt64';\n\n      case DBColumnType.String:\n        return 'System.String';\n\n      case DBColumnType.DateTime:\n        return 'System.DateTime';\n\n      case DBColumnType.Guid:\n        return 'System.Guid';\n\n      case DBColumnType.TimeSpan:\n        return 'System.TimeSpan';\n\n      case DBColumnType.ByteArray:\n        return 'System.Byte[]';\n\n      default:\n        return 'System.Object';\n    }\n  };\n\n  DBColumn.GetSpecific = function (type) {\n    switch (type) {\n      case 'System.Boolean':\n        return 'Bool';\n\n      case 'System.Byte':\n      case 'System.SByte':\n      case 'System.Int16':\n      case 'System.UInt16':\n      case 'System.Int32':\n      case 'System.UInt32':\n      case 'System.Int64':\n      case 'System.UInt64':\n        return 'Integer';\n\n      case 'System.Char':\n      case 'System.Guid':\n      case 'System.ByteArray':\n      case 'System.String':\n        return 'String';\n\n      case 'System.Double':\n      case 'System.Single':\n      case 'System.Decimal':\n        return 'Float';\n\n      case 'System.DateTime':\n      case 'System.TimeSpan':\n        return 'Date';\n\n      default:\n        return 'String';\n    }\n  };\n\n  return DBColumn;\n}();\n\nexports.DBColumn = DBColumn;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/dataSource/dbColumn.js"],"names":["Object","defineProperty","exports","value","DBColumn","DBColumnType","model","name","type","size","GetType","dbColumnType","Boolean","Byte","SByte","Char","Decimal","Double","Single","Int32","UInt32","Int16","UInt16","Int64","UInt64","String","DateTime","Guid","TimeSpan","ByteArray","GetSpecific"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\dataSource\\dbColumn.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DBColumn = exports.DBColumnType = void 0;\nvar DBColumnType;\n(function (DBColumnType) {\n    DBColumnType[DBColumnType[\"Unknown\"] = 0] = \"Unknown\";\n    DBColumnType[DBColumnType[\"Boolean\"] = 1] = \"Boolean\";\n    DBColumnType[DBColumnType[\"Byte\"] = 2] = \"Byte\";\n    DBColumnType[DBColumnType[\"SByte\"] = 3] = \"SByte\";\n    DBColumnType[DBColumnType[\"Char\"] = 4] = \"Char\";\n    DBColumnType[DBColumnType[\"Decimal\"] = 5] = \"Decimal\";\n    DBColumnType[DBColumnType[\"Double\"] = 6] = \"Double\";\n    DBColumnType[DBColumnType[\"Single\"] = 7] = \"Single\";\n    DBColumnType[DBColumnType[\"Int32\"] = 8] = \"Int32\";\n    DBColumnType[DBColumnType[\"UInt32\"] = 9] = \"UInt32\";\n    DBColumnType[DBColumnType[\"Int16\"] = 10] = \"Int16\";\n    DBColumnType[DBColumnType[\"UInt16\"] = 11] = \"UInt16\";\n    DBColumnType[DBColumnType[\"Int64\"] = 12] = \"Int64\";\n    DBColumnType[DBColumnType[\"UInt64\"] = 13] = \"UInt64\";\n    DBColumnType[DBColumnType[\"String\"] = 14] = \"String\";\n    DBColumnType[DBColumnType[\"DateTime\"] = 15] = \"DateTime\";\n    DBColumnType[DBColumnType[\"Guid\"] = 16] = \"Guid\";\n    DBColumnType[DBColumnType[\"TimeSpan\"] = 17] = \"TimeSpan\";\n    DBColumnType[DBColumnType[\"ByteArray\"] = 18] = \"ByteArray\";\n})(DBColumnType = exports.DBColumnType || (exports.DBColumnType = {}));\nvar DBColumn = (function () {\n    function DBColumn(model) {\n        this.name = model['Name'];\n        this.type = model['ColumnType'];\n        this.size = model['Size'];\n    }\n    DBColumn.GetType = function (dbColumnType) {\n        switch (dbColumnType) {\n            case DBColumnType.Boolean:\n                return 'System.Boolean';\n            case DBColumnType.Byte:\n                return 'System.Byte';\n            case DBColumnType.SByte:\n                return 'System.SByte';\n            case DBColumnType.Char:\n                return 'System.Char';\n            case DBColumnType.Decimal:\n                return 'System.Decimal';\n            case DBColumnType.Double:\n                return 'System.Double';\n            case DBColumnType.Single:\n                return 'System.Single';\n            case DBColumnType.Int32:\n                return 'System.Int32';\n            case DBColumnType.UInt32:\n                return 'System.UInt32';\n            case DBColumnType.Int16:\n                return 'System.Int16';\n            case DBColumnType.UInt16:\n                return 'System.UInt16';\n            case DBColumnType.Int64:\n                return 'System.Int64';\n            case DBColumnType.UInt64:\n                return 'System.UInt64';\n            case DBColumnType.String:\n                return 'System.String';\n            case DBColumnType.DateTime:\n                return 'System.DateTime';\n            case DBColumnType.Guid:\n                return 'System.Guid';\n            case DBColumnType.TimeSpan:\n                return 'System.TimeSpan';\n            case DBColumnType.ByteArray:\n                return 'System.Byte[]';\n            default:\n                return 'System.Object';\n        }\n    };\n    DBColumn.GetSpecific = function (type) {\n        switch (type) {\n            case 'System.Boolean':\n                return 'Bool';\n            case 'System.Byte':\n            case 'System.SByte':\n            case 'System.Int16':\n            case 'System.UInt16':\n            case 'System.Int32':\n            case 'System.UInt32':\n            case 'System.Int64':\n            case 'System.UInt64':\n                return 'Integer';\n            case 'System.Char':\n            case 'System.Guid':\n            case 'System.ByteArray':\n            case 'System.String':\n                return 'String';\n            case 'System.Double':\n            case 'System.Single':\n            case 'System.Decimal':\n                return 'Float';\n            case 'System.DateTime':\n            case 'System.TimeSpan':\n                return 'Date';\n            default:\n                return 'String';\n        }\n    };\n    return DBColumn;\n}());\nexports.DBColumn = DBColumn;\n"]},"metadata":{},"sourceType":"script"}