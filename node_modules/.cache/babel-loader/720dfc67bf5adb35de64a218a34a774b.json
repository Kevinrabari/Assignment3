{"ast":null,"code":"/**\r\n* DevExpress Dashboard (options-panel-extension.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsPanelExtension = void 0;\n\nvar ko = require(\"knockout\");\n\nvar control_options_1 = require(\"../../common/control-options\");\n\nvar _options_manager_1 = require(\"../../common/internal/_options-manager\");\n\nvar _dashboard_item_menu_1 = require(\"../items/_dashboard-item-menu\");\n\nvar name = 'item-options-panel';\nvar nameAlias = 'itemOptionsPanel';\n\nvar OptionsPanelExtension = function () {\n  function OptionsPanelExtension(dashboardControl, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.dashboardControl = dashboardControl;\n    this.name = name;\n    this._subscriptions = [];\n    this._perMenuSubscriptions = [];\n    this._customizeTabsHandlers = [];\n    this._optionsManager = new _options_manager_1.OptionsManager();\n\n    this._optionsManager.initialize({\n      alias: nameAlias,\n      dashboardControl: dashboardControl,\n      defaultOptions: {},\n      eventsHolder: this,\n      initOptions: options,\n      optionChanged: function (args) {\n        return null;\n      }\n    });\n  }\n\n  OptionsPanelExtension.prototype._contextMenuSubscriber = function (itemContextMenu) {\n    if (!!itemContextMenu) {\n      var item = this.dashboardControl._actualLayoutController().selectedDashboardItem();\n\n      this._updateContextMenu(itemContextMenu, item, this.dashboardControl.dashboard(), this.dashboardControl._dataSourceBrowser);\n    }\n  };\n\n  OptionsPanelExtension.prototype.start = function () {\n    var contextMenuExtension = this.dashboardControl.findExtension('item-menu');\n\n    if (contextMenuExtension) {\n      this._subscriptions.push(contextMenuExtension._itemContextMenu.subscribe(this._contextMenuSubscriber, this));\n\n      this._contextMenuSubscriber(contextMenuExtension._itemContextMenu());\n    }\n  };\n\n  OptionsPanelExtension.prototype.stop = function () {\n    this._perMenuSubscriptions.forEach(function (s) {\n      return s.dispose();\n    });\n\n    this._perMenuSubscriptions = [];\n\n    this._subscriptions.forEach(function (s) {\n      return s.dispose();\n    });\n\n    this._subscriptions = [];\n  };\n\n  OptionsPanelExtension.prototype._updateContextMenu = function (menu, item, dashboard, dataSourceBrowser) {\n    var _this = this;\n\n    var composer;\n\n    if (menu.selectedItemSurface) {\n      composer = menu.selectedItemSurface.getPropertiesComposer();\n\n      menu.selectedItemSurface.customizeDashboardItemTabs = function (args) {\n        _this._optionsManager.raiseEvent('customizeSections', args);\n      };\n    }\n\n    menu.contextMenuItems.push({\n      menuItemId: this.name,\n      icon: 'dx-dashboard-properties',\n      title: 'DashboardWebStringId.Options',\n      panelWidth: _dashboard_item_menu_1.DashboardItemMenuSizes.OptionsPanelWidth,\n      templateName: 'dx-dashboard-options',\n      detailVisible: ko.observable(false),\n      showMenu: function () {\n        var args = {\n          dataSourceBrowser: dataSourceBrowser,\n          dashboard: dashboard,\n          propertiesController: menu.propertiesController\n        };\n        var tabs = composer.composeTabs(item, args);\n\n        _this._customizeTabsHandlers.forEach(function (handler) {\n          return handler(tabs, item);\n        });\n\n        menu.propertiesController.mainModel({\n          data: {\n            model: item,\n            propertiesTabs: ko.observableArray(tabs)\n          }\n        });\n      },\n      customData: {\n        propertiesController: menu.propertiesController\n      },\n      index: 300\n    });\n  };\n\n  OptionsPanelExtension.prototype._subscribeTabsChanged = function (handler) {\n    var _this = this;\n\n    if (this._customizeTabsHandlers.indexOf(handler) === -1) {\n      this._customizeTabsHandlers.push(handler);\n    }\n\n    return {\n      dispose: function () {\n        _this._customizeTabsHandlers.splice(_this._customizeTabsHandlers.indexOf(handler), 1);\n      }\n    };\n  };\n\n  return OptionsPanelExtension;\n}();\n\nexports.OptionsPanelExtension = OptionsPanelExtension;\n\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) {\n  return new OptionsPanelExtension(dashboardControl, options);\n};\n\ncontrol_options_1.extensionNameMap[name] = nameAlias;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/extensions/options-panel-extension.js"],"names":["Object","defineProperty","exports","value","OptionsPanelExtension","ko","require","control_options_1","_options_manager_1","_dashboard_item_menu_1","name","nameAlias","dashboardControl","options","_subscriptions","_perMenuSubscriptions","_customizeTabsHandlers","_optionsManager","OptionsManager","initialize","alias","defaultOptions","eventsHolder","initOptions","optionChanged","args","prototype","_contextMenuSubscriber","itemContextMenu","item","_actualLayoutController","selectedDashboardItem","_updateContextMenu","dashboard","_dataSourceBrowser","start","contextMenuExtension","findExtension","push","_itemContextMenu","subscribe","stop","forEach","s","dispose","menu","dataSourceBrowser","_this","composer","selectedItemSurface","getPropertiesComposer","customizeDashboardItemTabs","raiseEvent","contextMenuItems","menuItemId","icon","title","panelWidth","DashboardItemMenuSizes","OptionsPanelWidth","templateName","detailVisible","observable","showMenu","propertiesController","tabs","composeTabs","handler","mainModel","data","model","propertiesTabs","observableArray","customData","index","_subscribeTabsChanged","indexOf","splice","designerExtensions","extensionNameMap"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,8BAAD,CAA/B;;AACA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,wCAAD,CAAhC;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,+BAAD,CAApC;;AACA,IAAII,IAAI,GAAG,oBAAX;AACA,IAAIC,SAAS,GAAG,kBAAhB;;AACA,IAAIP,qBAAqB,GAAI,YAAY;AACrC,WAASA,qBAAT,CAA+BQ,gBAA/B,EAAiDC,OAAjD,EAA0D;AACtD,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAKD,gBAAL,GAAwBA,gBAAxB;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKI,cAAL,GAAsB,EAAtB;AACA,SAAKC,qBAAL,GAA6B,EAA7B;AACA,SAAKC,sBAAL,GAA8B,EAA9B;AACA,SAAKC,eAAL,GAAuB,IAAIT,kBAAkB,CAACU,cAAvB,EAAvB;;AACA,SAAKD,eAAL,CAAqBE,UAArB,CAAgC;AAC5BC,MAAAA,KAAK,EAAET,SADqB;AAE5BC,MAAAA,gBAAgB,EAAEA,gBAFU;AAG5BS,MAAAA,cAAc,EAAE,EAHY;AAI5BC,MAAAA,YAAY,EAAE,IAJc;AAK5BC,MAAAA,WAAW,EAAEV,OALe;AAM5BW,MAAAA,aAAa,EAAE,UAAUC,IAAV,EAAgB;AAAE,eAAO,IAAP;AAAc;AANnB,KAAhC;AAQH;;AACDrB,EAAAA,qBAAqB,CAACsB,SAAtB,CAAgCC,sBAAhC,GAAyD,UAAUC,eAAV,EAA2B;AAChF,QAAI,CAAC,CAACA,eAAN,EAAuB;AACnB,UAAIC,IAAI,GAAG,KAAKjB,gBAAL,CAAsBkB,uBAAtB,GAAgDC,qBAAhD,EAAX;;AACA,WAAKC,kBAAL,CAAwBJ,eAAxB,EAAyCC,IAAzC,EAA+C,KAAKjB,gBAAL,CAAsBqB,SAAtB,EAA/C,EAAkF,KAAKrB,gBAAL,CAAsBsB,kBAAxG;AACH;AACJ,GALD;;AAMA9B,EAAAA,qBAAqB,CAACsB,SAAtB,CAAgCS,KAAhC,GAAwC,YAAY;AAChD,QAAIC,oBAAoB,GAAG,KAAKxB,gBAAL,CAAsByB,aAAtB,CAAoC,WAApC,CAA3B;;AACA,QAAID,oBAAJ,EAA0B;AACtB,WAAKtB,cAAL,CAAoBwB,IAApB,CAAyBF,oBAAoB,CAACG,gBAArB,CAAsCC,SAAtC,CAAgD,KAAKb,sBAArD,EAA6E,IAA7E,CAAzB;;AACA,WAAKA,sBAAL,CAA4BS,oBAAoB,CAACG,gBAArB,EAA5B;AACH;AACJ,GAND;;AAOAnC,EAAAA,qBAAqB,CAACsB,SAAtB,CAAgCe,IAAhC,GAAuC,YAAY;AAC/C,SAAK1B,qBAAL,CAA2B2B,OAA3B,CAAmC,UAAUC,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACC,OAAF,EAAP;AAAqB,KAAvE;;AACA,SAAK7B,qBAAL,GAA6B,EAA7B;;AACA,SAAKD,cAAL,CAAoB4B,OAApB,CAA4B,UAAUC,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACC,OAAF,EAAP;AAAqB,KAAhE;;AACA,SAAK9B,cAAL,GAAsB,EAAtB;AACH,GALD;;AAMAV,EAAAA,qBAAqB,CAACsB,SAAtB,CAAgCM,kBAAhC,GAAqD,UAAUa,IAAV,EAAgBhB,IAAhB,EAAsBI,SAAtB,EAAiCa,iBAAjC,EAAoD;AACrG,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,QAAJ;;AACA,QAAIH,IAAI,CAACI,mBAAT,EAA8B;AAC1BD,MAAAA,QAAQ,GAAGH,IAAI,CAACI,mBAAL,CAAyBC,qBAAzB,EAAX;;AACAL,MAAAA,IAAI,CAACI,mBAAL,CAAyBE,0BAAzB,GAAsD,UAAU1B,IAAV,EAAgB;AAClEsB,QAAAA,KAAK,CAAC9B,eAAN,CAAsBmC,UAAtB,CAAiC,mBAAjC,EAAsD3B,IAAtD;AACH,OAFD;AAGH;;AACDoB,IAAAA,IAAI,CAACQ,gBAAL,CAAsBf,IAAtB,CAA2B;AACvBgB,MAAAA,UAAU,EAAE,KAAK5C,IADM;AAEvB6C,MAAAA,IAAI,EAAE,yBAFiB;AAGvBC,MAAAA,KAAK,EAAE,8BAHgB;AAIvBC,MAAAA,UAAU,EAAEhD,sBAAsB,CAACiD,sBAAvB,CAA8CC,iBAJnC;AAKvBC,MAAAA,YAAY,EAAE,sBALS;AAMvBC,MAAAA,aAAa,EAAExD,EAAE,CAACyD,UAAH,CAAc,KAAd,CANQ;AAOvBC,MAAAA,QAAQ,EAAE,YAAY;AAClB,YAAItC,IAAI,GAAG;AAAEqB,UAAAA,iBAAiB,EAAEA,iBAArB;AAAwCb,UAAAA,SAAS,EAAEA,SAAnD;AAA8D+B,UAAAA,oBAAoB,EAAEnB,IAAI,CAACmB;AAAzF,SAAX;AACA,YAAIC,IAAI,GAAGjB,QAAQ,CAACkB,WAAT,CAAqBrC,IAArB,EAA2BJ,IAA3B,CAAX;;AACAsB,QAAAA,KAAK,CAAC/B,sBAAN,CAA6B0B,OAA7B,CAAqC,UAAUyB,OAAV,EAAmB;AAAE,iBAAOA,OAAO,CAACF,IAAD,EAAOpC,IAAP,CAAd;AAA6B,SAAvF;;AACAgB,QAAAA,IAAI,CAACmB,oBAAL,CAA0BI,SAA1B,CAAoC;AAChCC,UAAAA,IAAI,EAAE;AACFC,YAAAA,KAAK,EAAEzC,IADL;AAEF0C,YAAAA,cAAc,EAAElE,EAAE,CAACmE,eAAH,CAAmBP,IAAnB;AAFd;AAD0B,SAApC;AAMH,OAjBsB;AAkBvBQ,MAAAA,UAAU,EAAE;AACRT,QAAAA,oBAAoB,EAAEnB,IAAI,CAACmB;AADnB,OAlBW;AAqBvBU,MAAAA,KAAK,EAAE;AArBgB,KAA3B;AAuBH,GAhCD;;AAiCAtE,EAAAA,qBAAqB,CAACsB,SAAtB,CAAgCiD,qBAAhC,GAAwD,UAAUR,OAAV,EAAmB;AACvE,QAAIpB,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAK/B,sBAAL,CAA4B4D,OAA5B,CAAoCT,OAApC,MAAiD,CAAC,CAAtD,EAAyD;AACrD,WAAKnD,sBAAL,CAA4BsB,IAA5B,CAAiC6B,OAAjC;AACH;;AACD,WAAO;AACHvB,MAAAA,OAAO,EAAE,YAAY;AACjBG,QAAAA,KAAK,CAAC/B,sBAAN,CAA6B6D,MAA7B,CAAoC9B,KAAK,CAAC/B,sBAAN,CAA6B4D,OAA7B,CAAqCT,OAArC,CAApC,EAAmF,CAAnF;AACH;AAHE,KAAP;AAKH,GAVD;;AAWA,SAAO/D,qBAAP;AACH,CAlF4B,EAA7B;;AAmFAF,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC;;AACAG,iBAAiB,CAACuE,kBAAlB,CAAqCpE,IAArC,IAA6C,UAAUE,gBAAV,EAA4BC,OAA5B,EAAqC;AAAE,SAAO,IAAIT,qBAAJ,CAA0BQ,gBAA1B,EAA4CC,OAA5C,CAAP;AAA8D,CAAlJ;;AACAN,iBAAiB,CAACwE,gBAAlB,CAAmCrE,IAAnC,IAA2CC,SAA3C","sourcesContent":["/**\r\n* DevExpress Dashboard (options-panel-extension.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsPanelExtension = void 0;\nvar ko = require(\"knockout\");\nvar control_options_1 = require(\"../../common/control-options\");\nvar _options_manager_1 = require(\"../../common/internal/_options-manager\");\nvar _dashboard_item_menu_1 = require(\"../items/_dashboard-item-menu\");\nvar name = 'item-options-panel';\nvar nameAlias = 'itemOptionsPanel';\nvar OptionsPanelExtension = (function () {\n    function OptionsPanelExtension(dashboardControl, options) {\n        if (options === void 0) { options = {}; }\n        this.dashboardControl = dashboardControl;\n        this.name = name;\n        this._subscriptions = [];\n        this._perMenuSubscriptions = [];\n        this._customizeTabsHandlers = [];\n        this._optionsManager = new _options_manager_1.OptionsManager();\n        this._optionsManager.initialize({\n            alias: nameAlias,\n            dashboardControl: dashboardControl,\n            defaultOptions: {},\n            eventsHolder: this,\n            initOptions: options,\n            optionChanged: function (args) { return null; }\n        });\n    }\n    OptionsPanelExtension.prototype._contextMenuSubscriber = function (itemContextMenu) {\n        if (!!itemContextMenu) {\n            var item = this.dashboardControl._actualLayoutController().selectedDashboardItem();\n            this._updateContextMenu(itemContextMenu, item, this.dashboardControl.dashboard(), this.dashboardControl._dataSourceBrowser);\n        }\n    };\n    OptionsPanelExtension.prototype.start = function () {\n        var contextMenuExtension = this.dashboardControl.findExtension('item-menu');\n        if (contextMenuExtension) {\n            this._subscriptions.push(contextMenuExtension._itemContextMenu.subscribe(this._contextMenuSubscriber, this));\n            this._contextMenuSubscriber(contextMenuExtension._itemContextMenu());\n        }\n    };\n    OptionsPanelExtension.prototype.stop = function () {\n        this._perMenuSubscriptions.forEach(function (s) { return s.dispose(); });\n        this._perMenuSubscriptions = [];\n        this._subscriptions.forEach(function (s) { return s.dispose(); });\n        this._subscriptions = [];\n    };\n    OptionsPanelExtension.prototype._updateContextMenu = function (menu, item, dashboard, dataSourceBrowser) {\n        var _this = this;\n        var composer;\n        if (menu.selectedItemSurface) {\n            composer = menu.selectedItemSurface.getPropertiesComposer();\n            menu.selectedItemSurface.customizeDashboardItemTabs = function (args) {\n                _this._optionsManager.raiseEvent('customizeSections', args);\n            };\n        }\n        menu.contextMenuItems.push({\n            menuItemId: this.name,\n            icon: 'dx-dashboard-properties',\n            title: 'DashboardWebStringId.Options',\n            panelWidth: _dashboard_item_menu_1.DashboardItemMenuSizes.OptionsPanelWidth,\n            templateName: 'dx-dashboard-options',\n            detailVisible: ko.observable(false),\n            showMenu: function () {\n                var args = { dataSourceBrowser: dataSourceBrowser, dashboard: dashboard, propertiesController: menu.propertiesController };\n                var tabs = composer.composeTabs(item, args);\n                _this._customizeTabsHandlers.forEach(function (handler) { return handler(tabs, item); });\n                menu.propertiesController.mainModel({\n                    data: {\n                        model: item,\n                        propertiesTabs: ko.observableArray(tabs),\n                    }\n                });\n            },\n            customData: {\n                propertiesController: menu.propertiesController,\n            },\n            index: 300\n        });\n    };\n    OptionsPanelExtension.prototype._subscribeTabsChanged = function (handler) {\n        var _this = this;\n        if (this._customizeTabsHandlers.indexOf(handler) === -1) {\n            this._customizeTabsHandlers.push(handler);\n        }\n        return {\n            dispose: function () {\n                _this._customizeTabsHandlers.splice(_this._customizeTabsHandlers.indexOf(handler), 1);\n            }\n        };\n    };\n    return OptionsPanelExtension;\n}());\nexports.OptionsPanelExtension = OptionsPanelExtension;\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) { return new OptionsPanelExtension(dashboardControl, options); };\ncontrol_options_1.extensionNameMap[name] = nameAlias;\n"]},"metadata":{},"sourceType":"script"}