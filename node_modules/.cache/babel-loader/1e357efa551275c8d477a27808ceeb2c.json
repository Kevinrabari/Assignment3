{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_rule-ranges-editor.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RuleRangesEditor = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _default_1 = require(\"../../data/localization/_default\");\n\nvar _jquery_helpers_1 = require(\"../../data/_jquery-helpers\");\n\nvar color_1 = require(\"../../model/color\");\n\nvar _range_info_1 = require(\"../../model/format-rules/conditions/range/metadata/_range-info\");\n\nvar range_generator_1 = require(\"../../model/format-rules/conditions/range/range-generator\");\n\nvar _format_rules_common_1 = require(\"../../model/format-rules/metadata/_format-rules-common\");\n\nvar _style_settings_base_1 = require(\"../../model/format-rules/style-settings/metadata/_style-settings-base\");\n\nvar _knockout_utils_1 = require(\"../../model/internal/_knockout-utils\");\n\nvar _style_settings_adapters_1 = require(\"./_style-settings-adapters\");\n\nvar negativeInfinityDisplayText = '-âˆž';\nvar dataGridColumnTypes = {\n  Text: 'string',\n  DateTime: 'date',\n  Bool: 'boolean',\n  Integer: 'number',\n  Float: 'number',\n  Double: 'number',\n  Decimal: 'number',\n  Enum: 'string',\n  Custom: 'object',\n  Unknown: 'object'\n};\n\nvar RuleRangesEditor = function () {\n  function RuleRangesEditor(options) {\n    var _this = this;\n\n    this.selection = ko.observable(null);\n    this.value = ko.observableArray([]);\n\n    this.closeEditCell = function () {\n      _this._closeEditCell && _this._closeEditCell();\n    };\n\n    this._closeEditCell = null;\n    this.isGradient = options.condition.isGradient();\n    this.appearanceMode = options.appearanceMode;\n    this.condition = options.condition;\n    this.enableCustomStyles = options.enableCustomStyles;\n    this.dataType = this.condition.dataType;\n    this.isPercent = ko.computed({\n      read: function () {\n        return _this.condition.valueType() === 'Percent';\n      },\n      write: function (isPercent) {\n        if (isPercent) {\n          _this.condition.setValues(range_generator_1.FormatConditionRangeGenerator.calculateRangePercentValues(_this.condition.rangeSet.ranges.peek().length));\n        }\n      }\n    });\n\n    _knockout_utils_1.safeComputed({\n      valueType: this.condition.valueType\n    }, function () {\n      return _this._updateValue();\n    });\n\n    this.condition.rangeSet.ranges.subscribe(function () {\n      return _this._updateValue();\n    }, null, 'arrayChange');\n  }\n\n  RuleRangesEditor.prototype.isRangeEmptyAllowed = function (range) {\n    if (this.isGradient) {\n      var ranges = this.value.peek();\n      var index = ranges.indexOf(range);\n      return index != 0 && index != ranges.length - 1;\n    } else {\n      return true;\n    }\n  };\n\n  RuleRangesEditor.prototype.createStyleSettingsEditorOptions = function (range) {\n    return {\n      allowChangeViewMode: false,\n      appearanceMode: this.appearanceMode,\n      isEmptyAllowed: this.isRangeEmptyAllowed(range),\n      selectedChanged: this.getSelectedStyleChangedHandler(range),\n      closeEditCell: this.closeEditCell,\n      enableCustomStyles: this.enableCustomStyles\n    };\n  };\n\n  RuleRangesEditor.prototype.createStyleSettingsEditorItemOptions = function (range) {\n    return {\n      item: range.style(),\n      clickHandler: function () {},\n      isSelected: ko.observable(false),\n      isEmptyAllowed: this.isRangeEmptyAllowed(range),\n      isRange: true,\n      isGradient: this.isGradient,\n      restrictToColor: this.isGradient\n    };\n  };\n\n  RuleRangesEditor.prototype.createRangeNumberEditorViewModel = function (args) {\n    var isNegativeInfintySelected = args.value() === _format_rules_common_1.negativeInfinity;\n\n    var numberBoxValue = ko.observable(isNegativeInfintySelected ? 0 : args.value());\n    var allowInfinity = args.grid.totalCount() === args.rowIndex + 1 && !this.isPercent();\n    var infinitValue = ko.observable(isNegativeInfintySelected);\n    var numberBoxOptions = {\n      onValueChanged: function (e) {\n        args.setValue(e.value);\n        numberBoxValue(e.value);\n      },\n      value: numberBoxValue()\n    };\n    var buttonOptions = {\n      width: '100%',\n      keyExpr: 'value',\n      selectedItemKeys: [isNegativeInfintySelected ? _format_rules_common_1.negativeInfinity : 'number'],\n      items: [{\n        value: 'number',\n        text: _default_1.getLocalizationById('DashboardStringId.FormatConditionNumberValueType')\n      }, {\n        value: _format_rules_common_1.negativeInfinity,\n        text: negativeInfinityDisplayText\n      }],\n      selectionMode: 'single',\n      onSelectionChanged: function (e) {\n        if (e.addedItems[0].value === _format_rules_common_1.negativeInfinity) {\n          args.setValue(_format_rules_common_1.negativeInfinity);\n          infinitValue(true);\n        } else {\n          args.setValue(numberBoxValue());\n          infinitValue(false);\n        }\n      }\n    };\n    return {\n      negativeInfinityDisplayText: negativeInfinityDisplayText,\n      allowInfinity: allowInfinity,\n      infinitValue: infinitValue,\n      numberBoxOptions: numberBoxOptions,\n      buttonOptions: buttonOptions\n    };\n  };\n\n  Object.defineProperty(RuleRangesEditor.prototype, \"dataGridOptions\", {\n    get: function () {\n      var _this = this;\n\n      var valueType = dataGridColumnTypes[this.dataType()];\n      return {\n        dataSource: this.value,\n        twoWayBindingEnabled: false,\n        hoverStateEnabled: false,\n        showRowLines: true,\n        showColumnHeaders: false,\n        rowAlternationEnabled: false,\n        selection: undefined,\n        paging: {\n          enabled: false\n        },\n        editing: {\n          mode: 'cell',\n          allowFiltering: false,\n          allowSorting: false,\n          allowUpdating: true\n        },\n        onInitialized: function (e) {\n          e.component.getController('editorFactory')._showRevertButton = function () {};\n\n          _this._closeEditCell = function () {\n            e.component.closeEditCell();\n\n            _this._updateValue();\n          };\n        },\n        onCellHoverChanged: function (e) {\n          var cellElement = _jquery_helpers_1.$unwrap(e.cellElement);\n\n          if (e.eventType === 'mouseover') {\n            cellElement.classList.add('dx-dashboard-range-editor-state-hover');\n          } else {\n            cellElement.classList.remove('dx-dashboard-range-editor-state-hover');\n          }\n        },\n        onRowPrepared: function (e) {\n          if (e.data === this.selection()) {\n            var selectedRow = _jquery_helpers_1.$unwrap(e.element).querySelector('tr.dx-selection');\n\n            if (selectedRow) {\n              selectedRow.classList.remove('dx-selection');\n            }\n\n            _jquery_helpers_1.$unwrap(e.rowElement).classList.add('dx-selection');\n          }\n        },\n        onEditingStart: function (e) {\n          if (e.component.getRowIndexByKey(e.key) === 0 && e.column.dataField === 'leftValue') {\n            e.cancel = true;\n          }\n        },\n        onCellPrepared: function (e) {\n          var cellElement = _jquery_helpers_1.$unwrap(e.cellElement);\n\n          if (cellElement.classList.contains('dx-editor-cell')) {\n            this.selection(e.data);\n\n            var selectedRow = _jquery_helpers_1.$unwrap(e.element).querySelector('tr.dx-selection');\n\n            if (selectedRow) {\n              selectedRow.classList.remove('dx-selection');\n            }\n\n            cellElement.parentElement.classList.add('dx-selection');\n          }\n        },\n        onRowValidating: function (e) {\n          if (!!e.newData.sign || e.brokenRules.length > 0) return;\n          var dataGrid = e.component,\n              value = e.newData.leftValue || e.newData.rightValue,\n              rowIndex = dataGrid.getRowIndexByKey(e.key),\n              bottomValue = undefined,\n              upperValue = undefined;\n\n          if (!!e.newData.leftValue) {\n            bottomValue = dataGrid.getKeyByRowIndex(rowIndex).rightValue();\n            upperValue = rowIndex - 1 >= 0 ? dataGrid.getKeyByRowIndex(rowIndex - 1).leftValue() : undefined;\n          } else if (!!e.newData.rightValue) {\n            var count = dataGrid.option('dataSource').length;\n            var minBottomValue = this.isPercent() && rowIndex + 1 == count ? 0 : undefined;\n            bottomValue = rowIndex + 1 < count ? dataGrid.getKeyByRowIndex(rowIndex + 1).rightValue() : minBottomValue;\n            upperValue = dataGrid.getKeyByRowIndex(rowIndex).leftValue();\n          }\n\n          if (value == undefined || bottomValue !== undefined && value < bottomValue || upperValue !== undefined && value > upperValue) {\n            e.isValid = false;\n            e.errorText = 'Invalid value: value should be between [' + bottomValue + ', ' + upperValue + ']';\n          }\n        },\n        columns: [{\n          dataField: 'style',\n          alignment: 'center',\n          width: 52,\n          cellTemplate: 'dx-dashboard-range-style-template',\n          lookup: {\n            dataSource: []\n          },\n          editCellTemplate: 'dx-dashboard-range-style-editor-template'\n        }, {\n          dataField: 'leftValue',\n          dataType: valueType,\n          width: 74,\n          alignment: 'center',\n          cellTemplate: 'dx-dashboard-range-cell-template',\n          cssClass: 'dx-dashboard-range-value',\n          validationRules: [{\n            type: 'required'\n          }]\n        }, {\n          dataField: 'sign',\n          alignment: 'center',\n          cellTemplate: 'dx-dashboard-range-cell-template',\n          cssClass: 'dx-dashboard-range-sign',\n          showEditorAlways: false,\n          editorOptions: {\n            searchEnabled: false,\n            showDropDownButton: false\n          },\n          lookup: {\n            dataSource: [{\n              name: _range_info_1.rangeValueComparison.values['GreaterOrEqual'],\n              id: 'GreaterOrEqual'\n            }, {\n              name: _range_info_1.rangeValueComparison.values['Greater'],\n              id: 'Greater'\n            }],\n            displayExpr: 'name',\n            valueExpr: 'id'\n          }\n        }, {\n          dataField: 'rightValue',\n          dataType: valueType,\n          alignment: 'center',\n          width: 74,\n          cellTemplate: 'dx-dashboard-range-cell-template',\n          editCellTemplate: 'dx-dashboard-range-edit-number-template',\n          cssClass: 'dx-dashboard-range-value',\n          validationRules: [{\n            type: 'required'\n          }],\n          customizeText: function (e) {\n            return e.value === -Infinity ? negativeInfinityDisplayText : e.value.toString();\n          }\n        }]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RuleRangesEditor.prototype.add = function () {\n    var index = !!this.selection() ? this.condition.rangeSet.ranges.indexOf(this.selection().rangeInfo) : this.condition.rangeSet.ranges().length - 1;\n    var rangeInfo = this.condition.rangeSet.ranges()[index];\n    this.condition.rangeSet.ranges.splice(index, 0, rangeInfo.clone());\n  };\n\n  RuleRangesEditor.prototype.remove = function () {\n    if (!!this.selection() && this.condition.rangeSet.ranges().length > 2) {\n      var rangeInfo = this.selection().rangeInfo;\n      var index = this.condition.rangeSet.ranges.indexOf(rangeInfo);\n      this.condition.rangeSet.ranges.splice(index, 1);\n      this.selection(this.value()[this.value().indexOf(this.selection())]);\n    }\n  };\n\n  RuleRangesEditor.prototype.getSelectedStyleChangedHandler = function (range) {\n    return function (oldStyle, newStyle) {\n      range.rangeInfo.styleSettings(newStyle);\n    };\n  };\n\n  RuleRangesEditor.prototype._updateValue = function () {\n    this.value(generateRanges(this.condition.rangeSet.ranges.peek(), this.isGradient, this.isPercent()));\n  };\n\n  return RuleRangesEditor;\n}();\n\nexports.RuleRangesEditor = RuleRangesEditor;\n\nvar generateRanges = function (ranges, isGradient, isPercent) {\n  var value = [];\n  var prevIndex = -1,\n      nextIndex = ranges.length;\n\n  var isStyleEmpty = function (s) {\n    return !s || _style_settings_adapters_1.styleSettingsAdapter(s).getPredefinedStyle() == _style_settings_base_1.emptyStyleType;\n  };\n\n  var generateStyleSettings = function (currentIndex) {\n    var color;\n    var nextColor;\n\n    var itemAdapter = _style_settings_adapters_1.styleSettingsAdapter(ranges[prevIndex].styleSettings());\n\n    var nextItemAdapter = _style_settings_adapters_1.styleSettingsAdapter(ranges[nextIndex].styleSettings());\n\n    color = itemAdapter.hasCustomStyle() ? color_1.Color.fromRgbaString(itemAdapter.getCustomColor()) : color_1.Color.fromAppearance(itemAdapter.getPredefinedStyle());\n    nextColor = nextItemAdapter.hasCustomStyle() ? color_1.Color.fromRgbaString(nextItemAdapter.getCustomColor()) : color_1.Color.fromAppearance(nextItemAdapter.getPredefinedStyle());\n    var generatedColor = color_1.Color.fromDxColor(nextColor.blend(color, (currentIndex - nextIndex) / (prevIndex - nextIndex))).css;\n\n    var newItem = _style_settings_adapters_1.styleSettingsAdapter(ranges[0].styleSettings()).itemFactory();\n\n    _style_settings_adapters_1.styleSettingsAdapter(newItem).setCustomColor(generatedColor);\n\n    return ko.observable(newItem);\n  };\n\n  var getRangeValue = function (index) {\n    var rangeInfo = ranges[index];\n    return rangeInfo.value.value;\n  };\n\n  for (var i = ranges.length - 1; i >= 0; i--) {\n    var styleSettings = ranges[i].styleSettings;\n\n    if (isGradient) {\n      if (isStyleEmpty(styleSettings())) {\n        if (nextIndex > i) {\n          for (var j = i - 1; j >= 0; j--) {\n            if (!isStyleEmpty(ranges[j].styleSettings())) {\n              nextIndex = j;\n              break;\n            }\n          }\n        }\n\n        styleSettings = generateStyleSettings(i);\n      } else {\n        prevIndex = i;\n      }\n    }\n\n    value.push({\n      style: styleSettings,\n      sign: ranges[i].valueComparison,\n      leftValue: i < ranges.length - 1 ? getRangeValue(i + 1) : isPercent ? ko.observable(100) : ko.observable('âˆž'),\n      rightValue: getRangeValue(i),\n      rangeInfo: ranges[i]\n    });\n  }\n\n  return value;\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/conditional-formatting/_rule-ranges-editor.js"],"names":["Object","defineProperty","exports","value","RuleRangesEditor","ko","require","_default_1","_jquery_helpers_1","color_1","_range_info_1","range_generator_1","_format_rules_common_1","_style_settings_base_1","_knockout_utils_1","_style_settings_adapters_1","negativeInfinityDisplayText","dataGridColumnTypes","Text","DateTime","Bool","Integer","Float","Double","Decimal","Enum","Custom","Unknown","options","_this","selection","observable","observableArray","closeEditCell","_closeEditCell","isGradient","condition","appearanceMode","enableCustomStyles","dataType","isPercent","computed","read","valueType","write","setValues","FormatConditionRangeGenerator","calculateRangePercentValues","rangeSet","ranges","peek","length","safeComputed","_updateValue","subscribe","prototype","isRangeEmptyAllowed","range","index","indexOf","createStyleSettingsEditorOptions","allowChangeViewMode","isEmptyAllowed","selectedChanged","getSelectedStyleChangedHandler","createStyleSettingsEditorItemOptions","item","style","clickHandler","isSelected","isRange","restrictToColor","createRangeNumberEditorViewModel","args","isNegativeInfintySelected","negativeInfinity","numberBoxValue","allowInfinity","grid","totalCount","rowIndex","infinitValue","numberBoxOptions","onValueChanged","e","setValue","buttonOptions","width","keyExpr","selectedItemKeys","items","text","getLocalizationById","selectionMode","onSelectionChanged","addedItems","get","dataSource","twoWayBindingEnabled","hoverStateEnabled","showRowLines","showColumnHeaders","rowAlternationEnabled","undefined","paging","enabled","editing","mode","allowFiltering","allowSorting","allowUpdating","onInitialized","component","getController","_showRevertButton","onCellHoverChanged","cellElement","$unwrap","eventType","classList","add","remove","onRowPrepared","data","selectedRow","element","querySelector","rowElement","onEditingStart","getRowIndexByKey","key","column","dataField","cancel","onCellPrepared","contains","parentElement","onRowValidating","newData","sign","brokenRules","dataGrid","leftValue","rightValue","bottomValue","upperValue","getKeyByRowIndex","count","option","minBottomValue","isValid","errorText","columns","alignment","cellTemplate","lookup","editCellTemplate","cssClass","validationRules","type","showEditorAlways","editorOptions","searchEnabled","showDropDownButton","name","rangeValueComparison","values","id","displayExpr","valueExpr","customizeText","Infinity","toString","enumerable","configurable","rangeInfo","splice","clone","oldStyle","newStyle","styleSettings","generateRanges","prevIndex","nextIndex","isStyleEmpty","s","styleSettingsAdapter","getPredefinedStyle","emptyStyleType","generateStyleSettings","currentIndex","color","nextColor","itemAdapter","nextItemAdapter","hasCustomStyle","Color","fromRgbaString","getCustomColor","fromAppearance","generatedColor","fromDxColor","blend","css","newItem","itemFactory","setCustomColor","getRangeValue","i","j","push","valueComparison"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_rule-ranges-editor.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuleRangesEditor = void 0;\nvar ko = require(\"knockout\");\nvar _default_1 = require(\"../../data/localization/_default\");\nvar _jquery_helpers_1 = require(\"../../data/_jquery-helpers\");\nvar color_1 = require(\"../../model/color\");\nvar _range_info_1 = require(\"../../model/format-rules/conditions/range/metadata/_range-info\");\nvar range_generator_1 = require(\"../../model/format-rules/conditions/range/range-generator\");\nvar _format_rules_common_1 = require(\"../../model/format-rules/metadata/_format-rules-common\");\nvar _style_settings_base_1 = require(\"../../model/format-rules/style-settings/metadata/_style-settings-base\");\nvar _knockout_utils_1 = require(\"../../model/internal/_knockout-utils\");\nvar _style_settings_adapters_1 = require(\"./_style-settings-adapters\");\nvar negativeInfinityDisplayText = '-âˆž';\nvar dataGridColumnTypes = {\n    Text: 'string',\n    DateTime: 'date',\n    Bool: 'boolean',\n    Integer: 'number',\n    Float: 'number',\n    Double: 'number',\n    Decimal: 'number',\n    Enum: 'string',\n    Custom: 'object',\n    Unknown: 'object'\n};\nvar RuleRangesEditor = (function () {\n    function RuleRangesEditor(options) {\n        var _this = this;\n        this.selection = ko.observable(null);\n        this.value = ko.observableArray([]);\n        this.closeEditCell = function () {\n            _this._closeEditCell && _this._closeEditCell();\n        };\n        this._closeEditCell = null;\n        this.isGradient = options.condition.isGradient();\n        this.appearanceMode = options.appearanceMode;\n        this.condition = options.condition;\n        this.enableCustomStyles = options.enableCustomStyles;\n        this.dataType = this.condition.dataType;\n        this.isPercent = ko.computed({\n            read: function () { return _this.condition.valueType() === 'Percent'; },\n            write: function (isPercent) {\n                if (isPercent) {\n                    _this.condition.setValues(range_generator_1.FormatConditionRangeGenerator.calculateRangePercentValues(_this.condition.rangeSet.ranges.peek().length));\n                }\n            }\n        });\n        _knockout_utils_1.safeComputed({ valueType: this.condition.valueType }, function () { return _this._updateValue(); });\n        this.condition.rangeSet.ranges.subscribe(function () { return _this._updateValue(); }, null, 'arrayChange');\n    }\n    RuleRangesEditor.prototype.isRangeEmptyAllowed = function (range) {\n        if (this.isGradient) {\n            var ranges = this.value.peek();\n            var index = ranges.indexOf(range);\n            return (index != 0) && (index != ranges.length - 1);\n        }\n        else {\n            return true;\n        }\n    };\n    RuleRangesEditor.prototype.createStyleSettingsEditorOptions = function (range) {\n        return {\n            allowChangeViewMode: false,\n            appearanceMode: this.appearanceMode,\n            isEmptyAllowed: this.isRangeEmptyAllowed(range),\n            selectedChanged: this.getSelectedStyleChangedHandler(range),\n            closeEditCell: this.closeEditCell,\n            enableCustomStyles: this.enableCustomStyles,\n        };\n    };\n    RuleRangesEditor.prototype.createStyleSettingsEditorItemOptions = function (range) {\n        return {\n            item: range.style(),\n            clickHandler: function () { },\n            isSelected: ko.observable(false),\n            isEmptyAllowed: this.isRangeEmptyAllowed(range),\n            isRange: true,\n            isGradient: this.isGradient,\n            restrictToColor: this.isGradient\n        };\n    };\n    RuleRangesEditor.prototype.createRangeNumberEditorViewModel = function (args) {\n        var isNegativeInfintySelected = args.value() === _format_rules_common_1.negativeInfinity;\n        var numberBoxValue = ko.observable(isNegativeInfintySelected ? 0 : args.value());\n        var allowInfinity = args.grid.totalCount() === args.rowIndex + 1 && !this.isPercent();\n        var infinitValue = ko.observable(isNegativeInfintySelected);\n        var numberBoxOptions = {\n            onValueChanged: function (e) {\n                args.setValue(e.value);\n                numberBoxValue(e.value);\n            },\n            value: numberBoxValue(),\n        };\n        var buttonOptions = {\n            width: '100%',\n            keyExpr: 'value',\n            selectedItemKeys: [isNegativeInfintySelected ? _format_rules_common_1.negativeInfinity : 'number'],\n            items: [{\n                    value: 'number',\n                    text: _default_1.getLocalizationById('DashboardStringId.FormatConditionNumberValueType')\n                }, {\n                    value: _format_rules_common_1.negativeInfinity,\n                    text: negativeInfinityDisplayText\n                }],\n            selectionMode: 'single',\n            onSelectionChanged: function (e) {\n                if (e.addedItems[0].value === _format_rules_common_1.negativeInfinity) {\n                    args.setValue(_format_rules_common_1.negativeInfinity);\n                    infinitValue(true);\n                }\n                else {\n                    args.setValue(numberBoxValue());\n                    infinitValue(false);\n                }\n            }\n        };\n        return {\n            negativeInfinityDisplayText: negativeInfinityDisplayText,\n            allowInfinity: allowInfinity,\n            infinitValue: infinitValue,\n            numberBoxOptions: numberBoxOptions,\n            buttonOptions: buttonOptions\n        };\n    };\n    Object.defineProperty(RuleRangesEditor.prototype, \"dataGridOptions\", {\n        get: function () {\n            var _this = this;\n            var valueType = dataGridColumnTypes[this.dataType()];\n            return {\n                dataSource: (this.value),\n                twoWayBindingEnabled: false,\n                hoverStateEnabled: false,\n                showRowLines: true,\n                showColumnHeaders: false,\n                rowAlternationEnabled: false,\n                selection: undefined,\n                paging: {\n                    enabled: false\n                },\n                editing: {\n                    mode: 'cell',\n                    allowFiltering: false,\n                    allowSorting: false,\n                    allowUpdating: true\n                },\n                onInitialized: function (e) {\n                    e.component.getController('editorFactory')._showRevertButton = function () { };\n                    _this._closeEditCell = function () {\n                        e.component.closeEditCell();\n                        _this._updateValue();\n                    };\n                },\n                onCellHoverChanged: function (e) {\n                    var cellElement = _jquery_helpers_1.$unwrap(e.cellElement);\n                    if (e.eventType === 'mouseover') {\n                        cellElement.classList.add('dx-dashboard-range-editor-state-hover');\n                    }\n                    else {\n                        cellElement.classList.remove('dx-dashboard-range-editor-state-hover');\n                    }\n                },\n                onRowPrepared: function (e) {\n                    if (e.data === this.selection()) {\n                        var selectedRow = _jquery_helpers_1.$unwrap(e.element).querySelector('tr.dx-selection');\n                        if (selectedRow) {\n                            selectedRow.classList.remove('dx-selection');\n                        }\n                        _jquery_helpers_1.$unwrap(e.rowElement).classList.add('dx-selection');\n                    }\n                },\n                onEditingStart: function (e) {\n                    if (e.component.getRowIndexByKey(e.key) === 0 && e.column.dataField === 'leftValue') {\n                        e.cancel = true;\n                    }\n                },\n                onCellPrepared: function (e) {\n                    var cellElement = _jquery_helpers_1.$unwrap(e.cellElement);\n                    if (cellElement.classList.contains('dx-editor-cell')) {\n                        this.selection(e.data);\n                        var selectedRow = _jquery_helpers_1.$unwrap(e.element).querySelector('tr.dx-selection');\n                        if (selectedRow) {\n                            selectedRow.classList.remove('dx-selection');\n                        }\n                        cellElement.parentElement.classList.add('dx-selection');\n                    }\n                },\n                onRowValidating: function (e) {\n                    if (!!e.newData.sign || e.brokenRules.length > 0)\n                        return;\n                    var dataGrid = e.component, value = e.newData.leftValue || e.newData.rightValue, rowIndex = dataGrid.getRowIndexByKey(e.key), bottomValue = undefined, upperValue = undefined;\n                    if (!!e.newData.leftValue) {\n                        bottomValue = dataGrid.getKeyByRowIndex(rowIndex).rightValue();\n                        upperValue = rowIndex - 1 >= 0 ? dataGrid.getKeyByRowIndex(rowIndex - 1).leftValue() : undefined;\n                    }\n                    else if (!!e.newData.rightValue) {\n                        var count = dataGrid.option('dataSource').length;\n                        var minBottomValue = this.isPercent() && (rowIndex + 1 == count) ? 0 : undefined;\n                        bottomValue = rowIndex + 1 < count ? dataGrid.getKeyByRowIndex(rowIndex + 1).rightValue() : minBottomValue;\n                        upperValue = dataGrid.getKeyByRowIndex(rowIndex).leftValue();\n                    }\n                    if (value == undefined || (bottomValue !== undefined && value < bottomValue) || (upperValue !== undefined && value > upperValue)) {\n                        e.isValid = false;\n                        e.errorText = 'Invalid value: value should be between [' + bottomValue + ', ' + upperValue + ']';\n                    }\n                },\n                columns: [{\n                        dataField: 'style',\n                        alignment: 'center',\n                        width: 52,\n                        cellTemplate: 'dx-dashboard-range-style-template',\n                        lookup: {\n                            dataSource: []\n                        },\n                        editCellTemplate: 'dx-dashboard-range-style-editor-template'\n                    }, {\n                        dataField: 'leftValue',\n                        dataType: valueType,\n                        width: 74,\n                        alignment: 'center',\n                        cellTemplate: 'dx-dashboard-range-cell-template',\n                        cssClass: 'dx-dashboard-range-value',\n                        validationRules: [{ type: 'required' }]\n                    }, {\n                        dataField: 'sign',\n                        alignment: 'center',\n                        cellTemplate: 'dx-dashboard-range-cell-template',\n                        cssClass: 'dx-dashboard-range-sign',\n                        showEditorAlways: false,\n                        editorOptions: {\n                            searchEnabled: false,\n                            showDropDownButton: false\n                        },\n                        lookup: {\n                            dataSource: [{\n                                    name: _range_info_1.rangeValueComparison.values['GreaterOrEqual'],\n                                    id: 'GreaterOrEqual'\n                                }, {\n                                    name: _range_info_1.rangeValueComparison.values['Greater'],\n                                    id: 'Greater'\n                                }],\n                            displayExpr: 'name',\n                            valueExpr: 'id'\n                        }\n                    }, {\n                        dataField: 'rightValue',\n                        dataType: valueType,\n                        alignment: 'center',\n                        width: 74,\n                        cellTemplate: 'dx-dashboard-range-cell-template',\n                        editCellTemplate: 'dx-dashboard-range-edit-number-template',\n                        cssClass: 'dx-dashboard-range-value',\n                        validationRules: [{ type: 'required' }],\n                        customizeText: function (e) {\n                            return e.value === -Infinity ? negativeInfinityDisplayText : e.value.toString();\n                        }\n                    }\n                ]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RuleRangesEditor.prototype.add = function () {\n        var index = !!this.selection() ? this.condition.rangeSet.ranges.indexOf(this.selection().rangeInfo) : this.condition.rangeSet.ranges().length - 1;\n        var rangeInfo = this.condition.rangeSet.ranges()[index];\n        this.condition.rangeSet.ranges.splice(index, 0, rangeInfo.clone());\n    };\n    RuleRangesEditor.prototype.remove = function () {\n        if (!!this.selection() && this.condition.rangeSet.ranges().length > 2) {\n            var rangeInfo = this.selection().rangeInfo;\n            var index = this.condition.rangeSet.ranges.indexOf(rangeInfo);\n            this.condition.rangeSet.ranges.splice(index, 1);\n            this.selection(this.value()[this.value().indexOf(this.selection())]);\n        }\n    };\n    RuleRangesEditor.prototype.getSelectedStyleChangedHandler = function (range) {\n        return function (oldStyle, newStyle) {\n            range.rangeInfo.styleSettings(newStyle);\n        };\n    };\n    RuleRangesEditor.prototype._updateValue = function () {\n        this.value(generateRanges(this.condition.rangeSet.ranges.peek(), this.isGradient, this.isPercent()));\n    };\n    return RuleRangesEditor;\n}());\nexports.RuleRangesEditor = RuleRangesEditor;\nvar generateRanges = function (ranges, isGradient, isPercent) {\n    var value = [];\n    var prevIndex = -1, nextIndex = ranges.length;\n    var isStyleEmpty = function (s) {\n        return !s || _style_settings_adapters_1.styleSettingsAdapter(s).getPredefinedStyle() == _style_settings_base_1.emptyStyleType;\n    };\n    var generateStyleSettings = function (currentIndex) {\n        var color;\n        var nextColor;\n        var itemAdapter = _style_settings_adapters_1.styleSettingsAdapter(ranges[prevIndex].styleSettings());\n        var nextItemAdapter = _style_settings_adapters_1.styleSettingsAdapter(ranges[nextIndex].styleSettings());\n        color = itemAdapter.hasCustomStyle() ? color_1.Color.fromRgbaString(itemAdapter.getCustomColor()) : color_1.Color.fromAppearance(itemAdapter.getPredefinedStyle());\n        nextColor = nextItemAdapter.hasCustomStyle() ? color_1.Color.fromRgbaString(nextItemAdapter.getCustomColor()) : color_1.Color.fromAppearance(nextItemAdapter.getPredefinedStyle());\n        var generatedColor = color_1.Color.fromDxColor(nextColor.blend(color, (currentIndex - nextIndex) / (prevIndex - nextIndex))).css;\n        var newItem = _style_settings_adapters_1.styleSettingsAdapter(ranges[0].styleSettings()).itemFactory();\n        _style_settings_adapters_1.styleSettingsAdapter(newItem).setCustomColor(generatedColor);\n        return ko.observable(newItem);\n    };\n    var getRangeValue = function (index) {\n        var rangeInfo = ranges[index];\n        return rangeInfo.value.value;\n    };\n    for (var i = ranges.length - 1; i >= 0; i--) {\n        var styleSettings = ranges[i].styleSettings;\n        if (isGradient) {\n            if (isStyleEmpty(styleSettings())) {\n                if (nextIndex > i) {\n                    for (var j = i - 1; j >= 0; j--) {\n                        if (!isStyleEmpty(ranges[j].styleSettings())) {\n                            nextIndex = j;\n                            break;\n                        }\n                    }\n                }\n                styleSettings = generateStyleSettings(i);\n            }\n            else {\n                prevIndex = i;\n            }\n        }\n        value.push({\n            style: styleSettings,\n            sign: ranges[i].valueComparison,\n            leftValue: (i < ranges.length - 1) ? getRangeValue(i + 1) : (isPercent ? ko.observable(100) : ko.observable('âˆž')),\n            rightValue: getRangeValue(i),\n            rangeInfo: ranges[i]\n        });\n    }\n    return value;\n};\n"]},"metadata":{},"sourceType":"script"}