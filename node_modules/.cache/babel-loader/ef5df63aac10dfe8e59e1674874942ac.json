{"ast":null,"code":"var _jsxFileName = \"/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/src/components/Weather.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Weather() {\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n    console.log(\"Latitude is:\", lat);\n    console.log(\"Longitude is:\", long);\n  }, [lat, long]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Weather Page\"));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/src/components/Weather.js"],"names":["React","useEffect","useState","Weather","lat","setLat","long","setLong","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;;AAEA,SAASC,OAAT,GAAmB;AAEf,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DN,MAAAA,MAAM,CAACM,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAN,MAAAA,OAAO,CAACI,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAP;AACD,KAHD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BZ,GAA5B;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BV,IAA7B;AACD,GARM,EAQJ,CAACF,GAAD,EAAME,IAAN,CARI,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH;;AAED,eAAeH,OAAf","sourcesContent":["import React, { useEffect, useState }  from 'react'\n\nfunction Weather() {\n\n    const [lat, setLat] = useState([]);\n    const [long, setLong] = useState([]);\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          setLat(position.coords.latitude);\n          setLong(position.coords.longitude);\n        });\n    \n        console.log(\"Latitude is:\", lat)\n        console.log(\"Longitude is:\", long)\n      }, [lat, long]);\n\n    return (\n        <div>\n            <h1>Weather Page</h1>\n        </div>\n    )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}