{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_item-data-axis-helper.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.itemDataAxisHelper = void 0;\n\nvar data_1 = require(\"devextreme/core/utils/data\");\n\nexports.itemDataAxisHelper = {\n  eachPoint: function (point, _process) {\n    var that = this,\n        children = point.getChildren();\n    if (_process(point) === false) return false;\n    children.forEach(function (childPoint) {\n      if (that.eachPoint(childPoint, _process) === false) return false;\n    });\n  },\n  findFirstPoint: function (root, predicate) {\n    var that = this,\n        foundPoint = undefined;\n    that.eachPoint(root, function (point) {\n      var points = point.getAxisPath();\n\n      if (predicate(points)) {\n        foundPoint = point;\n        return false;\n      }\n    });\n    return foundPoint;\n  },\n  findFirstPointByUniqueValues: function (root, values) {\n    var that = this;\n    return that.findFirstPoint(root, function (points) {\n      return that._equalPredicate(points, values, function (value, point) {\n        return that._areEqual(value, point.getUniqueValue());\n      });\n    });\n  },\n  findFirstPointByValues: function (root, values) {\n    var that = this;\n    return that.findFirstPoint(root, function (points) {\n      return that._equalPredicate(points, values, function (value, point) {\n        return that._areEqual(value, point.getValue());\n      });\n    });\n  },\n  findFirstPointByUniqueValueAndDimension: function (root, value, dimensionId) {\n    var that = this,\n        foundPoint = undefined;\n    that.eachPoint(root, function (point) {\n      var dimension = point.getDimension();\n\n      if (!!dimension && dimension.id === dimensionId && that._areEqual(value, point.getUniqueValue())) {\n        foundPoint = point;\n        return false;\n      }\n    });\n    return foundPoint;\n  },\n  _areEqual: function (value1, value2) {\n    return data_1.toComparable(value1, false) === data_1.toComparable(value2, false);\n  },\n  _equalPredicate: function (points, values, equal) {\n    values = values || [];\n    if (points.length != values.length) return false;\n    var passes = true;\n    values.forEach(function (value, index) {\n      passes = passes && equal(value, points[index]);\n      return passes;\n    });\n    return passes;\n  },\n  forSamePoints: function (baseItem, item, process) {\n    var that = this;\n    process(baseItem, item);\n    baseItem.getChildren().forEach(function (baseChild) {\n      var child = that.findChildByUniqueValue(item, baseChild.getUniqueValue());\n      if (child) that.forSamePoints(baseChild, child, process);\n    });\n  },\n  findChildByUniqueValue: function (point, value) {\n    var that = this,\n        children = point.getChildren(),\n        foundPoint = undefined;\n    children.forEach(function (child) {\n      if (that._areEqual(value, child.getUniqueValue())) {\n        foundPoint = child;\n        return false;\n      }\n    });\n    return foundPoint;\n  },\n  getValuesByTuples: function (tuples, dimensionIds) {\n    var values = [],\n        dimensionCount = dimensionIds.length;\n    tuples.forEach(function (tuple) {\n      var value = [],\n          axisPoint = tuple.getAxisPoint();\n\n      while (axisPoint.getParent() != null) {\n        value.push(axisPoint.getUniqueValue());\n        if (dimensionCount == 1) break;\n        axisPoint = axisPoint.getParent();\n      }\n\n      value.reverse();\n      values.push(value);\n    });\n    return values;\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/item-data/internal/_item-data-axis-helper.js"],"names":["Object","defineProperty","exports","value","itemDataAxisHelper","data_1","require","eachPoint","point","_process","that","children","getChildren","forEach","childPoint","findFirstPoint","root","predicate","foundPoint","undefined","points","getAxisPath","findFirstPointByUniqueValues","values","_equalPredicate","_areEqual","getUniqueValue","findFirstPointByValues","getValue","findFirstPointByUniqueValueAndDimension","dimensionId","dimension","getDimension","id","value1","value2","toComparable","equal","length","passes","index","forSamePoints","baseItem","item","process","baseChild","child","findChildByUniqueValue","getValuesByTuples","tuples","dimensionIds","dimensionCount","tuple","axisPoint","getAxisPoint","getParent","push","reverse"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_item-data-axis-helper.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.itemDataAxisHelper = void 0;\nvar data_1 = require(\"devextreme/core/utils/data\");\nexports.itemDataAxisHelper = {\n    eachPoint: function (point, _process) {\n        var that = this, children = point.getChildren();\n        if (_process(point) === false)\n            return false;\n        children.forEach(function (childPoint) {\n            if (that.eachPoint(childPoint, _process) === false)\n                return false;\n        });\n    },\n    findFirstPoint: function (root, predicate) {\n        var that = this, foundPoint = undefined;\n        that.eachPoint(root, function (point) {\n            var points = point.getAxisPath();\n            if (predicate(points)) {\n                foundPoint = point;\n                return false;\n            }\n        });\n        return foundPoint;\n    },\n    findFirstPointByUniqueValues: function (root, values) {\n        var that = this;\n        return that.findFirstPoint(root, function (points) {\n            return that._equalPredicate(points, values, function (value, point) {\n                return that._areEqual(value, point.getUniqueValue());\n            });\n        });\n    },\n    findFirstPointByValues: function (root, values) {\n        var that = this;\n        return that.findFirstPoint(root, function (points) {\n            return that._equalPredicate(points, values, function (value, point) {\n                return that._areEqual(value, point.getValue());\n            });\n        });\n    },\n    findFirstPointByUniqueValueAndDimension: function (root, value, dimensionId) {\n        var that = this, foundPoint = undefined;\n        that.eachPoint(root, function (point) {\n            var dimension = point.getDimension();\n            if (!!dimension && dimension.id === dimensionId && that._areEqual(value, point.getUniqueValue())) {\n                foundPoint = point;\n                return false;\n            }\n        });\n        return foundPoint;\n    },\n    _areEqual: function (value1, value2) {\n        return data_1.toComparable(value1, false) === data_1.toComparable(value2, false);\n    },\n    _equalPredicate: function (points, values, equal) {\n        values = values || [];\n        if (points.length != values.length)\n            return false;\n        var passes = true;\n        values.forEach(function (value, index) {\n            passes = passes && equal(value, points[index]);\n            return passes;\n        });\n        return passes;\n    },\n    forSamePoints: function (baseItem, item, process) {\n        var that = this;\n        process(baseItem, item);\n        baseItem.getChildren().forEach(function (baseChild) {\n            var child = that.findChildByUniqueValue(item, baseChild.getUniqueValue());\n            if (child)\n                that.forSamePoints(baseChild, child, process);\n        });\n    },\n    findChildByUniqueValue: function (point, value) {\n        var that = this, children = point.getChildren(), foundPoint = undefined;\n        children.forEach(function (child) {\n            if (that._areEqual(value, child.getUniqueValue())) {\n                foundPoint = child;\n                return false;\n            }\n        });\n        return foundPoint;\n    },\n    getValuesByTuples: function (tuples, dimensionIds) {\n        var values = [], dimensionCount = dimensionIds.length;\n        tuples.forEach(function (tuple) {\n            var value = [], axisPoint = tuple.getAxisPoint();\n            while (axisPoint.getParent() != null) {\n                value.push(axisPoint.getUniqueValue());\n                if (dimensionCount == 1)\n                    break;\n                axisPoint = axisPoint.getParent();\n            }\n            value.reverse();\n            values.push(value);\n        });\n        return values;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}