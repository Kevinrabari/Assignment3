{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/array.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"./type\";\nimport { orderEach } from \"./object\";\nimport config from \"../config\";\nexport var wrapToArray = function (item) {\n  return Array.isArray(item) ? item : [item];\n};\nexport var getUniqueValues = function (values) {\n  return [...new Set(values)];\n};\nexport var removeDuplicates = function () {\n  var from = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  var toRemove = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];\n  var toRemoveMap = toRemove.reduce((map, value) => {\n    var _map$value;\n\n    map[value] = (null !== (_map$value = map[value]) && void 0 !== _map$value ? _map$value : 0) + 1;\n    return map;\n  }, {});\n  return from.filter(value => !toRemoveMap[value]--);\n};\nexport var normalizeIndexes = function (items, indexPropName, currentItem, needIndexCallback) {\n  var indexedItems = {};\n  var {\n    useLegacyVisibleIndex: useLegacyVisibleIndex\n  } = config();\n  var currentIndex = 0;\n\n  var shouldUpdateIndex = item => !isDefined(item[indexPropName]) && (!needIndexCallback || needIndexCallback(item));\n\n  items.forEach(item => {\n    var index = item[indexPropName];\n\n    if (index >= 0) {\n      indexedItems[index] = indexedItems[index] || [];\n\n      if (item === currentItem) {\n        indexedItems[index].unshift(item);\n      } else {\n        indexedItems[index].push(item);\n      }\n    } else {\n      item[indexPropName] = void 0;\n    }\n  });\n\n  if (!useLegacyVisibleIndex) {\n    items.forEach(item => {\n      if (shouldUpdateIndex(item)) {\n        while (indexedItems[currentIndex]) {\n          currentIndex++;\n        }\n\n        indexedItems[currentIndex] = [item];\n        currentIndex++;\n      }\n    });\n  }\n\n  currentIndex = 0;\n  orderEach(indexedItems, function (index, items) {\n    items.forEach(item => {\n      if (index >= 0) {\n        item[indexPropName] = currentIndex++;\n      }\n    });\n  });\n\n  if (useLegacyVisibleIndex) {\n    items.forEach(item => {\n      if (shouldUpdateIndex(item)) {\n        item[indexPropName] = currentIndex++;\n      }\n    });\n  }\n};\nexport var groupBy = (array, getGroupName) => array.reduce((groupedResult, item) => {\n  var _groupedResult$groupN;\n\n  var groupName = getGroupName(item);\n  groupedResult[groupName] = null !== (_groupedResult$groupN = groupedResult[groupName]) && void 0 !== _groupedResult$groupN ? _groupedResult$groupN : [];\n  groupedResult[groupName].push(item);\n  return groupedResult;\n}, {});","map":{"version":3,"sources":["/Users/kevinrabari/Desktop/Georgian College Work/1005_ Mobile Web Application/Assignment3/node_modules/devextreme/esm/core/utils/array.js"],"names":["isDefined","orderEach","config","wrapToArray","item","Array","isArray","getUniqueValues","values","Set","removeDuplicates","from","arguments","length","toRemove","toRemoveMap","reduce","map","value","_map$value","filter","normalizeIndexes","items","indexPropName","currentItem","needIndexCallback","indexedItems","useLegacyVisibleIndex","currentIndex","shouldUpdateIndex","forEach","index","unshift","push","groupBy","array","getGroupName","groupedResult","_groupedResult$groupN","groupName"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/array.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"./type\";\r\nimport {\r\n    orderEach\r\n} from \"./object\";\r\nimport config from \"../config\";\r\nexport var wrapToArray = function(item) {\r\n    return Array.isArray(item) ? item : [item]\r\n};\r\nexport var getUniqueValues = function(values) {\r\n    return [...new Set(values)]\r\n};\r\nexport var removeDuplicates = function() {\r\n    var from = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    var toRemove = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];\r\n    var toRemoveMap = toRemove.reduce((map, value) => {\r\n        var _map$value;\r\n        map[value] = (null !== (_map$value = map[value]) && void 0 !== _map$value ? _map$value : 0) + 1;\r\n        return map\r\n    }, {});\r\n    return from.filter(value => !toRemoveMap[value]--)\r\n};\r\nexport var normalizeIndexes = function(items, indexPropName, currentItem, needIndexCallback) {\r\n    var indexedItems = {};\r\n    var {\r\n        useLegacyVisibleIndex: useLegacyVisibleIndex\r\n    } = config();\r\n    var currentIndex = 0;\r\n    var shouldUpdateIndex = item => !isDefined(item[indexPropName]) && (!needIndexCallback || needIndexCallback(item));\r\n    items.forEach(item => {\r\n        var index = item[indexPropName];\r\n        if (index >= 0) {\r\n            indexedItems[index] = indexedItems[index] || [];\r\n            if (item === currentItem) {\r\n                indexedItems[index].unshift(item)\r\n            } else {\r\n                indexedItems[index].push(item)\r\n            }\r\n        } else {\r\n            item[indexPropName] = void 0\r\n        }\r\n    });\r\n    if (!useLegacyVisibleIndex) {\r\n        items.forEach(item => {\r\n            if (shouldUpdateIndex(item)) {\r\n                while (indexedItems[currentIndex]) {\r\n                    currentIndex++\r\n                }\r\n                indexedItems[currentIndex] = [item];\r\n                currentIndex++\r\n            }\r\n        })\r\n    }\r\n    currentIndex = 0;\r\n    orderEach(indexedItems, (function(index, items) {\r\n        items.forEach(item => {\r\n            if (index >= 0) {\r\n                item[indexPropName] = currentIndex++\r\n            }\r\n        })\r\n    }));\r\n    if (useLegacyVisibleIndex) {\r\n        items.forEach(item => {\r\n            if (shouldUpdateIndex(item)) {\r\n                item[indexPropName] = currentIndex++\r\n            }\r\n        })\r\n    }\r\n};\r\nexport var groupBy = (array, getGroupName) => array.reduce((groupedResult, item) => {\r\n    var _groupedResult$groupN;\r\n    var groupName = getGroupName(item);\r\n    groupedResult[groupName] = null !== (_groupedResult$groupN = groupedResult[groupName]) && void 0 !== _groupedResult$groupN ? _groupedResult$groupN : [];\r\n    groupedResult[groupName].push(item);\r\n    return groupedResult\r\n}, {});\r\n"]},"metadata":{},"sourceType":"module"}