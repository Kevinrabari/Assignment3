{"ast":null,"code":"/**\r\n* DevExpress Dashboard (binding-panel.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BindingPanelExtension = void 0;\n\nvar ko = require(\"knockout\");\n\nvar control_options_1 = require(\"../../common/control-options\");\n\nvar _options_manager_1 = require(\"../../common/internal/_options-manager\");\n\nvar data_dashboard_item_1 = require(\"../../model/items/data-dashboard-item\");\n\nvar _base_item_surface_1 = require(\"../items/surfaces/_base-item-surface\");\n\nvar _dashboard_item_menu_1 = require(\"../items/_dashboard-item-menu\");\n\nvar name = 'item-binding-panel';\nvar nameAlias = 'itemBindingPanel';\n\nvar BindingPanelExtension = function () {\n  function BindingPanelExtension(dashboardControl, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.dashboardControl = dashboardControl;\n    this.name = name;\n    this._subscriptions = [];\n    this._optionsManager = new _options_manager_1.OptionsManager();\n\n    this._optionsManager.initialize({\n      alias: nameAlias,\n      dashboardControl: dashboardControl,\n      defaultOptions: {},\n      eventsHolder: this,\n      initOptions: options,\n      optionChanged: function (args) {\n        return null;\n      }\n    });\n  }\n\n  BindingPanelExtension.prototype._contextMenuSubscriber = function (dashboardItemMenu) {\n    if (!!dashboardItemMenu) {\n      if (this.dashboardControl._actualLayoutController().selectedDashboardItem() instanceof data_dashboard_item_1.DataDashboardItem) {\n        this._updateDashboardItemMenu(dashboardItemMenu);\n      }\n    }\n  };\n\n  BindingPanelExtension.prototype._updateEmptyItemTemplate = function (dashboardLayout) {\n    var _this = this;\n\n    if (dashboardLayout && dashboardLayout.emptyItemTemplates) {\n      dashboardLayout.emptyItemTemplates.push({\n        name: 'dx-dashboard-binding-properties-empty-item',\n        data: {\n          isDesignMode: this.dashboardControl.isDesignMode,\n          click: function () {\n            var contextMenuExtension = _this.dashboardControl.findExtension('item-menu');\n\n            if (contextMenuExtension) {\n              contextMenuExtension.menuItemClick(_this.name);\n            }\n          }\n        }\n      });\n    }\n  };\n\n  BindingPanelExtension.prototype._updateDashboardItemMenu = function (menu) {\n    var _this = this;\n\n    if (menu instanceof _dashboard_item_menu_1.DashboardItemMenu && menu.selectedItemSurface instanceof _base_item_surface_1.DataDashboardItemSurface) {\n      var surface = menu.selectedItemSurface;\n\n      if (surface && surface.dataSections && surface.dataSections().length > 0) {\n        surface.customizeDataItemContainerTabs = function (args) {\n          _this._optionsManager.raiseEvent('customizeDataItemContainerSections', args);\n        };\n\n        menu.contextMenuItems.push({\n          menuItemId: this.name,\n          icon: 'dx-dashboard-item-options',\n          hint: 'DashboardWebStringId.Bindings',\n          popoverClass: 'dx-dashboard-binding-panel',\n          panelWidth: _dashboard_item_menu_1.DashboardItemMenuSizes.BindingPanelPanelWidth,\n          templateName: 'dx-dashboard-binding-properties',\n          detailVisible: ko.observable(false),\n          customData: surface,\n          index: 100\n        });\n      }\n    }\n  };\n\n  BindingPanelExtension.prototype.start = function () {\n    var _this = this;\n\n    this._updateEmptyItemTemplate(this.dashboardControl._actualLayoutController());\n\n    this.dashboardControl._actualLayoutController.subscribe(function (layoutController) {\n      return _this._updateEmptyItemTemplate(layoutController);\n    });\n\n    var contextMenuExtension = this.dashboardControl.findExtension('item-menu');\n\n    if (contextMenuExtension) {\n      this._subscriptions.push(contextMenuExtension._itemContextMenu.subscribe(this._contextMenuSubscriber, this));\n\n      this._contextMenuSubscriber(contextMenuExtension._itemContextMenu());\n    }\n  };\n\n  BindingPanelExtension.prototype.stop = function () {\n    this._subscriptions.forEach(function (s) {\n      return s.dispose();\n    });\n\n    this._subscriptions = [];\n  };\n\n  return BindingPanelExtension;\n}();\n\nexports.BindingPanelExtension = BindingPanelExtension;\n\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) {\n  return new BindingPanelExtension(dashboardControl, options);\n};\n\ncontrol_options_1.extensionNameMap[name] = nameAlias;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/extensions/binding-panel.js"],"names":["Object","defineProperty","exports","value","BindingPanelExtension","ko","require","control_options_1","_options_manager_1","data_dashboard_item_1","_base_item_surface_1","_dashboard_item_menu_1","name","nameAlias","dashboardControl","options","_subscriptions","_optionsManager","OptionsManager","initialize","alias","defaultOptions","eventsHolder","initOptions","optionChanged","args","prototype","_contextMenuSubscriber","dashboardItemMenu","_actualLayoutController","selectedDashboardItem","DataDashboardItem","_updateDashboardItemMenu","_updateEmptyItemTemplate","dashboardLayout","_this","emptyItemTemplates","push","data","isDesignMode","click","contextMenuExtension","findExtension","menuItemClick","menu","DashboardItemMenu","selectedItemSurface","DataDashboardItemSurface","surface","dataSections","length","customizeDataItemContainerTabs","raiseEvent","contextMenuItems","menuItemId","icon","hint","popoverClass","panelWidth","DashboardItemMenuSizes","BindingPanelPanelWidth","templateName","detailVisible","observable","customData","index","start","subscribe","layoutController","_itemContextMenu","stop","forEach","s","dispose","designerExtensions","extensionNameMap"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (binding-panel.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BindingPanelExtension = void 0;\nvar ko = require(\"knockout\");\nvar control_options_1 = require(\"../../common/control-options\");\nvar _options_manager_1 = require(\"../../common/internal/_options-manager\");\nvar data_dashboard_item_1 = require(\"../../model/items/data-dashboard-item\");\nvar _base_item_surface_1 = require(\"../items/surfaces/_base-item-surface\");\nvar _dashboard_item_menu_1 = require(\"../items/_dashboard-item-menu\");\nvar name = 'item-binding-panel';\nvar nameAlias = 'itemBindingPanel';\nvar BindingPanelExtension = (function () {\n    function BindingPanelExtension(dashboardControl, options) {\n        if (options === void 0) { options = {}; }\n        this.dashboardControl = dashboardControl;\n        this.name = name;\n        this._subscriptions = [];\n        this._optionsManager = new _options_manager_1.OptionsManager();\n        this._optionsManager.initialize({\n            alias: nameAlias,\n            dashboardControl: dashboardControl,\n            defaultOptions: {},\n            eventsHolder: this,\n            initOptions: options,\n            optionChanged: function (args) { return null; }\n        });\n    }\n    BindingPanelExtension.prototype._contextMenuSubscriber = function (dashboardItemMenu) {\n        if (!!dashboardItemMenu) {\n            if (this.dashboardControl._actualLayoutController().selectedDashboardItem() instanceof data_dashboard_item_1.DataDashboardItem) {\n                this._updateDashboardItemMenu(dashboardItemMenu);\n            }\n        }\n    };\n    BindingPanelExtension.prototype._updateEmptyItemTemplate = function (dashboardLayout) {\n        var _this = this;\n        if (dashboardLayout && dashboardLayout.emptyItemTemplates) {\n            dashboardLayout.emptyItemTemplates.push({\n                name: 'dx-dashboard-binding-properties-empty-item',\n                data: {\n                    isDesignMode: this.dashboardControl.isDesignMode,\n                    click: function () {\n                        var contextMenuExtension = _this.dashboardControl.findExtension('item-menu');\n                        if (contextMenuExtension) {\n                            contextMenuExtension.menuItemClick(_this.name);\n                        }\n                    }\n                }\n            });\n        }\n    };\n    BindingPanelExtension.prototype._updateDashboardItemMenu = function (menu) {\n        var _this = this;\n        if (menu instanceof _dashboard_item_menu_1.DashboardItemMenu && menu.selectedItemSurface instanceof _base_item_surface_1.DataDashboardItemSurface) {\n            var surface = menu.selectedItemSurface;\n            if (surface && surface.dataSections && surface.dataSections().length > 0) {\n                surface.customizeDataItemContainerTabs = function (args) {\n                    _this._optionsManager.raiseEvent('customizeDataItemContainerSections', args);\n                };\n                menu.contextMenuItems.push({\n                    menuItemId: this.name,\n                    icon: 'dx-dashboard-item-options',\n                    hint: 'DashboardWebStringId.Bindings',\n                    popoverClass: 'dx-dashboard-binding-panel',\n                    panelWidth: _dashboard_item_menu_1.DashboardItemMenuSizes.BindingPanelPanelWidth,\n                    templateName: 'dx-dashboard-binding-properties',\n                    detailVisible: ko.observable(false),\n                    customData: surface,\n                    index: 100\n                });\n            }\n        }\n    };\n    BindingPanelExtension.prototype.start = function () {\n        var _this = this;\n        this._updateEmptyItemTemplate(this.dashboardControl._actualLayoutController());\n        this.dashboardControl._actualLayoutController.subscribe(function (layoutController) { return _this._updateEmptyItemTemplate(layoutController); });\n        var contextMenuExtension = this.dashboardControl.findExtension('item-menu');\n        if (contextMenuExtension) {\n            this._subscriptions.push(contextMenuExtension._itemContextMenu.subscribe(this._contextMenuSubscriber, this));\n            this._contextMenuSubscriber(contextMenuExtension._itemContextMenu());\n        }\n    };\n    BindingPanelExtension.prototype.stop = function () {\n        this._subscriptions.forEach(function (s) { return s.dispose(); });\n        this._subscriptions = [];\n    };\n    return BindingPanelExtension;\n}());\nexports.BindingPanelExtension = BindingPanelExtension;\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) { return new BindingPanelExtension(dashboardControl, options); };\ncontrol_options_1.extensionNameMap[name] = nameAlias;\n"]},"metadata":{},"sourceType":"script"}