{"ast":null,"code":"/**\n* DevExpress Analytics (core\\internal\\_resizable.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ko = require(\"knockout\");\n\nvar $ = require(\"jquery\");\n\nrequire(\"jquery-ui/ui/widgets/draggable\");\n\nrequire(\"jquery-ui/ui/widgets/resizable\");\n\nrequire(\"jquery-ui/ui/widgets/selectable\");\n\nrequire(\"jquery-ui/ui/widgets/mouse\");\n\nvar _surfaceHelpers_1 = require(\"./_surfaceHelpers\");\n\nvar size_1 = require(\"../elements/size\");\n\nvar _dragDropHandler_1 = require(\"../dragDrop/_dragDropHandler\");\n\nvar _internal_1 = require(\"../../serializer/_internal\");\n\nvar _utils_1 = require(\"../../serializer/_utils\");\n\nko.bindingHandlers['resizable'] = {\n  init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n    var values = valueAccessor(),\n        $element = $(element),\n        $parent = $element.closest('.dx-designer'),\n        currentDirection = null,\n        $selectedNodes = null,\n        resizableDirections = {\n      'north': 'n',\n      'east': 'e',\n      'south': 's',\n      'west': 'w'\n    },\n        calculateSizes = [],\n        absolutePosition = null;\n    values.handles = ko.unwrap(values.handles);\n\n    var options = _utils_1.extend({\n      handles: values.handles || 'all',\n      ghost: false,\n      stop: function (event, ui) {\n        $selectedNodes.each(function (_, el) {\n          var context = ko.contextFor(el),\n              control = context.$data,\n              surface = context.$root.surface(),\n              $el = $(el);\n          var rect = control.rect();\n\n          var newRect = _surfaceHelpers_1.getControlRect($el, control, surface);\n\n          newRect = {\n            top: currentDirection.indexOf(resizableDirections.north) !== -1 ? newRect.top : rect.top,\n            left: currentDirection.indexOf(resizableDirections.west) !== -1 ? newRect.left : rect.left,\n            width: currentDirection.indexOf(resizableDirections.east) !== -1 || currentDirection.indexOf(resizableDirections.west) !== -1 ? newRect.width : rect.width,\n            height: currentDirection.indexOf(resizableDirections.south) !== -1 || currentDirection.indexOf(resizableDirections.north) !== -1 ? newRect.height : rect.height\n          };\n          calculateSizes.push(function () {\n            if (control.canSetRect && !control.canSetRect(newRect)) {\n              var originalPosition = $el.data('originalPosition');\n              var originalSize = $el.data('originalSize');\n\n              if (originalPosition) {\n                $el.css('top', originalPosition.top + 'px');\n                $el.css('left', originalPosition.left + 'px');\n              }\n\n              if (originalSize) {\n                $el.css('width', originalSize.width + 'px');\n                $el.css('height', originalSize.height + 'px');\n              }\n\n              $el.removeData('originalPosition');\n              $el.removeData('originalSize');\n              return;\n            }\n\n            control.rect(newRect);\n\n            if (JSON.stringify(rect) === JSON.stringify(newRect)) {\n              $el.css({\n                left: rect.left,\n                top: rect.top,\n                width: rect.width,\n                height: rect.height\n              });\n            }\n\n            $el.removeData('originalPosition');\n            $el.removeData('originalSize');\n          });\n        });\n        calculateSizes.forEach(function (c) {\n          return c();\n        });\n        calculateSizes = [];\n        currentDirection = null;\n        values.stopped();\n        values.started = false;\n\n        if (values.snapHelper) {\n          values.snapHelper.deactivateSnapLines();\n        }\n      },\n      start: function (event) {\n        var currentClassList = event.originalEvent.target.classList;\n\n        for (var i = 0; i < currentClassList.length; i++) {\n          if (currentClassList[i] !== 'ui-resizable-handle' && currentClassList[i].indexOf('ui-resizable-') === 0) currentDirection = currentClassList[i].slice('ui-resizable-'.length, currentClassList[i].length);\n        }\n\n        values.started = true;\n        values.starting();\n        $selectedNodes = values.$selectedNodes || $('.dxrd-viewport .dxrd-selected').filter(':visible');\n        $selectedNodes.each(function (_, el) {\n          var $el = $(el);\n          var bounds = el.getBoundingClientRect();\n          $el.data('originalPosition', {\n            top: parseFloat($el.css('top')),\n            left: parseFloat($el.css('left'))\n          });\n          $el.data('originalSize', {\n            width: bounds.width,\n            height: bounds.height\n          });\n        });\n        var elementOffset = $element.offset();\n        var ghostContainerOffset = $parent.find('.dxrd-ghost-container').offset();\n\n        if (!ghostContainerOffset) {\n          absolutePosition = elementOffset;\n        } else {\n          absolutePosition = {\n            top: elementOffset.top - ghostContainerOffset.top,\n            left: elementOffset.left - ghostContainerOffset.left\n          };\n        }\n\n        if (values.snapHelper) {\n          values.snapHelper.updateSnapLines(viewModel);\n        }\n      },\n      resize: function (event, ui) {\n        var dw = ui.size.width - ui.originalSize.width,\n            dh = ui.size.height - ui.originalSize.height,\n            dx = ui.position.left - ui.originalPosition.left,\n            dy = ui.position.top - ui.originalPosition.top;\n\n        if (values.forceResize) {\n          values.forceResize({\n            size: new size_1.Size(ui.size.width, ui.size.height),\n            delta: {\n              dx: dx,\n              dy: dy,\n              dw: dw,\n              dh: dh\n            }\n          });\n        }\n\n        if (event.altKey) {\n          values.snapHelper && values.snapHelper.deactivateSnapLines();\n        } else if (values.snapHelper && $selectedNodes.length === 1) {\n          var newAbsolutePosition = _surfaceHelpers_1.getControlNewAbsolutePositionOnResize(values.snapHelper, absolutePosition, ui, {\n            x: dx,\n            y: dy,\n            width: dw,\n            height: dh\n          });\n\n          values.snapHelper.activateSnapLines(newAbsolutePosition);\n          $element.css({\n            left: ui.originalPosition.left + newAbsolutePosition.left - absolutePosition.left,\n            top: ui.originalPosition.top + newAbsolutePosition.top - absolutePosition.top,\n            width: newAbsolutePosition.right - newAbsolutePosition.left,\n            height: newAbsolutePosition.bottom - newAbsolutePosition.top\n          });\n        }\n\n        $selectedNodes.each(function (key, el) {\n          if (el === event.target) return;\n          var $el = $(el);\n          var originalPosition = $el.data('originalPosition'),\n              originalSize = $el.data('originalSize');\n          $el.css({\n            left: originalPosition.left + dx,\n            top: originalPosition.top + dy,\n            width: originalSize.width + dw,\n            height: originalSize.height + dh\n          });\n        });\n      }\n    }, ko.unwrap(values));\n\n    var subscription = null;\n\n    if (!values.disabled) {\n      subscription = _dragDropHandler_1.DragDropHandler.started.subscribe(function (newVal) {\n        $element['resizable']('option', 'disabled', newVal);\n        newVal ? $element.children('.ui-resizable-handle').css('display', 'none') : $element.children('.ui-resizable-handle').css('display', 'block');\n      });\n    }\n\n    $element['resizable'](options);\n\n    var onResize = function (event) {\n      event.stopPropagation();\n    };\n\n    $element['resizable']().on('resize', onResize);\n\n    _internal_1.addDisposeCallback(element, function () {\n      $element['resizable']().off('resize', onResize);\n      if ($element.data('ui-resizable')) $element['resizable']('destroy');\n      $element = null;\n      subscription && subscription.dispose();\n    });\n  },\n  update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n    var $element = $(element);\n    var handleClassName = valueAccessor().handleClassName;\n    var disabled = !!(ko.unwrap(valueAccessor().disabled) || false || ko.unwrap(viewModel.locked));\n    $element['resizable']('option', 'disabled', disabled);\n    $element['resizable']('option', 'minHeight', ko.unwrap(valueAccessor().minimumHeight) || 1);\n    $element['resizable']('option', 'minWidth', ko.unwrap(valueAccessor().minimumWidth) || 1);\n\n    if (ko.unwrap(valueAccessor().handles) && $element['resizable']('option', 'handles') !== ko.unwrap(valueAccessor().handles)) {\n      $element['resizable']('option', 'handles', ko.unwrap(valueAccessor().handles));\n    }\n\n    var maxWidth = ko.unwrap(valueAccessor().maximumWidth);\n\n    if (maxWidth) {\n      $element['resizable']('option', 'maxWidth', maxWidth);\n    }\n\n    handleClassName && $element.children('.ui-resizable-handle').addClass(handleClassName);\n    disabled ? $element.children('.ui-resizable-handle').css('display', 'none') : $element.children('.ui-resizable-handle').css('display', 'block');\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/core/internal/_resizable.js"],"names":["Object","defineProperty","exports","value","ko","require","$","_surfaceHelpers_1","size_1","_dragDropHandler_1","_internal_1","_utils_1","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","values","$element","$parent","closest","currentDirection","$selectedNodes","resizableDirections","calculateSizes","absolutePosition","handles","unwrap","options","extend","ghost","stop","event","ui","each","_","el","context","contextFor","control","$data","surface","$root","$el","rect","newRect","getControlRect","top","indexOf","north","left","west","width","east","height","south","push","canSetRect","originalPosition","data","originalSize","css","removeData","JSON","stringify","forEach","c","stopped","started","snapHelper","deactivateSnapLines","start","currentClassList","originalEvent","target","classList","i","length","slice","starting","filter","bounds","getBoundingClientRect","parseFloat","elementOffset","offset","ghostContainerOffset","find","updateSnapLines","resize","dw","size","dh","dx","position","dy","forceResize","Size","delta","altKey","newAbsolutePosition","getControlNewAbsolutePositionOnResize","x","y","activateSnapLines","right","bottom","key","subscription","disabled","DragDropHandler","subscribe","newVal","children","onResize","stopPropagation","on","addDisposeCallback","off","dispose","update","allBindingsAccessor","handleClassName","locked","minimumHeight","minimumWidth","maxWidth","maximumWidth","addClass"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (core\\internal\\_resizable.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ko = require(\"knockout\");\nvar $ = require(\"jquery\");\nrequire(\"jquery-ui/ui/widgets/draggable\");\nrequire(\"jquery-ui/ui/widgets/resizable\");\nrequire(\"jquery-ui/ui/widgets/selectable\");\nrequire(\"jquery-ui/ui/widgets/mouse\");\nvar _surfaceHelpers_1 = require(\"./_surfaceHelpers\");\nvar size_1 = require(\"../elements/size\");\nvar _dragDropHandler_1 = require(\"../dragDrop/_dragDropHandler\");\nvar _internal_1 = require(\"../../serializer/_internal\");\nvar _utils_1 = require(\"../../serializer/_utils\");\nko.bindingHandlers['resizable'] = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var values = valueAccessor(), $element = $(element), $parent = $element.closest('.dx-designer'), currentDirection = null, $selectedNodes = null, resizableDirections = { 'north': 'n', 'east': 'e', 'south': 's', 'west': 'w' }, calculateSizes = [], absolutePosition = null;\n        values.handles = ko.unwrap(values.handles);\n        var options = _utils_1.extend({\n            handles: values.handles || 'all', ghost: false,\n            stop: function (event, ui) {\n                $selectedNodes.each(function (_, el) {\n                    var context = ko.contextFor(el), control = context.$data, surface = context.$root.surface(), $el = $(el);\n                    var rect = control.rect();\n                    var newRect = _surfaceHelpers_1.getControlRect($el, control, surface);\n                    newRect = {\n                        top: currentDirection.indexOf(resizableDirections.north) !== -1 ? newRect.top : rect.top,\n                        left: currentDirection.indexOf(resizableDirections.west) !== -1 ? newRect.left : rect.left,\n                        width: currentDirection.indexOf(resizableDirections.east) !== -1 || currentDirection.indexOf(resizableDirections.west) !== -1 ? newRect.width : rect.width,\n                        height: currentDirection.indexOf(resizableDirections.south) !== -1 || currentDirection.indexOf(resizableDirections.north) !== -1 ? newRect.height : rect.height,\n                    };\n                    calculateSizes.push(function () {\n                        if (control.canSetRect && !control.canSetRect(newRect)) {\n                            var originalPosition = $el.data('originalPosition');\n                            var originalSize = $el.data('originalSize');\n                            if (originalPosition) {\n                                $el.css('top', originalPosition.top + 'px');\n                                $el.css('left', originalPosition.left + 'px');\n                            }\n                            if (originalSize) {\n                                $el.css('width', originalSize.width + 'px');\n                                $el.css('height', originalSize.height + 'px');\n                            }\n                            $el.removeData('originalPosition');\n                            $el.removeData('originalSize');\n                            return;\n                        }\n                        control.rect(newRect);\n                        if (JSON.stringify(rect) === JSON.stringify(newRect)) {\n                            $el.css({\n                                left: rect.left,\n                                top: rect.top,\n                                width: rect.width,\n                                height: rect.height\n                            });\n                        }\n                        $el.removeData('originalPosition');\n                        $el.removeData('originalSize');\n                    });\n                });\n                calculateSizes.forEach(function (c) { return c(); });\n                calculateSizes = [];\n                currentDirection = null;\n                values.stopped();\n                values.started = false;\n                if (values.snapHelper) {\n                    values.snapHelper.deactivateSnapLines();\n                }\n            },\n            start: function (event) {\n                var currentClassList = event.originalEvent.target.classList;\n                for (var i = 0; i < currentClassList.length; i++) {\n                    if (currentClassList[i] !== 'ui-resizable-handle' && currentClassList[i].indexOf('ui-resizable-') === 0)\n                        currentDirection = currentClassList[i].slice('ui-resizable-'.length, currentClassList[i].length);\n                }\n                values.started = true;\n                values.starting();\n                $selectedNodes = values.$selectedNodes || $('.dxrd-viewport .dxrd-selected').filter(':visible');\n                $selectedNodes\n                    .each(function (_, el) {\n                    var $el = $(el);\n                    var bounds = el.getBoundingClientRect();\n                    $el.data('originalPosition', { top: parseFloat($el.css('top')), left: parseFloat($el.css('left')) });\n                    $el.data('originalSize', { width: bounds.width, height: bounds.height });\n                });\n                var elementOffset = $element.offset();\n                var ghostContainerOffset = $parent.find('.dxrd-ghost-container').offset();\n                if (!ghostContainerOffset) {\n                    absolutePosition = elementOffset;\n                }\n                else {\n                    absolutePosition = {\n                        top: elementOffset.top - ghostContainerOffset.top,\n                        left: elementOffset.left - ghostContainerOffset.left\n                    };\n                }\n                if (values.snapHelper) {\n                    values.snapHelper.updateSnapLines(viewModel);\n                }\n            },\n            resize: function (event, ui) {\n                var dw = ui.size.width - ui.originalSize.width, dh = ui.size.height - ui.originalSize.height, dx = ui.position.left - ui.originalPosition.left, dy = ui.position.top - ui.originalPosition.top;\n                if (values.forceResize) {\n                    values.forceResize({ size: new size_1.Size(ui.size.width, ui.size.height), delta: { dx: dx, dy: dy, dw: dw, dh: dh } });\n                }\n                if (event.altKey) {\n                    values.snapHelper && values.snapHelper.deactivateSnapLines();\n                }\n                else if (values.snapHelper && $selectedNodes.length === 1) {\n                    var newAbsolutePosition = _surfaceHelpers_1.getControlNewAbsolutePositionOnResize(values.snapHelper, absolutePosition, ui, { x: dx, y: dy, width: dw, height: dh });\n                    values.snapHelper.activateSnapLines(newAbsolutePosition);\n                    $element.css({\n                        left: ui.originalPosition.left + newAbsolutePosition.left - absolutePosition.left,\n                        top: ui.originalPosition.top + newAbsolutePosition.top - absolutePosition.top,\n                        width: newAbsolutePosition.right - newAbsolutePosition.left,\n                        height: newAbsolutePosition.bottom - newAbsolutePosition.top\n                    });\n                }\n                $selectedNodes\n                    .each(function (key, el) {\n                    if (el === event.target)\n                        return;\n                    var $el = $(el);\n                    var originalPosition = $el.data('originalPosition'), originalSize = $el.data('originalSize');\n                    $el.css({\n                        left: originalPosition.left + dx,\n                        top: originalPosition.top + dy,\n                        width: originalSize.width + dw,\n                        height: originalSize.height + dh\n                    });\n                });\n            }\n        }, ko.unwrap(values));\n        var subscription = null;\n        if (!values.disabled) {\n            subscription = _dragDropHandler_1.DragDropHandler.started.subscribe(function (newVal) {\n                $element['resizable']('option', 'disabled', newVal);\n                newVal ? $element.children('.ui-resizable-handle').css('display', 'none') : $element.children('.ui-resizable-handle').css('display', 'block');\n            });\n        }\n        $element['resizable'](options);\n        var onResize = function (event) {\n            event.stopPropagation();\n        };\n        $element['resizable']().on('resize', onResize);\n        _internal_1.addDisposeCallback(element, function () {\n            $element['resizable']().off('resize', onResize);\n            if ($element.data('ui-resizable'))\n                $element['resizable']('destroy');\n            $element = null;\n            subscription && subscription.dispose();\n        });\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $element = $(element);\n        var handleClassName = valueAccessor().handleClassName;\n        var disabled = !!(ko.unwrap(valueAccessor().disabled) || false || ko.unwrap(viewModel.locked));\n        $element['resizable']('option', 'disabled', disabled);\n        $element['resizable']('option', 'minHeight', ko.unwrap(valueAccessor().minimumHeight) || 1);\n        $element['resizable']('option', 'minWidth', ko.unwrap(valueAccessor().minimumWidth) || 1);\n        if (ko.unwrap(valueAccessor().handles) && $element['resizable']('option', 'handles') !== ko.unwrap(valueAccessor().handles)) {\n            $element['resizable']('option', 'handles', ko.unwrap(valueAccessor().handles));\n        }\n        var maxWidth = ko.unwrap(valueAccessor().maximumWidth);\n        if (maxWidth) {\n            $element['resizable']('option', 'maxWidth', maxWidth);\n        }\n        handleClassName && $element.children('.ui-resizable-handle').addClass(handleClassName);\n        disabled ? $element.children('.ui-resizable-handle').css('display', 'none') : $element.children('.ui-resizable-handle').css('display', 'block');\n    }\n};\n"]},"metadata":{},"sourceType":"script"}