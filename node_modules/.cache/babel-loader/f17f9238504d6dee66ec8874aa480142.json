{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_model-subscriber.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModelSubscriber = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _base_metadata_1 = require(\"../../model/metadata/_base-metadata\");\n\nvar ModelSubscriber = function () {\n  function ModelSubscriber(_model) {\n    this._model = _model;\n    this.handlers = [];\n\n    this._subscribe(_model);\n  }\n\n  ModelSubscriber.changePropertyQuietly = function (property, func) {\n    try {\n      property[ModelSubscriber.dxSubscriptionSuspend] = true;\n      func();\n    } finally {\n      delete property[ModelSubscriber.dxSubscriptionSuspend];\n    }\n  };\n\n  ModelSubscriber.prototype._unsubscribe = function (model) {\n    var _this = this;\n\n    var serializationsInfo = model.getInfo();\n    serializationsInfo.filter(function (serializationInfo) {\n      return !!serializationInfo.modelName;\n    }).forEach(function (serializationInfo) {\n      var property = model[serializationInfo.propertyName];\n      var propertyValue = ko.unwrap(property);\n\n      if (property[ModelSubscriber.dxSubscription]) {\n        var subscription = property[ModelSubscriber.dxSubscription];\n        subscription.dispose();\n        delete property[ModelSubscriber.dxSubscription];\n      }\n\n      if (_this._isPropertySerializeModel(propertyValue)) {\n        _this._unsubscribe(propertyValue);\n      }\n    });\n  };\n\n  ModelSubscriber.prototype._subscribe = function (model) {\n    var _this = this;\n\n    if (!model.getInfo) {\n      return;\n    }\n\n    var serializationsInfo = model.getInfo();\n    serializationsInfo.filter(function (serializationInfo) {\n      return !!serializationInfo.modelName;\n    }).forEach(function (serializationInfo) {\n      var property = model[serializationInfo.propertyName];\n      var category = !!serializationInfo['category'] ? serializationInfo['category'] : _base_metadata_1.PropertyCategory.Data;\n      var propertyValue = ko.unwrap(property);\n\n      if (Array.isArray(property)) {\n        throw new Error('Non-observable arrays are not supported.');\n      }\n\n      if (category === _base_metadata_1.PropertyCategory.NoUpdate) return;\n\n      if (Array.isArray(propertyValue) && !property[ModelSubscriber.dxSubscription]) {\n        propertyValue.forEach(function (item) {\n          return _this._subscribe(item);\n        });\n        property[ModelSubscriber.dxSubscription] = property.subscribe(function (arrayChanges) {\n          arrayChanges.forEach(function (arrayChange) {\n            var changedStatus = 'unknown';\n\n            if (arrayChange.status === 'added') {\n              _this._subscribe(arrayChange.value);\n\n              changedStatus = 'added';\n            }\n\n            if (arrayChange.status === 'deleted') {\n              _this._unsubscribe(arrayChange.value);\n\n              changedStatus = 'deleted';\n            }\n\n            if (property[ModelSubscriber.dxSubscriptionSuspend] !== true) _this._propertyChanged(category, arrayChange.value, serializationInfo.propertyName, changedStatus);\n          });\n        }, null, 'arrayChange');\n      } else if (ko.isObservable(property) && !property[ModelSubscriber.dxSubscription]) {\n        var getSubscribeHandler = function (prevModel) {\n          return function (model) {\n            if (_this._isPropertySerializeModel(prevModel)) {\n              _this._unsubscribe(prevModel);\n            }\n\n            if (_this._isPropertySerializeModel(model)) {\n              _this._subscribe(model);\n            }\n          };\n        };\n\n        var subscriberHandler = getSubscribeHandler(propertyValue);\n        property[ModelSubscriber.dxSubscription] = property.subscribe(function (val) {\n          if (property[ModelSubscriber.dxSubscriptionSuspend] !== true) {\n            _this._propertyChanged(category, model, serializationInfo.propertyName, 'changed');\n          }\n\n          if (category !== _base_metadata_1.PropertyCategory.NoUpdateByObservableValue) {\n            subscriberHandler(val);\n            subscriberHandler = getSubscribeHandler(val);\n          }\n        });\n\n        if (category !== _base_metadata_1.PropertyCategory.NoUpdateByObservableValue && _this._isPropertySerializeModel(propertyValue)) {\n          _this._subscribe(propertyValue);\n        }\n      } else if (!ko.isObservable(property) && _this._isPropertySerializeModel(propertyValue)) {\n        _this._subscribe(propertyValue);\n      }\n    });\n  };\n\n  ModelSubscriber.prototype._propertyChanged = function (category, model, propertyName, status) {\n    this.handlers.forEach(function (handler) {\n      return handler(category, model, propertyName, status);\n    });\n  };\n\n  ModelSubscriber.prototype.registerHandler = function (handler) {\n    this.handlers.push(handler);\n  };\n\n  ModelSubscriber.prototype._isPropertySerializeModel = function (propertyValue) {\n    return propertyValue && propertyValue['getInfo'];\n  };\n\n  ModelSubscriber.prototype.dispose = function () {\n    this._unsubscribe(this._model);\n  };\n\n  ModelSubscriber.dxSubscription = '__dx_notifier_subscription';\n  ModelSubscriber.dxSubscriptionSuspend = '__dx_notifier_subscription_suspend';\n  return ModelSubscriber;\n}();\n\nexports.ModelSubscriber = ModelSubscriber;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/common/dashboard-update-hub/_model-subscriber.js"],"names":["Object","defineProperty","exports","value","ModelSubscriber","ko","require","_base_metadata_1","_model","handlers","_subscribe","changePropertyQuietly","property","func","dxSubscriptionSuspend","prototype","_unsubscribe","model","_this","serializationsInfo","getInfo","filter","serializationInfo","modelName","forEach","propertyName","propertyValue","unwrap","dxSubscription","subscription","dispose","_isPropertySerializeModel","category","PropertyCategory","Data","Array","isArray","Error","NoUpdate","item","subscribe","arrayChanges","arrayChange","changedStatus","status","_propertyChanged","isObservable","getSubscribeHandler","prevModel","subscriberHandler","val","NoUpdateByObservableValue","handler","registerHandler","push"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_model-subscriber.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModelSubscriber = void 0;\nvar ko = require(\"knockout\");\nvar _base_metadata_1 = require(\"../../model/metadata/_base-metadata\");\nvar ModelSubscriber = (function () {\n    function ModelSubscriber(_model) {\n        this._model = _model;\n        this.handlers = [];\n        this._subscribe(_model);\n    }\n    ModelSubscriber.changePropertyQuietly = function (property, func) {\n        try {\n            property[ModelSubscriber.dxSubscriptionSuspend] = true;\n            func();\n        }\n        finally {\n            delete property[ModelSubscriber.dxSubscriptionSuspend];\n        }\n    };\n    ModelSubscriber.prototype._unsubscribe = function (model) {\n        var _this = this;\n        var serializationsInfo = model.getInfo();\n        serializationsInfo\n            .filter(function (serializationInfo) { return !!serializationInfo.modelName; })\n            .forEach(function (serializationInfo) {\n            var property = model[serializationInfo.propertyName];\n            var propertyValue = ko.unwrap(property);\n            if (property[ModelSubscriber.dxSubscription]) {\n                var subscription = property[ModelSubscriber.dxSubscription];\n                subscription.dispose();\n                delete property[ModelSubscriber.dxSubscription];\n            }\n            if (_this._isPropertySerializeModel(propertyValue)) {\n                _this._unsubscribe(propertyValue);\n            }\n        });\n    };\n    ModelSubscriber.prototype._subscribe = function (model) {\n        var _this = this;\n        if (!model.getInfo) {\n            return;\n        }\n        var serializationsInfo = model.getInfo();\n        serializationsInfo\n            .filter(function (serializationInfo) { return !!serializationInfo.modelName; })\n            .forEach(function (serializationInfo) {\n            var property = model[serializationInfo.propertyName];\n            var category = !!serializationInfo['category'] ? serializationInfo['category'] : _base_metadata_1.PropertyCategory.Data;\n            var propertyValue = ko.unwrap(property);\n            if (Array.isArray(property)) {\n                throw new Error('Non-observable arrays are not supported.');\n            }\n            if (category === _base_metadata_1.PropertyCategory.NoUpdate)\n                return;\n            if (Array.isArray(propertyValue) && !property[ModelSubscriber.dxSubscription]) {\n                propertyValue.forEach(function (item) { return _this._subscribe(item); });\n                property[ModelSubscriber.dxSubscription] = property.subscribe(function (arrayChanges) {\n                    arrayChanges.forEach(function (arrayChange) {\n                        var changedStatus = 'unknown';\n                        if (arrayChange.status === 'added') {\n                            _this._subscribe(arrayChange.value);\n                            changedStatus = 'added';\n                        }\n                        if (arrayChange.status === 'deleted') {\n                            _this._unsubscribe(arrayChange.value);\n                            changedStatus = 'deleted';\n                        }\n                        if (property[ModelSubscriber.dxSubscriptionSuspend] !== true)\n                            _this._propertyChanged(category, arrayChange.value, serializationInfo.propertyName, changedStatus);\n                    });\n                }, null, 'arrayChange');\n            }\n            else if (ko.isObservable(property) && !property[ModelSubscriber.dxSubscription]) {\n                var getSubscribeHandler = function (prevModel) { return function (model) {\n                    if (_this._isPropertySerializeModel(prevModel)) {\n                        _this._unsubscribe(prevModel);\n                    }\n                    if (_this._isPropertySerializeModel(model)) {\n                        _this._subscribe(model);\n                    }\n                }; };\n                var subscriberHandler = getSubscribeHandler(propertyValue);\n                property[ModelSubscriber.dxSubscription] = property.subscribe(function (val) {\n                    if (property[ModelSubscriber.dxSubscriptionSuspend] !== true) {\n                        _this._propertyChanged(category, model, serializationInfo.propertyName, 'changed');\n                    }\n                    if (category !== _base_metadata_1.PropertyCategory.NoUpdateByObservableValue) {\n                        subscriberHandler(val);\n                        subscriberHandler = getSubscribeHandler(val);\n                    }\n                });\n                if (category !== _base_metadata_1.PropertyCategory.NoUpdateByObservableValue && _this._isPropertySerializeModel(propertyValue)) {\n                    _this._subscribe(propertyValue);\n                }\n            }\n            else if (!ko.isObservable(property) && _this._isPropertySerializeModel(propertyValue)) {\n                _this._subscribe(propertyValue);\n            }\n        });\n    };\n    ModelSubscriber.prototype._propertyChanged = function (category, model, propertyName, status) {\n        this.handlers.forEach(function (handler) { return handler(category, model, propertyName, status); });\n    };\n    ModelSubscriber.prototype.registerHandler = function (handler) {\n        this.handlers.push(handler);\n    };\n    ModelSubscriber.prototype._isPropertySerializeModel = function (propertyValue) {\n        return propertyValue && propertyValue['getInfo'];\n    };\n    ModelSubscriber.prototype.dispose = function () {\n        this._unsubscribe(this._model);\n    };\n    ModelSubscriber.dxSubscription = '__dx_notifier_subscription';\n    ModelSubscriber.dxSubscriptionSuspend = '__dx_notifier_subscription_suspend';\n    return ModelSubscriber;\n}());\nexports.ModelSubscriber = ModelSubscriber;\n"]},"metadata":{},"sourceType":"script"}