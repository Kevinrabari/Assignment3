{"ast":null,"code":"/**\r\n* DevExpress Dashboard (data-inspector-extension.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataInspectorExtension = void 0;\n\nvar _default_1 = require(\"../../../data/localization/_default\");\n\nvar model_1 = require(\"../../../model\");\n\nvar disposable_object_1 = require(\"../../../model/disposable-object\");\n\nvar caption_toolbar_options_1 = require(\"../../../viewer-parts/widgets/caption-toolbar/caption-toolbar-options\");\n\nvar control_options_1 = require(\"../../control-options\");\n\nvar _underlying_data_provider_1 = require(\"../../data/_underlying-data-provider\");\n\nvar _options_manager_1 = require(\"../../internal/_options-manager\");\n\nvar _utils_1 = require(\"../../internal/_utils\");\n\nvar _data_inspector_view_model_1 = require(\"./_data-inspector-view-model\");\n\nvar name = 'data-inspector';\nvar nameAlias = 'dataInspector';\n\nvar DataInspectorExtension = function (_super) {\n  __extends(DataInspectorExtension, _super);\n\n  function DataInspectorExtension(dashboardControl, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._optionsManager = new _options_manager_1.OptionsManager();\n    _this._defaultOptions = {\n      allowInspectAggregatedData: false,\n      allowInspectRawData: false\n    };\n    _this.name = name;\n\n    _this._addContextToolbarItem = function (toolbarOptions, dashboardItem) {\n      if ((_this._optionsManager.get('allowInspectAggregatedData') || _this._optionsManager.get('allowInspectRawData')) && dashboardItem instanceof model_1.DataDashboardItem) {\n        toolbarOptions.actionItems.push({\n          hint: _default_1.getLocalizationById('DashboardStringId.ActionShowDataInspector'),\n          icon: 'dx-dashboard-data-inspector',\n          name: caption_toolbar_options_1.dashboardToolbarItemNames.dataInspector,\n          type: 'button',\n          click: function () {\n            _this._viewModel.show(dashboardItem, _this._optionsManager.get('allowInspectAggregatedData'), _this._optionsManager.get('allowInspectRawData'));\n          }\n        });\n      }\n    };\n\n    _this._optionsManager.initialize({\n      alias: nameAlias,\n      dashboardControl: dashboardControl,\n      defaultOptions: _this._defaultOptions,\n      eventsHolder: _this,\n      initOptions: options,\n      optionChanged: function (args) {\n        return _this._optionChanged(args);\n      }\n    });\n\n    _this._dashboardControl = dashboardControl;\n    _this._viewModel = new _data_inspector_view_model_1.DataInspectorViewModel({\n      onGridContentReady: function (e) {\n        _this._optionsManager.raiseEvent('gridContentReady', e);\n      },\n      onGridInitialized: function (e) {\n        _this._optionsManager.raiseEvent('gridInitialized', e);\n      },\n      onDialogShowing: function (e) {\n        _this._optionsManager.raiseEvent('dialogShowing', e);\n      },\n      onDialogShown: function (e) {\n        _this._optionsManager.raiseEvent('dialogShown', e);\n      },\n      onDialogHidden: function (e) {\n        _this._optionsManager.raiseEvent('dialogHidden', e);\n      }\n    });\n    _this._customTemplate = {\n      name: 'dx-dashboard-data-inspector-extension',\n      data: _this._viewModel\n    };\n    return _this;\n  }\n\n  DataInspectorExtension.prototype._optionChanged = function (args) {\n    switch (args.name) {\n      case 'allowInspectAggregatedData':\n      case 'allowInspectRawData':\n        this.hideDataInspector();\n        return 'updateItemToolbars';\n\n      default:\n        return null;\n    }\n  };\n\n  DataInspectorExtension.prototype.start = function () {\n    var _this = this;\n\n    this._dashboardControl.customTemplates.push(this._customTemplate);\n\n    if (this._dashboardControl._serviceClient()) {\n      this._viewModel.setUnderlyingDataProvider(new _underlying_data_provider_1.UnderlyingDataProvider(this._dashboardControl._serviceClient()));\n    }\n\n    this.toDispose(this._dashboardControl._serviceClient.subscribe(function (serviceClient) {\n      _this._viewModel.setUnderlyingDataProvider(new _underlying_data_provider_1.UnderlyingDataProvider(serviceClient));\n    }));\n\n    this._dashboardControl._dashboardContext.addContextToolbarItems.add(this._addContextToolbarItem);\n  };\n\n  DataInspectorExtension.prototype.stop = function () {\n    this._dashboardControl.customTemplates.remove(this._customTemplate);\n\n    this._dashboardControl._dashboardContext.addContextToolbarItems.remove(this._addContextToolbarItem);\n  };\n\n  DataInspectorExtension.prototype.showDataInspector = function (dashboardItemName, inspectedType) {\n    var dashboard = this._dashboardControl.dashboard();\n\n    if (dashboard) {\n      var dashboardItem = _utils_1.findItemForApi(dashboard, dashboardItemName, model_1.DataDashboardItem);\n\n      this._viewModel.show(dashboardItem, this._optionsManager.get('allowInspectAggregatedData'), this._optionsManager.get('allowInspectRawData'), inspectedType);\n    }\n  };\n\n  DataInspectorExtension.prototype.currentInspectedType = function () {\n    return this._viewModel.visible() && this._viewModel.inspectedDataType() || null;\n  };\n\n  DataInspectorExtension.prototype.hideDataInspector = function () {\n    this._viewModel.visible(false);\n  };\n\n  return DataInspectorExtension;\n}(disposable_object_1.DisposableObject);\n\nexports.DataInspectorExtension = DataInspectorExtension;\n\ncontrol_options_1.defaultExtensions[name] = function (dashboardControl, options) {\n  return new DataInspectorExtension(dashboardControl, options);\n};\n\ncontrol_options_1.extensionNameMap[name] = nameAlias;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/common/extensions/data-inspector-extension/data-inspector-extension.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","DataInspectorExtension","_default_1","require","model_1","disposable_object_1","caption_toolbar_options_1","control_options_1","_underlying_data_provider_1","_options_manager_1","_utils_1","_data_inspector_view_model_1","name","nameAlias","_super","dashboardControl","options","_this","_optionsManager","OptionsManager","_defaultOptions","allowInspectAggregatedData","allowInspectRawData","_addContextToolbarItem","toolbarOptions","dashboardItem","get","DataDashboardItem","actionItems","push","hint","getLocalizationById","icon","dashboardToolbarItemNames","dataInspector","type","click","_viewModel","show","initialize","alias","defaultOptions","eventsHolder","initOptions","optionChanged","args","_optionChanged","_dashboardControl","DataInspectorViewModel","onGridContentReady","e","raiseEvent","onGridInitialized","onDialogShowing","onDialogShown","onDialogHidden","_customTemplate","data","hideDataInspector","start","customTemplates","_serviceClient","setUnderlyingDataProvider","UnderlyingDataProvider","toDispose","subscribe","serviceClient","_dashboardContext","addContextToolbarItems","add","stop","remove","showDataInspector","dashboardItemName","inspectedType","dashboard","findItemForApi","currentInspectedType","visible","inspectedDataType","DisposableObject","defaultExtensions","extensionNameMap"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (data-inspector-extension.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataInspectorExtension = void 0;\nvar _default_1 = require(\"../../../data/localization/_default\");\nvar model_1 = require(\"../../../model\");\nvar disposable_object_1 = require(\"../../../model/disposable-object\");\nvar caption_toolbar_options_1 = require(\"../../../viewer-parts/widgets/caption-toolbar/caption-toolbar-options\");\nvar control_options_1 = require(\"../../control-options\");\nvar _underlying_data_provider_1 = require(\"../../data/_underlying-data-provider\");\nvar _options_manager_1 = require(\"../../internal/_options-manager\");\nvar _utils_1 = require(\"../../internal/_utils\");\nvar _data_inspector_view_model_1 = require(\"./_data-inspector-view-model\");\nvar name = 'data-inspector';\nvar nameAlias = 'dataInspector';\nvar DataInspectorExtension = (function (_super) {\n    __extends(DataInspectorExtension, _super);\n    function DataInspectorExtension(dashboardControl, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this._optionsManager = new _options_manager_1.OptionsManager();\n        _this._defaultOptions = {\n            allowInspectAggregatedData: false,\n            allowInspectRawData: false\n        };\n        _this.name = name;\n        _this._addContextToolbarItem = function (toolbarOptions, dashboardItem) {\n            if ((_this._optionsManager.get('allowInspectAggregatedData') || _this._optionsManager.get('allowInspectRawData')) && dashboardItem instanceof model_1.DataDashboardItem) {\n                toolbarOptions.actionItems.push({\n                    hint: _default_1.getLocalizationById('DashboardStringId.ActionShowDataInspector'),\n                    icon: 'dx-dashboard-data-inspector',\n                    name: caption_toolbar_options_1.dashboardToolbarItemNames.dataInspector,\n                    type: 'button',\n                    click: function () {\n                        _this._viewModel.show(dashboardItem, _this._optionsManager.get('allowInspectAggregatedData'), _this._optionsManager.get('allowInspectRawData'));\n                    }\n                });\n            }\n        };\n        _this._optionsManager.initialize({\n            alias: nameAlias,\n            dashboardControl: dashboardControl,\n            defaultOptions: _this._defaultOptions,\n            eventsHolder: _this,\n            initOptions: options,\n            optionChanged: function (args) { return _this._optionChanged(args); }\n        });\n        _this._dashboardControl = dashboardControl;\n        _this._viewModel = new _data_inspector_view_model_1.DataInspectorViewModel({\n            onGridContentReady: function (e) { _this._optionsManager.raiseEvent('gridContentReady', e); },\n            onGridInitialized: function (e) { _this._optionsManager.raiseEvent('gridInitialized', e); },\n            onDialogShowing: function (e) { _this._optionsManager.raiseEvent('dialogShowing', e); },\n            onDialogShown: function (e) { _this._optionsManager.raiseEvent('dialogShown', e); },\n            onDialogHidden: function (e) { _this._optionsManager.raiseEvent('dialogHidden', e); },\n        });\n        _this._customTemplate = {\n            name: 'dx-dashboard-data-inspector-extension',\n            data: _this._viewModel\n        };\n        return _this;\n    }\n    DataInspectorExtension.prototype._optionChanged = function (args) {\n        switch (args.name) {\n            case 'allowInspectAggregatedData':\n            case 'allowInspectRawData':\n                this.hideDataInspector();\n                return 'updateItemToolbars';\n            default:\n                return null;\n        }\n    };\n    DataInspectorExtension.prototype.start = function () {\n        var _this = this;\n        this._dashboardControl.customTemplates.push(this._customTemplate);\n        if (this._dashboardControl._serviceClient()) {\n            this._viewModel.setUnderlyingDataProvider(new _underlying_data_provider_1.UnderlyingDataProvider(this._dashboardControl._serviceClient()));\n        }\n        this.toDispose(this._dashboardControl._serviceClient.subscribe(function (serviceClient) {\n            _this._viewModel.setUnderlyingDataProvider(new _underlying_data_provider_1.UnderlyingDataProvider(serviceClient));\n        }));\n        this._dashboardControl._dashboardContext.addContextToolbarItems.add(this._addContextToolbarItem);\n    };\n    DataInspectorExtension.prototype.stop = function () {\n        this._dashboardControl.customTemplates.remove(this._customTemplate);\n        this._dashboardControl._dashboardContext.addContextToolbarItems.remove(this._addContextToolbarItem);\n    };\n    DataInspectorExtension.prototype.showDataInspector = function (dashboardItemName, inspectedType) {\n        var dashboard = this._dashboardControl.dashboard();\n        if (dashboard) {\n            var dashboardItem = _utils_1.findItemForApi(dashboard, dashboardItemName, model_1.DataDashboardItem);\n            this._viewModel.show(dashboardItem, this._optionsManager.get('allowInspectAggregatedData'), this._optionsManager.get('allowInspectRawData'), inspectedType);\n        }\n    };\n    DataInspectorExtension.prototype.currentInspectedType = function () {\n        return this._viewModel.visible() && this._viewModel.inspectedDataType() || null;\n    };\n    DataInspectorExtension.prototype.hideDataInspector = function () {\n        this._viewModel.visible(false);\n    };\n    return DataInspectorExtension;\n}(disposable_object_1.DisposableObject));\nexports.DataInspectorExtension = DataInspectorExtension;\ncontrol_options_1.defaultExtensions[name] = function (dashboardControl, options) { return new DataInspectorExtension(dashboardControl, options); };\ncontrol_options_1.extensionNameMap[name] = nameAlias;\n"]},"metadata":{},"sourceType":"script"}