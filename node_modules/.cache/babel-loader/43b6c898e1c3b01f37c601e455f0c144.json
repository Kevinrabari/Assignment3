{"ast":null,"code":"/**\n* DevExpress Analytics (widgets\\expressioneditor\\tools\\_operatorNames.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.operatorNames = void 0;\nexports.operatorNames = [{\n  text: '+',\n  image: 'addition',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Plus'\n}, {\n  text: '-',\n  image: 'subtraction',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Minus'\n}, {\n  text: '*',\n  image: 'multiplication',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Multiply'\n}, {\n  text: '/',\n  image: 'division',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Divide'\n}, {\n  text: '%',\n  image: 'modulus',\n  hasSeparator: true,\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Modulo'\n}, {\n  text: '()',\n  image: 'parenthesis',\n  hasSeparator: true\n}, {\n  text: '|',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseOr'\n}, {\n  text: '&',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseAnd'\n}, {\n  text: '^',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseXor'\n}, {\n  text: '==',\n  image: 'equal',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Equal'\n}, {\n  text: '!=',\n  image: 'not_equal',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_NotEqual'\n}, {\n  text: '<',\n  image: 'less',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Less'\n}, {\n  text: '<=',\n  image: 'less_or_equal',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_LessOrEqual'\n}, {\n  text: '>=',\n  image: 'greater_or_equal',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_GreaterOrEqual'\n}, {\n  text: '>',\n  hasSeparator: true,\n  image: 'greater',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Greater'\n}, {\n  text: 'In',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_In'\n}, {\n  text: 'Like',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Like'\n}, {\n  text: 'Between',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Between'\n}, {\n  text: 'And',\n  image: 'and',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_And'\n}, {\n  text: 'Or',\n  image: 'or',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Or'\n}, {\n  text: 'Not',\n  image: 'not',\n  descriptionStringId: 'ExpressionEditorStringId.Operator_Not'\n}];","map":{"version":3,"sources":["/Users/kevinrabari/Desktop/Georgian College Work/1005_ Mobile Web Application/Assignment3/node_modules/@devexpress/analytics-core/widgets/expressioneditor/tools/_operatorNames.js"],"names":["Object","defineProperty","exports","value","operatorNames","text","image","descriptionStringId","hasSeparator"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (widgets\\expressioneditor\\tools\\_operatorNames.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.operatorNames = void 0;\nexports.operatorNames = [\n    { text: '+', image: 'addition', descriptionStringId: 'ExpressionEditorStringId.Operator_Plus' },\n    { text: '-', image: 'subtraction', descriptionStringId: 'ExpressionEditorStringId.Operator_Minus' },\n    { text: '*', image: 'multiplication', descriptionStringId: 'ExpressionEditorStringId.Operator_Multiply' },\n    { text: '/', image: 'division', descriptionStringId: 'ExpressionEditorStringId.Operator_Divide' },\n    { text: '%', image: 'modulus', hasSeparator: true, descriptionStringId: 'ExpressionEditorStringId.Operator_Modulo' },\n    { text: '()', image: 'parenthesis', hasSeparator: true },\n    { text: '|', descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseOr' },\n    { text: '&', descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseAnd' },\n    { text: '^', descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseXor' },\n    { text: '==', image: 'equal', descriptionStringId: 'ExpressionEditorStringId.Operator_Equal' },\n    { text: '!=', image: 'not_equal', descriptionStringId: 'ExpressionEditorStringId.Operator_NotEqual' },\n    { text: '<', image: 'less', descriptionStringId: 'ExpressionEditorStringId.Operator_Less' },\n    { text: '<=', image: 'less_or_equal', descriptionStringId: 'ExpressionEditorStringId.Operator_LessOrEqual' },\n    { text: '>=', image: 'greater_or_equal', descriptionStringId: 'ExpressionEditorStringId.Operator_GreaterOrEqual' },\n    { text: '>', hasSeparator: true, image: 'greater', descriptionStringId: 'ExpressionEditorStringId.Operator_Greater' },\n    { text: 'In', descriptionStringId: 'ExpressionEditorStringId.Operator_In' },\n    { text: 'Like', descriptionStringId: 'ExpressionEditorStringId.Operator_Like' },\n    { text: 'Between', descriptionStringId: 'ExpressionEditorStringId.Operator_Between' },\n    { text: 'And', image: 'and', descriptionStringId: 'ExpressionEditorStringId.Operator_And' },\n    { text: 'Or', image: 'or', descriptionStringId: 'ExpressionEditorStringId.Operator_Or' },\n    { text: 'Not', image: 'not', descriptionStringId: 'ExpressionEditorStringId.Operator_Not' }\n];\n"]},"metadata":{},"sourceType":"script"}