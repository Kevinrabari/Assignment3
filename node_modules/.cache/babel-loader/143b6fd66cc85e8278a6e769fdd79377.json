{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_item-data-axis-builder.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.itemDataAxisBuilder = exports.pivotAreaNames = void 0;\n\nvar _utils_1 = require(\"../../_utils\");\n\nvar _item_data_axis_point_1 = require(\"../_item-data-axis-point\");\n\nexports.pivotAreaNames = {\n  columns: 'Columns',\n  rows: 'Rows'\n};\n\nfunction redBlackTreeNodeComparer(arr1, arr2) {\n  for (var i = 0; i < arr1.length && i < arr2.length; i++) {\n    if (arr1[i] > arr2[i]) return 1;\n    if (arr1[i] < arr2[i]) return -1;\n  }\n\n  if (arr1.length < arr2.length) return -1;\n  if (arr1.length > arr2.length) return 1;\n  return 0;\n}\n\nexports.itemDataAxisBuilder = {\n  build: function (name, storage, dimensions, sortOrderSlices, metaData, iterators) {\n    var _this = this;\n\n    var cache = new _utils_1.RedBlackTree(redBlackTreeNodeComparer);\n    var keyIds = dimensions.map(function (dimension) {\n      return dimension.id;\n    });\n\n    var allSlicesKeyIdsList = this._getKeyIdsList(keyIds);\n\n    var levelInfoList = allSlicesKeyIdsList.map(function (keyIds, index) {\n      var baseKeyIds = keyIds.slice(-1),\n          baseKeyId = baseKeyIds.length > 0 ? baseKeyIds[0] : null,\n          metaDataSliceKey = storage.getSliceKey(baseKeyIds),\n          dataSlice = storage.getOrCreateSlice(keyIds),\n          level = index - 1;\n      return {\n        axisName: name,\n        metaData: metaData,\n        dataSlice: dataSlice,\n        level: level,\n        getMetaDataValue: function (dataRowKey, valueId) {\n          if (metaDataSliceKey < 0) return null;\n          var metaDataRowKey = storage.findDataRowKey(metaDataSliceKey, dataRowKey);\n          return storage.getValue(metaDataRowKey, valueId);\n        },\n        getBaseValue: function (dataRowKey) {\n          return level >= 0 ? storage.getKeyValue(dataRowKey, baseKeyId) : null;\n        }\n      };\n    });\n    var rootNode = new _item_data_axis_point_1.itemDataAxisPoint(levelInfoList[0], {\n      rowKey: [],\n      sliceKey: levelInfoList[0].dataSlice.getKey()\n    });\n    cache.getOrAdd([], function () {\n      return rootNode;\n    });\n    allSlicesKeyIdsList.forEach(function (keyIds) {\n      if (keyIds.length > 0 && !_this._isSortOrderSlice(keyIds, sortOrderSlices)) return;\n      var levelInfo = levelInfoList[keyIds.length];\n      var slice = levelInfo.dataSlice;\n      var iterator = slice && iterators ? iterators[slice.getKey()] : slice;\n\n      if (iterator) {\n        iterator.forEach(function (dataRowKey) {\n          var item = null,\n              childItem = null;\n\n          do {\n            var level = dataRowKey.rowKey.length;\n\n            var createAxisPoint = function () {\n              var levelInfo = levelInfoList[level];\n              return new _item_data_axis_point_1.itemDataAxisPoint(levelInfo, dataRowKey);\n            };\n\n            var addResult = cache.getOrAdd(dataRowKey.rowKey, createAxisPoint);\n            item = addResult.value;\n\n            if (childItem != null) {\n              item.getChildren().push(childItem);\n\n              childItem._setParent(item);\n            }\n\n            if (!addResult.added || level == 0) break;\n            var prevSliceKey = levelInfoList[level - 1].dataSlice.getKey();\n            dataRowKey = storage.findDataRowKey(prevSliceKey, dataRowKey);\n            childItem = item;\n          } while (true);\n        });\n      }\n    });\n    return rootNode;\n  },\n  _getKeyIdsList: function (keyIds) {\n    var list = [[]];\n    keyIds.forEach(function (_, i) {\n      var slice = keyIds.slice(0, i + 1);\n      list.push(slice);\n    });\n    return list;\n  },\n  _isSortOrderSlice: function (slice, sortOrderSlices) {\n    var result = !sortOrderSlices || sortOrderSlices.length == 0;\n\n    if (!result) {\n      sortOrderSlices.forEach(function (orderSlice) {\n        result = result || _utils_1.areNotOrderedListsEqual(slice, orderSlice);\n        return !result;\n      });\n    }\n\n    return result;\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/item-data/internal/_item-data-axis-builder.js"],"names":["Object","defineProperty","exports","value","itemDataAxisBuilder","pivotAreaNames","_utils_1","require","_item_data_axis_point_1","columns","rows","redBlackTreeNodeComparer","arr1","arr2","i","length","build","name","storage","dimensions","sortOrderSlices","metaData","iterators","_this","cache","RedBlackTree","keyIds","map","dimension","id","allSlicesKeyIdsList","_getKeyIdsList","levelInfoList","index","baseKeyIds","slice","baseKeyId","metaDataSliceKey","getSliceKey","dataSlice","getOrCreateSlice","level","axisName","getMetaDataValue","dataRowKey","valueId","metaDataRowKey","findDataRowKey","getValue","getBaseValue","getKeyValue","rootNode","itemDataAxisPoint","rowKey","sliceKey","getKey","getOrAdd","forEach","_isSortOrderSlice","levelInfo","iterator","item","childItem","createAxisPoint","addResult","getChildren","push","_setParent","added","prevSliceKey","list","_","result","orderSlice","areNotOrderedListsEqual"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_item-data-axis-builder.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.itemDataAxisBuilder = exports.pivotAreaNames = void 0;\nvar _utils_1 = require(\"../../_utils\");\nvar _item_data_axis_point_1 = require(\"../_item-data-axis-point\");\nexports.pivotAreaNames = {\n    columns: 'Columns',\n    rows: 'Rows'\n};\nfunction redBlackTreeNodeComparer(arr1, arr2) {\n    for (var i = 0; i < arr1.length && i < arr2.length; i++) {\n        if (arr1[i] > arr2[i])\n            return 1;\n        if (arr1[i] < arr2[i])\n            return -1;\n    }\n    if (arr1.length < arr2.length)\n        return -1;\n    if (arr1.length > arr2.length)\n        return 1;\n    return 0;\n}\nexports.itemDataAxisBuilder = {\n    build: function (name, storage, dimensions, sortOrderSlices, metaData, iterators) {\n        var _this = this;\n        var cache = new _utils_1.RedBlackTree(redBlackTreeNodeComparer);\n        var keyIds = dimensions.map(function (dimension) { return dimension.id; });\n        var allSlicesKeyIdsList = this._getKeyIdsList(keyIds);\n        var levelInfoList = allSlicesKeyIdsList.map(function (keyIds, index) {\n            var baseKeyIds = keyIds.slice(-1), baseKeyId = baseKeyIds.length > 0 ? baseKeyIds[0] : null, metaDataSliceKey = storage.getSliceKey(baseKeyIds), dataSlice = storage.getOrCreateSlice(keyIds), level = index - 1;\n            return {\n                axisName: name,\n                metaData: metaData,\n                dataSlice: dataSlice,\n                level: level,\n                getMetaDataValue: function (dataRowKey, valueId) {\n                    if (metaDataSliceKey < 0)\n                        return null;\n                    var metaDataRowKey = storage.findDataRowKey(metaDataSliceKey, dataRowKey);\n                    return storage.getValue(metaDataRowKey, valueId);\n                },\n                getBaseValue: function (dataRowKey) {\n                    return (level >= 0) ? storage.getKeyValue(dataRowKey, baseKeyId) : null;\n                }\n            };\n        });\n        var rootNode = new _item_data_axis_point_1.itemDataAxisPoint(levelInfoList[0], { rowKey: [], sliceKey: levelInfoList[0].dataSlice.getKey() });\n        cache.getOrAdd([], function () { return rootNode; });\n        allSlicesKeyIdsList.forEach(function (keyIds) {\n            if (keyIds.length > 0 && !_this._isSortOrderSlice(keyIds, sortOrderSlices))\n                return;\n            var levelInfo = levelInfoList[keyIds.length];\n            var slice = levelInfo.dataSlice;\n            var iterator = (slice && iterators) ? iterators[slice.getKey()] : slice;\n            if (iterator) {\n                iterator.forEach(function (dataRowKey) {\n                    var item = null, childItem = null;\n                    do {\n                        var level = dataRowKey.rowKey.length;\n                        var createAxisPoint = function () {\n                            var levelInfo = levelInfoList[level];\n                            return new _item_data_axis_point_1.itemDataAxisPoint(levelInfo, dataRowKey);\n                        };\n                        var addResult = cache.getOrAdd(dataRowKey.rowKey, createAxisPoint);\n                        item = addResult.value;\n                        if (childItem != null) {\n                            item.getChildren().push(childItem);\n                            childItem._setParent(item);\n                        }\n                        if (!addResult.added || level == 0)\n                            break;\n                        var prevSliceKey = levelInfoList[level - 1].dataSlice.getKey();\n                        dataRowKey = storage.findDataRowKey(prevSliceKey, dataRowKey);\n                        childItem = item;\n                    } while (true);\n                });\n            }\n        });\n        return rootNode;\n    },\n    _getKeyIdsList: function (keyIds) {\n        var list = [[]];\n        keyIds.forEach(function (_, i) {\n            var slice = keyIds.slice(0, i + 1);\n            list.push(slice);\n        });\n        return list;\n    },\n    _isSortOrderSlice: function (slice, sortOrderSlices) {\n        var result = !sortOrderSlices || sortOrderSlices.length == 0;\n        if (!result) {\n            sortOrderSlices.forEach(function (orderSlice) {\n                result = result || _utils_1.areNotOrderedListsEqual(slice, orderSlice);\n                return !result;\n            });\n        }\n        return result;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}