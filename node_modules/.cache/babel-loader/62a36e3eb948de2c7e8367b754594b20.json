{"ast":null,"code":"/**\n* DevExpress Analytics (widgets\\treelist\\_binding.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ko = require(\"knockout\");\n\nvar $ = require(\"jquery\");\n\nvar _treelistItem_1 = require(\"./_treelistItem\");\n\nvar _treelistController_1 = require(\"./_treelistController\");\n\nvar _treeListSearchViewModel_1 = require(\"./_treeListSearchViewModel\");\n\nvar scroll_view_1 = require(\"devextreme/ui/scroll_view\");\n\nvar _utils_1 = require(\"../../serializer/_utils\");\n\nvar templateUtils_1 = require(\"../../property-grid/widgets/templateUtils\");\n\nko.bindingHandlers['treelist'] = {\n  init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n    var treeListViewModel = null;\n    var childContext = null;\n    var callback = null;\n\n    var values = valueAccessor(),\n        options = ko.unwrap(values),\n        pathArray,\n        updateScrollBar = function () {\n      var options = ko.unwrap(values);\n      var scrollViewElt = $(element).closest('.dx-scrollview').get(0);\n      var scrollView = scrollViewElt && scroll_view_1.default.getInstance(scrollViewElt);\n      scrollView && scrollView['update']();\n\n      if (options.onItemsVisibilityChanged) {\n        options.onItemsVisibilityChanged();\n      }\n    },\n        updateTreeList = function (options) {\n      pathArray && pathArray.dispose();\n      var treeListController = options.treeListController || new _treelistController_1.TreeListController();\n      options.treeListController = treeListController;\n      treeListController.dragDropHandler = treeListController.dragDropHandler || bindingContext.$root.fieldDragHandler;\n      options.factory = options.factory || new _treelistItem_1.DefaultTreeListItemFactory();\n      options.itemsProvider = ko.unwrap(options.itemsProvider);\n      options.pageSize = options.pageSize || -1;\n      treeListViewModel && treeListViewModel.dispose();\n      if (!options || !options.itemsProvider) return;\n\n      if (!options.rtl) {\n        options.rtl = $(element).closest('.dx-rtl').length > 0;\n      }\n\n      pathArray = ko.computed(function () {\n        var result = ko.unwrap(options.path);\n\n        if (!Array.isArray(result)) {\n          return !!result ? result.split('.') : [];\n        }\n\n        return result;\n      });\n      treeListViewModel = options.factory.createRootItem(options, pathArray, updateScrollBar, options.rtl);\n      var treeListTemplate = options.templateHtml || templateUtils_1.getTemplate('dx-treelist');\n\n      if (treeListController.root) {\n        treeListController.searchEnabled = true;\n        treeListController.searchOptions = treeListController.searchOptions || new _treeListSearchViewModel_1.TreeListSearchOptions();\n        treeListController.root(treeListViewModel);\n      }\n\n      var $element = $(element).html(treeListTemplate);\n      childContext = bindingContext.createChildContext(treeListViewModel);\n      ko.applyBindings(childContext, $element.children()[0]);\n      callback && ko.utils.domNodeDisposal.removeDisposeCallback(element, callback);\n\n      callback = function () {\n        treeListViewModel && treeListViewModel.dispose();\n        treeListViewModel = null;\n        subscription && subscription.dispose();\n        pathArray && pathArray.dispose();\n        callback = null;\n        ko.utils.domNodeDisposal.removeDisposeCallback(element, callback);\n      };\n\n      ko.utils.domNodeDisposal.addDisposeCallback(element, callback);\n    };\n\n    updateTreeList(_utils_1.extend({}, options));\n    var subscription = null;\n\n    if (ko.isSubscribable(values)) {\n      subscription = values.subscribe(function (newValue) {\n        newValue && updateTreeList(_utils_1.extend({}, newValue));\n      });\n    } else if (ko.isSubscribable(values.itemsProvider)) {\n      subscription = values.itemsProvider.subscribe(function (newValue) {\n        newValue && updateTreeList(_utils_1.extend({}, values));\n      });\n    }\n\n    return {\n      controlsDescendantBindings: true\n    };\n  }\n};\nko.bindingHandlers['treeListSearchPanel'] = {\n  init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n    var values = valueAccessor();\n    var template = ko.unwrap(values.template);\n    var modelType = ko.unwrap(values.modelType);\n    var controllers = ko.unwrap(values.controllers);\n    if (!Array.isArray(controllers)) controllers = [controllers];\n\n    _treeListSearchViewModel_1.TreeListSearchViewModel.createController(element, controllers, modelType, template);\n\n    return {\n      controlsDescendantBindings: true\n    };\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/widgets/treelist/_binding.js"],"names":["Object","defineProperty","exports","value","ko","require","$","_treelistItem_1","_treelistController_1","_treeListSearchViewModel_1","scroll_view_1","_utils_1","templateUtils_1","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","treeListViewModel","childContext","callback","values","options","unwrap","pathArray","updateScrollBar","scrollViewElt","closest","get","scrollView","default","getInstance","onItemsVisibilityChanged","updateTreeList","dispose","treeListController","TreeListController","dragDropHandler","$root","fieldDragHandler","factory","DefaultTreeListItemFactory","itemsProvider","pageSize","rtl","length","computed","result","path","Array","isArray","split","createRootItem","treeListTemplate","templateHtml","getTemplate","root","searchEnabled","searchOptions","TreeListSearchOptions","$element","html","createChildContext","applyBindings","children","utils","domNodeDisposal","removeDisposeCallback","subscription","addDisposeCallback","extend","isSubscribable","subscribe","newValue","controlsDescendantBindings","template","modelType","controllers","TreeListSearchViewModel","createController"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (widgets\\treelist\\_binding.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ko = require(\"knockout\");\nvar $ = require(\"jquery\");\nvar _treelistItem_1 = require(\"./_treelistItem\");\nvar _treelistController_1 = require(\"./_treelistController\");\nvar _treeListSearchViewModel_1 = require(\"./_treeListSearchViewModel\");\nvar scroll_view_1 = require(\"devextreme/ui/scroll_view\");\nvar _utils_1 = require(\"../../serializer/_utils\");\nvar templateUtils_1 = require(\"../../property-grid/widgets/templateUtils\");\nko.bindingHandlers['treelist'] = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var treeListViewModel = null;\n        var childContext = null;\n        var callback = null;\n        var values = valueAccessor(), options = ko.unwrap(values), pathArray, updateScrollBar = function () {\n            var options = ko.unwrap(values);\n            var scrollViewElt = $(element).closest('.dx-scrollview').get(0);\n            var scrollView = scrollViewElt && scroll_view_1.default.getInstance(scrollViewElt);\n            scrollView && scrollView['update']();\n            if (options.onItemsVisibilityChanged) {\n                options.onItemsVisibilityChanged();\n            }\n        }, updateTreeList = function (options) {\n            pathArray && pathArray.dispose();\n            var treeListController = options.treeListController || new _treelistController_1.TreeListController();\n            options.treeListController = treeListController;\n            treeListController.dragDropHandler = treeListController.dragDropHandler || bindingContext.$root.fieldDragHandler;\n            options.factory = options.factory || new _treelistItem_1.DefaultTreeListItemFactory();\n            options.itemsProvider = ko.unwrap(options.itemsProvider);\n            options.pageSize = options.pageSize || -1;\n            treeListViewModel && treeListViewModel.dispose();\n            if (!options || !options.itemsProvider)\n                return;\n            if (!options.rtl) {\n                options.rtl = $(element).closest('.dx-rtl').length > 0;\n            }\n            pathArray = ko.computed(function () {\n                var result = ko.unwrap(options.path);\n                if (!Array.isArray(result)) {\n                    return !!result ? result.split('.') : [];\n                }\n                return result;\n            });\n            treeListViewModel = options.factory.createRootItem(options, pathArray, updateScrollBar, options.rtl);\n            var treeListTemplate = options.templateHtml || templateUtils_1.getTemplate('dx-treelist');\n            if (treeListController.root) {\n                treeListController.searchEnabled = true;\n                treeListController.searchOptions = treeListController.searchOptions || new _treeListSearchViewModel_1.TreeListSearchOptions();\n                treeListController.root(treeListViewModel);\n            }\n            var $element = $(element).html(treeListTemplate);\n            childContext = bindingContext.createChildContext(treeListViewModel);\n            ko.applyBindings(childContext, $element.children()[0]);\n            callback && ko.utils.domNodeDisposal.removeDisposeCallback(element, callback);\n            callback = function () {\n                treeListViewModel && treeListViewModel.dispose();\n                treeListViewModel = null;\n                subscription && subscription.dispose();\n                pathArray && pathArray.dispose();\n                callback = null;\n                ko.utils.domNodeDisposal.removeDisposeCallback(element, callback);\n            };\n            ko.utils.domNodeDisposal.addDisposeCallback(element, callback);\n        };\n        updateTreeList(_utils_1.extend({}, options));\n        var subscription = null;\n        if (ko.isSubscribable(values)) {\n            subscription = values.subscribe(function (newValue) {\n                newValue && updateTreeList(_utils_1.extend({}, newValue));\n            });\n        }\n        else if (ko.isSubscribable(values.itemsProvider)) {\n            subscription = values.itemsProvider.subscribe(function (newValue) {\n                newValue && updateTreeList(_utils_1.extend({}, values));\n            });\n        }\n        return { controlsDescendantBindings: true };\n    }\n};\nko.bindingHandlers['treeListSearchPanel'] = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var values = valueAccessor();\n        var template = ko.unwrap(values.template);\n        var modelType = ko.unwrap(values.modelType);\n        var controllers = ko.unwrap(values.controllers);\n        if (!Array.isArray(controllers))\n            controllers = [controllers];\n        _treeListSearchViewModel_1.TreeListSearchViewModel.createController(element, controllers, modelType, template);\n        return { controlsDescendantBindings: true };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}