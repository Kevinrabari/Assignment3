{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/tree_list/ui.tree_list.data_source_adapter.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport treeListCore from \"./ui.tree_list.core\";\nimport errors from \"../widget/ui.errors\";\nimport { equalByValue } from \"../../core/utils/common\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { compileGetter, compileSetter } from \"../../core/utils/data\";\nimport { extend } from \"../../core/utils/extend\";\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\nimport { createObjectWithChanges } from \"../../data/array_utils\";\nimport ArrayStore from \"../../data/array_store\";\nimport query from \"../../data/query\";\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport storeHelper from \"../../data/store_helper\";\nvar {\n  queryByOptions: queryByOptions\n} = storeHelper;\nvar DEFAULT_KEY_EXPRESSION = \"id\";\n\nvar isFullBranchFilterMode = that => \"fullBranch\" === that.option(\"filterMode\");\n\nvar DataSourceAdapterTreeList = DataSourceAdapter.inherit({\n  _createKeyGetter: function () {\n    var keyExpr = this.getKeyExpr();\n    return compileGetter(keyExpr);\n  },\n  _createKeySetter: function () {\n    var keyExpr = this.getKeyExpr();\n\n    if (isFunction(keyExpr)) {\n      return keyExpr;\n    }\n\n    return compileSetter(keyExpr);\n  },\n  createParentIdGetter: function () {\n    return compileGetter(this.option(\"parentIdExpr\"));\n  },\n  createParentIdSetter: function () {\n    var parentIdExpr = this.option(\"parentIdExpr\");\n\n    if (isFunction(parentIdExpr)) {\n      return parentIdExpr;\n    }\n\n    return compileSetter(parentIdExpr);\n  },\n  _createItemsGetter: function () {\n    return compileGetter(this.option(\"itemsExpr\"));\n  },\n  _createHasItemsGetter: function () {\n    var hasItemsExpr = this.option(\"hasItemsExpr\");\n    return hasItemsExpr && compileGetter(hasItemsExpr);\n  },\n  _createHasItemsSetter: function () {\n    var hasItemsExpr = this.option(\"hasItemsExpr\");\n\n    if (isFunction(hasItemsExpr)) {\n      return hasItemsExpr;\n    }\n\n    return hasItemsExpr && compileSetter(hasItemsExpr);\n  },\n  _updateIndexByKeyObject: function (items) {\n    var that = this;\n    that._indexByKey = {};\n    each(items, function (index, item) {\n      that._indexByKey[item.key] = index;\n    });\n  },\n  _calculateHasItems: function (node, options) {\n    var parentIds = options.storeLoadOptions.parentIds;\n    var hasItems;\n    var isFullBranch = isFullBranchFilterMode(this);\n\n    if (this._hasItemsGetter && (parentIds || !options.storeLoadOptions.filter || isFullBranch)) {\n      hasItems = this._hasItemsGetter(node.data);\n    }\n\n    if (void 0 === hasItems) {\n      if (!this._isChildrenLoaded[node.key] && options.remoteOperations.filtering && (parentIds || isFullBranch)) {\n        hasItems = true;\n      } else if (options.loadOptions.filter && !options.remoteOperations.filtering && isFullBranch) {\n        hasItems = node.children.length;\n      } else {\n        hasItems = node.hasChildren;\n      }\n    }\n\n    return !!hasItems;\n  },\n  _fillVisibleItemsByNodes: function (nodes, options, result) {\n    for (var i = 0; i < nodes.length; i++) {\n      if (nodes[i].visible) {\n        result.push(nodes[i]);\n      }\n\n      if ((this.isRowExpanded(nodes[i].key, options) || !nodes[i].visible) && nodes[i].hasChildren && nodes[i].children.length) {\n        this._fillVisibleItemsByNodes(nodes[i].children, options, result);\n      }\n    }\n  },\n  _convertItemToNode: function (item, rootValue, nodeByKey) {\n    var key = this._keyGetter(item);\n\n    var parentId = this._parentIdGetter(item);\n\n    parentId = isDefined(parentId) ? parentId : rootValue;\n    var parentNode = nodeByKey[parentId] = nodeByKey[parentId] || {\n      key: parentId,\n      children: []\n    };\n    var node = nodeByKey[key] = nodeByKey[key] || {\n      key: key,\n      children: []\n    };\n    node.data = item;\n    node.parent = parentNode;\n    return node;\n  },\n  _createNodesByItems: function (items, visibleItems) {\n    var rootValue = this.option(\"rootValue\");\n    var visibleByKey = {};\n    var nodeByKey = this._nodeByKey = {};\n    var i;\n\n    if (visibleItems) {\n      for (i = 0; i < visibleItems.length; i++) {\n        visibleByKey[this._keyGetter(visibleItems[i])] = true;\n      }\n    }\n\n    for (i = 0; i < items.length; i++) {\n      var node = this._convertItemToNode(items[i], rootValue, nodeByKey);\n\n      if (void 0 === node.key) {\n        return;\n      }\n\n      node.visible = !visibleItems || !!visibleByKey[node.key];\n\n      if (node.parent) {\n        node.parent.children.push(node);\n      }\n    }\n\n    var rootNode = nodeByKey[rootValue] || {\n      key: rootValue,\n      children: []\n    };\n    rootNode.level = -1;\n    return rootNode;\n  },\n  _convertDataToPlainStructure: function (data, parentId, result) {\n    var key;\n\n    if (this._itemsGetter && !data.isConverted) {\n      result = result || [];\n\n      for (var i = 0; i < data.length; i++) {\n        var item = createObjectWithChanges(data[i]);\n        key = this._keyGetter(item);\n\n        if (void 0 === key) {\n          key = result.length + 1;\n\n          this._keySetter(item, key);\n        }\n\n        this._parentIdSetter(item, void 0 === parentId ? this.option(\"rootValue\") : parentId);\n\n        result.push(item);\n\n        var childItems = this._itemsGetter(item);\n\n        if (childItems && childItems.length) {\n          this._convertDataToPlainStructure(childItems, key, result);\n\n          var itemsExpr = this.option(\"itemsExpr\");\n\n          if (!isFunction(itemsExpr)) {\n            delete item[itemsExpr];\n          }\n        }\n      }\n\n      result.isConverted = true;\n      return result;\n    }\n\n    return data;\n  },\n  _createIdFilter: function (field, keys) {\n    var parentIdFilters = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      parentIdFilters.push([field, \"=\", keys[i]]);\n    }\n\n    return gridCoreUtils.combineFilters(parentIdFilters, \"or\");\n  },\n  _customizeRemoteOperations: function (options, operationTypes) {\n    this.callBase.apply(this, arguments);\n    options.remoteOperations.paging = false;\n    var expandVisibleNodes = false;\n\n    if (this.option(\"autoExpandAll\")) {\n      options.remoteOperations.sorting = false;\n      options.remoteOperations.filtering = false;\n\n      if ((!this._lastLoadOptions || operationTypes.filtering && !options.storeLoadOptions.filter) && !options.isCustomLoading) {\n        expandVisibleNodes = true;\n      }\n    }\n\n    if (!options.isCustomLoading) {\n      this._isReload = this._isReload || operationTypes.reload;\n\n      if (!options.cachedStoreData) {\n        this._isChildrenLoaded = {};\n\n        if (this._isReload) {\n          this._nodeByKey = {};\n        }\n      }\n\n      if (this.option(\"expandNodesOnFiltering\") && (operationTypes.filtering || this._isReload && options.storeLoadOptions.filter)) {\n        if (options.storeLoadOptions.filter) {\n          expandVisibleNodes = true;\n        } else {\n          options.collapseVisibleNodes = true;\n        }\n      }\n    }\n\n    options.expandVisibleNodes = expandVisibleNodes;\n  },\n  _getParentIdsToLoad: function (parentIds) {\n    var parentIdsToLoad = [];\n\n    for (var i = 0; i < parentIds.length; i++) {\n      var node = this.getNodeByKey(parentIds[i]);\n\n      if (!node || node.hasChildren && !node.children.length) {\n        parentIdsToLoad.push(parentIds[i]);\n      }\n    }\n\n    return parentIdsToLoad;\n  },\n  _handleCustomizeStoreLoadOptions: function (options) {\n    var rootValue = this.option(\"rootValue\");\n    var parentIdExpr = this.option(\"parentIdExpr\");\n    var parentIds = options.storeLoadOptions.parentIds;\n\n    if (parentIds) {\n      options.isCustomLoading = false;\n    }\n\n    this.callBase.apply(this, arguments);\n\n    if (options.remoteOperations.filtering && !options.isCustomLoading) {\n      if (isFullBranchFilterMode(this) && options.cachedStoreData || !options.storeLoadOptions.filter) {\n        var expandedRowKeys = options.collapseVisibleNodes ? [] : this.option(\"expandedRowKeys\");\n        parentIds = [rootValue].concat(expandedRowKeys).concat(parentIds || []);\n        var parentIdsToLoad = options.data ? this._getParentIdsToLoad(parentIds) : parentIds;\n\n        if (parentIdsToLoad.length) {\n          options.cachedPagingData = void 0;\n          options.data = void 0;\n          options.mergeStoreLoadData = true;\n          options.delay = this.option(\"loadingTimeout\");\n        }\n\n        options.storeLoadOptions.parentIds = parentIdsToLoad;\n        options.storeLoadOptions.filter = this._createIdFilter(parentIdExpr, parentIdsToLoad);\n      }\n    }\n  },\n  _generateInfoToLoad: function (data, needChildren) {\n    var key;\n    var keyMap = {};\n    var resultKeyMap = {};\n    var resultKeys = [];\n    var rootValue = this.option(\"rootValue\");\n    var i;\n\n    for (i = 0; i < data.length; i++) {\n      key = needChildren ? this._parentIdGetter(data[i]) : this._keyGetter(data[i]);\n      keyMap[key] = true;\n    }\n\n    for (i = 0; i < data.length; i++) {\n      key = needChildren ? this._keyGetter(data[i]) : this._parentIdGetter(data[i]);\n      var needToLoad = needChildren ? this.isRowExpanded(key) : key !== rootValue;\n\n      if (!keyMap[key] && !resultKeyMap[key] && needToLoad) {\n        resultKeyMap[key] = true;\n        resultKeys.push(key);\n      }\n    }\n\n    return {\n      keyMap: resultKeyMap,\n      keys: resultKeys\n    };\n  },\n  _loadParentsOrChildren: function (data, options, needChildren) {\n    var that = this;\n    var filter;\n    var needLocalFiltering;\n\n    var {\n      keys: keys,\n      keyMap: keyMap\n    } = that._generateInfoToLoad(data, needChildren);\n\n    var d = new Deferred();\n    var isRemoteFiltering = options.remoteOperations.filtering;\n    var maxFilterLengthInRequest = that.option(\"maxFilterLengthInRequest\");\n    var loadOptions = isRemoteFiltering ? options.storeLoadOptions : options.loadOptions;\n\n    function concatLoadedData(loadedData) {\n      if (isRemoteFiltering) {\n        that._cachedStoreData = that._cachedStoreData.concat(loadedData);\n      }\n\n      return data.concat(loadedData);\n    }\n\n    if (!keys.length) {\n      return d.resolve(data);\n    }\n\n    var cachedNodes = keys.map(id => this.getNodeByKey(id)).filter(node => node && node.data);\n\n    if (cachedNodes.length === keys.length) {\n      if (needChildren) {\n        cachedNodes = cachedNodes.reduce((result, node) => result.concat(node.children), []);\n      }\n\n      if (cachedNodes.length) {\n        return that._loadParentsOrChildren(concatLoadedData(cachedNodes.map(node => node.data)), options, needChildren);\n      }\n    }\n\n    var keyExpr = needChildren ? that.option(\"parentIdExpr\") : that.getKeyExpr();\n    filter = that._createIdFilter(keyExpr, keys);\n    var filterLength = encodeURI(JSON.stringify(filter)).length;\n\n    if (filterLength > maxFilterLengthInRequest) {\n      filter = function (itemData) {\n        return keyMap[needChildren ? that._parentIdGetter(itemData) : that._keyGetter(itemData)];\n      };\n\n      needLocalFiltering = isRemoteFiltering;\n    }\n\n    loadOptions = extend({}, loadOptions, {\n      filter: !needLocalFiltering ? filter : null\n    });\n    var store = options.fullData ? new ArrayStore(options.fullData) : that._dataSource.store();\n    that.loadFromStore(loadOptions, store).done(function (loadedData) {\n      if (loadedData.length) {\n        if (needLocalFiltering) {\n          loadedData = query(loadedData).filter(filter).toArray();\n        }\n\n        that._loadParentsOrChildren(concatLoadedData(loadedData), options, needChildren).done(d.resolve).fail(d.reject);\n      } else {\n        d.resolve(data);\n      }\n    }).fail(d.reject);\n    return d;\n  },\n  _loadParents: function (data, options) {\n    return this._loadParentsOrChildren(data, options);\n  },\n  _loadChildrenIfNeed: function (data, options) {\n    if (isFullBranchFilterMode(this)) {\n      return this._loadParentsOrChildren(data, options, true);\n    }\n\n    return when(data);\n  },\n  _updateHasItemsMap: function (options) {\n    var parentIds = options.storeLoadOptions.parentIds;\n\n    if (parentIds) {\n      for (var i = 0; i < parentIds.length; i++) {\n        this._isChildrenLoaded[parentIds[i]] = true;\n      }\n    }\n  },\n  _getKeyInfo: function () {\n    return {\n      key: () => \"key\",\n      keyOf: data => data.key\n    };\n  },\n  _applyBatch: function (changes) {\n    var baseChanges = [];\n    changes.forEach(change => {\n      if (\"insert\" === change.type) {\n        baseChanges = baseChanges.concat(this._applyInsert(change));\n      } else if (\"remove\" === change.type) {\n        baseChanges = baseChanges.concat(this._applyRemove(change));\n      } else if (\"update\" === change.type) {\n        baseChanges.push({\n          type: change.type,\n          key: change.key,\n          data: {\n            data: change.data\n          }\n        });\n      }\n    });\n    this.callBase(baseChanges);\n  },\n  _setHasItems: function (node, value) {\n    var hasItemsSetter = this._hasItemsSetter;\n    node.hasChildren = value;\n\n    if (hasItemsSetter && node.data) {\n      hasItemsSetter(node.data, value);\n    }\n  },\n  _applyInsert: function (change) {\n    var baseChanges = [];\n    var parentId = this.parentKeyOf(change.data);\n    var parentNode = this.getNodeByKey(parentId);\n\n    if (parentNode) {\n      var rootValue = this.option(\"rootValue\");\n\n      var node = this._convertItemToNode(change.data, rootValue, this._nodeByKey);\n\n      node.hasChildren = false;\n      node.level = parentNode.level + 1;\n      node.visible = true;\n      parentNode.children.push(node);\n      this._isChildrenLoaded[node.key] = true;\n\n      this._setHasItems(parentNode, true);\n\n      if ((!parentNode.parent || this.isRowExpanded(parentNode.key)) && void 0 !== change.index) {\n        var index = this.items().indexOf(parentNode) + 1;\n        index += change.index >= 0 ? Math.min(change.index, parentNode.children.length) : parentNode.children.length;\n        baseChanges.push({\n          type: change.type,\n          data: node,\n          index: index\n        });\n      }\n    }\n\n    return baseChanges;\n  },\n  _applyRemove: function (change) {\n    var baseChanges = [];\n    var node = this.getNodeByKey(change.key);\n    var parentNode = node && node.parent;\n\n    if (parentNode) {\n      var index = parentNode.children.indexOf(node);\n\n      if (index >= 0) {\n        parentNode.children.splice(index, 1);\n\n        if (!parentNode.children.length) {\n          this._setHasItems(parentNode, false);\n        }\n\n        baseChanges.push(change);\n        baseChanges = baseChanges.concat(this.getChildNodeKeys(change.key).map(key => ({\n          type: change.type,\n          key: key\n        })));\n      }\n    }\n\n    return baseChanges;\n  },\n  _handleDataLoaded: function (options) {\n    var data = options.data = this._convertDataToPlainStructure(options.data);\n\n    if (!options.remoteOperations.filtering && options.loadOptions.filter) {\n      options.fullData = queryByOptions(query(options.data), {\n        sort: options.loadOptions && options.loadOptions.sort\n      }).toArray();\n    }\n\n    this._updateHasItemsMap(options);\n\n    this.callBase(options);\n\n    if (data.isConverted && this._cachedStoreData) {\n      this._cachedStoreData.isConverted = true;\n    }\n  },\n  _fillNodes: function (nodes, options, expandedRowKeys, level) {\n    var isFullBranch = isFullBranchFilterMode(this);\n    level = level || 0;\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var needToExpand = false;\n\n      this._fillNodes(nodes[i].children, options, expandedRowKeys, level + 1);\n\n      node.level = level;\n      node.hasChildren = this._calculateHasItems(node, options);\n\n      if (node.visible && node.hasChildren) {\n        if (isFullBranch) {\n          if (node.children.filter(node => node.visible).length) {\n            needToExpand = true;\n          } else if (node.children.length) {\n            treeListCore.foreachNodes(node.children, function (node) {\n              node.visible = true;\n            });\n          }\n        } else {\n          needToExpand = true;\n        }\n\n        if (options.expandVisibleNodes && needToExpand) {\n          expandedRowKeys.push(node.key);\n        }\n      }\n\n      if (node.visible || node.hasChildren) {\n        node.parent.hasChildren = true;\n      }\n    }\n  },\n  _processTreeStructure: function (options, visibleItems) {\n    var data = options.data;\n    var parentIds = options.storeLoadOptions.parentIds;\n    var expandedRowKeys = [];\n\n    if (parentIds && parentIds.length || this._isReload) {\n      if (options.fullData && options.fullData.length > options.data.length) {\n        data = options.fullData;\n        visibleItems = visibleItems || options.data;\n      }\n\n      this._rootNode = this._createNodesByItems(data, visibleItems);\n\n      if (!this._rootNode) {\n        options.data = new Deferred().reject(errors.Error(\"E1046\", this.getKeyExpr()));\n        return;\n      }\n\n      this._fillNodes(this._rootNode.children, options, expandedRowKeys);\n\n      this._isNodesInitializing = true;\n\n      if (options.collapseVisibleNodes || expandedRowKeys.length) {\n        this.option(\"expandedRowKeys\", expandedRowKeys);\n      }\n\n      this._isReload = false;\n      this.executeAction(\"onNodesInitialized\", {\n        root: this._rootNode\n      });\n      this._isNodesInitializing = false;\n    }\n\n    var resultData = [];\n\n    this._fillVisibleItemsByNodes(this._rootNode.children, options, resultData);\n\n    options.data = resultData;\n    this._totalItemsCount = resultData.length;\n  },\n  _handleDataLoadedCore: function (options) {\n    var that = this;\n    var data = options.data;\n    var callBase = that.callBase;\n    var filter = options.storeLoadOptions.filter || options.loadOptions.filter;\n    var filterMode = that.option(\"filterMode\");\n    var visibleItems;\n    var parentIds = options.storeLoadOptions.parentIds;\n    var needLoadParents = filter && (!parentIds || !parentIds.length) && \"standard\" !== filterMode;\n\n    if (!options.isCustomLoading) {\n      if (needLoadParents) {\n        var d = options.data = new Deferred();\n\n        if (\"matchOnly\" === filterMode) {\n          visibleItems = data;\n        }\n\n        return that._loadParents(data, options).done(function (data) {\n          that._loadChildrenIfNeed(data, options).done(data => {\n            options.data = data;\n\n            that._processTreeStructure(options, visibleItems);\n\n            callBase.call(that, options);\n            d.resolve(options.data);\n          });\n        }).fail(d.reject);\n      } else {\n        that._processTreeStructure(options);\n      }\n    }\n\n    that.callBase(options);\n  },\n  _handlePush: function (_ref) {\n    var {\n      changes: changes\n    } = _ref;\n    var reshapeOnPush = this._dataSource._reshapeOnPush;\n    var isNeedReshape = reshapeOnPush && !!changes.length;\n\n    if (isNeedReshape) {\n      this._isReload = true;\n    }\n\n    this.callBase.apply(this, arguments);\n  },\n  init: function (dataSource, remoteOperations) {\n    this.callBase.apply(this, arguments);\n    var dataStructure = this.option(\"dataStructure\");\n    this._keyGetter = this._createKeyGetter();\n    this._parentIdGetter = this.createParentIdGetter();\n    this._hasItemsGetter = this._createHasItemsGetter();\n    this._hasItemsSetter = this._createHasItemsSetter();\n\n    if (\"tree\" === dataStructure) {\n      this._itemsGetter = this._createItemsGetter();\n      this._keySetter = this._createKeySetter();\n      this._parentIdSetter = this.createParentIdSetter();\n    }\n\n    this._nodeByKey = {};\n    this._isChildrenLoaded = {};\n    this._totalItemsCount = 0;\n    this.createAction(\"onNodesInitialized\");\n  },\n  getKeyExpr: function () {\n    var store = this.store();\n    var key = store && store.key();\n    var keyExpr = this.option(\"keyExpr\");\n\n    if (isDefined(key) && isDefined(keyExpr)) {\n      if (!equalByValue(key, keyExpr)) {\n        throw errors.Error(\"E1044\");\n      }\n    }\n\n    return key || keyExpr || DEFAULT_KEY_EXPRESSION;\n  },\n  keyOf: function (data) {\n    return this._keyGetter && this._keyGetter(data);\n  },\n  parentKeyOf: function (data) {\n    return this._parentIdGetter && this._parentIdGetter(data);\n  },\n  getRootNode: function () {\n    return this._rootNode;\n  },\n  totalItemsCount: function () {\n    return this._totalItemsCount;\n  },\n  isRowExpanded: function (key, cache) {\n    if (cache) {\n      var isExpandedByKey = cache.isExpandedByKey;\n\n      if (!isExpandedByKey) {\n        isExpandedByKey = cache.isExpandedByKey = {};\n        this.option(\"expandedRowKeys\").forEach(function (key) {\n          isExpandedByKey[key] = true;\n        });\n      }\n\n      return !!isExpandedByKey[key];\n    }\n\n    var indexExpandedNodeKey = gridCoreUtils.getIndexByKey(key, this.option(\"expandedRowKeys\"), null);\n    return indexExpandedNodeKey >= 0;\n  },\n  _changeRowExpandCore: function (key) {\n    var expandedRowKeys = this.option(\"expandedRowKeys\").slice();\n    var indexExpandedNodeKey = gridCoreUtils.getIndexByKey(key, expandedRowKeys, null);\n\n    if (indexExpandedNodeKey < 0) {\n      expandedRowKeys.push(key);\n    } else {\n      expandedRowKeys.splice(indexExpandedNodeKey, 1);\n    }\n\n    this.option(\"expandedRowKeys\", expandedRowKeys);\n  },\n  changeRowExpand: function (key) {\n    this._changeRowExpandCore(key);\n\n    return this._isNodesInitializing ? new Deferred().resolve() : this.load();\n  },\n  getNodeByKey: function (key) {\n    if (this._nodeByKey) {\n      return this._nodeByKey[key];\n    }\n  },\n  getNodeLeafKeys: function () {\n    var that = this;\n    var result = [];\n    var keys = that._rootNode ? [that._rootNode.key] : [];\n    keys.forEach(function (key) {\n      var node = that.getNodeByKey(key);\n      node && treeListCore.foreachNodes([node], function (childNode) {\n        !childNode.children.length && result.push(childNode.key);\n      });\n    });\n    return result;\n  },\n  getChildNodeKeys: function (parentKey) {\n    var node = this.getNodeByKey(parentKey);\n    var childrenKeys = [];\n    node && treeListCore.foreachNodes(node.children, function (childNode) {\n      childrenKeys.push(childNode.key);\n    });\n    return childrenKeys;\n  },\n  loadDescendants: function (keys, childrenOnly) {\n    var that = this;\n    var d = new Deferred();\n    var remoteOperations = that.remoteOperations();\n\n    if (isDefined(keys)) {\n      keys = Array.isArray(keys) ? keys : [keys];\n    } else {\n      keys = that.getNodeLeafKeys();\n    }\n\n    if (!remoteOperations.filtering || !keys.length) {\n      return d.resolve();\n    }\n\n    var loadOptions = that._dataSource._createStoreLoadOptions();\n\n    loadOptions.parentIds = keys;\n    that.load(loadOptions).done(function () {\n      if (!childrenOnly) {\n        var childKeys = function (that, keys) {\n          var childKeys = [];\n          keys.forEach(function (key) {\n            var node = that.getNodeByKey(key);\n            node && node.children.forEach(function (child) {\n              childKeys.push(child.key);\n            });\n          });\n          return childKeys;\n        }(that, keys);\n\n        if (childKeys.length) {\n          that.loadDescendants(childKeys, childrenOnly).done(d.resolve).fail(d.reject);\n          return;\n        }\n      }\n\n      d.resolve();\n    }).fail(d.reject);\n    return d.promise();\n  },\n  forEachNode: function () {\n    var nodes = [];\n    var callback;\n\n    if (1 === arguments.length) {\n      callback = arguments[0];\n      var rootNode = this.getRootNode();\n      nodes = rootNode && rootNode.children || [];\n    } else if (2 === arguments.length) {\n      callback = arguments[1];\n      nodes = arguments[0];\n      nodes = Array.isArray(nodes) ? nodes : [nodes];\n    }\n\n    treeListCore.foreachNodes(nodes, callback);\n  }\n});\nexport default {\n  extend: function (extender) {\n    DataSourceAdapterTreeList = DataSourceAdapterTreeList.inherit(extender);\n  },\n  create: function (component) {\n    return new DataSourceAdapterTreeList(component);\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/tree_list/ui.tree_list.data_source_adapter.js"],"names":["treeListCore","errors","equalByValue","isFunction","isDefined","each","compileGetter","compileSetter","extend","gridCoreUtils","createObjectWithChanges","ArrayStore","query","DataSourceAdapter","Deferred","when","storeHelper","queryByOptions","DEFAULT_KEY_EXPRESSION","isFullBranchFilterMode","that","option","DataSourceAdapterTreeList","inherit","_createKeyGetter","keyExpr","getKeyExpr","_createKeySetter","createParentIdGetter","createParentIdSetter","parentIdExpr","_createItemsGetter","_createHasItemsGetter","hasItemsExpr","_createHasItemsSetter","_updateIndexByKeyObject","items","_indexByKey","index","item","key","_calculateHasItems","node","options","parentIds","storeLoadOptions","hasItems","isFullBranch","_hasItemsGetter","filter","data","_isChildrenLoaded","remoteOperations","filtering","loadOptions","children","length","hasChildren","_fillVisibleItemsByNodes","nodes","result","i","visible","push","isRowExpanded","_convertItemToNode","rootValue","nodeByKey","_keyGetter","parentId","_parentIdGetter","parentNode","parent","_createNodesByItems","visibleItems","visibleByKey","_nodeByKey","rootNode","level","_convertDataToPlainStructure","_itemsGetter","isConverted","_keySetter","_parentIdSetter","childItems","itemsExpr","_createIdFilter","field","keys","parentIdFilters","combineFilters","_customizeRemoteOperations","operationTypes","callBase","apply","arguments","paging","expandVisibleNodes","sorting","_lastLoadOptions","isCustomLoading","_isReload","reload","cachedStoreData","collapseVisibleNodes","_getParentIdsToLoad","parentIdsToLoad","getNodeByKey","_handleCustomizeStoreLoadOptions","expandedRowKeys","concat","cachedPagingData","mergeStoreLoadData","delay","_generateInfoToLoad","needChildren","keyMap","resultKeyMap","resultKeys","needToLoad","_loadParentsOrChildren","needLocalFiltering","d","isRemoteFiltering","maxFilterLengthInRequest","concatLoadedData","loadedData","_cachedStoreData","resolve","cachedNodes","map","id","reduce","filterLength","encodeURI","JSON","stringify","itemData","store","fullData","_dataSource","loadFromStore","done","toArray","fail","reject","_loadParents","_loadChildrenIfNeed","_updateHasItemsMap","_getKeyInfo","keyOf","_applyBatch","changes","baseChanges","forEach","change","type","_applyInsert","_applyRemove","_setHasItems","value","hasItemsSetter","_hasItemsSetter","parentKeyOf","indexOf","Math","min","splice","getChildNodeKeys","_handleDataLoaded","sort","_fillNodes","needToExpand","foreachNodes","_processTreeStructure","_rootNode","Error","_isNodesInitializing","executeAction","root","resultData","_totalItemsCount","_handleDataLoadedCore","filterMode","needLoadParents","call","_handlePush","_ref","reshapeOnPush","_reshapeOnPush","isNeedReshape","init","dataSource","dataStructure","createAction","getRootNode","totalItemsCount","cache","isExpandedByKey","indexExpandedNodeKey","getIndexByKey","_changeRowExpandCore","slice","changeRowExpand","load","getNodeLeafKeys","childNode","parentKey","childrenKeys","loadDescendants","childrenOnly","Array","isArray","_createStoreLoadOptions","childKeys","child","promise","forEachNode","callback","extender","create","component"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/tree_list/ui.tree_list.data_source_adapter.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport treeListCore from \"./ui.tree_list.core\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport query from \"../../data/query\";\r\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar {\r\n    queryByOptions: queryByOptions\r\n} = storeHelper;\r\nvar DEFAULT_KEY_EXPRESSION = \"id\";\r\nvar isFullBranchFilterMode = that => \"fullBranch\" === that.option(\"filterMode\");\r\nvar DataSourceAdapterTreeList = DataSourceAdapter.inherit({\r\n    _createKeyGetter: function() {\r\n        var keyExpr = this.getKeyExpr();\r\n        return compileGetter(keyExpr)\r\n    },\r\n    _createKeySetter: function() {\r\n        var keyExpr = this.getKeyExpr();\r\n        if (isFunction(keyExpr)) {\r\n            return keyExpr\r\n        }\r\n        return compileSetter(keyExpr)\r\n    },\r\n    createParentIdGetter: function() {\r\n        return compileGetter(this.option(\"parentIdExpr\"))\r\n    },\r\n    createParentIdSetter: function() {\r\n        var parentIdExpr = this.option(\"parentIdExpr\");\r\n        if (isFunction(parentIdExpr)) {\r\n            return parentIdExpr\r\n        }\r\n        return compileSetter(parentIdExpr)\r\n    },\r\n    _createItemsGetter: function() {\r\n        return compileGetter(this.option(\"itemsExpr\"))\r\n    },\r\n    _createHasItemsGetter: function() {\r\n        var hasItemsExpr = this.option(\"hasItemsExpr\");\r\n        return hasItemsExpr && compileGetter(hasItemsExpr)\r\n    },\r\n    _createHasItemsSetter: function() {\r\n        var hasItemsExpr = this.option(\"hasItemsExpr\");\r\n        if (isFunction(hasItemsExpr)) {\r\n            return hasItemsExpr\r\n        }\r\n        return hasItemsExpr && compileSetter(hasItemsExpr)\r\n    },\r\n    _updateIndexByKeyObject: function(items) {\r\n        var that = this;\r\n        that._indexByKey = {};\r\n        each(items, (function(index, item) {\r\n            that._indexByKey[item.key] = index\r\n        }))\r\n    },\r\n    _calculateHasItems: function(node, options) {\r\n        var parentIds = options.storeLoadOptions.parentIds;\r\n        var hasItems;\r\n        var isFullBranch = isFullBranchFilterMode(this);\r\n        if (this._hasItemsGetter && (parentIds || !options.storeLoadOptions.filter || isFullBranch)) {\r\n            hasItems = this._hasItemsGetter(node.data)\r\n        }\r\n        if (void 0 === hasItems) {\r\n            if (!this._isChildrenLoaded[node.key] && options.remoteOperations.filtering && (parentIds || isFullBranch)) {\r\n                hasItems = true\r\n            } else if (options.loadOptions.filter && !options.remoteOperations.filtering && isFullBranch) {\r\n                hasItems = node.children.length\r\n            } else {\r\n                hasItems = node.hasChildren\r\n            }\r\n        }\r\n        return !!hasItems\r\n    },\r\n    _fillVisibleItemsByNodes: function(nodes, options, result) {\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (nodes[i].visible) {\r\n                result.push(nodes[i])\r\n            }\r\n            if ((this.isRowExpanded(nodes[i].key, options) || !nodes[i].visible) && nodes[i].hasChildren && nodes[i].children.length) {\r\n                this._fillVisibleItemsByNodes(nodes[i].children, options, result)\r\n            }\r\n        }\r\n    },\r\n    _convertItemToNode: function(item, rootValue, nodeByKey) {\r\n        var key = this._keyGetter(item);\r\n        var parentId = this._parentIdGetter(item);\r\n        parentId = isDefined(parentId) ? parentId : rootValue;\r\n        var parentNode = nodeByKey[parentId] = nodeByKey[parentId] || {\r\n            key: parentId,\r\n            children: []\r\n        };\r\n        var node = nodeByKey[key] = nodeByKey[key] || {\r\n            key: key,\r\n            children: []\r\n        };\r\n        node.data = item;\r\n        node.parent = parentNode;\r\n        return node\r\n    },\r\n    _createNodesByItems: function(items, visibleItems) {\r\n        var rootValue = this.option(\"rootValue\");\r\n        var visibleByKey = {};\r\n        var nodeByKey = this._nodeByKey = {};\r\n        var i;\r\n        if (visibleItems) {\r\n            for (i = 0; i < visibleItems.length; i++) {\r\n                visibleByKey[this._keyGetter(visibleItems[i])] = true\r\n            }\r\n        }\r\n        for (i = 0; i < items.length; i++) {\r\n            var node = this._convertItemToNode(items[i], rootValue, nodeByKey);\r\n            if (void 0 === node.key) {\r\n                return\r\n            }\r\n            node.visible = !visibleItems || !!visibleByKey[node.key];\r\n            if (node.parent) {\r\n                node.parent.children.push(node)\r\n            }\r\n        }\r\n        var rootNode = nodeByKey[rootValue] || {\r\n            key: rootValue,\r\n            children: []\r\n        };\r\n        rootNode.level = -1;\r\n        return rootNode\r\n    },\r\n    _convertDataToPlainStructure: function(data, parentId, result) {\r\n        var key;\r\n        if (this._itemsGetter && !data.isConverted) {\r\n            result = result || [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                var item = createObjectWithChanges(data[i]);\r\n                key = this._keyGetter(item);\r\n                if (void 0 === key) {\r\n                    key = result.length + 1;\r\n                    this._keySetter(item, key)\r\n                }\r\n                this._parentIdSetter(item, void 0 === parentId ? this.option(\"rootValue\") : parentId);\r\n                result.push(item);\r\n                var childItems = this._itemsGetter(item);\r\n                if (childItems && childItems.length) {\r\n                    this._convertDataToPlainStructure(childItems, key, result);\r\n                    var itemsExpr = this.option(\"itemsExpr\");\r\n                    if (!isFunction(itemsExpr)) {\r\n                        delete item[itemsExpr]\r\n                    }\r\n                }\r\n            }\r\n            result.isConverted = true;\r\n            return result\r\n        }\r\n        return data\r\n    },\r\n    _createIdFilter: function(field, keys) {\r\n        var parentIdFilters = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            parentIdFilters.push([field, \"=\", keys[i]])\r\n        }\r\n        return gridCoreUtils.combineFilters(parentIdFilters, \"or\")\r\n    },\r\n    _customizeRemoteOperations: function(options, operationTypes) {\r\n        this.callBase.apply(this, arguments);\r\n        options.remoteOperations.paging = false;\r\n        var expandVisibleNodes = false;\r\n        if (this.option(\"autoExpandAll\")) {\r\n            options.remoteOperations.sorting = false;\r\n            options.remoteOperations.filtering = false;\r\n            if ((!this._lastLoadOptions || operationTypes.filtering && !options.storeLoadOptions.filter) && !options.isCustomLoading) {\r\n                expandVisibleNodes = true\r\n            }\r\n        }\r\n        if (!options.isCustomLoading) {\r\n            this._isReload = this._isReload || operationTypes.reload;\r\n            if (!options.cachedStoreData) {\r\n                this._isChildrenLoaded = {};\r\n                if (this._isReload) {\r\n                    this._nodeByKey = {}\r\n                }\r\n            }\r\n            if (this.option(\"expandNodesOnFiltering\") && (operationTypes.filtering || this._isReload && options.storeLoadOptions.filter)) {\r\n                if (options.storeLoadOptions.filter) {\r\n                    expandVisibleNodes = true\r\n                } else {\r\n                    options.collapseVisibleNodes = true\r\n                }\r\n            }\r\n        }\r\n        options.expandVisibleNodes = expandVisibleNodes\r\n    },\r\n    _getParentIdsToLoad: function(parentIds) {\r\n        var parentIdsToLoad = [];\r\n        for (var i = 0; i < parentIds.length; i++) {\r\n            var node = this.getNodeByKey(parentIds[i]);\r\n            if (!node || node.hasChildren && !node.children.length) {\r\n                parentIdsToLoad.push(parentIds[i])\r\n            }\r\n        }\r\n        return parentIdsToLoad\r\n    },\r\n    _handleCustomizeStoreLoadOptions: function(options) {\r\n        var rootValue = this.option(\"rootValue\");\r\n        var parentIdExpr = this.option(\"parentIdExpr\");\r\n        var parentIds = options.storeLoadOptions.parentIds;\r\n        if (parentIds) {\r\n            options.isCustomLoading = false\r\n        }\r\n        this.callBase.apply(this, arguments);\r\n        if (options.remoteOperations.filtering && !options.isCustomLoading) {\r\n            if (isFullBranchFilterMode(this) && options.cachedStoreData || !options.storeLoadOptions.filter) {\r\n                var expandedRowKeys = options.collapseVisibleNodes ? [] : this.option(\"expandedRowKeys\");\r\n                parentIds = [rootValue].concat(expandedRowKeys).concat(parentIds || []);\r\n                var parentIdsToLoad = options.data ? this._getParentIdsToLoad(parentIds) : parentIds;\r\n                if (parentIdsToLoad.length) {\r\n                    options.cachedPagingData = void 0;\r\n                    options.data = void 0;\r\n                    options.mergeStoreLoadData = true;\r\n                    options.delay = this.option(\"loadingTimeout\")\r\n                }\r\n                options.storeLoadOptions.parentIds = parentIdsToLoad;\r\n                options.storeLoadOptions.filter = this._createIdFilter(parentIdExpr, parentIdsToLoad)\r\n            }\r\n        }\r\n    },\r\n    _generateInfoToLoad: function(data, needChildren) {\r\n        var key;\r\n        var keyMap = {};\r\n        var resultKeyMap = {};\r\n        var resultKeys = [];\r\n        var rootValue = this.option(\"rootValue\");\r\n        var i;\r\n        for (i = 0; i < data.length; i++) {\r\n            key = needChildren ? this._parentIdGetter(data[i]) : this._keyGetter(data[i]);\r\n            keyMap[key] = true\r\n        }\r\n        for (i = 0; i < data.length; i++) {\r\n            key = needChildren ? this._keyGetter(data[i]) : this._parentIdGetter(data[i]);\r\n            var needToLoad = needChildren ? this.isRowExpanded(key) : key !== rootValue;\r\n            if (!keyMap[key] && !resultKeyMap[key] && needToLoad) {\r\n                resultKeyMap[key] = true;\r\n                resultKeys.push(key)\r\n            }\r\n        }\r\n        return {\r\n            keyMap: resultKeyMap,\r\n            keys: resultKeys\r\n        }\r\n    },\r\n    _loadParentsOrChildren: function(data, options, needChildren) {\r\n        var that = this;\r\n        var filter;\r\n        var needLocalFiltering;\r\n        var {\r\n            keys: keys,\r\n            keyMap: keyMap\r\n        } = that._generateInfoToLoad(data, needChildren);\r\n        var d = new Deferred;\r\n        var isRemoteFiltering = options.remoteOperations.filtering;\r\n        var maxFilterLengthInRequest = that.option(\"maxFilterLengthInRequest\");\r\n        var loadOptions = isRemoteFiltering ? options.storeLoadOptions : options.loadOptions;\r\n\r\n        function concatLoadedData(loadedData) {\r\n            if (isRemoteFiltering) {\r\n                that._cachedStoreData = that._cachedStoreData.concat(loadedData)\r\n            }\r\n            return data.concat(loadedData)\r\n        }\r\n        if (!keys.length) {\r\n            return d.resolve(data)\r\n        }\r\n        var cachedNodes = keys.map(id => this.getNodeByKey(id)).filter(node => node && node.data);\r\n        if (cachedNodes.length === keys.length) {\r\n            if (needChildren) {\r\n                cachedNodes = cachedNodes.reduce((result, node) => result.concat(node.children), [])\r\n            }\r\n            if (cachedNodes.length) {\r\n                return that._loadParentsOrChildren(concatLoadedData(cachedNodes.map(node => node.data)), options, needChildren)\r\n            }\r\n        }\r\n        var keyExpr = needChildren ? that.option(\"parentIdExpr\") : that.getKeyExpr();\r\n        filter = that._createIdFilter(keyExpr, keys);\r\n        var filterLength = encodeURI(JSON.stringify(filter)).length;\r\n        if (filterLength > maxFilterLengthInRequest) {\r\n            filter = function(itemData) {\r\n                return keyMap[needChildren ? that._parentIdGetter(itemData) : that._keyGetter(itemData)]\r\n            };\r\n            needLocalFiltering = isRemoteFiltering\r\n        }\r\n        loadOptions = extend({}, loadOptions, {\r\n            filter: !needLocalFiltering ? filter : null\r\n        });\r\n        var store = options.fullData ? new ArrayStore(options.fullData) : that._dataSource.store();\r\n        that.loadFromStore(loadOptions, store).done((function(loadedData) {\r\n            if (loadedData.length) {\r\n                if (needLocalFiltering) {\r\n                    loadedData = query(loadedData).filter(filter).toArray()\r\n                }\r\n                that._loadParentsOrChildren(concatLoadedData(loadedData), options, needChildren).done(d.resolve).fail(d.reject)\r\n            } else {\r\n                d.resolve(data)\r\n            }\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    _loadParents: function(data, options) {\r\n        return this._loadParentsOrChildren(data, options)\r\n    },\r\n    _loadChildrenIfNeed: function(data, options) {\r\n        if (isFullBranchFilterMode(this)) {\r\n            return this._loadParentsOrChildren(data, options, true)\r\n        }\r\n        return when(data)\r\n    },\r\n    _updateHasItemsMap: function(options) {\r\n        var parentIds = options.storeLoadOptions.parentIds;\r\n        if (parentIds) {\r\n            for (var i = 0; i < parentIds.length; i++) {\r\n                this._isChildrenLoaded[parentIds[i]] = true\r\n            }\r\n        }\r\n    },\r\n    _getKeyInfo: function() {\r\n        return {\r\n            key: () => \"key\",\r\n            keyOf: data => data.key\r\n        }\r\n    },\r\n    _applyBatch: function(changes) {\r\n        var baseChanges = [];\r\n        changes.forEach(change => {\r\n            if (\"insert\" === change.type) {\r\n                baseChanges = baseChanges.concat(this._applyInsert(change))\r\n            } else if (\"remove\" === change.type) {\r\n                baseChanges = baseChanges.concat(this._applyRemove(change))\r\n            } else if (\"update\" === change.type) {\r\n                baseChanges.push({\r\n                    type: change.type,\r\n                    key: change.key,\r\n                    data: {\r\n                        data: change.data\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        this.callBase(baseChanges)\r\n    },\r\n    _setHasItems: function(node, value) {\r\n        var hasItemsSetter = this._hasItemsSetter;\r\n        node.hasChildren = value;\r\n        if (hasItemsSetter && node.data) {\r\n            hasItemsSetter(node.data, value)\r\n        }\r\n    },\r\n    _applyInsert: function(change) {\r\n        var baseChanges = [];\r\n        var parentId = this.parentKeyOf(change.data);\r\n        var parentNode = this.getNodeByKey(parentId);\r\n        if (parentNode) {\r\n            var rootValue = this.option(\"rootValue\");\r\n            var node = this._convertItemToNode(change.data, rootValue, this._nodeByKey);\r\n            node.hasChildren = false;\r\n            node.level = parentNode.level + 1;\r\n            node.visible = true;\r\n            parentNode.children.push(node);\r\n            this._isChildrenLoaded[node.key] = true;\r\n            this._setHasItems(parentNode, true);\r\n            if ((!parentNode.parent || this.isRowExpanded(parentNode.key)) && void 0 !== change.index) {\r\n                var index = this.items().indexOf(parentNode) + 1;\r\n                index += change.index >= 0 ? Math.min(change.index, parentNode.children.length) : parentNode.children.length;\r\n                baseChanges.push({\r\n                    type: change.type,\r\n                    data: node,\r\n                    index: index\r\n                })\r\n            }\r\n        }\r\n        return baseChanges\r\n    },\r\n    _applyRemove: function(change) {\r\n        var baseChanges = [];\r\n        var node = this.getNodeByKey(change.key);\r\n        var parentNode = node && node.parent;\r\n        if (parentNode) {\r\n            var index = parentNode.children.indexOf(node);\r\n            if (index >= 0) {\r\n                parentNode.children.splice(index, 1);\r\n                if (!parentNode.children.length) {\r\n                    this._setHasItems(parentNode, false)\r\n                }\r\n                baseChanges.push(change);\r\n                baseChanges = baseChanges.concat(this.getChildNodeKeys(change.key).map(key => ({\r\n                    type: change.type,\r\n                    key: key\r\n                })))\r\n            }\r\n        }\r\n        return baseChanges\r\n    },\r\n    _handleDataLoaded: function(options) {\r\n        var data = options.data = this._convertDataToPlainStructure(options.data);\r\n        if (!options.remoteOperations.filtering && options.loadOptions.filter) {\r\n            options.fullData = queryByOptions(query(options.data), {\r\n                sort: options.loadOptions && options.loadOptions.sort\r\n            }).toArray()\r\n        }\r\n        this._updateHasItemsMap(options);\r\n        this.callBase(options);\r\n        if (data.isConverted && this._cachedStoreData) {\r\n            this._cachedStoreData.isConverted = true\r\n        }\r\n    },\r\n    _fillNodes: function(nodes, options, expandedRowKeys, level) {\r\n        var isFullBranch = isFullBranchFilterMode(this);\r\n        level = level || 0;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            var needToExpand = false;\r\n            this._fillNodes(nodes[i].children, options, expandedRowKeys, level + 1);\r\n            node.level = level;\r\n            node.hasChildren = this._calculateHasItems(node, options);\r\n            if (node.visible && node.hasChildren) {\r\n                if (isFullBranch) {\r\n                    if (node.children.filter(node => node.visible).length) {\r\n                        needToExpand = true\r\n                    } else if (node.children.length) {\r\n                        treeListCore.foreachNodes(node.children, (function(node) {\r\n                            node.visible = true\r\n                        }))\r\n                    }\r\n                } else {\r\n                    needToExpand = true\r\n                }\r\n                if (options.expandVisibleNodes && needToExpand) {\r\n                    expandedRowKeys.push(node.key)\r\n                }\r\n            }\r\n            if (node.visible || node.hasChildren) {\r\n                node.parent.hasChildren = true\r\n            }\r\n        }\r\n    },\r\n    _processTreeStructure: function(options, visibleItems) {\r\n        var data = options.data;\r\n        var parentIds = options.storeLoadOptions.parentIds;\r\n        var expandedRowKeys = [];\r\n        if (parentIds && parentIds.length || this._isReload) {\r\n            if (options.fullData && options.fullData.length > options.data.length) {\r\n                data = options.fullData;\r\n                visibleItems = visibleItems || options.data\r\n            }\r\n            this._rootNode = this._createNodesByItems(data, visibleItems);\r\n            if (!this._rootNode) {\r\n                options.data = (new Deferred).reject(errors.Error(\"E1046\", this.getKeyExpr()));\r\n                return\r\n            }\r\n            this._fillNodes(this._rootNode.children, options, expandedRowKeys);\r\n            this._isNodesInitializing = true;\r\n            if (options.collapseVisibleNodes || expandedRowKeys.length) {\r\n                this.option(\"expandedRowKeys\", expandedRowKeys)\r\n            }\r\n            this._isReload = false;\r\n            this.executeAction(\"onNodesInitialized\", {\r\n                root: this._rootNode\r\n            });\r\n            this._isNodesInitializing = false\r\n        }\r\n        var resultData = [];\r\n        this._fillVisibleItemsByNodes(this._rootNode.children, options, resultData);\r\n        options.data = resultData;\r\n        this._totalItemsCount = resultData.length\r\n    },\r\n    _handleDataLoadedCore: function(options) {\r\n        var that = this;\r\n        var data = options.data;\r\n        var callBase = that.callBase;\r\n        var filter = options.storeLoadOptions.filter || options.loadOptions.filter;\r\n        var filterMode = that.option(\"filterMode\");\r\n        var visibleItems;\r\n        var parentIds = options.storeLoadOptions.parentIds;\r\n        var needLoadParents = filter && (!parentIds || !parentIds.length) && \"standard\" !== filterMode;\r\n        if (!options.isCustomLoading) {\r\n            if (needLoadParents) {\r\n                var d = options.data = new Deferred;\r\n                if (\"matchOnly\" === filterMode) {\r\n                    visibleItems = data\r\n                }\r\n                return that._loadParents(data, options).done((function(data) {\r\n                    that._loadChildrenIfNeed(data, options).done(data => {\r\n                        options.data = data;\r\n                        that._processTreeStructure(options, visibleItems);\r\n                        callBase.call(that, options);\r\n                        d.resolve(options.data)\r\n                    })\r\n                })).fail(d.reject)\r\n            } else {\r\n                that._processTreeStructure(options)\r\n            }\r\n        }\r\n        that.callBase(options)\r\n    },\r\n    _handlePush: function(_ref) {\r\n        var {\r\n            changes: changes\r\n        } = _ref;\r\n        var reshapeOnPush = this._dataSource._reshapeOnPush;\r\n        var isNeedReshape = reshapeOnPush && !!changes.length;\r\n        if (isNeedReshape) {\r\n            this._isReload = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    init: function(dataSource, remoteOperations) {\r\n        this.callBase.apply(this, arguments);\r\n        var dataStructure = this.option(\"dataStructure\");\r\n        this._keyGetter = this._createKeyGetter();\r\n        this._parentIdGetter = this.createParentIdGetter();\r\n        this._hasItemsGetter = this._createHasItemsGetter();\r\n        this._hasItemsSetter = this._createHasItemsSetter();\r\n        if (\"tree\" === dataStructure) {\r\n            this._itemsGetter = this._createItemsGetter();\r\n            this._keySetter = this._createKeySetter();\r\n            this._parentIdSetter = this.createParentIdSetter()\r\n        }\r\n        this._nodeByKey = {};\r\n        this._isChildrenLoaded = {};\r\n        this._totalItemsCount = 0;\r\n        this.createAction(\"onNodesInitialized\")\r\n    },\r\n    getKeyExpr: function() {\r\n        var store = this.store();\r\n        var key = store && store.key();\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        if (isDefined(key) && isDefined(keyExpr)) {\r\n            if (!equalByValue(key, keyExpr)) {\r\n                throw errors.Error(\"E1044\")\r\n            }\r\n        }\r\n        return key || keyExpr || DEFAULT_KEY_EXPRESSION\r\n    },\r\n    keyOf: function(data) {\r\n        return this._keyGetter && this._keyGetter(data)\r\n    },\r\n    parentKeyOf: function(data) {\r\n        return this._parentIdGetter && this._parentIdGetter(data)\r\n    },\r\n    getRootNode: function() {\r\n        return this._rootNode\r\n    },\r\n    totalItemsCount: function() {\r\n        return this._totalItemsCount\r\n    },\r\n    isRowExpanded: function(key, cache) {\r\n        if (cache) {\r\n            var isExpandedByKey = cache.isExpandedByKey;\r\n            if (!isExpandedByKey) {\r\n                isExpandedByKey = cache.isExpandedByKey = {};\r\n                this.option(\"expandedRowKeys\").forEach((function(key) {\r\n                    isExpandedByKey[key] = true\r\n                }))\r\n            }\r\n            return !!isExpandedByKey[key]\r\n        }\r\n        var indexExpandedNodeKey = gridCoreUtils.getIndexByKey(key, this.option(\"expandedRowKeys\"), null);\r\n        return indexExpandedNodeKey >= 0\r\n    },\r\n    _changeRowExpandCore: function(key) {\r\n        var expandedRowKeys = this.option(\"expandedRowKeys\").slice();\r\n        var indexExpandedNodeKey = gridCoreUtils.getIndexByKey(key, expandedRowKeys, null);\r\n        if (indexExpandedNodeKey < 0) {\r\n            expandedRowKeys.push(key)\r\n        } else {\r\n            expandedRowKeys.splice(indexExpandedNodeKey, 1)\r\n        }\r\n        this.option(\"expandedRowKeys\", expandedRowKeys)\r\n    },\r\n    changeRowExpand: function(key) {\r\n        this._changeRowExpandCore(key);\r\n        return this._isNodesInitializing ? (new Deferred).resolve() : this.load()\r\n    },\r\n    getNodeByKey: function(key) {\r\n        if (this._nodeByKey) {\r\n            return this._nodeByKey[key]\r\n        }\r\n    },\r\n    getNodeLeafKeys: function() {\r\n        var that = this;\r\n        var result = [];\r\n        var keys = that._rootNode ? [that._rootNode.key] : [];\r\n        keys.forEach((function(key) {\r\n            var node = that.getNodeByKey(key);\r\n            node && treeListCore.foreachNodes([node], (function(childNode) {\r\n                !childNode.children.length && result.push(childNode.key)\r\n            }))\r\n        }));\r\n        return result\r\n    },\r\n    getChildNodeKeys: function(parentKey) {\r\n        var node = this.getNodeByKey(parentKey);\r\n        var childrenKeys = [];\r\n        node && treeListCore.foreachNodes(node.children, (function(childNode) {\r\n            childrenKeys.push(childNode.key)\r\n        }));\r\n        return childrenKeys\r\n    },\r\n    loadDescendants: function(keys, childrenOnly) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var remoteOperations = that.remoteOperations();\r\n        if (isDefined(keys)) {\r\n            keys = Array.isArray(keys) ? keys : [keys]\r\n        } else {\r\n            keys = that.getNodeLeafKeys()\r\n        }\r\n        if (!remoteOperations.filtering || !keys.length) {\r\n            return d.resolve()\r\n        }\r\n        var loadOptions = that._dataSource._createStoreLoadOptions();\r\n        loadOptions.parentIds = keys;\r\n        that.load(loadOptions).done((function() {\r\n            if (!childrenOnly) {\r\n                var childKeys = function(that, keys) {\r\n                    var childKeys = [];\r\n                    keys.forEach((function(key) {\r\n                        var node = that.getNodeByKey(key);\r\n                        node && node.children.forEach((function(child) {\r\n                            childKeys.push(child.key)\r\n                        }))\r\n                    }));\r\n                    return childKeys\r\n                }(that, keys);\r\n                if (childKeys.length) {\r\n                    that.loadDescendants(childKeys, childrenOnly).done(d.resolve).fail(d.reject);\r\n                    return\r\n                }\r\n            }\r\n            d.resolve()\r\n        })).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    forEachNode: function() {\r\n        var nodes = [];\r\n        var callback;\r\n        if (1 === arguments.length) {\r\n            callback = arguments[0];\r\n            var rootNode = this.getRootNode();\r\n            nodes = rootNode && rootNode.children || []\r\n        } else if (2 === arguments.length) {\r\n            callback = arguments[1];\r\n            nodes = arguments[0];\r\n            nodes = Array.isArray(nodes) ? nodes : [nodes]\r\n        }\r\n        treeListCore.foreachNodes(nodes, callback)\r\n    }\r\n});\r\nexport default {\r\n    extend: function(extender) {\r\n        DataSourceAdapterTreeList = DataSourceAdapterTreeList.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new DataSourceAdapterTreeList(component)\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}