{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\dataSource\\sql\\connectionOptions.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionOptions = void 0;\n\nvar ko = require(\"knockout\");\n\nvar parsers_1 = require(\"../../../core/utils/parsers\");\n\nvar serializer_1 = require(\"../../../serializer/serializer\");\n\nvar connectionOptionsSerializationInfo = [{\n  propertyName: 'closeConnection',\n  modelName: '@CloseConnection',\n  from: parsers_1.parseBool\n}, {\n  propertyName: 'commandTimeout',\n  modelName: '@DbCommandTimeout',\n  from: function (s) {\n    var val = parseInt(s);\n    if (isNaN(val)) val = null;\n    return ko.observable(val);\n  },\n  defaultVal: null\n}];\n\nvar ConnectionOptions = function () {\n  function ConnectionOptions(model, serializer) {\n    this.closeConnection = ko.observable(true);\n    this.commandTimeout = ko.observable(null);\n    serializer = serializer || new serializer_1.ModelSerializer();\n    serializer.deserialize(this, model);\n  }\n\n  ConnectionOptions.prototype.getInfo = function () {\n    return connectionOptionsSerializationInfo;\n  };\n\n  return ConnectionOptions;\n}();\n\nexports.ConnectionOptions = ConnectionOptions;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/dataSource/sql/connectionOptions.js"],"names":["Object","defineProperty","exports","value","ConnectionOptions","ko","require","parsers_1","serializer_1","connectionOptionsSerializationInfo","propertyName","modelName","from","parseBool","s","val","parseInt","isNaN","observable","defaultVal","model","serializer","closeConnection","commandTimeout","ModelSerializer","deserialize","prototype","getInfo"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,6BAAD,CAAvB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,gCAAD,CAA1B;;AACA,IAAIG,kCAAkC,GAAG,CACrC;AAAEC,EAAAA,YAAY,EAAE,iBAAhB;AAAmCC,EAAAA,SAAS,EAAE,kBAA9C;AAAkEC,EAAAA,IAAI,EAAEL,SAAS,CAACM;AAAlF,CADqC,EAErC;AAAEH,EAAAA,YAAY,EAAE,gBAAhB;AAAkCC,EAAAA,SAAS,EAAE,mBAA7C;AAAkEC,EAAAA,IAAI,EAAE,UAAUE,CAAV,EAAa;AAAE,QAAIC,GAAG,GAAGC,QAAQ,CAACF,CAAD,CAAlB;AAAuB,QAAIG,KAAK,CAACF,GAAD,CAAT,EACtGA,GAAG,GAAG,IAAN;AAAY,WAAOV,EAAE,CAACa,UAAH,CAAcH,GAAd,CAAP;AAA4B,GADhD;AACkDI,EAAAA,UAAU,EAAE;AAD9D,CAFqC,CAAzC;;AAKA,IAAIf,iBAAiB,GAAI,YAAY;AACjC,WAASA,iBAAT,CAA2BgB,KAA3B,EAAkCC,UAAlC,EAA8C;AAC1C,SAAKC,eAAL,GAAuBjB,EAAE,CAACa,UAAH,CAAc,IAAd,CAAvB;AACA,SAAKK,cAAL,GAAsBlB,EAAE,CAACa,UAAH,CAAc,IAAd,CAAtB;AACAG,IAAAA,UAAU,GAAGA,UAAU,IAAI,IAAIb,YAAY,CAACgB,eAAjB,EAA3B;AACAH,IAAAA,UAAU,CAACI,WAAX,CAAuB,IAAvB,EAA6BL,KAA7B;AACH;;AACDhB,EAAAA,iBAAiB,CAACsB,SAAlB,CAA4BC,OAA5B,GAAsC,YAAY;AAC9C,WAAOlB,kCAAP;AACH,GAFD;;AAGA,SAAOL,iBAAP;AACH,CAXwB,EAAzB;;AAYAF,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\dataSource\\sql\\connectionOptions.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionOptions = void 0;\nvar ko = require(\"knockout\");\nvar parsers_1 = require(\"../../../core/utils/parsers\");\nvar serializer_1 = require(\"../../../serializer/serializer\");\nvar connectionOptionsSerializationInfo = [\n    { propertyName: 'closeConnection', modelName: '@CloseConnection', from: parsers_1.parseBool },\n    { propertyName: 'commandTimeout', modelName: '@DbCommandTimeout', from: function (s) { var val = parseInt(s); if (isNaN(val))\n            val = null; return ko.observable(val); }, defaultVal: null },\n];\nvar ConnectionOptions = (function () {\n    function ConnectionOptions(model, serializer) {\n        this.closeConnection = ko.observable(true);\n        this.commandTimeout = ko.observable(null);\n        serializer = serializer || new serializer_1.ModelSerializer();\n        serializer.deserialize(this, model);\n    }\n    ConnectionOptions.prototype.getInfo = function () {\n        return connectionOptionsSerializationInfo;\n    };\n    return ConnectionOptions;\n}());\nexports.ConnectionOptions = ConnectionOptions;\n"]},"metadata":{},"sourceType":"script"}