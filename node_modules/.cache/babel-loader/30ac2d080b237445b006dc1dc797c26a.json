{"ast":null,"code":"/**\n* DevExpress Analytics (widgets\\filtereditor\\operators\\aggregateOperandSurface.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggregateOperandSurface = void 0;\n\nvar ko = require(\"knockout\");\n\nvar criteriaOperatorSurface_1 = require(\"./criteriaOperatorSurface\");\n\nvar unaryOperandSurface_1 = require(\"./unaryOperandSurface\");\n\nvar AggregateOperandSurface = function (_super) {\n  __extends(AggregateOperandSurface, _super);\n\n  function AggregateOperandSurface(operator, parent, fieldListProvider, path) {\n    var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;\n\n    _this.contentTemplateName = 'dx-filtereditor-aggregate';\n    _this.property = ko.observable(null);\n    _this.aggregatedExpression = ko.observable(null);\n    _this.condition = ko.observable(null);\n\n    _this.property(_this._createLeftPartProperty(operator.property));\n\n    var childPath = ko.computed(function () {\n      return _this.path() + '.' + _this.property().propertyName();\n    });\n\n    _this._disposables.push(childPath);\n\n    if (operator.aggregatedExpression) {\n      _this.aggregatedExpression(_this.createChildSurface(operator.aggregatedExpression, childPath));\n\n      _this.templateName = 'dx-filtereditor-aggregate-common';\n    }\n\n    if (operator.operatorType === 'Count') {\n      _this.templateName = 'dx-filtereditor-aggregate-common';\n    }\n\n    var surface = _this.createChildSurface(operator.condition, childPath);\n\n    surface.canRemove = false;\n\n    if (surface instanceof unaryOperandSurface_1.UnaryOperandSurface) {\n      surface.operand().canRemove = false;\n    }\n\n    _this.condition(surface);\n\n    _this.change = function (type, surface) {\n      if (surface) {\n        var newModel = _this.model.change(type, surface.model);\n\n        var condition = _this.createChildSurface(newModel, childPath);\n\n        condition.canRemove = false;\n\n        if (condition instanceof unaryOperandSurface_1.UnaryOperandSurface) {\n          condition.operand().canRemove = false;\n        }\n\n        _this.condition(condition);\n      } else {\n        if (_this.operatorType() === 'Exists' || _this.operatorType() === 'Count') {\n          _this.parent.change(type, _this);\n        } else {\n          if (type && (type.value === 'Exists' || type.value === 'Count')) {\n            _this.parent.change(type, _this);\n          } else {\n            _super.prototype.change.call(_this, type, surface);\n          }\n        }\n      }\n\n      _this.helper.onChange();\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(AggregateOperandSurface.prototype, \"leftPart\", {\n    get: function () {\n      return this.property && this.property();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AggregateOperandSurface.prototype, \"rightPart\", {\n    get: function () {\n      return this.aggregatedExpression();\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AggregateOperandSurface.prototype.dispose = function () {\n    this.property().dispose();\n    this.condition().dispose();\n    this.aggregatedExpression() && this.aggregatedExpression().dispose();\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return AggregateOperandSurface;\n}(criteriaOperatorSurface_1.CriteriaOperatorSurface);\n\nexports.AggregateOperandSurface = AggregateOperandSurface;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/widgets/filtereditor/operators/aggregateOperandSurface.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","AggregateOperandSurface","ko","require","criteriaOperatorSurface_1","unaryOperandSurface_1","_super","operator","parent","fieldListProvider","path","_this","contentTemplateName","property","observable","aggregatedExpression","condition","_createLeftPartProperty","childPath","computed","propertyName","_disposables","push","createChildSurface","templateName","operatorType","surface","canRemove","UnaryOperandSurface","operand","change","type","newModel","model","helper","onChange","get","enumerable","configurable","dispose","CriteriaOperatorSurface"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (widgets\\filtereditor\\operators\\aggregateOperandSurface.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregateOperandSurface = void 0;\nvar ko = require(\"knockout\");\nvar criteriaOperatorSurface_1 = require(\"./criteriaOperatorSurface\");\nvar unaryOperandSurface_1 = require(\"./unaryOperandSurface\");\nvar AggregateOperandSurface = (function (_super) {\n    __extends(AggregateOperandSurface, _super);\n    function AggregateOperandSurface(operator, parent, fieldListProvider, path) {\n        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;\n        _this.contentTemplateName = 'dx-filtereditor-aggregate';\n        _this.property = ko.observable(null);\n        _this.aggregatedExpression = ko.observable(null);\n        _this.condition = ko.observable(null);\n        _this.property(_this._createLeftPartProperty(operator.property));\n        var childPath = ko.computed(function () {\n            return _this.path() + '.' + _this.property().propertyName();\n        });\n        _this._disposables.push(childPath);\n        if (operator.aggregatedExpression) {\n            _this.aggregatedExpression(_this.createChildSurface(operator.aggregatedExpression, childPath));\n            _this.templateName = 'dx-filtereditor-aggregate-common';\n        }\n        if (operator.operatorType === 'Count') {\n            _this.templateName = 'dx-filtereditor-aggregate-common';\n        }\n        var surface = _this.createChildSurface(operator.condition, childPath);\n        surface.canRemove = false;\n        if (surface instanceof unaryOperandSurface_1.UnaryOperandSurface) {\n            surface.operand().canRemove = false;\n        }\n        _this.condition(surface);\n        _this.change = function (type, surface) {\n            if (surface) {\n                var newModel = _this.model.change(type, surface.model);\n                var condition = _this.createChildSurface(newModel, childPath);\n                condition.canRemove = false;\n                if (condition instanceof unaryOperandSurface_1.UnaryOperandSurface) {\n                    condition.operand().canRemove = false;\n                }\n                _this.condition(condition);\n            }\n            else {\n                if (_this.operatorType() === 'Exists' || _this.operatorType() === 'Count') {\n                    _this.parent.change(type, _this);\n                }\n                else {\n                    if (type && (type.value === 'Exists' || type.value === 'Count')) {\n                        _this.parent.change(type, _this);\n                    }\n                    else {\n                        _super.prototype.change.call(_this, type, surface);\n                    }\n                }\n            }\n            _this.helper.onChange();\n        };\n        return _this;\n    }\n    Object.defineProperty(AggregateOperandSurface.prototype, \"leftPart\", {\n        get: function () {\n            return this.property && this.property();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AggregateOperandSurface.prototype, \"rightPart\", {\n        get: function () {\n            return this.aggregatedExpression();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AggregateOperandSurface.prototype.dispose = function () {\n        this.property().dispose();\n        this.condition().dispose();\n        this.aggregatedExpression() && this.aggregatedExpression().dispose();\n        _super.prototype.dispose.call(this);\n    };\n    return AggregateOperandSurface;\n}(criteriaOperatorSurface_1.CriteriaOperatorSurface));\nexports.AggregateOperandSurface = AggregateOperandSurface;\n"]},"metadata":{},"sourceType":"script"}