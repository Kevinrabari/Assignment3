{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.field_chooser_base.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport ArrayStore from \"../../data/array_store\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { noop } from \"../../core/utils/common\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each, map } from \"../../core/utils/iterator\";\nimport localizationMessage from \"../../localization/message\";\nimport registerComponent from \"../../core/component_registrator\";\nimport Widget from \"../widget/ui.widget\";\nimport { HeaderFilterView as HeaderFilterViewBase, updateHeaderFilterItemSelectionState, headerFilterMixin } from \"../grid_core/ui.grid_core.header_filter_core\";\nimport columnStateMixin from \"../grid_core/ui.grid_core.column_state_mixin\";\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\nimport { foreachTree, createPath } from \"./ui.pivot_grid.utils\";\nimport Sortable from \"./ui.sortable\";\nimport { Deferred } from \"../../core/utils/deferred\";\nvar IE_FIELD_WIDTH_CORRECTION = 1;\nvar DIV = \"<div>\";\nvar HeaderFilterView = HeaderFilterViewBase.inherit({\n  _getSearchExpr: function (options) {\n    options.useDefaultSearchExpr = true;\n    return this.callBase(options);\n  }\n});\n\nvar processItems = function (groupItems, field) {\n  var filterValues = [];\n  var isTree = !!field.groupName;\n  var isExcludeFilterType = \"exclude\" === field.filterType;\n\n  if (field.filterValues) {\n    each(field.filterValues, function (_, filterValue) {\n      filterValues.push(Array.isArray(filterValue) ? filterValue.join(\"/\") : filterValue && filterValue.valueOf());\n    });\n  }\n\n  foreachTree(groupItems, function (items) {\n    var item = items[0];\n    var path = createPath(items);\n    var preparedFilterValueByText = isTree ? map(items, function (item) {\n      return item.text;\n    }).reverse().join(\"/\") : item.text;\n    item.value = isTree ? path.slice(0) : item.key || item.value;\n    var preparedFilterValue = isTree ? path.join(\"/\") : item.value && item.value.valueOf();\n\n    if (item.children) {\n      item.items = item.children;\n      item.children = null;\n    }\n\n    updateHeaderFilterItemSelectionState(item, item.key && filterValues.includes(preparedFilterValueByText) || filterValues.includes(preparedFilterValue), isExcludeFilterType);\n  });\n};\n\nfunction getMainGroupField(dataSource, sourceField) {\n  var field = sourceField;\n\n  if (isDefined(sourceField.groupIndex)) {\n    field = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex];\n  }\n\n  return field;\n}\n\nfunction getStringState(state) {\n  state = state || {};\n  return JSON.stringify([state.fields, state.columnExpandedPaths, state.rowExpandedPaths]);\n}\n\nvar FieldChooserBase = Widget.inherit(columnStateMixin).inherit(sortingMixin).inherit(headerFilterMixin).inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      allowFieldDragging: true,\n      applyChangesMode: \"instantly\",\n      state: null,\n      headerFilter: {\n        width: 252,\n        height: 325,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: localizationMessage.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: localizationMessage.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: localizationMessage.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    });\n  },\n  _init: function () {\n    this.callBase();\n    this._headerFilterView = new HeaderFilterView(this);\n\n    this._refreshDataSource();\n\n    this.subscribeToEvents();\n  },\n  _refreshDataSource: function () {\n    var dataSource = this.option(\"dataSource\");\n\n    if (dataSource && dataSource.fields && dataSource.load) {\n      this._dataSource = dataSource;\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"dataSource\":\n        this._refreshDataSource();\n\n        break;\n\n      case \"applyChangesMode\":\n        break;\n\n      case \"state\":\n        if (this._skipStateChange || !this._dataSource) {\n          break;\n        }\n\n        if (\"instantly\" === this.option(\"applyChangesMode\") && getStringState(this._dataSource.state()) !== getStringState(args.value)) {\n          this._dataSource.state(args.value);\n        } else {\n          this._clean(true);\n\n          this._renderComponent();\n        }\n\n        break;\n\n      case \"headerFilter\":\n      case \"allowFieldDragging\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  renderField: function (field, showColumnLines) {\n    var $fieldContent = $(DIV).addClass(\"dx-area-field-content\").text(field.caption || field.dataField);\n    var $fieldElement = $(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").data(\"field\", field).append($fieldContent);\n    var mainGroupField = getMainGroupField(this._dataSource, field);\n\n    if (\"data\" !== field.area) {\n      if (field.allowSorting) {\n        this._applyColumnState({\n          name: \"sort\",\n          rootElement: $fieldElement,\n          column: {\n            alignment: this.option(\"rtlEnabled\") ? \"right\" : \"left\",\n            sortOrder: \"desc\" === field.sortOrder ? \"desc\" : \"asc\",\n            allowSorting: field.allowSorting\n          },\n          showColumnLines: showColumnLines\n        });\n      }\n\n      this._applyColumnState({\n        name: \"headerFilter\",\n        rootElement: $fieldElement,\n        column: {\n          alignment: this.option(\"rtlEnabled\") ? \"right\" : \"left\",\n          filterValues: mainGroupField.filterValues,\n          allowFiltering: mainGroupField.allowFiltering && !field.groupIndex,\n          allowSorting: field.allowSorting\n        },\n        showColumnLines: showColumnLines\n      });\n    }\n\n    if (field.groupName) {\n      $fieldElement.attr(\"item-group\", field.groupName);\n    }\n\n    return $fieldElement;\n  },\n  _clean: function () {},\n  _render: function () {\n    this.callBase();\n\n    this._headerFilterView.render(this.$element());\n  },\n  renderSortable: function () {\n    var that = this;\n\n    that._createComponent(that.$element(), Sortable, extend({\n      allowDragging: that.option(\"allowFieldDragging\"),\n      itemSelector: \".dx-area-field\",\n      itemContainerSelector: \".dx-area-field-container\",\n      groupSelector: \".dx-area-fields\",\n      groupFilter: function () {\n        var dataSource = that._dataSource;\n        var $sortable = $(this).closest(\".dx-sortable-old\");\n        var pivotGrid = $sortable.data(\"dxPivotGrid\");\n        var pivotGridFieldChooser = $sortable.data(\"dxPivotGridFieldChooser\");\n\n        if (pivotGrid) {\n          return pivotGrid.getDataSource() === dataSource;\n        }\n\n        if (pivotGridFieldChooser) {\n          return pivotGridFieldChooser.option(\"dataSource\") === dataSource;\n        }\n\n        return false;\n      },\n      itemRender: function ($sourceItem, target) {\n        var $item;\n\n        if ($sourceItem.hasClass(\"dx-area-box\")) {\n          $item = $sourceItem.clone();\n\n          if (\"drag\" === target) {\n            each($sourceItem, function (index, sourceItem) {\n              $item.eq(index).css(\"width\", parseInt(getOuterWidth(sourceItem), 10) + IE_FIELD_WIDTH_CORRECTION);\n            });\n          }\n        } else {\n          $item = $(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").text($sourceItem.text());\n        }\n\n        if (\"drag\" === target) {\n          var wrapperContainer = $(DIV);\n          each($item, function (_, item) {\n            var wrapper = $(\"<div>\").addClass(\"dx-pivotgrid-fields-container\").addClass(\"dx-widget\").append($(item));\n            wrapperContainer.append(wrapper);\n          });\n          return wrapperContainer.children();\n        }\n\n        return $item;\n      },\n      onDragging: function (e) {\n        var field = e.sourceElement.data(\"field\");\n        var targetGroup = e.targetGroup;\n        e.cancel = false;\n\n        if (true === field.isMeasure) {\n          if (\"column\" === targetGroup || \"row\" === targetGroup || \"filter\" === targetGroup) {\n            e.cancel = true;\n          }\n        } else if (false === field.isMeasure && \"data\" === targetGroup) {\n          e.cancel = true;\n        }\n      },\n      useIndicator: true,\n      onChanged: function (e) {\n        var dataSource = that._dataSource;\n        var field = e.sourceElement.data(\"field\");\n        e.removeSourceElement = !!e.sourceGroup;\n\n        that._adjustSortableOnChangedArgs(e);\n\n        if (field) {\n          var targetIndex = e.targetIndex;\n          var fields = dataSource.getAreaFields(field.area, true);\n          var visibleFields = fields.filter(f => false !== f.visible);\n          var fieldBeforeTarget = visibleFields[targetIndex - 1];\n          var invisibleFieldsIndexOffset = 0;\n\n          if (fieldBeforeTarget) {\n            invisibleFieldsIndexOffset = fields.filter(f => false === f.visible && f.areaIndex <= fieldBeforeTarget.areaIndex).length;\n          }\n\n          that._applyChanges([getMainGroupField(dataSource, field)], {\n            area: e.targetGroup,\n            areaIndex: targetIndex + invisibleFieldsIndexOffset\n          });\n        }\n      }\n    }, that._getSortableOptions()));\n  },\n  _processDemandState: function (func) {\n    var isInstantlyMode = \"instantly\" === this.option(\"applyChangesMode\");\n    var dataSource = this._dataSource;\n\n    if (isInstantlyMode) {\n      func(dataSource, isInstantlyMode);\n    } else {\n      var currentState = dataSource.state();\n      var pivotGridState = this.option(\"state\");\n\n      if (pivotGridState) {\n        dataSource.state(pivotGridState, true);\n      }\n\n      func(dataSource, isInstantlyMode);\n      dataSource.state(currentState, true);\n    }\n  },\n\n  _applyChanges(fields, props) {\n    var that = this;\n\n    that._processDemandState(function (dataSource, isInstantlyMode) {\n      fields.forEach(_ref => {\n        var {\n          index: index\n        } = _ref;\n        dataSource.field(index, props);\n      });\n\n      if (isInstantlyMode) {\n        dataSource.load();\n      } else {\n        that._changedHandler();\n      }\n    });\n  },\n\n  _adjustSortableOnChangedArgs: function (e) {\n    e.removeSourceElement = false;\n    e.removeTargetElement = true;\n    e.removeSourceClass = false;\n  },\n  _getSortableOptions: function () {\n    return {\n      direction: \"auto\"\n    };\n  },\n  subscribeToEvents: function (element) {\n    var that = this;\n\n    var func = function (e) {\n      var field = $(e.currentTarget).data(\"field\");\n      var mainGroupField = extend(true, {}, getMainGroupField(that._dataSource, field));\n      var isHeaderFilter = $(e.target).hasClass(\"dx-header-filter\");\n      var dataSource = that._dataSource;\n      var type = mainGroupField.groupName ? \"tree\" : \"list\";\n      var paginate = dataSource.paginate() && \"list\" === type;\n\n      if (isHeaderFilter) {\n        that._headerFilterView.showHeaderFilterMenu($(e.currentTarget), extend(mainGroupField, {\n          type: type,\n          encodeHtml: that.option(\"encodeHtml\"),\n          dataSource: {\n            useDefaultSearch: !paginate,\n            load: function (options) {\n              var userData = options.userData;\n\n              if (userData.store) {\n                return userData.store.load(options);\n              } else {\n                var d = new Deferred();\n                dataSource.getFieldValues(mainGroupField.index, that.option(\"headerFilter.showRelevantValues\"), paginate ? options : void 0).done(function (data) {\n                  var emptyValue = that.option(\"headerFilter.texts.emptyValue\");\n                  data.forEach(element => {\n                    if (!element.text) {\n                      element.text = emptyValue;\n                    }\n                  });\n\n                  if (paginate) {\n                    d.resolve(data);\n                  } else {\n                    userData.store = new ArrayStore(data);\n                    userData.store.load(options).done(d.resolve).fail(d.reject);\n                  }\n                }).fail(d.reject);\n                return d;\n              }\n            },\n            postProcess: function (data) {\n              processItems(data, mainGroupField);\n              return data;\n            }\n          },\n          apply: function () {\n            that._applyChanges([mainGroupField], {\n              filterValues: this.filterValues,\n              filterType: this.filterType\n            });\n          }\n        }));\n      } else if (field.allowSorting && \"data\" !== field.area) {\n        that._applyChanges([field], {\n          sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\n        });\n      }\n    };\n\n    if (element) {\n      eventsEngine.on(element, clickEventName, \".dx-area-field.dx-area-box\", func);\n      return;\n    }\n\n    eventsEngine.on(that.$element(), clickEventName, \".dx-area-field.dx-area-box\", func);\n  },\n  _initTemplates: noop,\n  addWidgetPrefix: function (className) {\n    return \"dx-pivotgrid-\" + className;\n  }\n});\nregisterComponent(\"dxPivotGridFieldChooserBase\", FieldChooserBase);\nexport default FieldChooserBase;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.field_chooser_base.js"],"names":["getOuterWidth","$","eventsEngine","ArrayStore","name","clickEventName","noop","isDefined","extend","each","map","localizationMessage","registerComponent","Widget","HeaderFilterView","HeaderFilterViewBase","updateHeaderFilterItemSelectionState","headerFilterMixin","columnStateMixin","sortingMixin","foreachTree","createPath","Sortable","Deferred","IE_FIELD_WIDTH_CORRECTION","DIV","inherit","_getSearchExpr","options","useDefaultSearchExpr","callBase","processItems","groupItems","field","filterValues","isTree","groupName","isExcludeFilterType","filterType","_","filterValue","push","Array","isArray","join","valueOf","items","item","path","preparedFilterValueByText","text","reverse","value","slice","key","preparedFilterValue","children","includes","getMainGroupField","dataSource","sourceField","groupIndex","getAreaFields","area","areaIndex","getStringState","state","JSON","stringify","fields","columnExpandedPaths","rowExpandedPaths","FieldChooserBase","_getDefaultOptions","allowFieldDragging","applyChangesMode","headerFilter","width","height","searchTimeout","texts","emptyValue","format","ok","cancel","_init","_headerFilterView","_refreshDataSource","subscribeToEvents","option","load","_dataSource","_optionChanged","args","_skipStateChange","_clean","_renderComponent","_invalidate","renderField","showColumnLines","$fieldContent","addClass","caption","dataField","$fieldElement","data","append","mainGroupField","allowSorting","_applyColumnState","rootElement","column","alignment","sortOrder","allowFiltering","attr","_render","render","$element","renderSortable","that","_createComponent","allowDragging","itemSelector","itemContainerSelector","groupSelector","groupFilter","$sortable","closest","pivotGrid","pivotGridFieldChooser","getDataSource","itemRender","$sourceItem","target","$item","hasClass","clone","index","sourceItem","eq","css","parseInt","wrapperContainer","wrapper","onDragging","e","sourceElement","targetGroup","isMeasure","useIndicator","onChanged","removeSourceElement","sourceGroup","_adjustSortableOnChangedArgs","targetIndex","visibleFields","filter","f","visible","fieldBeforeTarget","invisibleFieldsIndexOffset","length","_applyChanges","_getSortableOptions","_processDemandState","func","isInstantlyMode","currentState","pivotGridState","props","forEach","_ref","_changedHandler","removeTargetElement","removeSourceClass","direction","element","currentTarget","isHeaderFilter","type","paginate","showHeaderFilterMenu","encodeHtml","useDefaultSearch","userData","store","d","getFieldValues","done","resolve","fail","reject","postProcess","apply","on","_initTemplates","addWidgetPrefix","className"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.field_chooser_base.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport localizationMessage from \"../../localization/message\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    HeaderFilterView as HeaderFilterViewBase,\r\n    updateHeaderFilterItemSelectionState,\r\n    headerFilterMixin\r\n} from \"../grid_core/ui.grid_core.header_filter_core\";\r\nimport columnStateMixin from \"../grid_core/ui.grid_core.column_state_mixin\";\r\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\r\nimport {\r\n    foreachTree,\r\n    createPath\r\n} from \"./ui.pivot_grid.utils\";\r\nimport Sortable from \"./ui.sortable\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar IE_FIELD_WIDTH_CORRECTION = 1;\r\nvar DIV = \"<div>\";\r\nvar HeaderFilterView = HeaderFilterViewBase.inherit({\r\n    _getSearchExpr: function(options) {\r\n        options.useDefaultSearchExpr = true;\r\n        return this.callBase(options)\r\n    }\r\n});\r\nvar processItems = function(groupItems, field) {\r\n    var filterValues = [];\r\n    var isTree = !!field.groupName;\r\n    var isExcludeFilterType = \"exclude\" === field.filterType;\r\n    if (field.filterValues) {\r\n        each(field.filterValues, (function(_, filterValue) {\r\n            filterValues.push(Array.isArray(filterValue) ? filterValue.join(\"/\") : filterValue && filterValue.valueOf())\r\n        }))\r\n    }\r\n    foreachTree(groupItems, (function(items) {\r\n        var item = items[0];\r\n        var path = createPath(items);\r\n        var preparedFilterValueByText = isTree ? map(items, (function(item) {\r\n            return item.text\r\n        })).reverse().join(\"/\") : item.text;\r\n        item.value = isTree ? path.slice(0) : item.key || item.value;\r\n        var preparedFilterValue = isTree ? path.join(\"/\") : item.value && item.value.valueOf();\r\n        if (item.children) {\r\n            item.items = item.children;\r\n            item.children = null\r\n        }\r\n        updateHeaderFilterItemSelectionState(item, item.key && filterValues.includes(preparedFilterValueByText) || filterValues.includes(preparedFilterValue), isExcludeFilterType)\r\n    }))\r\n};\r\n\r\nfunction getMainGroupField(dataSource, sourceField) {\r\n    var field = sourceField;\r\n    if (isDefined(sourceField.groupIndex)) {\r\n        field = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex]\r\n    }\r\n    return field\r\n}\r\n\r\nfunction getStringState(state) {\r\n    state = state || {};\r\n    return JSON.stringify([state.fields, state.columnExpandedPaths, state.rowExpandedPaths])\r\n}\r\nvar FieldChooserBase = Widget.inherit(columnStateMixin).inherit(sortingMixin).inherit(headerFilterMixin).inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            allowFieldDragging: true,\r\n            applyChangesMode: \"instantly\",\r\n            state: null,\r\n            headerFilter: {\r\n                width: 252,\r\n                height: 325,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: localizationMessage.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: localizationMessage.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: localizationMessage.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._headerFilterView = new HeaderFilterView(this);\r\n        this._refreshDataSource();\r\n        this.subscribeToEvents()\r\n    },\r\n    _refreshDataSource: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && dataSource.fields && dataSource.load) {\r\n            this._dataSource = dataSource\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n                this._refreshDataSource();\r\n                break;\r\n            case \"applyChangesMode\":\r\n                break;\r\n            case \"state\":\r\n                if (this._skipStateChange || !this._dataSource) {\r\n                    break\r\n                }\r\n                if (\"instantly\" === this.option(\"applyChangesMode\") && getStringState(this._dataSource.state()) !== getStringState(args.value)) {\r\n                    this._dataSource.state(args.value)\r\n                } else {\r\n                    this._clean(true);\r\n                    this._renderComponent()\r\n                }\r\n                break;\r\n            case \"headerFilter\":\r\n            case \"allowFieldDragging\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    renderField: function(field, showColumnLines) {\r\n        var $fieldContent = $(DIV).addClass(\"dx-area-field-content\").text(field.caption || field.dataField);\r\n        var $fieldElement = $(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").data(\"field\", field).append($fieldContent);\r\n        var mainGroupField = getMainGroupField(this._dataSource, field);\r\n        if (\"data\" !== field.area) {\r\n            if (field.allowSorting) {\r\n                this._applyColumnState({\r\n                    name: \"sort\",\r\n                    rootElement: $fieldElement,\r\n                    column: {\r\n                        alignment: this.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                        sortOrder: \"desc\" === field.sortOrder ? \"desc\" : \"asc\",\r\n                        allowSorting: field.allowSorting\r\n                    },\r\n                    showColumnLines: showColumnLines\r\n                })\r\n            }\r\n            this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $fieldElement,\r\n                column: {\r\n                    alignment: this.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                    filterValues: mainGroupField.filterValues,\r\n                    allowFiltering: mainGroupField.allowFiltering && !field.groupIndex,\r\n                    allowSorting: field.allowSorting\r\n                },\r\n                showColumnLines: showColumnLines\r\n            })\r\n        }\r\n        if (field.groupName) {\r\n            $fieldElement.attr(\"item-group\", field.groupName)\r\n        }\r\n        return $fieldElement\r\n    },\r\n    _clean: function() {},\r\n    _render: function() {\r\n        this.callBase();\r\n        this._headerFilterView.render(this.$element())\r\n    },\r\n    renderSortable: function() {\r\n        var that = this;\r\n        that._createComponent(that.$element(), Sortable, extend({\r\n            allowDragging: that.option(\"allowFieldDragging\"),\r\n            itemSelector: \".dx-area-field\",\r\n            itemContainerSelector: \".dx-area-field-container\",\r\n            groupSelector: \".dx-area-fields\",\r\n            groupFilter: function() {\r\n                var dataSource = that._dataSource;\r\n                var $sortable = $(this).closest(\".dx-sortable-old\");\r\n                var pivotGrid = $sortable.data(\"dxPivotGrid\");\r\n                var pivotGridFieldChooser = $sortable.data(\"dxPivotGridFieldChooser\");\r\n                if (pivotGrid) {\r\n                    return pivotGrid.getDataSource() === dataSource\r\n                }\r\n                if (pivotGridFieldChooser) {\r\n                    return pivotGridFieldChooser.option(\"dataSource\") === dataSource\r\n                }\r\n                return false\r\n            },\r\n            itemRender: function($sourceItem, target) {\r\n                var $item;\r\n                if ($sourceItem.hasClass(\"dx-area-box\")) {\r\n                    $item = $sourceItem.clone();\r\n                    if (\"drag\" === target) {\r\n                        each($sourceItem, (function(index, sourceItem) {\r\n                            $item.eq(index).css(\"width\", parseInt(getOuterWidth(sourceItem), 10) + IE_FIELD_WIDTH_CORRECTION)\r\n                        }))\r\n                    }\r\n                } else {\r\n                    $item = $(DIV).addClass(\"dx-area-field\").addClass(\"dx-area-box\").text($sourceItem.text())\r\n                }\r\n                if (\"drag\" === target) {\r\n                    var wrapperContainer = $(DIV);\r\n                    each($item, (function(_, item) {\r\n                        var wrapper = $(\"<div>\").addClass(\"dx-pivotgrid-fields-container\").addClass(\"dx-widget\").append($(item));\r\n                        wrapperContainer.append(wrapper)\r\n                    }));\r\n                    return wrapperContainer.children()\r\n                }\r\n                return $item\r\n            },\r\n            onDragging: function(e) {\r\n                var field = e.sourceElement.data(\"field\");\r\n                var targetGroup = e.targetGroup;\r\n                e.cancel = false;\r\n                if (true === field.isMeasure) {\r\n                    if (\"column\" === targetGroup || \"row\" === targetGroup || \"filter\" === targetGroup) {\r\n                        e.cancel = true\r\n                    }\r\n                } else if (false === field.isMeasure && \"data\" === targetGroup) {\r\n                    e.cancel = true\r\n                }\r\n            },\r\n            useIndicator: true,\r\n            onChanged: function(e) {\r\n                var dataSource = that._dataSource;\r\n                var field = e.sourceElement.data(\"field\");\r\n                e.removeSourceElement = !!e.sourceGroup;\r\n                that._adjustSortableOnChangedArgs(e);\r\n                if (field) {\r\n                    var targetIndex = e.targetIndex;\r\n                    var fields = dataSource.getAreaFields(field.area, true);\r\n                    var visibleFields = fields.filter(f => false !== f.visible);\r\n                    var fieldBeforeTarget = visibleFields[targetIndex - 1];\r\n                    var invisibleFieldsIndexOffset = 0;\r\n                    if (fieldBeforeTarget) {\r\n                        invisibleFieldsIndexOffset = fields.filter(f => false === f.visible && f.areaIndex <= fieldBeforeTarget.areaIndex).length\r\n                    }\r\n                    that._applyChanges([getMainGroupField(dataSource, field)], {\r\n                        area: e.targetGroup,\r\n                        areaIndex: targetIndex + invisibleFieldsIndexOffset\r\n                    })\r\n                }\r\n            }\r\n        }, that._getSortableOptions()))\r\n    },\r\n    _processDemandState: function(func) {\r\n        var isInstantlyMode = \"instantly\" === this.option(\"applyChangesMode\");\r\n        var dataSource = this._dataSource;\r\n        if (isInstantlyMode) {\r\n            func(dataSource, isInstantlyMode)\r\n        } else {\r\n            var currentState = dataSource.state();\r\n            var pivotGridState = this.option(\"state\");\r\n            if (pivotGridState) {\r\n                dataSource.state(pivotGridState, true)\r\n            }\r\n            func(dataSource, isInstantlyMode);\r\n            dataSource.state(currentState, true)\r\n        }\r\n    },\r\n    _applyChanges(fields, props) {\r\n        var that = this;\r\n        that._processDemandState((function(dataSource, isInstantlyMode) {\r\n            fields.forEach(_ref => {\r\n                var {\r\n                    index: index\r\n                } = _ref;\r\n                dataSource.field(index, props)\r\n            });\r\n            if (isInstantlyMode) {\r\n                dataSource.load()\r\n            } else {\r\n                that._changedHandler()\r\n            }\r\n        }))\r\n    },\r\n    _adjustSortableOnChangedArgs: function(e) {\r\n        e.removeSourceElement = false;\r\n        e.removeTargetElement = true;\r\n        e.removeSourceClass = false\r\n    },\r\n    _getSortableOptions: function() {\r\n        return {\r\n            direction: \"auto\"\r\n        }\r\n    },\r\n    subscribeToEvents: function(element) {\r\n        var that = this;\r\n        var func = function(e) {\r\n            var field = $(e.currentTarget).data(\"field\");\r\n            var mainGroupField = extend(true, {}, getMainGroupField(that._dataSource, field));\r\n            var isHeaderFilter = $(e.target).hasClass(\"dx-header-filter\");\r\n            var dataSource = that._dataSource;\r\n            var type = mainGroupField.groupName ? \"tree\" : \"list\";\r\n            var paginate = dataSource.paginate() && \"list\" === type;\r\n            if (isHeaderFilter) {\r\n                that._headerFilterView.showHeaderFilterMenu($(e.currentTarget), extend(mainGroupField, {\r\n                    type: type,\r\n                    encodeHtml: that.option(\"encodeHtml\"),\r\n                    dataSource: {\r\n                        useDefaultSearch: !paginate,\r\n                        load: function(options) {\r\n                            var userData = options.userData;\r\n                            if (userData.store) {\r\n                                return userData.store.load(options)\r\n                            } else {\r\n                                var d = new Deferred;\r\n                                dataSource.getFieldValues(mainGroupField.index, that.option(\"headerFilter.showRelevantValues\"), paginate ? options : void 0).done((function(data) {\r\n                                    var emptyValue = that.option(\"headerFilter.texts.emptyValue\");\r\n                                    data.forEach(element => {\r\n                                        if (!element.text) {\r\n                                            element.text = emptyValue\r\n                                        }\r\n                                    });\r\n                                    if (paginate) {\r\n                                        d.resolve(data)\r\n                                    } else {\r\n                                        userData.store = new ArrayStore(data);\r\n                                        userData.store.load(options).done(d.resolve).fail(d.reject)\r\n                                    }\r\n                                })).fail(d.reject);\r\n                                return d\r\n                            }\r\n                        },\r\n                        postProcess: function(data) {\r\n                            processItems(data, mainGroupField);\r\n                            return data\r\n                        }\r\n                    },\r\n                    apply: function() {\r\n                        that._applyChanges([mainGroupField], {\r\n                            filterValues: this.filterValues,\r\n                            filterType: this.filterType\r\n                        })\r\n                    }\r\n                }))\r\n            } else if (field.allowSorting && \"data\" !== field.area) {\r\n                that._applyChanges([field], {\r\n                    sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\r\n                })\r\n            }\r\n        };\r\n        if (element) {\r\n            eventsEngine.on(element, clickEventName, \".dx-area-field.dx-area-box\", func);\r\n            return\r\n        }\r\n        eventsEngine.on(that.$element(), clickEventName, \".dx-area-field.dx-area-box\", func)\r\n    },\r\n    _initTemplates: noop,\r\n    addWidgetPrefix: function(className) {\r\n        return \"dx-pivotgrid-\" + className\r\n    }\r\n});\r\nregisterComponent(\"dxPivotGridFieldChooserBase\", FieldChooserBase);\r\nexport default FieldChooserBase;\r\n"]},"metadata":{},"sourceType":"module"}