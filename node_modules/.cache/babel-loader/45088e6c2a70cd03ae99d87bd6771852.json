{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\widgets\\filterEditor\\_queryBuilderObjectsProvider.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryBuilderObjectsProvider = exports.isAggregatedExpression = void 0;\n\nvar ko = require(\"knockout\");\n\nvar $ = require(\"jquery\");\n\nvar columnModelMeta_1 = require(\"../../elements/columnModelMeta\");\n\nvar _arrayutils_1 = require(\"../../../core/utils/_arrayutils\");\n\nfunction isAggregatedExpression(object) {\n  return object.aggregate() !== columnModelMeta_1.AggregationType.None;\n}\n\nexports.isAggregatedExpression = isAggregatedExpression;\n\nvar QueryBuilderObjectsProvider = function () {\n  function QueryBuilderObjectsProvider(query, objectFilter) {\n    this.getItems = function (pathRequest) {\n      var result = $.Deferred();\n      var items = [];\n\n      if (pathRequest.fullPath === '') {\n        items = objectFilter.filterTables(query().tables()).map(QueryBuilderObjectsProvider._createTableInfo);\n      } else {\n        var table = _arrayutils_1.findFirstItemMatchesCondition(query().tables(), function (table) {\n          return table.actualName() === pathRequest.fullPath;\n        });\n\n        items = objectFilter.filterColumns(table && table.columns() || []).map(function (column) {\n          return QueryBuilderObjectsProvider._createColumnInfo(column, objectFilter);\n        });\n      }\n\n      result.resolve(items);\n      return result.promise();\n    };\n\n    this.hasParameter = function (name) {\n      return query().parameters().filter(function (parameter) {\n        return parameter.name() === name;\n      }).length > 0;\n    };\n\n    this.getColumnInfo = function (propertyName) {\n      if (propertyName) {\n        var table = _arrayutils_1.find(query().tables(), function (t) {\n          return propertyName.indexOf(t.actualName() + '.') === 0;\n        });\n\n        if (table) {\n          var column = _arrayutils_1.find(objectFilter.filterColumns(table.columns() || []), function (c) {\n            return propertyName === table.actualName() + '.' + objectFilter.getColumnName(c);\n          });\n\n          return column ? QueryBuilderObjectsProvider._createColumnInfo(column, objectFilter) : null;\n        }\n      }\n\n      return null;\n    };\n  }\n\n  QueryBuilderObjectsProvider._createTableInfo = function (table) {\n    return {\n      displayName: table.actualName(),\n      name: table.actualName(),\n      isList: true,\n      specifics: 'Default',\n      collapsed: ko.observable(true)\n    };\n  };\n\n  QueryBuilderObjectsProvider._createColumnInfo = function (column, objectFilter) {\n    return {\n      displayName: objectFilter.getColumnName(column),\n      isList: false,\n      specifics: objectFilter.getSpecifics(column),\n      dataType: objectFilter.getDataType(column),\n      name: objectFilter.getColumnName(column)\n    };\n  };\n\n  QueryBuilderObjectsProvider.whereClauseObjectsFilter = {\n    filterColumns: function (columns) {\n      return columns;\n    },\n    filterTables: function (tables) {\n      return tables;\n    },\n    getColumnName: function (column) {\n      return column.name.peek();\n    },\n    getSpecifics: function (column) {\n      return column.specifics;\n    },\n    getDataType: function (column) {\n      return column.dataType.peek();\n    }\n  };\n  QueryBuilderObjectsProvider.groupByObjectsFilter = {\n    filterColumns: function (columns) {\n      return columns.filter(isAggregatedExpression);\n    },\n    filterTables: function (tables) {\n      return tables.filter(function (table) {\n        return table.columns().some(isAggregatedExpression);\n      });\n    },\n    getColumnName: function (column) {\n      return column.actualName.peek();\n    },\n    getSpecifics: function (column) {\n      switch (column.aggregate()) {\n        case columnModelMeta_1.AggregationType.Avg:\n        case columnModelMeta_1.AggregationType.AvgDistinct:\n          return 'Float';\n\n        case columnModelMeta_1.AggregationType.Count:\n        case columnModelMeta_1.AggregationType.CountDistinct:\n          return 'Integer';\n\n        default:\n          return column.specifics;\n      }\n    },\n    getDataType: function (column) {\n      return null;\n    }\n  };\n  return QueryBuilderObjectsProvider;\n}();\n\nexports.QueryBuilderObjectsProvider = QueryBuilderObjectsProvider;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/widgets/filterEditor/_queryBuilderObjectsProvider.js"],"names":["Object","defineProperty","exports","value","QueryBuilderObjectsProvider","isAggregatedExpression","ko","require","$","columnModelMeta_1","_arrayutils_1","object","aggregate","AggregationType","None","query","objectFilter","getItems","pathRequest","result","Deferred","items","fullPath","filterTables","tables","map","_createTableInfo","table","findFirstItemMatchesCondition","actualName","filterColumns","columns","column","_createColumnInfo","resolve","promise","hasParameter","name","parameters","filter","parameter","length","getColumnInfo","propertyName","find","t","indexOf","c","getColumnName","displayName","isList","specifics","collapsed","observable","getSpecifics","dataType","getDataType","whereClauseObjectsFilter","peek","groupByObjectsFilter","some","Avg","AvgDistinct","Count","CountDistinct"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\widgets\\filterEditor\\_queryBuilderObjectsProvider.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryBuilderObjectsProvider = exports.isAggregatedExpression = void 0;\nvar ko = require(\"knockout\");\nvar $ = require(\"jquery\");\nvar columnModelMeta_1 = require(\"../../elements/columnModelMeta\");\nvar _arrayutils_1 = require(\"../../../core/utils/_arrayutils\");\nfunction isAggregatedExpression(object) {\n    return object.aggregate() !== columnModelMeta_1.AggregationType.None;\n}\nexports.isAggregatedExpression = isAggregatedExpression;\nvar QueryBuilderObjectsProvider = (function () {\n    function QueryBuilderObjectsProvider(query, objectFilter) {\n        this.getItems = function (pathRequest) {\n            var result = $.Deferred();\n            var items = [];\n            if (pathRequest.fullPath === '') {\n                items = objectFilter.filterTables(query().tables())\n                    .map(QueryBuilderObjectsProvider._createTableInfo);\n            }\n            else {\n                var table = _arrayutils_1.findFirstItemMatchesCondition(query().tables(), function (table) { return table.actualName() === pathRequest.fullPath; });\n                items = objectFilter.filterColumns(table && table.columns() || [])\n                    .map(function (column) { return QueryBuilderObjectsProvider._createColumnInfo(column, objectFilter); });\n            }\n            result.resolve(items);\n            return result.promise();\n        };\n        this.hasParameter = function (name) {\n            return query().parameters().filter(function (parameter) { return parameter.name() === name; }).length > 0;\n        };\n        this.getColumnInfo = function (propertyName) {\n            if (propertyName) {\n                var table = _arrayutils_1.find(query().tables(), function (t) { return propertyName.indexOf(t.actualName() + '.') === 0; });\n                if (table) {\n                    var column = _arrayutils_1.find(objectFilter.filterColumns(table.columns() || []), function (c) { return propertyName === (table.actualName() + '.' + objectFilter.getColumnName(c)); });\n                    return column ? QueryBuilderObjectsProvider._createColumnInfo(column, objectFilter) : null;\n                }\n            }\n            return null;\n        };\n    }\n    QueryBuilderObjectsProvider._createTableInfo = function (table) {\n        return {\n            displayName: table.actualName(),\n            name: table.actualName(),\n            isList: true,\n            specifics: 'Default',\n            collapsed: ko.observable(true)\n        };\n    };\n    QueryBuilderObjectsProvider._createColumnInfo = function (column, objectFilter) {\n        return {\n            displayName: objectFilter.getColumnName(column),\n            isList: false,\n            specifics: objectFilter.getSpecifics(column),\n            dataType: objectFilter.getDataType(column),\n            name: objectFilter.getColumnName(column)\n        };\n    };\n    QueryBuilderObjectsProvider.whereClauseObjectsFilter = {\n        filterColumns: function (columns) { return columns; },\n        filterTables: function (tables) { return tables; },\n        getColumnName: function (column) { return column.name.peek(); },\n        getSpecifics: function (column) { return column.specifics; },\n        getDataType: function (column) { return column.dataType.peek(); }\n    };\n    QueryBuilderObjectsProvider.groupByObjectsFilter = {\n        filterColumns: function (columns) { return columns.filter(isAggregatedExpression); },\n        filterTables: function (tables) { return tables.filter(function (table) { return table.columns().some(isAggregatedExpression); }); },\n        getColumnName: function (column) { return column.actualName.peek(); },\n        getSpecifics: function (column) {\n            switch (column.aggregate()) {\n                case columnModelMeta_1.AggregationType.Avg:\n                case columnModelMeta_1.AggregationType.AvgDistinct:\n                    return 'Float';\n                case columnModelMeta_1.AggregationType.Count:\n                case columnModelMeta_1.AggregationType.CountDistinct:\n                    return 'Integer';\n                default:\n                    return column.specifics;\n            }\n        },\n        getDataType: function (column) { return null; }\n    };\n    return QueryBuilderObjectsProvider;\n}());\nexports.QueryBuilderObjectsProvider = QueryBuilderObjectsProvider;\n"]},"metadata":{},"sourceType":"script"}