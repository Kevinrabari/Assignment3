{"ast":null,"code":"/**\r\n* DevExpress Dashboard (choose-olap-connection-string-page.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._registerOlapConnectionStringsPage = exports.DashboardChooseOlapConnectionStringPage = void 0;\n\nvar analytics_wizard_1 = require(\"@devexpress/analytics-core/analytics-wizard\");\n\nvar ko = require(\"knockout\");\n\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\n\nvar page_id_1 = require(\"./page-id\");\n\nvar DashboardChooseOlapConnectionStringPage = function (_super) {\n  __extends(DashboardChooseOlapConnectionStringPage, _super);\n\n  function DashboardChooseOlapConnectionStringPage(connectionStrings) {\n    var _this = _super.call(this) || this;\n\n    _this._selectedConnectionString = ko.observableArray([]);\n    _this._connectionStrings = connectionStrings;\n\n    _this._disposables.push(_this._selectedConnectionString.subscribe(function () {\n      return _this._onChange();\n    }));\n\n    return _this;\n  }\n\n  DashboardChooseOlapConnectionStringPage.prototype.canNext = function () {\n    return false;\n  };\n\n  DashboardChooseOlapConnectionStringPage.prototype.canFinish = function () {\n    return this._selectedConnectionString().length !== 0;\n  };\n\n  DashboardChooseOlapConnectionStringPage.prototype.commit = function () {\n    var deferred = _jquery_helpers_1.createJQueryDeferred();\n\n    if (this._selectedConnectionString()[0]) {\n      deferred.resolve({\n        connectionName: this._selectedConnectionString()[0].name\n      });\n    } else {\n      deferred.resolve();\n    }\n\n    return deferred.promise();\n  };\n\n  DashboardChooseOlapConnectionStringPage.prototype.initialize = function (state) {\n    if (this._connectionStrings && this._connectionStrings.length === 1) {\n      this._selectedConnectionString([this._connectionStrings[0]]);\n    } else if (this._connectionStrings && this._connectionStrings.length > 0) {\n      var matchingStrings = this._connectionStrings.filter(function (c) {\n        return c.name == state.connectionName;\n      });\n\n      var selectedString = matchingStrings.length > 0 ? matchingStrings[0] : this._connectionStrings[0];\n\n      this._selectedConnectionString(selectedString ? [selectedString] : []);\n    } else {\n      this._selectedConnectionString([]);\n    }\n\n    return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n  };\n\n  return DashboardChooseOlapConnectionStringPage;\n}(analytics_wizard_1.WizardPageBase);\n\nexports.DashboardChooseOlapConnectionStringPage = DashboardChooseOlapConnectionStringPage;\n\nfunction _registerOlapConnectionStringsPage(factory, connectionStrings) {\n  var sqlConnectionStringsMeta = factory.getMetadata(analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage);\n\n  if (!sqlConnectionStringsMeta) {\n    analytics_wizard_1._registerChooseSqlConnectionPage(factory, undefined);\n\n    sqlConnectionStringsMeta = factory.getMetadata(analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage);\n    factory.unregisterMetadata(analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage);\n  }\n\n  factory.registerMetadata(page_id_1.OlapDataSourceWizardPageId.ChooseConnectionPage, {\n    create: function () {\n      return new DashboardChooseOlapConnectionStringPage(connectionStrings);\n    },\n    setState: function (result, state) {\n      state.connectionName = result.connectionName;\n    },\n    getState: function (state) {\n      return state.olapDataSourceWizard;\n    },\n    resetState: function (state, defaultState) {\n      state.connectionName = defaultState.connectionName;\n    },\n    template: sqlConnectionStringsMeta.template,\n    description: sqlConnectionStringsMeta.description\n  });\n}\n\nexports._registerOlapConnectionStringsPage = _registerOlapConnectionStringsPage;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/data-source-wizard/pages/choose-olap-connection-string-page.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","_registerOlapConnectionStringsPage","DashboardChooseOlapConnectionStringPage","analytics_wizard_1","require","ko","_jquery_helpers_1","page_id_1","_super","connectionStrings","_this","_selectedConnectionString","observableArray","_connectionStrings","_disposables","push","subscribe","_onChange","canNext","canFinish","length","commit","deferred","createJQueryDeferred","resolve","connectionName","name","promise","initialize","state","matchingStrings","filter","c","selectedString","WizardPageBase","factory","sqlConnectionStringsMeta","getMetadata","SqlDataSourceWizardPageId","ChooseConnectionPage","_registerChooseSqlConnectionPage","undefined","unregisterMetadata","registerMetadata","OlapDataSourceWizardPageId","setState","result","getState","olapDataSourceWizard","resetState","defaultState","template","description"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (choose-olap-connection-string-page.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._registerOlapConnectionStringsPage = exports.DashboardChooseOlapConnectionStringPage = void 0;\nvar analytics_wizard_1 = require(\"@devexpress/analytics-core/analytics-wizard\");\nvar ko = require(\"knockout\");\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\nvar page_id_1 = require(\"./page-id\");\nvar DashboardChooseOlapConnectionStringPage = (function (_super) {\n    __extends(DashboardChooseOlapConnectionStringPage, _super);\n    function DashboardChooseOlapConnectionStringPage(connectionStrings) {\n        var _this = _super.call(this) || this;\n        _this._selectedConnectionString = ko.observableArray([]);\n        _this._connectionStrings = connectionStrings;\n        _this._disposables.push(_this._selectedConnectionString.subscribe(function () { return _this._onChange(); }));\n        return _this;\n    }\n    DashboardChooseOlapConnectionStringPage.prototype.canNext = function () {\n        return false;\n    };\n    DashboardChooseOlapConnectionStringPage.prototype.canFinish = function () {\n        return this._selectedConnectionString().length !== 0;\n    };\n    DashboardChooseOlapConnectionStringPage.prototype.commit = function () {\n        var deferred = _jquery_helpers_1.createJQueryDeferred();\n        if (this._selectedConnectionString()[0]) {\n            deferred.resolve({\n                connectionName: this._selectedConnectionString()[0].name\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n        return deferred.promise();\n    };\n    DashboardChooseOlapConnectionStringPage.prototype.initialize = function (state) {\n        if (this._connectionStrings && this._connectionStrings.length === 1) {\n            this._selectedConnectionString([this._connectionStrings[0]]);\n        }\n        else if (this._connectionStrings && this._connectionStrings.length > 0) {\n            var matchingStrings = this._connectionStrings.filter(function (c) { return c.name == state.connectionName; });\n            var selectedString = matchingStrings.length > 0 ? matchingStrings[0] : this._connectionStrings[0];\n            this._selectedConnectionString(selectedString ? [selectedString] : []);\n        }\n        else {\n            this._selectedConnectionString([]);\n        }\n        return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n    };\n    return DashboardChooseOlapConnectionStringPage;\n}(analytics_wizard_1.WizardPageBase));\nexports.DashboardChooseOlapConnectionStringPage = DashboardChooseOlapConnectionStringPage;\nfunction _registerOlapConnectionStringsPage(factory, connectionStrings) {\n    var sqlConnectionStringsMeta = factory.getMetadata(analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage);\n    if (!sqlConnectionStringsMeta) {\n        analytics_wizard_1._registerChooseSqlConnectionPage(factory, undefined);\n        sqlConnectionStringsMeta = factory.getMetadata(analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage);\n        factory.unregisterMetadata(analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage);\n    }\n    factory.registerMetadata(page_id_1.OlapDataSourceWizardPageId.ChooseConnectionPage, {\n        create: function () {\n            return new DashboardChooseOlapConnectionStringPage(connectionStrings);\n        },\n        setState: function (result, state) {\n            state.connectionName = result.connectionName;\n        },\n        getState: function (state) {\n            return state.olapDataSourceWizard;\n        },\n        resetState: function (state, defaultState) {\n            state.connectionName = defaultState.connectionName;\n        },\n        template: sqlConnectionStringsMeta.template,\n        description: sqlConnectionStringsMeta.description\n    });\n}\nexports._registerOlapConnectionStringsPage = _registerOlapConnectionStringsPage;\n"]},"metadata":{},"sourceType":"script"}