{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\dataSource\\federation\\federatedQueries\\subNode.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubNode = exports.subNodeSerializationInfo = void 0;\n\nvar ko = require(\"knockout\");\n\nvar serializer_1 = require(\"../../../../serializer/serializer\");\n\nvar _utils_1 = require(\"../../../../serializer/_utils\");\n\nvar binary_1 = require(\"../../../../widgets/criteria/operators/binary\");\n\nvar group_1 = require(\"../../../../widgets/criteria/operators/group\");\n\nvar binary_2 = require(\"../../../../widgets/criteria/operators/options/binary\");\n\nvar criteriaOperatorStateMachine_1 = require(\"../../../../widgets/criteria/utils/criteriaOperatorStateMachine\");\n\nvar operatorTokens_1 = require(\"../../../../widgets/criteria/utils/operatorTokens\");\n\nvar relationModel_1 = require(\"../../../elements/relationModel\");\n\nvar sourceQuery_1 = require(\"./sourceQuery\");\n\nexports.subNodeSerializationInfo = [{\n  propertyName: 'condition',\n  modelName: '@Condition',\n  defaultVal: ''\n}, {\n  propertyName: 'joinType',\n  modelName: '@JoinType',\n  defaultVal: 'Inner'\n}, {\n  propertyName: 'query',\n  modelName: 'Query'\n}];\n\nvar SubNode = function () {\n  function SubNode(model, serializer) {\n    serializer = serializer || new serializer_1.ModelSerializer();\n    serializer.deserialize(this, _utils_1.extend(model, {\n      '@ItemType': 'JoinElement'\n    }));\n    if (model['Query']) this.query = ko.observable(new sourceQuery_1.SourceQuery(model['Query']));\n  }\n\n  SubNode.deserializeRelationModel = function (subNodeQuery, relation) {\n    var parentTableName = relation.parentTableName();\n    var nestedTableName = relation.nestedTableName();\n    var conditionStrings = [];\n    relation.conditions().forEach(function (condition) {\n      var firstCondition = '[' + nestedTableName + '.' + condition.nestedColumnName() + ']';\n      var secondCondition = '[' + parentTableName + '.' + condition.parentColumnName() + ']';\n      var operator = operatorTokens_1.operatorTokens[condition.operator()];\n      var conditionString = firstCondition + ' ' + operator + ' ' + secondCondition;\n      conditionStrings.push(conditionString);\n    });\n    var subNode = new SubNode({\n      '@JoinType': relation.joinType(),\n      '@Condition': conditionStrings.join(' And ')\n    });\n    subNode.query(subNodeQuery);\n    return subNode;\n  };\n\n  SubNode.prototype._parsePath = function (condition) {\n    if (condition[0] === '[' && condition[condition.length - 1] === ']') return criteriaOperatorStateMachine_1.CriteriaOperatorStateMachine.parse(condition)['propertyName'];\n    return condition;\n  };\n\n  SubNode.prototype._createCondition = function (parent, nested, operator) {\n    return {\n      '@ControlType': 'JoinCondition',\n      '@ItemType': 'KeyColumn',\n      '@Operator': operator,\n      '@Nested': nested,\n      '@Parent': parent\n    };\n  };\n\n  SubNode.prototype._conditionBinary = function (operator) {\n    var leftPath = this._parsePath(operator.leftPart['propertyName']);\n\n    var rightPath = this._parsePath(operator.rightPart['propertyName']);\n\n    var _operator = binary_2.BinaryOperatorType[operator.operatorType];\n    return this._createCondition(rightPath.split('.')[1], leftPath.split('.')[1], _operator);\n  };\n\n  SubNode.prototype.createRelationModel = function (query) {\n    var result = criteriaOperatorStateMachine_1.CriteriaOperatorStateMachine.parse(this.condition());\n    var _operands = [];\n\n    if (result instanceof group_1.GroupOperator) {\n      result.operands.forEach(function (operand) {\n        if (operand instanceof binary_1.BinaryOperator) _operands.push(operand);\n      });\n    } else if (result instanceof binary_1.BinaryOperator) {\n      _operands.push(result);\n    }\n\n    var parentTable = this._parsePath(_operands[0].rightPart['propertyName']).split('.')[0];\n\n    var nestedTable = this._parsePath(_operands[0].leftPart['propertyName']).split('.')[0];\n\n    var _keyColumns = {};\n\n    for (var j = 0; j < _operands.length; j++) {\n      var operator = _operands[j];\n      _keyColumns['Item' + (j + 1)] = this._conditionBinary(operator);\n    }\n\n    return new relationModel_1.RelationViewModel({\n      '@Parent': parentTable,\n      '@Nested': nestedTable,\n      '@Type': this.joinType(),\n      'KeyColumns': _keyColumns\n    }, query, new serializer_1.ModelSerializer());\n  };\n\n  SubNode.prototype.getInfo = function () {\n    return exports.subNodeSerializationInfo;\n  };\n\n  return SubNode;\n}();\n\nexports.SubNode = SubNode;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/dataSource/federation/federatedQueries/subNode.js"],"names":["Object","defineProperty","exports","value","SubNode","subNodeSerializationInfo","ko","require","serializer_1","_utils_1","binary_1","group_1","binary_2","criteriaOperatorStateMachine_1","operatorTokens_1","relationModel_1","sourceQuery_1","propertyName","modelName","defaultVal","model","serializer","ModelSerializer","deserialize","extend","query","observable","SourceQuery","deserializeRelationModel","subNodeQuery","relation","parentTableName","nestedTableName","conditionStrings","conditions","forEach","condition","firstCondition","nestedColumnName","secondCondition","parentColumnName","operator","operatorTokens","conditionString","push","subNode","joinType","join","prototype","_parsePath","length","CriteriaOperatorStateMachine","parse","_createCondition","parent","nested","_conditionBinary","leftPath","leftPart","rightPath","rightPart","_operator","BinaryOperatorType","operatorType","split","createRelationModel","result","_operands","GroupOperator","operands","operand","BinaryOperator","parentTable","nestedTable","_keyColumns","j","RelationViewModel","getInfo"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\dataSource\\federation\\federatedQueries\\subNode.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubNode = exports.subNodeSerializationInfo = void 0;\nvar ko = require(\"knockout\");\nvar serializer_1 = require(\"../../../../serializer/serializer\");\nvar _utils_1 = require(\"../../../../serializer/_utils\");\nvar binary_1 = require(\"../../../../widgets/criteria/operators/binary\");\nvar group_1 = require(\"../../../../widgets/criteria/operators/group\");\nvar binary_2 = require(\"../../../../widgets/criteria/operators/options/binary\");\nvar criteriaOperatorStateMachine_1 = require(\"../../../../widgets/criteria/utils/criteriaOperatorStateMachine\");\nvar operatorTokens_1 = require(\"../../../../widgets/criteria/utils/operatorTokens\");\nvar relationModel_1 = require(\"../../../elements/relationModel\");\nvar sourceQuery_1 = require(\"./sourceQuery\");\nexports.subNodeSerializationInfo = [\n    { propertyName: 'condition', modelName: '@Condition', defaultVal: '' },\n    {\n        propertyName: 'joinType',\n        modelName: '@JoinType',\n        defaultVal: 'Inner',\n    },\n    { propertyName: 'query', modelName: 'Query' },\n];\nvar SubNode = (function () {\n    function SubNode(model, serializer) {\n        serializer = serializer || new serializer_1.ModelSerializer();\n        serializer.deserialize(this, _utils_1.extend(model, { '@ItemType': 'JoinElement' }));\n        if (model['Query'])\n            this.query = ko.observable(new sourceQuery_1.SourceQuery(model['Query']));\n    }\n    SubNode.deserializeRelationModel = function (subNodeQuery, relation) {\n        var parentTableName = relation.parentTableName();\n        var nestedTableName = relation.nestedTableName();\n        var conditionStrings = [];\n        relation.conditions().forEach(function (condition) {\n            var firstCondition = '[' + nestedTableName + '.' + condition.nestedColumnName() + ']';\n            var secondCondition = '[' + parentTableName + '.' + condition.parentColumnName() + ']';\n            var operator = operatorTokens_1.operatorTokens[condition.operator()];\n            var conditionString = firstCondition + ' ' + operator + ' ' + secondCondition;\n            conditionStrings.push(conditionString);\n        });\n        var subNode = new SubNode({ '@JoinType': relation.joinType(), '@Condition': conditionStrings.join(' And ') });\n        subNode.query(subNodeQuery);\n        return subNode;\n    };\n    SubNode.prototype._parsePath = function (condition) {\n        if (condition[0] === '[' && condition[condition.length - 1] === ']')\n            return criteriaOperatorStateMachine_1.CriteriaOperatorStateMachine.parse(condition)['propertyName'];\n        return condition;\n    };\n    SubNode.prototype._createCondition = function (parent, nested, operator) {\n        return {\n            '@ControlType': 'JoinCondition',\n            '@ItemType': 'KeyColumn',\n            '@Operator': operator,\n            '@Nested': nested,\n            '@Parent': parent\n        };\n    };\n    SubNode.prototype._conditionBinary = function (operator) {\n        var leftPath = this._parsePath(operator.leftPart['propertyName']);\n        var rightPath = this._parsePath(operator.rightPart['propertyName']);\n        var _operator = binary_2.BinaryOperatorType[operator.operatorType];\n        return this._createCondition(rightPath.split('.')[1], leftPath.split('.')[1], _operator);\n    };\n    SubNode.prototype.createRelationModel = function (query) {\n        var result = criteriaOperatorStateMachine_1.CriteriaOperatorStateMachine.parse(this.condition());\n        var _operands = [];\n        if (result instanceof group_1.GroupOperator) {\n            result.operands.forEach(function (operand) {\n                if (operand instanceof binary_1.BinaryOperator)\n                    _operands.push(operand);\n            });\n        }\n        else if (result instanceof binary_1.BinaryOperator) {\n            _operands.push(result);\n        }\n        var parentTable = this._parsePath(_operands[0].rightPart['propertyName']).split('.')[0];\n        var nestedTable = this._parsePath(_operands[0].leftPart['propertyName']).split('.')[0];\n        var _keyColumns = {};\n        for (var j = 0; j < _operands.length; j++) {\n            var operator = _operands[j];\n            _keyColumns['Item' + (j + 1)] = this._conditionBinary(operator);\n        }\n        return new relationModel_1.RelationViewModel({\n            '@Parent': parentTable,\n            '@Nested': nestedTable,\n            '@Type': this.joinType(),\n            'KeyColumns': _keyColumns\n        }, query, new serializer_1.ModelSerializer());\n    };\n    SubNode.prototype.getInfo = function () {\n        return exports.subNodeSerializationInfo;\n    };\n    return SubNode;\n}());\nexports.SubNode = SubNode;\n"]},"metadata":{},"sourceType":"script"}