{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_layout-drag-over-state.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DragOverStateController = void 0;\n\nvar _layout_item_1 = require(\"../core/_layout-item\");\n\nvar DragOverStateController = function () {\n  function DragOverStateController() {}\n\n  DragOverStateController.prototype.update = function (targetItem, currentHoverLocation) {\n    var _this = this;\n\n    if (!this._inTimer && (this._dragOverItem !== targetItem || currentHoverLocation !== this._hoverLocation)) {\n      this.reset();\n      this._hoverLocation = currentHoverLocation;\n      this._dragOverItem = targetItem;\n\n      _layout_item_1.setHoverLocation(this._dragOverItem, this._hoverLocation);\n\n      this._currentTargetItem = this._dragOverItem;\n      this._currentTargetItemBehavior = 'InsertBesideGroup';\n\n      var selectionList = this._dragOverItem.getSelectionParentsList(this._hoverLocation);\n\n      if (selectionList.length > 1) {\n        var currentIndex = 1;\n        this._timer && clearInterval(this._timer);\n        this._timer = window.setInterval(function () {\n          _this._inTimer = true;\n\n          try {\n            _layout_item_1.setHoverLocation(_this._currentTargetItem, null, _this._currentTargetItemBehavior);\n\n            _this._currentTargetItem = selectionList[currentIndex].node;\n            _this._currentTargetItemBehavior = selectionList[currentIndex].dropBehavior;\n\n            _layout_item_1.setHoverLocation(_this._currentTargetItem, _this._hoverLocation, _this._currentTargetItemBehavior);\n\n            currentIndex++;\n\n            if (currentIndex >= selectionList.length) {\n              currentIndex = 0;\n            }\n          } finally {\n            _this._inTimer = false;\n          }\n        }, 1000);\n      }\n    }\n  };\n\n  DragOverStateController.prototype.getState = function () {\n    if (this._currentTargetItem) {\n      return {\n        targetItem: this._currentTargetItem,\n        targetItemBehavior: this._currentTargetItemBehavior,\n        hoverLocation: this._hoverLocation\n      };\n    }\n\n    return null;\n  };\n\n  DragOverStateController.prototype.reset = function () {\n    this._timer && clearInterval(this._timer);\n\n    _layout_item_1.setHoverLocation(this._dragOverItem);\n\n    _layout_item_1.setHoverLocation(this._currentTargetItem);\n\n    this._currentTargetItem = null;\n    this._currentTargetItemBehavior = 'InsertBesideGroup';\n    this._dragOverItem = null;\n    this._timer = null;\n    this._inTimer = null;\n  };\n\n  return DragOverStateController;\n}();\n\nexports.DragOverStateController = DragOverStateController;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/common/docking-layout/drag-and-drop/_layout-drag-over-state.js"],"names":["Object","defineProperty","exports","value","DragOverStateController","_layout_item_1","require","prototype","update","targetItem","currentHoverLocation","_this","_inTimer","_dragOverItem","_hoverLocation","reset","setHoverLocation","_currentTargetItem","_currentTargetItemBehavior","selectionList","getSelectionParentsList","length","currentIndex","_timer","clearInterval","window","setInterval","node","dropBehavior","getState","targetItemBehavior","hoverLocation"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_layout-drag-over-state.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DragOverStateController = void 0;\nvar _layout_item_1 = require(\"../core/_layout-item\");\nvar DragOverStateController = (function () {\n    function DragOverStateController() {\n    }\n    DragOverStateController.prototype.update = function (targetItem, currentHoverLocation) {\n        var _this = this;\n        if (!this._inTimer && (this._dragOverItem !== targetItem || currentHoverLocation !== this._hoverLocation)) {\n            this.reset();\n            this._hoverLocation = currentHoverLocation;\n            this._dragOverItem = targetItem;\n            _layout_item_1.setHoverLocation(this._dragOverItem, this._hoverLocation);\n            this._currentTargetItem = this._dragOverItem;\n            this._currentTargetItemBehavior = 'InsertBesideGroup';\n            var selectionList = this._dragOverItem.getSelectionParentsList(this._hoverLocation);\n            if (selectionList.length > 1) {\n                var currentIndex = 1;\n                this._timer && clearInterval(this._timer);\n                this._timer = window.setInterval(function () {\n                    _this._inTimer = true;\n                    try {\n                        _layout_item_1.setHoverLocation(_this._currentTargetItem, null, _this._currentTargetItemBehavior);\n                        _this._currentTargetItem = selectionList[currentIndex].node;\n                        _this._currentTargetItemBehavior = selectionList[currentIndex].dropBehavior;\n                        _layout_item_1.setHoverLocation(_this._currentTargetItem, _this._hoverLocation, _this._currentTargetItemBehavior);\n                        currentIndex++;\n                        if (currentIndex >= selectionList.length) {\n                            currentIndex = 0;\n                        }\n                    }\n                    finally {\n                        _this._inTimer = false;\n                    }\n                }, 1000);\n            }\n        }\n    };\n    DragOverStateController.prototype.getState = function () {\n        if (this._currentTargetItem) {\n            return {\n                targetItem: this._currentTargetItem,\n                targetItemBehavior: this._currentTargetItemBehavior,\n                hoverLocation: this._hoverLocation\n            };\n        }\n        return null;\n    };\n    DragOverStateController.prototype.reset = function () {\n        this._timer && clearInterval(this._timer);\n        _layout_item_1.setHoverLocation(this._dragOverItem);\n        _layout_item_1.setHoverLocation(this._currentTargetItem);\n        this._currentTargetItem = null;\n        this._currentTargetItemBehavior = 'InsertBesideGroup';\n        this._dragOverItem = null;\n        this._timer = null;\n        this._inTimer = null;\n    };\n    return DragOverStateController;\n}());\nexports.DragOverStateController = DragOverStateController;\n"]},"metadata":{},"sourceType":"script"}