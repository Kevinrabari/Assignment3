{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { when } from \"../../core/utils/deferred\";\nimport { name as dblClickName } from \"../../events/double_click\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport devices from \"../../core/devices\";\nimport CustomStore from \"../../data/custom_store\";\nimport Widget from \"../widget/ui.widget\";\nvar FILE_MANAGER_FILES_VIEW_CLASS = \"dx-filemanager-files-view\";\nvar FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE = \"dxFileManager_open\";\n\nclass FileManagerItemListBase extends Widget {\n  _init() {\n    this._initActions();\n\n    this._lockFocusedItemProcessing = false;\n    this._focusedItemKey = this.option(\"focusedItemKey\");\n\n    super._init();\n  }\n\n  _initMarkup() {\n    this.$element().addClass(FILE_MANAGER_FILES_VIEW_CLASS);\n    var dblClickEventName = addNamespace(dblClickName, FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE);\n    eventsEngine.on(this.$element(), dblClickEventName, this._getItemSelector(), this._onItemDblClick.bind(this));\n\n    super._initMarkup();\n  }\n\n  _initActions() {\n    this._actions = {\n      onError: this._createActionByOption(\"onError\"),\n      onSelectionChanged: this._createActionByOption(\"onSelectionChanged\"),\n      onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\"),\n      onSelectedItemOpened: this._createActionByOption(\"onSelectedItemOpened\"),\n      onContextMenuShowing: this._createActionByOption(\"onContextMenuShowing\"),\n      onItemListDataLoaded: this._createActionByOption(\"onItemListDataLoaded\")\n    };\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      selectionMode: \"single\",\n      selectedItemKeys: [],\n      focusedItemKey: void 0,\n      contextMenu: null,\n      getItems: null,\n      getItemThumbnail: null,\n      onError: null,\n      onSelectionChanged: null,\n      onFocusedItemChanged: null,\n      onSelectedItemOpened: null,\n      onContextMenuShowing: null\n    });\n  }\n\n  _optionChanged(args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"selectionMode\":\n      case \"contextMenu\":\n      case \"getItems\":\n      case \"getItemThumbnail\":\n        this.repaint();\n        break;\n\n      case \"selectedItemKeys\":\n        this._setSelectedItemKeys(args.value);\n\n        break;\n\n      case \"focusedItemKey\":\n        if (!this._lockFocusedItemProcessing) {\n          this._setFocusedItemKey(args.value);\n        }\n\n        break;\n\n      case \"onError\":\n      case \"onSelectedItemOpened\":\n      case \"onSelectionChanged\":\n      case \"onFocusedItemChanged\":\n      case \"onContextMenuShowing\":\n      case \"onItemListDataLoaded\":\n        this._actions[name] = this._createActionByOption(name);\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _getItems() {\n    return this._getItemsInternal().done(itemInfos => {\n      this._itemCount = itemInfos.length;\n\n      if (0 === this._itemCount) {\n        this._resetFocus();\n      }\n\n      var parentDirectoryItem = this._findParentDirectoryItem(itemInfos);\n\n      this._hasParentDirectoryItem = !!parentDirectoryItem;\n      this._parentDirectoryItemKey = parentDirectoryItem ? parentDirectoryItem.fileItem.key : null;\n    }).always(() => {\n      this._onDataLoaded();\n    });\n  }\n\n  _getItemsInternal() {\n    var itemsGetter = this.option(\"getItems\");\n    var itemsResult = itemsGetter ? itemsGetter() : [];\n    return when(itemsResult);\n  }\n\n  _raiseOnError(error) {\n    this._actions.onError({\n      error: error\n    });\n  }\n\n  _raiseSelectionChanged(args) {\n    this._actions.onSelectionChanged(args);\n  }\n\n  _raiseFocusedItemChanged(args) {\n    this._actions.onFocusedItemChanged(args);\n  }\n\n  _raiseSelectedItemOpened(fileItemInfo) {\n    this._actions.onSelectedItemOpened({\n      fileItemInfo: fileItemInfo\n    });\n  }\n\n  _raiseContextMenuShowing(e) {\n    this._actions.onContextMenuShowing(e);\n  }\n\n  _raiseItemListDataLoaded() {\n    this._actions.onItemListDataLoaded();\n  }\n\n  _onDataLoaded() {\n    var _this$_refreshDeferre;\n\n    this._raiseItemListDataLoaded();\n\n    null === (_this$_refreshDeferre = this._refreshDeferred) || void 0 === _this$_refreshDeferre ? void 0 : _this$_refreshDeferre.resolve();\n  }\n\n  _tryRaiseSelectionChanged(_ref) {\n    var {\n      selectedItemInfos: selectedItemInfos,\n      selectedItems: selectedItems,\n      selectedItemKeys: selectedItemKeys,\n      currentSelectedItemKeys: currentSelectedItemKeys,\n      currentDeselectedItemKeys: currentDeselectedItemKeys\n    } = _ref;\n\n    var parentDirectoryItem = this._findParentDirectoryItem(this.getSelectedItems());\n\n    if (parentDirectoryItem) {\n      this._deselectItem(parentDirectoryItem);\n    }\n\n    var raiseEvent = !this._hasParentDirectoryItem;\n    raiseEvent = raiseEvent || this._hasValidKeys(currentSelectedItemKeys) || this._hasValidKeys(currentDeselectedItemKeys);\n\n    if (raiseEvent) {\n      selectedItemInfos = this._filterOutItemByPredicate(selectedItemInfos, item => item.fileItem.key === this._parentDirectoryItemKey);\n      selectedItems = this._filterOutParentDirectory(selectedItems);\n      selectedItemKeys = this._filterOutParentDirectoryKey(selectedItemKeys, true);\n      currentSelectedItemKeys = this._filterOutParentDirectoryKey(currentSelectedItemKeys, true);\n      currentDeselectedItemKeys = this._filterOutParentDirectoryKey(currentDeselectedItemKeys, true);\n\n      this._raiseSelectionChanged({\n        selectedItemInfos: selectedItemInfos,\n        selectedItems: selectedItems,\n        selectedItemKeys: selectedItemKeys,\n        currentSelectedItemKeys: currentSelectedItemKeys,\n        currentDeselectedItemKeys: currentDeselectedItemKeys\n      });\n    }\n  }\n\n  _onFocusedItemChanged(args) {\n    if (this._focusedItemKey === args.itemKey) {\n      return;\n    }\n\n    this._focusedItemKey = args.itemKey;\n    this._lockFocusedItemProcessing = true;\n    this.option(\"focusedItemKey\", args.itemKey);\n    this._lockFocusedItemProcessing = false;\n\n    this._raiseFocusedItemChanged(args);\n  }\n\n  _resetFocus() {}\n\n  _getItemThumbnail(fileInfo) {\n    var itemThumbnailGetter = this.option(\"getItemThumbnail\");\n    return itemThumbnailGetter ? itemThumbnailGetter(fileInfo) : {\n      thumbnail: \"\"\n    };\n  }\n\n  _getItemThumbnailContainer(fileInfo) {\n    var {\n      thumbnail: thumbnail,\n      cssClass: cssClass\n    } = this._getItemThumbnail(fileInfo);\n\n    var $itemThumbnail = getImageContainer(thumbnail).addClass(this._getItemThumbnailCssClass());\n\n    if (cssClass) {\n      $itemThumbnail.addClass(cssClass);\n    }\n\n    return $itemThumbnail;\n  }\n\n  _getItemThumbnailCssClass() {\n    return \"\";\n  }\n\n  _getItemSelector() {}\n\n  _onItemDblClick(e) {}\n\n  _isDesktop() {\n    return \"desktop\" === devices.real().deviceType;\n  }\n\n  _showContextMenu(items, element, event, target) {\n    this._contextMenu.showAt(items, element, event, target);\n  }\n\n  get _contextMenu() {\n    return this.option(\"contextMenu\");\n  }\n\n  _findParentDirectoryItem(itemInfos) {\n    for (var i = 0; i < itemInfos.length; i++) {\n      var itemInfo = itemInfos[i];\n\n      if (this._isParentDirectoryItem(itemInfo)) {\n        return itemInfo;\n      }\n    }\n\n    return null;\n  }\n\n  _getFileItemsForContextMenu(fileItem) {\n    var result = this.getSelectedItems();\n\n    if (this._isParentDirectoryItem(fileItem)) {\n      result.push(fileItem);\n    }\n\n    return result;\n  }\n\n  _isParentDirectoryItem(itemInfo) {\n    return itemInfo.fileItem.isParentFolder;\n  }\n\n  _hasValidKeys(keys) {\n    return keys.length > 1 || 1 === keys.length && keys[0] !== this._parentDirectoryItemKey;\n  }\n\n  _filterOutParentDirectory(array, createNewArray) {\n    return this._filterOutItemByPredicate(array, item => item.key === this._parentDirectoryItemKey, createNewArray);\n  }\n\n  _filterOutParentDirectoryKey(array, createNewArray) {\n    return this._filterOutItemByPredicate(array, key => key === this._parentDirectoryItemKey, createNewArray);\n  }\n\n  _filterOutItemByPredicate(array, predicate, createNewArray) {\n    var result = array;\n    var index = -1;\n\n    for (var i = 0; i < array.length; i++) {\n      if (predicate(array[i])) {\n        index = i;\n        break;\n      }\n    }\n\n    if (-1 !== index) {\n      if (createNewArray) {\n        result = [...array];\n      }\n\n      result.splice(index, 1);\n    }\n\n    return result;\n  }\n\n  _isMultipleSelectionMode() {\n    return \"multiple\" === this.option(\"selectionMode\");\n  }\n\n  _deselectItem(item) {}\n\n  _setSelectedItemKeys(itemKeys) {}\n\n  _setFocusedItemKey(itemKey) {}\n\n  _createDataSource() {\n    return {\n      store: new CustomStore({\n        key: \"fileItem.key\",\n        load: this._getItems.bind(this)\n      })\n    };\n  }\n\n  getSelectedItems() {}\n\n  clearSelection() {}\n\n  selectItem() {}\n\n}\n\nexport default FileManagerItemListBase;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.item_list.js"],"names":["extend","when","name","dblClickName","addNamespace","eventsEngine","getImageContainer","devices","CustomStore","Widget","FILE_MANAGER_FILES_VIEW_CLASS","FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE","FileManagerItemListBase","_init","_initActions","_lockFocusedItemProcessing","_focusedItemKey","option","_initMarkup","$element","addClass","dblClickEventName","on","_getItemSelector","_onItemDblClick","bind","_actions","onError","_createActionByOption","onSelectionChanged","onFocusedItemChanged","onSelectedItemOpened","onContextMenuShowing","onItemListDataLoaded","_getDefaultOptions","selectionMode","selectedItemKeys","focusedItemKey","contextMenu","getItems","getItemThumbnail","_optionChanged","args","repaint","_setSelectedItemKeys","value","_setFocusedItemKey","_getItems","_getItemsInternal","done","itemInfos","_itemCount","length","_resetFocus","parentDirectoryItem","_findParentDirectoryItem","_hasParentDirectoryItem","_parentDirectoryItemKey","fileItem","key","always","_onDataLoaded","itemsGetter","itemsResult","_raiseOnError","error","_raiseSelectionChanged","_raiseFocusedItemChanged","_raiseSelectedItemOpened","fileItemInfo","_raiseContextMenuShowing","e","_raiseItemListDataLoaded","_this$_refreshDeferre","_refreshDeferred","resolve","_tryRaiseSelectionChanged","_ref","selectedItemInfos","selectedItems","currentSelectedItemKeys","currentDeselectedItemKeys","getSelectedItems","_deselectItem","raiseEvent","_hasValidKeys","_filterOutItemByPredicate","item","_filterOutParentDirectory","_filterOutParentDirectoryKey","_onFocusedItemChanged","itemKey","_getItemThumbnail","fileInfo","itemThumbnailGetter","thumbnail","_getItemThumbnailContainer","cssClass","$itemThumbnail","_getItemThumbnailCssClass","_isDesktop","real","deviceType","_showContextMenu","items","element","event","target","_contextMenu","showAt","i","itemInfo","_isParentDirectoryItem","_getFileItemsForContextMenu","result","push","isParentFolder","keys","array","createNewArray","predicate","index","splice","_isMultipleSelectionMode","itemKeys","_createDataSource","store","load","clearSelection","selectItem"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    name as dblClickName\r\n} from \"../../events/double_click\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport devices from \"../../core/devices\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport Widget from \"../widget/ui.widget\";\r\nvar FILE_MANAGER_FILES_VIEW_CLASS = \"dx-filemanager-files-view\";\r\nvar FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE = \"dxFileManager_open\";\r\nclass FileManagerItemListBase extends Widget {\r\n    _init() {\r\n        this._initActions();\r\n        this._lockFocusedItemProcessing = false;\r\n        this._focusedItemKey = this.option(\"focusedItemKey\");\r\n        super._init()\r\n    }\r\n    _initMarkup() {\r\n        this.$element().addClass(FILE_MANAGER_FILES_VIEW_CLASS);\r\n        var dblClickEventName = addNamespace(dblClickName, FILE_MANAGER_ITEM_LIST_ITEM_OPEN_EVENT_NAMESPACE);\r\n        eventsEngine.on(this.$element(), dblClickEventName, this._getItemSelector(), this._onItemDblClick.bind(this));\r\n        super._initMarkup()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onError: this._createActionByOption(\"onError\"),\r\n            onSelectionChanged: this._createActionByOption(\"onSelectionChanged\"),\r\n            onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\"),\r\n            onSelectedItemOpened: this._createActionByOption(\"onSelectedItemOpened\"),\r\n            onContextMenuShowing: this._createActionByOption(\"onContextMenuShowing\"),\r\n            onItemListDataLoaded: this._createActionByOption(\"onItemListDataLoaded\")\r\n        }\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            selectionMode: \"single\",\r\n            selectedItemKeys: [],\r\n            focusedItemKey: void 0,\r\n            contextMenu: null,\r\n            getItems: null,\r\n            getItemThumbnail: null,\r\n            onError: null,\r\n            onSelectionChanged: null,\r\n            onFocusedItemChanged: null,\r\n            onSelectedItemOpened: null,\r\n            onContextMenuShowing: null\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"selectionMode\":\r\n            case \"contextMenu\":\r\n            case \"getItems\":\r\n            case \"getItemThumbnail\":\r\n                this.repaint();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n                this._setSelectedItemKeys(args.value);\r\n                break;\r\n            case \"focusedItemKey\":\r\n                if (!this._lockFocusedItemProcessing) {\r\n                    this._setFocusedItemKey(args.value)\r\n                }\r\n                break;\r\n            case \"onError\":\r\n            case \"onSelectedItemOpened\":\r\n            case \"onSelectionChanged\":\r\n            case \"onFocusedItemChanged\":\r\n            case \"onContextMenuShowing\":\r\n            case \"onItemListDataLoaded\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _getItems() {\r\n        return this._getItemsInternal().done(itemInfos => {\r\n            this._itemCount = itemInfos.length;\r\n            if (0 === this._itemCount) {\r\n                this._resetFocus()\r\n            }\r\n            var parentDirectoryItem = this._findParentDirectoryItem(itemInfos);\r\n            this._hasParentDirectoryItem = !!parentDirectoryItem;\r\n            this._parentDirectoryItemKey = parentDirectoryItem ? parentDirectoryItem.fileItem.key : null\r\n        }).always(() => {\r\n            this._onDataLoaded()\r\n        })\r\n    }\r\n    _getItemsInternal() {\r\n        var itemsGetter = this.option(\"getItems\");\r\n        var itemsResult = itemsGetter ? itemsGetter() : [];\r\n        return when(itemsResult)\r\n    }\r\n    _raiseOnError(error) {\r\n        this._actions.onError({\r\n            error: error\r\n        })\r\n    }\r\n    _raiseSelectionChanged(args) {\r\n        this._actions.onSelectionChanged(args)\r\n    }\r\n    _raiseFocusedItemChanged(args) {\r\n        this._actions.onFocusedItemChanged(args)\r\n    }\r\n    _raiseSelectedItemOpened(fileItemInfo) {\r\n        this._actions.onSelectedItemOpened({\r\n            fileItemInfo: fileItemInfo\r\n        })\r\n    }\r\n    _raiseContextMenuShowing(e) {\r\n        this._actions.onContextMenuShowing(e)\r\n    }\r\n    _raiseItemListDataLoaded() {\r\n        this._actions.onItemListDataLoaded()\r\n    }\r\n    _onDataLoaded() {\r\n        var _this$_refreshDeferre;\r\n        this._raiseItemListDataLoaded();\r\n        null === (_this$_refreshDeferre = this._refreshDeferred) || void 0 === _this$_refreshDeferre ? void 0 : _this$_refreshDeferre.resolve()\r\n    }\r\n    _tryRaiseSelectionChanged(_ref) {\r\n        var {\r\n            selectedItemInfos: selectedItemInfos,\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedItemKeys,\r\n            currentSelectedItemKeys: currentSelectedItemKeys,\r\n            currentDeselectedItemKeys: currentDeselectedItemKeys\r\n        } = _ref;\r\n        var parentDirectoryItem = this._findParentDirectoryItem(this.getSelectedItems());\r\n        if (parentDirectoryItem) {\r\n            this._deselectItem(parentDirectoryItem)\r\n        }\r\n        var raiseEvent = !this._hasParentDirectoryItem;\r\n        raiseEvent = raiseEvent || this._hasValidKeys(currentSelectedItemKeys) || this._hasValidKeys(currentDeselectedItemKeys);\r\n        if (raiseEvent) {\r\n            selectedItemInfos = this._filterOutItemByPredicate(selectedItemInfos, item => item.fileItem.key === this._parentDirectoryItemKey);\r\n            selectedItems = this._filterOutParentDirectory(selectedItems);\r\n            selectedItemKeys = this._filterOutParentDirectoryKey(selectedItemKeys, true);\r\n            currentSelectedItemKeys = this._filterOutParentDirectoryKey(currentSelectedItemKeys, true);\r\n            currentDeselectedItemKeys = this._filterOutParentDirectoryKey(currentDeselectedItemKeys, true);\r\n            this._raiseSelectionChanged({\r\n                selectedItemInfos: selectedItemInfos,\r\n                selectedItems: selectedItems,\r\n                selectedItemKeys: selectedItemKeys,\r\n                currentSelectedItemKeys: currentSelectedItemKeys,\r\n                currentDeselectedItemKeys: currentDeselectedItemKeys\r\n            })\r\n        }\r\n    }\r\n    _onFocusedItemChanged(args) {\r\n        if (this._focusedItemKey === args.itemKey) {\r\n            return\r\n        }\r\n        this._focusedItemKey = args.itemKey;\r\n        this._lockFocusedItemProcessing = true;\r\n        this.option(\"focusedItemKey\", args.itemKey);\r\n        this._lockFocusedItemProcessing = false;\r\n        this._raiseFocusedItemChanged(args)\r\n    }\r\n    _resetFocus() {}\r\n    _getItemThumbnail(fileInfo) {\r\n        var itemThumbnailGetter = this.option(\"getItemThumbnail\");\r\n        return itemThumbnailGetter ? itemThumbnailGetter(fileInfo) : {\r\n            thumbnail: \"\"\r\n        }\r\n    }\r\n    _getItemThumbnailContainer(fileInfo) {\r\n        var {\r\n            thumbnail: thumbnail,\r\n            cssClass: cssClass\r\n        } = this._getItemThumbnail(fileInfo);\r\n        var $itemThumbnail = getImageContainer(thumbnail).addClass(this._getItemThumbnailCssClass());\r\n        if (cssClass) {\r\n            $itemThumbnail.addClass(cssClass)\r\n        }\r\n        return $itemThumbnail\r\n    }\r\n    _getItemThumbnailCssClass() {\r\n        return \"\"\r\n    }\r\n    _getItemSelector() {}\r\n    _onItemDblClick(e) {}\r\n    _isDesktop() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    }\r\n    _showContextMenu(items, element, event, target) {\r\n        this._contextMenu.showAt(items, element, event, target)\r\n    }\r\n    get _contextMenu() {\r\n        return this.option(\"contextMenu\")\r\n    }\r\n    _findParentDirectoryItem(itemInfos) {\r\n        for (var i = 0; i < itemInfos.length; i++) {\r\n            var itemInfo = itemInfos[i];\r\n            if (this._isParentDirectoryItem(itemInfo)) {\r\n                return itemInfo\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    _getFileItemsForContextMenu(fileItem) {\r\n        var result = this.getSelectedItems();\r\n        if (this._isParentDirectoryItem(fileItem)) {\r\n            result.push(fileItem)\r\n        }\r\n        return result\r\n    }\r\n    _isParentDirectoryItem(itemInfo) {\r\n        return itemInfo.fileItem.isParentFolder\r\n    }\r\n    _hasValidKeys(keys) {\r\n        return keys.length > 1 || 1 === keys.length && keys[0] !== this._parentDirectoryItemKey\r\n    }\r\n    _filterOutParentDirectory(array, createNewArray) {\r\n        return this._filterOutItemByPredicate(array, item => item.key === this._parentDirectoryItemKey, createNewArray)\r\n    }\r\n    _filterOutParentDirectoryKey(array, createNewArray) {\r\n        return this._filterOutItemByPredicate(array, key => key === this._parentDirectoryItemKey, createNewArray)\r\n    }\r\n    _filterOutItemByPredicate(array, predicate, createNewArray) {\r\n        var result = array;\r\n        var index = -1;\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (predicate(array[i])) {\r\n                index = i;\r\n                break\r\n            }\r\n        }\r\n        if (-1 !== index) {\r\n            if (createNewArray) {\r\n                result = [...array]\r\n            }\r\n            result.splice(index, 1)\r\n        }\r\n        return result\r\n    }\r\n    _isMultipleSelectionMode() {\r\n        return \"multiple\" === this.option(\"selectionMode\")\r\n    }\r\n    _deselectItem(item) {}\r\n    _setSelectedItemKeys(itemKeys) {}\r\n    _setFocusedItemKey(itemKey) {}\r\n    _createDataSource() {\r\n        return {\r\n            store: new CustomStore({\r\n                key: \"fileItem.key\",\r\n                load: this._getItems.bind(this)\r\n            })\r\n        }\r\n    }\r\n    getSelectedItems() {}\r\n    clearSelection() {}\r\n    selectItem() {}\r\n}\r\nexport default FileManagerItemListBase;\r\n"]},"metadata":{},"sourceType":"module"}