{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_color-picker-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorPickerModel = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _default_1 = require(\"../../../data/localization/_default\");\n\nvar color_1 = require(\"../../../model/color\");\n\nvar color_scheme_entry_1 = require(\"../../../model/colorization/color-scheme-entry\");\n\nvar ColorPickerModel = function () {\n  function ColorPickerModel(colorSchemeModel, colorPalette) {\n    var _this = this;\n\n    this.colorSchemeModel = colorSchemeModel;\n    this.colorPalette = colorPalette;\n    this.target = ko.observable();\n    this.visible = ko.observable();\n    this.colorCss = ko.observable('');\n\n    this.confirm = function () {\n      _this.entry.paletteIndex(null);\n\n      _this.entry.color(color_1.Color.fromRgbaString(_this.colorCss()));\n\n      if (_this.entry instanceof color_scheme_entry_1.AutoColorSchemeEntry) {\n        var newEntry = _this.entry.clone();\n\n        _this.colorSchemeModel.updateEntry(_this.entry, newEntry);\n      }\n\n      _this.visible(false);\n    };\n\n    this.buttonItems = ko.observableArray([{\n      toolbar: 'bottom',\n      location: 'after',\n      widget: 'dxButton',\n      options: {\n        text: _default_1.getLocalizationById('DashboardWebStringId.ButtonConfirm'),\n        onClick: this.confirm\n      }\n    }, {\n      toolbar: 'bottom',\n      location: 'after',\n      widget: 'dxButton',\n      options: {\n        text: _default_1.getLocalizationById('DashboardStringId.ButtonCancel'),\n        onClick: function () {\n          return _this.visible(false);\n        }\n      }\n    }]);\n  }\n\n  ColorPickerModel.prototype.init = function (entry, target) {\n    this.entry = entry;\n    var color = entry.paletteIndex() === null ? entry.color() : this.colorPalette()[entry.paletteIndex()];\n    this.colorCss(color ? color.css : '');\n    this.target(target);\n    this.visible(true);\n  };\n\n  return ColorPickerModel;\n}();\n\nexports.ColorPickerModel = ColorPickerModel;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/color-scheme-editor-extension/internal/_color-picker-model.js"],"names":["Object","defineProperty","exports","value","ColorPickerModel","ko","require","_default_1","color_1","color_scheme_entry_1","colorSchemeModel","colorPalette","_this","target","observable","visible","colorCss","confirm","entry","paletteIndex","color","Color","fromRgbaString","AutoColorSchemeEntry","newEntry","clone","updateEntry","buttonItems","observableArray","toolbar","location","widget","options","text","getLocalizationById","onClick","prototype","init","css"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_color-picker-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorPickerModel = void 0;\nvar ko = require(\"knockout\");\nvar _default_1 = require(\"../../../data/localization/_default\");\nvar color_1 = require(\"../../../model/color\");\nvar color_scheme_entry_1 = require(\"../../../model/colorization/color-scheme-entry\");\nvar ColorPickerModel = (function () {\n    function ColorPickerModel(colorSchemeModel, colorPalette) {\n        var _this = this;\n        this.colorSchemeModel = colorSchemeModel;\n        this.colorPalette = colorPalette;\n        this.target = ko.observable();\n        this.visible = ko.observable();\n        this.colorCss = ko.observable('');\n        this.confirm = function () {\n            _this.entry.paletteIndex(null);\n            _this.entry.color(color_1.Color.fromRgbaString(_this.colorCss()));\n            if (_this.entry instanceof color_scheme_entry_1.AutoColorSchemeEntry) {\n                var newEntry = _this.entry.clone();\n                _this.colorSchemeModel.updateEntry(_this.entry, newEntry);\n            }\n            _this.visible(false);\n        };\n        this.buttonItems = ko.observableArray([\n            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: _default_1.getLocalizationById('DashboardWebStringId.ButtonConfirm'), onClick: this.confirm } },\n            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: _default_1.getLocalizationById('DashboardStringId.ButtonCancel'), onClick: function () { return _this.visible(false); } } }\n        ]);\n    }\n    ColorPickerModel.prototype.init = function (entry, target) {\n        this.entry = entry;\n        var color = entry.paletteIndex() === null ? entry.color() : this.colorPalette()[entry.paletteIndex()];\n        this.colorCss(color ? color.css : '');\n        this.target(target);\n        this.visible(true);\n    };\n    return ColorPickerModel;\n}());\nexports.ColorPickerModel = ColorPickerModel;\n"]},"metadata":{},"sourceType":"script"}