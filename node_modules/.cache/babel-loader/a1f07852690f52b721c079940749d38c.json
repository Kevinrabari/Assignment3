{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_data-source-wizard-page-iterator.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataSourceWizardPageIteratorBase = void 0;\n\nvar analytics_wizard_1 = require(\"@devexpress/analytics-core/analytics-wizard\");\n\nvar page_id_1 = require(\"../pages/page-id\");\n\nvar DataSourceWizardPageIteratorBase = function (_super) {\n  __extends(DataSourceWizardPageIteratorBase, _super);\n\n  function DataSourceWizardPageIteratorBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataSourceWizardPageIteratorBase.prototype.getInitialPage = function () {\n    return page_id_1.DataSourceWizardPageId.ChooseDataSourceTypePage;\n  };\n\n  DataSourceWizardPageIteratorBase.prototype.getNextPageId = function (pageId) {\n    if (!pageId) {\n      return this.getInitialPage();\n    } else {\n      var currentState = this._getCurrentState();\n\n      switch (pageId) {\n        case page_id_1.DataSourceWizardPageId.ChooseDataSourceTypePage:\n          switch (currentState.dashboardDataSourceType) {\n            case 'Sql':\n              return analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage;\n\n            case 'Olap':\n              return page_id_1.OlapDataSourceWizardPageId.ChooseConnectionPage;\n\n            case 'Json':\n              return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseConnectionPage;\n\n            case 'Federation':\n              return analytics_wizard_1.FederationDataSourceWizardPageId.FederatedQueryConfigurePage;\n\n            default:\n              throw new Error('Unknown datasource type.');\n          }\n\n        case analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage:\n          return this.getConfigureQueryPage();\n\n        case analytics_wizard_1.ObjectDataSourceWizardPageId.ChooseTypesPage:\n          return analytics_wizard_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage;\n\n        case analytics_wizard_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage:\n          return analytics_wizard_1.ObjectDataSourceWizardPageId.ConfigureParametersPage;\n\n        case this.getConfigureQueryPage():\n          return this.getConfigureSqlParametersPage();\n\n        case analytics_wizard_1.JsonDataSourceWizardPageId.ChooseConnectionPage:\n          if (currentState.jsonDataSourceWizard.connectionName) {\n            return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;\n          } else {\n            return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage;\n          }\n\n        case analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage:\n          return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;\n      }\n    }\n  };\n\n  DataSourceWizardPageIteratorBase.prototype.getConfigureQueryPage = function () {\n    return analytics_wizard_1.SqlDataSourceWizardPageId.ConfigureQueryPage;\n  };\n\n  DataSourceWizardPageIteratorBase.prototype.getConfigureSqlParametersPage = function () {\n    return analytics_wizard_1.SqlDataSourceWizardPageId.ConfigureParametersPage;\n  };\n\n  DataSourceWizardPageIteratorBase.prototype.getConfigureObjectParametersPage = function () {\n    return analytics_wizard_1.ObjectDataSourceWizardPageId.ConfigureParametersPage;\n  };\n\n  return DataSourceWizardPageIteratorBase;\n}(analytics_wizard_1.PageIterator);\n\nexports.DataSourceWizardPageIteratorBase = DataSourceWizardPageIteratorBase;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/data-source-wizard/wizards/_data-source-wizard-page-iterator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","DataSourceWizardPageIteratorBase","analytics_wizard_1","require","page_id_1","_super","apply","arguments","getInitialPage","DataSourceWizardPageId","ChooseDataSourceTypePage","getNextPageId","pageId","currentState","_getCurrentState","dashboardDataSourceType","SqlDataSourceWizardPageId","ChooseConnectionPage","OlapDataSourceWizardPageId","JsonDataSourceWizardPageId","FederationDataSourceWizardPageId","FederatedQueryConfigurePage","Error","getConfigureQueryPage","ObjectDataSourceWizardPageId","ChooseTypesPage","ChooseDataMembersPage","ConfigureParametersPage","getConfigureSqlParametersPage","jsonDataSourceWizard","connectionName","ChooseJsonSchemaPage","ChooseJsonSourcePage","ConfigureQueryPage","getConfigureObjectParametersPage","PageIterator"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_data-source-wizard-page-iterator.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataSourceWizardPageIteratorBase = void 0;\nvar analytics_wizard_1 = require(\"@devexpress/analytics-core/analytics-wizard\");\nvar page_id_1 = require(\"../pages/page-id\");\nvar DataSourceWizardPageIteratorBase = (function (_super) {\n    __extends(DataSourceWizardPageIteratorBase, _super);\n    function DataSourceWizardPageIteratorBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataSourceWizardPageIteratorBase.prototype.getInitialPage = function () {\n        return page_id_1.DataSourceWizardPageId.ChooseDataSourceTypePage;\n    };\n    DataSourceWizardPageIteratorBase.prototype.getNextPageId = function (pageId) {\n        if (!pageId) {\n            return this.getInitialPage();\n        }\n        else {\n            var currentState = this._getCurrentState();\n            switch (pageId) {\n                case page_id_1.DataSourceWizardPageId.ChooseDataSourceTypePage:\n                    switch (currentState.dashboardDataSourceType) {\n                        case 'Sql':\n                            return analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage;\n                        case 'Olap':\n                            return page_id_1.OlapDataSourceWizardPageId.ChooseConnectionPage;\n                        case 'Json':\n                            return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseConnectionPage;\n                        case 'Federation':\n                            return analytics_wizard_1.FederationDataSourceWizardPageId.FederatedQueryConfigurePage;\n                        default:\n                            throw new Error('Unknown datasource type.');\n                    }\n                case analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage:\n                    return this.getConfigureQueryPage();\n                case analytics_wizard_1.ObjectDataSourceWizardPageId.ChooseTypesPage:\n                    return analytics_wizard_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage;\n                case analytics_wizard_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage:\n                    return analytics_wizard_1.ObjectDataSourceWizardPageId.ConfigureParametersPage;\n                case this.getConfigureQueryPage():\n                    return this.getConfigureSqlParametersPage();\n                case analytics_wizard_1.JsonDataSourceWizardPageId.ChooseConnectionPage:\n                    if (currentState.jsonDataSourceWizard.connectionName) {\n                        return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;\n                    }\n                    else {\n                        return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage;\n                    }\n                case analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage:\n                    return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;\n            }\n        }\n    };\n    DataSourceWizardPageIteratorBase.prototype.getConfigureQueryPage = function () {\n        return analytics_wizard_1.SqlDataSourceWizardPageId.ConfigureQueryPage;\n    };\n    DataSourceWizardPageIteratorBase.prototype.getConfigureSqlParametersPage = function () {\n        return analytics_wizard_1.SqlDataSourceWizardPageId.ConfigureParametersPage;\n    };\n    DataSourceWizardPageIteratorBase.prototype.getConfigureObjectParametersPage = function () {\n        return analytics_wizard_1.ObjectDataSourceWizardPageId.ConfigureParametersPage;\n    };\n    return DataSourceWizardPageIteratorBase;\n}(analytics_wizard_1.PageIterator));\nexports.DataSourceWizardPageIteratorBase = DataSourceWizardPageIteratorBase;\n"]},"metadata":{},"sourceType":"script"}