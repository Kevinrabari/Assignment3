{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.templates.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getPublicElement } from \"../../core/element\";\nexport class GanttTemplatesManager {\n  constructor(gantt) {\n    this._gantt = gantt;\n  }\n\n  getTaskTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n    var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback) => {\n      template.render({\n        model: this._gantt.getTaskDataByCoreData(item),\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback();\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n  getTaskProgressTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n    var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback) => {\n      template.render({\n        model: item,\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback();\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n  getTaskTimeTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\n    var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback) => {\n      template.render({\n        model: item,\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback();\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n  getTaskContentTemplateFunc(taskContentTemplateOption) {\n    var template = taskContentTemplateOption && this._gantt._getTemplate(taskContentTemplateOption);\n\n    var createTemplateFunction = template && ((container, item, callback, index) => {\n      item.taskData = this._gantt.getTaskDataByCoreData(item.taskData);\n      template.render({\n        model: item,\n        container: getPublicElement($(container)),\n        onRendered: () => {\n          callback(container, index);\n        }\n      });\n      return true;\n    });\n\n    return createTemplateFunction;\n  }\n\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/gantt/ui.gantt.templates.js"],"names":["$","getPublicElement","GanttTemplatesManager","constructor","gantt","_gantt","getTaskTooltipContentTemplateFunc","taskTooltipContentTemplateOption","template","_getTemplate","createTemplateFunction","container","item","callback","render","model","getTaskDataByCoreData","onRendered","getTaskProgressTooltipContentTemplateFunc","getTaskTimeTooltipContentTemplateFunc","getTaskContentTemplateFunc","taskContentTemplateOption","index","taskData"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.templates.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nexport class GanttTemplatesManager {\r\n    constructor(gantt) {\r\n        this._gantt = gantt\r\n    }\r\n    getTaskTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\r\n        var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback) => {\r\n            template.render({\r\n                model: this._gantt.getTaskDataByCoreData(item),\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback()\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    getTaskProgressTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\r\n        var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback) => {\r\n            template.render({\r\n                model: item,\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback()\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    getTaskTimeTooltipContentTemplateFunc(taskTooltipContentTemplateOption) {\r\n        var template = taskTooltipContentTemplateOption && this._gantt._getTemplate(taskTooltipContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback) => {\r\n            template.render({\r\n                model: item,\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback()\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n    getTaskContentTemplateFunc(taskContentTemplateOption) {\r\n        var template = taskContentTemplateOption && this._gantt._getTemplate(taskContentTemplateOption);\r\n        var createTemplateFunction = template && ((container, item, callback, index) => {\r\n            item.taskData = this._gantt.getTaskDataByCoreData(item.taskData);\r\n            template.render({\r\n                model: item,\r\n                container: getPublicElement($(container)),\r\n                onRendered: () => {\r\n                    callback(container, index)\r\n                }\r\n            });\r\n            return true\r\n        });\r\n        return createTemplateFunction\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}