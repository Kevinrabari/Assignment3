{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_period-limit.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fixedDateTimePeriodLimitSerializationsInfo = exports.date = exports.flowDateTimePeriodLimitSerializationsInfo = exports.offset = exports.interval = exports.convertDateTimeGroupInterval = exports.flowIntervalValues = exports.flowIntervalOrderedValues = void 0;\n\nvar _base_metadata_1 = require(\"../../../metadata/_base-metadata\");\n\nexports.flowIntervalOrderedValues = ['Year', 'Quarter', 'Month', 'Week', 'Day', 'Hour', 'Minute', 'Second'];\nexports.flowIntervalValues = {\n  'Year': 'DashboardStringId.DateTimeIntervalYear',\n  'Quarter': 'DashboardStringId.DateTimeIntervalQuarter',\n  'Month': 'DashboardStringId.DateTimeIntervalMonth',\n  'Week': 'DashboardStringId.DateTimeIntervalWeek',\n  'Day': 'DashboardStringId.DateTimeIntervalDay',\n  'Hour': 'DashboardStringId.DateTimeIntervalHour',\n  'Minute': 'DashboardStringId.DateTimeIntervalMinute',\n  'Second': 'DashboardStringId.DateTimeIntervalSecond'\n};\n\nfunction convertDateTimeGroupInterval(groupInterval) {\n  var map = {\n    'Year': 'Year',\n    'QuarterYear': 'Quarter',\n    'MonthYear': 'Month',\n    'DayMonthYear': 'Day',\n    'DateHour': 'Hour',\n    'DateHourMinute': 'Minute',\n    'DateHourMinuteSecond': 'Second',\n    'None': 'Second'\n  };\n  var dateTimeInterval = map[groupInterval];\n\n  if (!dateTimeInterval) {\n    throw Error('Argument exception');\n  }\n\n  return dateTimeInterval;\n}\n\nexports.convertDateTimeGroupInterval = convertDateTimeGroupInterval;\nexports.interval = {\n  propertyName: 'interval',\n  modelName: '@Interval',\n  defaultVal: 'Year'\n};\nexports.offset = {\n  propertyName: 'offset',\n  modelName: '@Offset',\n  defaultVal: 0,\n  simpleFormAdapterItem: 'numberBoxEditor',\n  from: _base_metadata_1.floatFromModel\n};\nexports.flowDateTimePeriodLimitSerializationsInfo = [exports.interval, exports.offset];\nexports.date = {\n  propertyName: 'date',\n  modelName: '@Date',\n  defaultVal: _base_metadata_1.fromDateToString(new Date()),\n  from: _base_metadata_1.fromStringToDate,\n  toJsonObject: _base_metadata_1.fromDateToString,\n  simpleFormAdapterItem: 'dateBoxEditor'\n};\nexports.fixedDateTimePeriodLimitSerializationsInfo = [exports.date];","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/model/items/range-filter/metadata/_period-limit.js"],"names":["Object","defineProperty","exports","value","fixedDateTimePeriodLimitSerializationsInfo","date","flowDateTimePeriodLimitSerializationsInfo","offset","interval","convertDateTimeGroupInterval","flowIntervalValues","flowIntervalOrderedValues","_base_metadata_1","require","groupInterval","map","dateTimeInterval","Error","propertyName","modelName","defaultVal","simpleFormAdapterItem","from","floatFromModel","fromDateToString","Date","fromStringToDate","toJsonObject"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,0CAAR,GAAqDF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,yCAAR,GAAoDJ,OAAO,CAACK,MAAR,GAAiBL,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACO,4BAAR,GAAuCP,OAAO,CAACQ,kBAAR,GAA6BR,OAAO,CAACS,yBAAR,GAAoC,KAAK,CAAzQ;;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAA9B;;AACAX,OAAO,CAACS,yBAAR,GAAoC,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,KAArC,EAA4C,MAA5C,EAAoD,QAApD,EAA8D,QAA9D,CAApC;AACAT,OAAO,CAACQ,kBAAR,GAA6B;AACzB,UAAQ,wCADiB;AAEzB,aAAW,2CAFc;AAGzB,WAAS,yCAHgB;AAIzB,UAAQ,wCAJiB;AAKzB,SAAO,uCALkB;AAMzB,UAAQ,wCANiB;AAOzB,YAAU,0CAPe;AAQzB,YAAU;AARe,CAA7B;;AAUA,SAASD,4BAAT,CAAsCK,aAAtC,EAAqD;AACjD,MAAIC,GAAG,GAAG;AACN,YAAQ,MADF;AAEN,mBAAe,SAFT;AAGN,iBAAa,OAHP;AAIN,oBAAgB,KAJV;AAKN,gBAAY,MALN;AAMN,sBAAkB,QANZ;AAON,4BAAwB,QAPlB;AAQN,YAAQ;AARF,GAAV;AAUA,MAAIC,gBAAgB,GAAGD,GAAG,CAACD,aAAD,CAA1B;;AACA,MAAI,CAACE,gBAAL,EAAuB;AACnB,UAAMC,KAAK,CAAC,oBAAD,CAAX;AACH;;AACD,SAAOD,gBAAP;AACH;;AACDd,OAAO,CAACO,4BAAR,GAAuCA,4BAAvC;AACAP,OAAO,CAACM,QAAR,GAAmB;AAAEU,EAAAA,YAAY,EAAE,UAAhB;AAA4BC,EAAAA,SAAS,EAAE,WAAvC;AAAoDC,EAAAA,UAAU,EAAE;AAAhE,CAAnB;AACAlB,OAAO,CAACK,MAAR,GAAiB;AAAEW,EAAAA,YAAY,EAAE,QAAhB;AAA0BC,EAAAA,SAAS,EAAE,SAArC;AAAgDC,EAAAA,UAAU,EAAE,CAA5D;AAA+DC,EAAAA,qBAAqB,EAAE,iBAAtF;AAAyGC,EAAAA,IAAI,EAAEV,gBAAgB,CAACW;AAAhI,CAAjB;AACArB,OAAO,CAACI,yCAAR,GAAoD,CAACJ,OAAO,CAACM,QAAT,EAAmBN,OAAO,CAACK,MAA3B,CAApD;AACAL,OAAO,CAACG,IAAR,GAAe;AAAEa,EAAAA,YAAY,EAAE,MAAhB;AAAwBC,EAAAA,SAAS,EAAE,OAAnC;AAA4CC,EAAAA,UAAU,EAAER,gBAAgB,CAACY,gBAAjB,CAAkC,IAAIC,IAAJ,EAAlC,CAAxD;AAAuGH,EAAAA,IAAI,EAAEV,gBAAgB,CAACc,gBAA9H;AAAgJC,EAAAA,YAAY,EAAEf,gBAAgB,CAACY,gBAA/K;AAAiMH,EAAAA,qBAAqB,EAAE;AAAxN,CAAf;AACAnB,OAAO,CAACE,0CAAR,GAAqD,CAACF,OAAO,CAACG,IAAT,CAArD","sourcesContent":["/**\r\n* DevExpress Dashboard (_period-limit.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixedDateTimePeriodLimitSerializationsInfo = exports.date = exports.flowDateTimePeriodLimitSerializationsInfo = exports.offset = exports.interval = exports.convertDateTimeGroupInterval = exports.flowIntervalValues = exports.flowIntervalOrderedValues = void 0;\nvar _base_metadata_1 = require(\"../../../metadata/_base-metadata\");\nexports.flowIntervalOrderedValues = ['Year', 'Quarter', 'Month', 'Week', 'Day', 'Hour', 'Minute', 'Second'];\nexports.flowIntervalValues = {\n    'Year': 'DashboardStringId.DateTimeIntervalYear',\n    'Quarter': 'DashboardStringId.DateTimeIntervalQuarter',\n    'Month': 'DashboardStringId.DateTimeIntervalMonth',\n    'Week': 'DashboardStringId.DateTimeIntervalWeek',\n    'Day': 'DashboardStringId.DateTimeIntervalDay',\n    'Hour': 'DashboardStringId.DateTimeIntervalHour',\n    'Minute': 'DashboardStringId.DateTimeIntervalMinute',\n    'Second': 'DashboardStringId.DateTimeIntervalSecond'\n};\nfunction convertDateTimeGroupInterval(groupInterval) {\n    var map = {\n        'Year': 'Year',\n        'QuarterYear': 'Quarter',\n        'MonthYear': 'Month',\n        'DayMonthYear': 'Day',\n        'DateHour': 'Hour',\n        'DateHourMinute': 'Minute',\n        'DateHourMinuteSecond': 'Second',\n        'None': 'Second'\n    };\n    var dateTimeInterval = map[groupInterval];\n    if (!dateTimeInterval) {\n        throw Error('Argument exception');\n    }\n    return dateTimeInterval;\n}\nexports.convertDateTimeGroupInterval = convertDateTimeGroupInterval;\nexports.interval = { propertyName: 'interval', modelName: '@Interval', defaultVal: 'Year' };\nexports.offset = { propertyName: 'offset', modelName: '@Offset', defaultVal: 0, simpleFormAdapterItem: 'numberBoxEditor', from: _base_metadata_1.floatFromModel };\nexports.flowDateTimePeriodLimitSerializationsInfo = [exports.interval, exports.offset];\nexports.date = { propertyName: 'date', modelName: '@Date', defaultVal: _base_metadata_1.fromDateToString(new Date()), from: _base_metadata_1.fromStringToDate, toJsonObject: _base_metadata_1.fromDateToString, simpleFormAdapterItem: 'dateBoxEditor' };\nexports.fixedDateTimePeriodLimitSerializationsInfo = [exports.date];\n"]},"metadata":{},"sourceType":"script"}