{"ast":null,"code":"/**\r\n* DevExpress Dashboard (notificator.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NotificationController = void 0;\n\nvar _utils_1 = require(\"../../data/_utils\");\n\nvar _notificator_view_model_1 = require(\"./_notificator-view-model\");\n\nvar NotificationController = function () {\n  function NotificationController() {\n    this._viewModel = new _notificator_view_model_1.NotificationControllerViewModel();\n  }\n\n  NotificationController._getErrorTextFromResponse = function (request) {\n    return request && request.responseJSON && request.responseJSON.Message || '';\n  };\n\n  NotificationController._getDetailedErrorMessage = function (errorInfo) {\n    var errorDetail = '';\n\n    if (typeof errorInfo == 'string') {\n      errorDetail = errorInfo;\n    } else if (errorInfo && errorInfo['responseJSON']) {\n      errorDetail = NotificationController._getErrorTextFromResponse(errorInfo);\n    }\n\n    return _utils_1.decodeHtml(errorDetail);\n  };\n\n  NotificationController.prototype.suspended = function (isSuspended) {\n    this._viewModel.suspended(isSuspended);\n  };\n\n  NotificationController.prototype.showState = function (message) {\n    this._viewModel.updateNotification('info', message);\n  };\n\n  NotificationController.prototype.showSuccess = function (message) {\n    this._viewModel.updateNotification('success', message);\n  };\n\n  NotificationController.prototype.showError = function (title, errorInfo) {\n    var errorDetail = NotificationController._getDetailedErrorMessage(errorInfo);\n\n    this._viewModel.updateNotification('error', title, errorDetail);\n\n    console.warn(title + (errorDetail ? ' - ' + errorDetail : ''));\n  };\n\n  NotificationController.prototype.reset = function () {\n    this._viewModel.reset();\n  };\n\n  return NotificationController;\n}();\n\nexports.NotificationController = NotificationController;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/common/notification-controller/notificator.js"],"names":["Object","defineProperty","exports","value","NotificationController","_utils_1","require","_notificator_view_model_1","_viewModel","NotificationControllerViewModel","_getErrorTextFromResponse","request","responseJSON","Message","_getDetailedErrorMessage","errorInfo","errorDetail","decodeHtml","prototype","suspended","isSuspended","showState","message","updateNotification","showSuccess","showError","title","console","warn","reset"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,sBAAR,GAAiC,KAAK,CAAtC;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AACA,IAAIC,yBAAyB,GAAGD,OAAO,CAAC,2BAAD,CAAvC;;AACA,IAAIF,sBAAsB,GAAI,YAAY;AACtC,WAASA,sBAAT,GAAkC;AAC9B,SAAKI,UAAL,GAAkB,IAAID,yBAAyB,CAACE,+BAA9B,EAAlB;AACH;;AACDL,EAAAA,sBAAsB,CAACM,yBAAvB,GAAmD,UAAUC,OAAV,EAAmB;AAClE,WAAQA,OAAO,IAAIA,OAAO,CAACC,YAAnB,IAAmCD,OAAO,CAACC,YAAR,CAAqBC,OAAzD,IAAqE,EAA5E;AACH,GAFD;;AAGAT,EAAAA,sBAAsB,CAACU,wBAAvB,GAAkD,UAAUC,SAAV,EAAqB;AACnE,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAI,OAAOD,SAAP,IAAoB,QAAxB,EAAkC;AAC9BC,MAAAA,WAAW,GAAGD,SAAd;AACH,KAFD,MAGK,IAAIA,SAAS,IAAIA,SAAS,CAAC,cAAD,CAA1B,EAA4C;AAC7CC,MAAAA,WAAW,GAAGZ,sBAAsB,CAACM,yBAAvB,CAAiDK,SAAjD,CAAd;AACH;;AACD,WAAOV,QAAQ,CAACY,UAAT,CAAoBD,WAApB,CAAP;AACH,GATD;;AAUAZ,EAAAA,sBAAsB,CAACc,SAAvB,CAAiCC,SAAjC,GAA6C,UAAUC,WAAV,EAAuB;AAChE,SAAKZ,UAAL,CAAgBW,SAAhB,CAA0BC,WAA1B;AACH,GAFD;;AAGAhB,EAAAA,sBAAsB,CAACc,SAAvB,CAAiCG,SAAjC,GAA6C,UAAUC,OAAV,EAAmB;AAC5D,SAAKd,UAAL,CAAgBe,kBAAhB,CAAmC,MAAnC,EAA2CD,OAA3C;AACH,GAFD;;AAGAlB,EAAAA,sBAAsB,CAACc,SAAvB,CAAiCM,WAAjC,GAA+C,UAAUF,OAAV,EAAmB;AAC9D,SAAKd,UAAL,CAAgBe,kBAAhB,CAAmC,SAAnC,EAA8CD,OAA9C;AACH,GAFD;;AAGAlB,EAAAA,sBAAsB,CAACc,SAAvB,CAAiCO,SAAjC,GAA6C,UAAUC,KAAV,EAAiBX,SAAjB,EAA4B;AACrE,QAAIC,WAAW,GAAGZ,sBAAsB,CAACU,wBAAvB,CAAgDC,SAAhD,CAAlB;;AACA,SAAKP,UAAL,CAAgBe,kBAAhB,CAAmC,OAAnC,EAA4CG,KAA5C,EAAmDV,WAAnD;;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAaF,KAAK,IAAIV,WAAW,GAAG,QAAQA,WAAX,GAAyB,EAAxC,CAAlB;AACH,GAJD;;AAKAZ,EAAAA,sBAAsB,CAACc,SAAvB,CAAiCW,KAAjC,GAAyC,YAAY;AACjD,SAAKrB,UAAL,CAAgBqB,KAAhB;AACH,GAFD;;AAGA,SAAOzB,sBAAP;AACH,CAnC6B,EAA9B;;AAoCAF,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC","sourcesContent":["/**\r\n* DevExpress Dashboard (notificator.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotificationController = void 0;\nvar _utils_1 = require(\"../../data/_utils\");\nvar _notificator_view_model_1 = require(\"./_notificator-view-model\");\nvar NotificationController = (function () {\n    function NotificationController() {\n        this._viewModel = new _notificator_view_model_1.NotificationControllerViewModel();\n    }\n    NotificationController._getErrorTextFromResponse = function (request) {\n        return (request && request.responseJSON && request.responseJSON.Message) || '';\n    };\n    NotificationController._getDetailedErrorMessage = function (errorInfo) {\n        var errorDetail = '';\n        if (typeof errorInfo == 'string') {\n            errorDetail = errorInfo;\n        }\n        else if (errorInfo && errorInfo['responseJSON']) {\n            errorDetail = NotificationController._getErrorTextFromResponse(errorInfo);\n        }\n        return _utils_1.decodeHtml(errorDetail);\n    };\n    NotificationController.prototype.suspended = function (isSuspended) {\n        this._viewModel.suspended(isSuspended);\n    };\n    NotificationController.prototype.showState = function (message) {\n        this._viewModel.updateNotification('info', message);\n    };\n    NotificationController.prototype.showSuccess = function (message) {\n        this._viewModel.updateNotification('success', message);\n    };\n    NotificationController.prototype.showError = function (title, errorInfo) {\n        var errorDetail = NotificationController._getDetailedErrorMessage(errorInfo);\n        this._viewModel.updateNotification('error', title, errorDetail);\n        console.warn(title + (errorDetail ? ' - ' + errorDetail : ''));\n    };\n    NotificationController.prototype.reset = function () {\n        this._viewModel.reset();\n    };\n    return NotificationController;\n}());\nexports.NotificationController = NotificationController;\n"]},"metadata":{},"sourceType":"script"}