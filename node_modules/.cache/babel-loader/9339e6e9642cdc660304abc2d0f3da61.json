{"ast":null,"code":"/**\n* DevExpress Analytics (serializer\\serializer.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModelSerializer = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _utils_1 = require(\"./_utils\");\n\nvar utils_1 = require(\"./utils\");\n\nvar ModelSerializer = function () {\n  function ModelSerializer(options) {\n    this._refTable = {};\n    this._linkTable = {};\n    this._options = _utils_1.extend({\n      useRefs: true,\n      serializeDate: utils_1.serializeDate\n    }, options);\n  }\n\n  ModelSerializer.prototype.linkObjects = function () {\n    var _this = this;\n\n    Object.keys(this._linkTable).forEach(function (index) {\n      var val = _this._refTable[index];\n\n      if (val) {\n        _this._linkTable[index].splice(0).forEach(function (property) {\n          return property(val);\n        });\n      }\n    });\n  };\n\n  ModelSerializer.prototype._getModel = function (model, propertyPath) {\n    var currentModel = model;\n    propertyPath.forEach(function (name) {\n      currentModel = currentModel[name];\n    });\n    return currentModel;\n  };\n\n  ModelSerializer.prototype._collectLinks = function (model, internalModel, propertyPath, propertyName) {\n    var _this = this;\n\n    var refVal = model[propertyName].slice('#Ref-'.length);\n    var value = ko.observable();\n    this._linkTable[refVal] = this._linkTable[refVal] || [];\n\n    this._linkTable[refVal].push(value);\n\n    if (!internalModel._restoreLinks) internalModel._restoreLinks = [];\n\n    internalModel._restoreLinks.push(function (model) {\n      var currentModel = _this._getModel(model, propertyPath);\n\n      return {\n        setRef: function (ref) {\n          if (ref === -1) delete currentModel[propertyName];else currentModel[propertyName] = '#Ref-' + ref;\n        },\n        obj: value()\n      };\n    });\n  };\n\n  ModelSerializer.prototype._enumRefs = function (internalModel, propertyPath, propertyName) {\n    var _this = this;\n\n    if (!internalModel._refs) internalModel._refs = [];\n\n    internalModel._refs.push(function (model, ref) {\n      _this._getModel(model, propertyPath)[propertyName] = ref;\n    });\n  };\n\n  ModelSerializer.prototype._collectLinksAndEnumRefs = function (model, internalModel, propertyPath) {\n    var _this = this;\n\n    if (internalModel === void 0) {\n      internalModel = null;\n    }\n\n    if (propertyPath === void 0) {\n      propertyPath = [];\n    }\n\n    var start = internalModel === null;\n    internalModel = internalModel || model;\n    Object.keys(model).forEach(function (propertyName) {\n      if (model[propertyName] instanceof Object) {\n        _this._collectLinksAndEnumRefs(model[propertyName], internalModel, [].concat(propertyPath, [propertyName]));\n      } else if (model[propertyName].indexOf && model[propertyName].indexOf('#Ref-') === 0) {\n        _this._collectLinks(model, internalModel, propertyPath, propertyName);\n      } else if (!start && propertyName === '@Ref') {\n        _this._enumRefs(internalModel, propertyPath, propertyName);\n      }\n    });\n    if (start) this.linkObjects();\n  };\n\n  ModelSerializer.prototype.setLinks = function (refs) {\n    refs.linkObjTable.forEach(function (item) {\n      var refValue = refs.objects.indexOf(item.obj);\n      item.setRef(refValue);\n    });\n  };\n\n  ModelSerializer.prototype.deserializeProperty = function (modelPropertyInfo, model) {\n    var propName = modelPropertyInfo.modelName;\n\n    if (!propName) {\n      return;\n    }\n\n    var modelValue = model[propName] !== undefined ? model[propName] : modelPropertyInfo.defaultVal;\n    return this.deserializePropertyValue(modelPropertyInfo, modelValue);\n  };\n\n  ModelSerializer.prototype.deserializeDefaultValue = function (modelPropertyInfo) {\n    var value = this.deserializePropertyValue(modelPropertyInfo, modelPropertyInfo.defaultVal, false);\n    return value || modelPropertyInfo.defaultVal;\n  };\n\n  ModelSerializer.prototype.deserializePropertyValue = function (modelPropertyInfo, modelValue, strict) {\n    var _this = this;\n\n    if (strict === void 0) {\n      strict = true;\n    }\n\n    if (typeof modelPropertyInfo === 'string') {\n      return ko.observable(modelValue);\n    } else if (modelPropertyInfo.link) {\n      var value = ko.observable(null);\n\n      if (modelValue) {\n        var refVal = modelValue && modelValue.slice('#Ref-'.length);\n        this._linkTable[refVal] = this._linkTable[refVal] || [];\n\n        this._linkTable[refVal].push(value);\n      }\n\n      return value;\n    } else if (modelPropertyInfo.array) {\n      if (modelPropertyInfo.from) {\n        return modelPropertyInfo.from(modelValue, this);\n      } else if (modelPropertyInfo.info) {\n        var result = Object.keys(modelValue || {}).map(function (propertyName) {\n          var object = {\n            getInfo: function () {\n              return modelPropertyInfo.info;\n            }\n          };\n\n          _this.deserialize(object, modelValue[propertyName] || {});\n\n          return object;\n        });\n        return ko.observableArray(result);\n      }\n\n      return;\n    } else if (modelPropertyInfo.from) {\n      return modelPropertyInfo.from(modelValue, this);\n    } else if (modelPropertyInfo.type) {\n      var ctorResult = new modelPropertyInfo.type(modelValue, this, modelPropertyInfo.info);\n\n      if (!ctorResult._model) {\n        this.deserialize(ctorResult, modelValue || {}, modelPropertyInfo.info);\n      }\n\n      return ctorResult;\n    } else if (modelPropertyInfo.info) {\n      var object = {\n        getInfo: function () {\n          return modelPropertyInfo.info;\n        }\n      };\n      this.deserialize(object, modelValue || {});\n      return object;\n    } else if (modelPropertyInfo.modelName) {\n      return ko.observable(modelValue);\n    }\n\n    if (strict) {\n      throw new Error(\"Invalid info '\" + JSON.stringify(modelPropertyInfo) + \"'\");\n    }\n\n    return;\n  };\n\n  ModelSerializer.prototype.deserialize = function (viewModel, model, serializationsInfo) {\n    var _this = this;\n\n    if (serializationsInfo === void 0) {\n      serializationsInfo = null;\n    }\n\n    if (!model) {\n      return;\n    }\n\n    viewModel._model = _utils_1.extend({}, model);\n    var serializationsInfo = viewModel.getInfo ? viewModel.getInfo() : serializationsInfo;\n    var refValue = model['@Ref'];\n    var proto = Object.getPrototypeOf(viewModel);\n    serializationsInfo.forEach(function (modelPropertyInfo) {\n      var propertyName = modelPropertyInfo.propertyName,\n          propName = modelPropertyInfo.modelName;\n\n      if (model[propName] !== undefined) {\n        delete viewModel._model[propName];\n      }\n\n      var property = _this.deserializeProperty(modelPropertyInfo, model);\n\n      var descriptor = Object.getOwnPropertyDescriptor(proto, propertyName);\n      if (property !== undefined && (!descriptor || !!descriptor.set)) viewModel[propertyName] = property;\n\n      if (!(propertyName in viewModel) && property === undefined && modelPropertyInfo.array) {\n        var currentArray = ko.observable(undefined);\n        Object.defineProperty(viewModel, propertyName, {\n          get: function () {\n            return currentArray();\n          },\n          set: function (val) {\n            currentArray(val);\n          },\n          enumerable: true\n        });\n      }\n    });\n\n    if (refValue) {\n      this._refTable[refValue] = viewModel;\n    }\n\n    this.linkObjects();\n  };\n\n  ModelSerializer.prototype.serialize = function (viewModel, serializationsInfo, refs) {\n    if (refs === void 0) {\n      refs = null;\n    }\n\n    if (!serializationsInfo && !refs) {\n      return this._serialize(viewModel, null, null);\n    }\n\n    return this._serialize(viewModel, serializationsInfo, refs);\n  };\n\n  ModelSerializer.prototype._isSerializableValue = function (resultValue) {\n    return _utils_1.isPlainObject(resultValue) && !_utils_1.isEmptyObject(resultValue) || Array.isArray(resultValue) && resultValue['length'] > 0 || !Array.isArray(resultValue) && !_utils_1.isPlainObject(resultValue);\n  };\n\n  ModelSerializer.prototype.serializeProperty = function (modelPropertyInfo, viewModel, serializationsInfo, refs, result) {\n    var _this = this;\n\n    var propertyName = modelPropertyInfo.propertyName,\n        value = ko.unwrap(viewModel['_' + propertyName] || viewModel[propertyName]),\n        defaultVal = modelPropertyInfo.defaultVal;\n    if (modelPropertyInfo.beforeSerialize) value = modelPropertyInfo.beforeSerialize(value);\n\n    if (!!modelPropertyInfo.from) {\n      defaultVal = ko.unwrap(modelPropertyInfo.from(defaultVal, this));\n    }\n\n    var resultValue = {};\n\n    if (!modelPropertyInfo.modelName) {\n      return;\n    }\n\n    if (modelPropertyInfo.alwaysSerialize || value !== undefined && value !== null && (_utils_1.isPlainObject(value) || !_utils_1.isEmptyObject(value) || Array.isArray(value) && value.length > 0 || !Array.isArray(value) && !_utils_1.isPlainObject(value)) && value !== defaultVal) {\n      if (modelPropertyInfo.link) {\n        refs.linkObjTable.push({\n          obj: value,\n          setRef: function (index) {\n            if (index < 0) {\n              delete result[modelPropertyInfo.modelName];\n            } else {\n              result[modelPropertyInfo.modelName] = '#Ref-' + index;\n            }\n          }\n        });\n        resultValue = undefined;\n      } else if (modelPropertyInfo.array) {\n        resultValue = {};\n        var index = 1;\n        value.forEach(function (item) {\n          var info = modelPropertyInfo.info || null;\n\n          var item_ = _this._serialize(item, info, refs);\n\n          if (_this._isSerializableValue(item_) || modelPropertyInfo.alwaysSerialize) {\n            resultValue['Item' + index] = item_;\n\n            if (_this._options.useRefs) {\n              item_['@Ref'] = (refs.objects.push(item) - 1).toString();\n            }\n\n            index++;\n          }\n        });\n      } else if (modelPropertyInfo.from) {\n        if (value['isEmpty'] && value['isEmpty']()) {\n          resultValue = {};\n        } else {\n          resultValue = modelPropertyInfo.toJsonObject ? modelPropertyInfo.toJsonObject(value, this, refs) : value.toString();\n        }\n      } else if (modelPropertyInfo.info || value['getInfo']) {\n        resultValue = this._serialize(value, modelPropertyInfo.info, refs);\n      } else if (modelPropertyInfo.modelName) {\n        if (value instanceof Date) {\n          resultValue = this._options.serializeDate(value);\n        } else {\n          resultValue = value;\n        }\n      } else {\n        throw new Error(\"Invalid info '\" + serializationsInfo.stringify() + \"'\");\n      }\n\n      if (modelPropertyInfo.alwaysSerialize || this._isSerializableValue(resultValue)) {\n        if (modelPropertyInfo.asRef) {\n          resultValue['@Ref'] = (refs.objects.push(value) - 1).toString();\n        }\n\n        result[modelPropertyInfo.modelName] = resultValue;\n      }\n    }\n  };\n\n  ModelSerializer.prototype._serialize = function (viewModel, serializationsInfo, refs) {\n    var _this = this;\n\n    var result = _utils_1.extend(true, {}, viewModel._model),\n        isInitial = refs === null;\n\n    refs = refs || {\n      linkObjTable: [],\n      objects: []\n    };\n\n    if (result._restoreLinks) {\n      refs.linkObjTable.push.apply(refs.linkObjTable, result._restoreLinks.map(function (x) {\n        return x(result);\n      }));\n      delete result._restoreLinks;\n    }\n\n    if (result._refs) {\n      result._refs.forEach(function (x) {\n        return x(result, (refs.objects.push('0') - 1).toString());\n      });\n\n      delete result._refs;\n    }\n\n    serializationsInfo = viewModel.getInfo ? viewModel.getInfo() : serializationsInfo;\n    delete result['@Ref'];\n    if (viewModel['isEmpty'] && viewModel['isEmpty']()) return {};\n    serializationsInfo.forEach(function (modelPropertyInfo) {\n      _this.serializeProperty(modelPropertyInfo, viewModel, serializationsInfo, refs, result);\n    });\n    if (isInitial) this.setLinks(refs);\n    return result;\n  };\n\n  return ModelSerializer;\n}();\n\nexports.ModelSerializer = ModelSerializer;","map":{"version":3,"sources":["/Users/kevinrabari/Desktop/Georgian College Work/1005_ Mobile Web Application/Assignment3/node_modules/@devexpress/analytics-core/serializer/serializer.js"],"names":["Object","defineProperty","exports","value","ModelSerializer","ko","require","_utils_1","utils_1","options","_refTable","_linkTable","_options","extend","useRefs","serializeDate","prototype","linkObjects","_this","keys","forEach","index","val","splice","property","_getModel","model","propertyPath","currentModel","name","_collectLinks","internalModel","propertyName","refVal","slice","length","observable","push","_restoreLinks","setRef","ref","obj","_enumRefs","_refs","_collectLinksAndEnumRefs","start","concat","indexOf","setLinks","refs","linkObjTable","item","refValue","objects","deserializeProperty","modelPropertyInfo","propName","modelName","modelValue","undefined","defaultVal","deserializePropertyValue","deserializeDefaultValue","strict","link","array","from","info","result","map","object","getInfo","deserialize","observableArray","type","ctorResult","_model","Error","JSON","stringify","viewModel","serializationsInfo","proto","getPrototypeOf","descriptor","getOwnPropertyDescriptor","set","currentArray","get","enumerable","serialize","_serialize","_isSerializableValue","resultValue","isPlainObject","isEmptyObject","Array","isArray","serializeProperty","unwrap","beforeSerialize","alwaysSerialize","item_","toString","toJsonObject","Date","asRef","isInitial","apply","x"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (serializer\\serializer.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModelSerializer = void 0;\nvar ko = require(\"knockout\");\nvar _utils_1 = require(\"./_utils\");\nvar utils_1 = require(\"./utils\");\nvar ModelSerializer = (function () {\n    function ModelSerializer(options) {\n        this._refTable = {};\n        this._linkTable = {};\n        this._options = _utils_1.extend({\n            useRefs: true,\n            serializeDate: utils_1.serializeDate\n        }, options);\n    }\n    ModelSerializer.prototype.linkObjects = function () {\n        var _this = this;\n        Object.keys(this._linkTable).forEach(function (index) {\n            var val = _this._refTable[index];\n            if (val) {\n                _this._linkTable[index].splice(0).forEach(function (property) { return property(val); });\n            }\n        });\n    };\n    ModelSerializer.prototype._getModel = function (model, propertyPath) {\n        var currentModel = model;\n        propertyPath.forEach(function (name) {\n            currentModel = currentModel[name];\n        });\n        return currentModel;\n    };\n    ModelSerializer.prototype._collectLinks = function (model, internalModel, propertyPath, propertyName) {\n        var _this = this;\n        var refVal = model[propertyName].slice('#Ref-'.length);\n        var value = ko.observable();\n        this._linkTable[refVal] = this._linkTable[refVal] || [];\n        this._linkTable[refVal].push(value);\n        if (!internalModel._restoreLinks)\n            internalModel._restoreLinks = [];\n        internalModel._restoreLinks.push(function (model) {\n            var currentModel = _this._getModel(model, propertyPath);\n            return {\n                setRef: function (ref) {\n                    if (ref === -1)\n                        delete currentModel[propertyName];\n                    else\n                        currentModel[propertyName] = '#Ref-' + ref;\n                },\n                obj: value()\n            };\n        });\n    };\n    ModelSerializer.prototype._enumRefs = function (internalModel, propertyPath, propertyName) {\n        var _this = this;\n        if (!internalModel._refs)\n            internalModel._refs = [];\n        internalModel._refs.push(function (model, ref) {\n            _this._getModel(model, propertyPath)[propertyName] = ref;\n        });\n    };\n    ModelSerializer.prototype._collectLinksAndEnumRefs = function (model, internalModel, propertyPath) {\n        var _this = this;\n        if (internalModel === void 0) { internalModel = null; }\n        if (propertyPath === void 0) { propertyPath = []; }\n        var start = internalModel === null;\n        internalModel = internalModel || model;\n        Object.keys(model).forEach(function (propertyName) {\n            if (model[propertyName] instanceof Object) {\n                _this._collectLinksAndEnumRefs(model[propertyName], internalModel, [].concat(propertyPath, [propertyName]));\n            }\n            else if (model[propertyName].indexOf && model[propertyName].indexOf('#Ref-') === 0) {\n                _this._collectLinks(model, internalModel, propertyPath, propertyName);\n            }\n            else if (!start && propertyName === '@Ref') {\n                _this._enumRefs(internalModel, propertyPath, propertyName);\n            }\n        });\n        if (start)\n            this.linkObjects();\n    };\n    ModelSerializer.prototype.setLinks = function (refs) {\n        refs.linkObjTable.forEach(function (item) {\n            var refValue = refs.objects.indexOf(item.obj);\n            item.setRef(refValue);\n        });\n    };\n    ModelSerializer.prototype.deserializeProperty = function (modelPropertyInfo, model) {\n        var propName = modelPropertyInfo.modelName;\n        if (!propName) {\n            return;\n        }\n        var modelValue = model[propName] !== undefined ? model[propName] : modelPropertyInfo.defaultVal;\n        return this.deserializePropertyValue(modelPropertyInfo, modelValue);\n    };\n    ModelSerializer.prototype.deserializeDefaultValue = function (modelPropertyInfo) {\n        var value = this.deserializePropertyValue(modelPropertyInfo, modelPropertyInfo.defaultVal, false);\n        return value || modelPropertyInfo.defaultVal;\n    };\n    ModelSerializer.prototype.deserializePropertyValue = function (modelPropertyInfo, modelValue, strict) {\n        var _this = this;\n        if (strict === void 0) { strict = true; }\n        if (typeof modelPropertyInfo === 'string') {\n            return ko.observable(modelValue);\n        }\n        else if (modelPropertyInfo.link) {\n            var value = ko.observable(null);\n            if (modelValue) {\n                var refVal = modelValue && modelValue.slice('#Ref-'.length);\n                this._linkTable[refVal] = this._linkTable[refVal] || [];\n                this._linkTable[refVal].push(value);\n            }\n            return value;\n        }\n        else if (modelPropertyInfo.array) {\n            if (modelPropertyInfo.from) {\n                return modelPropertyInfo.from(modelValue, this);\n            }\n            else if (modelPropertyInfo.info) {\n                var result = Object.keys(modelValue || {}).map(function (propertyName) {\n                    var object = { getInfo: function () { return modelPropertyInfo.info; } };\n                    _this.deserialize(object, modelValue[propertyName] || {});\n                    return object;\n                });\n                return ko.observableArray(result);\n            }\n            return;\n        }\n        else if (modelPropertyInfo.from) {\n            return modelPropertyInfo.from(modelValue, this);\n        }\n        else if (modelPropertyInfo.type) {\n            var ctorResult = new modelPropertyInfo.type(modelValue, this, modelPropertyInfo.info);\n            if (!ctorResult._model) {\n                this.deserialize(ctorResult, modelValue || {}, modelPropertyInfo.info);\n            }\n            return ctorResult;\n        }\n        else if (modelPropertyInfo.info) {\n            var object = { getInfo: function () { return modelPropertyInfo.info; } };\n            this.deserialize(object, modelValue || {});\n            return object;\n        }\n        else if (modelPropertyInfo.modelName) {\n            return ko.observable(modelValue);\n        }\n        if (strict) {\n            throw new Error(\"Invalid info '\" + JSON.stringify(modelPropertyInfo) + \"'\");\n        }\n        return;\n    };\n    ModelSerializer.prototype.deserialize = function (viewModel, model, serializationsInfo) {\n        var _this = this;\n        if (serializationsInfo === void 0) { serializationsInfo = null; }\n        if (!model) {\n            return;\n        }\n        viewModel._model = _utils_1.extend({}, model);\n        var serializationsInfo = viewModel.getInfo ? viewModel.getInfo() : serializationsInfo;\n        var refValue = model['@Ref'];\n        var proto = Object.getPrototypeOf(viewModel);\n        serializationsInfo.forEach(function (modelPropertyInfo) {\n            var propertyName = modelPropertyInfo.propertyName, propName = modelPropertyInfo.modelName;\n            if (model[propName] !== undefined) {\n                delete viewModel._model[propName];\n            }\n            var property = _this.deserializeProperty(modelPropertyInfo, model);\n            var descriptor = Object.getOwnPropertyDescriptor(proto, propertyName);\n            if (property !== undefined && (!descriptor || !!descriptor.set))\n                viewModel[propertyName] = property;\n            if (!(propertyName in viewModel) && property === undefined && modelPropertyInfo.array) {\n                var currentArray = ko.observable(undefined);\n                Object.defineProperty(viewModel, propertyName, {\n                    get: function () {\n                        return currentArray();\n                    },\n                    set: function (val) {\n                        currentArray(val);\n                    },\n                    enumerable: true\n                });\n            }\n        });\n        if (refValue) {\n            this._refTable[refValue] = viewModel;\n        }\n        this.linkObjects();\n    };\n    ModelSerializer.prototype.serialize = function (viewModel, serializationsInfo, refs) {\n        if (refs === void 0) { refs = null; }\n        if (!serializationsInfo && !refs) {\n            return this._serialize(viewModel, null, null);\n        }\n        return this._serialize(viewModel, serializationsInfo, refs);\n    };\n    ModelSerializer.prototype._isSerializableValue = function (resultValue) {\n        return (_utils_1.isPlainObject(resultValue) && !_utils_1.isEmptyObject(resultValue)) || (Array.isArray(resultValue) && resultValue['length'] > 0) || (!Array.isArray(resultValue) && !_utils_1.isPlainObject(resultValue));\n    };\n    ModelSerializer.prototype.serializeProperty = function (modelPropertyInfo, viewModel, serializationsInfo, refs, result) {\n        var _this = this;\n        var propertyName = modelPropertyInfo.propertyName, value = ko.unwrap(viewModel['_' + propertyName] || viewModel[propertyName]), defaultVal = modelPropertyInfo.defaultVal;\n        if (modelPropertyInfo.beforeSerialize)\n            value = modelPropertyInfo.beforeSerialize(value);\n        if (!!modelPropertyInfo.from) {\n            defaultVal = ko.unwrap(modelPropertyInfo.from(defaultVal, this));\n        }\n        var resultValue = {};\n        if (!modelPropertyInfo.modelName) {\n            return;\n        }\n        if (modelPropertyInfo.alwaysSerialize || ((value !== undefined && value !== null) && ((_utils_1.isPlainObject(value) || !_utils_1.isEmptyObject(value)) || (Array.isArray(value) && value.length > 0) || (!Array.isArray(value) && !_utils_1.isPlainObject(value))) && (value !== defaultVal))) {\n            if (modelPropertyInfo.link) {\n                refs.linkObjTable.push({\n                    obj: value,\n                    setRef: function (index) {\n                        if (index < 0) {\n                            delete result[modelPropertyInfo.modelName];\n                        }\n                        else {\n                            result[modelPropertyInfo.modelName] = '#Ref-' + index;\n                        }\n                    }\n                });\n                resultValue = undefined;\n            }\n            else if (modelPropertyInfo.array) {\n                resultValue = {};\n                var index = 1;\n                value.forEach(function (item) {\n                    var info = modelPropertyInfo.info || null;\n                    var item_ = _this._serialize(item, info, refs);\n                    if (_this._isSerializableValue(item_) || modelPropertyInfo.alwaysSerialize) {\n                        resultValue['Item' + index] = item_;\n                        if (_this._options.useRefs) {\n                            item_['@Ref'] = (refs.objects.push(item) - 1).toString();\n                        }\n                        index++;\n                    }\n                });\n            }\n            else if (modelPropertyInfo.from) {\n                if (value['isEmpty'] && value['isEmpty']()) {\n                    resultValue = {};\n                }\n                else {\n                    resultValue = modelPropertyInfo.toJsonObject ? modelPropertyInfo.toJsonObject(value, this, refs) : value.toString();\n                }\n            }\n            else if (modelPropertyInfo.info || value['getInfo']) {\n                resultValue = this._serialize(value, modelPropertyInfo.info, refs);\n            }\n            else if (modelPropertyInfo.modelName) {\n                if (value instanceof Date) {\n                    resultValue = this._options.serializeDate(value);\n                }\n                else {\n                    resultValue = value;\n                }\n            }\n            else {\n                throw new Error(\"Invalid info '\" + serializationsInfo.stringify() + \"'\");\n            }\n            if (modelPropertyInfo.alwaysSerialize || this._isSerializableValue(resultValue)) {\n                if (modelPropertyInfo.asRef) {\n                    resultValue['@Ref'] = (refs.objects.push(value) - 1).toString();\n                }\n                result[modelPropertyInfo.modelName] = resultValue;\n            }\n        }\n    };\n    ModelSerializer.prototype._serialize = function (viewModel, serializationsInfo, refs) {\n        var _this = this;\n        var result = _utils_1.extend(true, {}, viewModel._model), isInitial = refs === null;\n        refs = refs || { linkObjTable: [], objects: [] };\n        if (result._restoreLinks) {\n            refs.linkObjTable.push.apply(refs.linkObjTable, result._restoreLinks.map(function (x) { return x(result); }));\n            delete result._restoreLinks;\n        }\n        if (result._refs) {\n            result._refs.forEach(function (x) { return x(result, (refs.objects.push('0') - 1).toString()); });\n            delete result._refs;\n        }\n        serializationsInfo = viewModel.getInfo ? viewModel.getInfo() : serializationsInfo;\n        delete result['@Ref'];\n        if (viewModel['isEmpty'] && viewModel['isEmpty']())\n            return {};\n        serializationsInfo.forEach(function (modelPropertyInfo) {\n            _this.serializeProperty(modelPropertyInfo, viewModel, serializationsInfo, refs, result);\n        });\n        if (isInitial)\n            this.setLinks(refs);\n        return result;\n    };\n    return ModelSerializer;\n}());\nexports.ModelSerializer = ModelSerializer;\n"]},"metadata":{},"sourceType":"script"}