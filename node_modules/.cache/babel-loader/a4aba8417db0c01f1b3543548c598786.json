{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_card-arrangement-info.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cardArrangementInfo = exports.borders = exports.paddings = exports.margins = void 0;\n\nvar _new_card_item_1 = require(\"./_new-card-item\");\n\nexports.margins = _new_card_item_1.newCardMeasurements.margin * 2, exports.paddings = _new_card_item_1.newCardMeasurements.padding * 2, exports.borders = _new_card_item_1.newCardMeasurements.borderWidth * 2;\n\nvar cardArrangementInfo = function () {\n  function cardArrangementInfo() {\n    this.etalonWidth = 11;\n    this.etalonHeight = 10;\n    this.arrangementDirection = 'column';\n    this.ignorePadding = false;\n  }\n\n  cardArrangementInfo.prototype.getMarginOffset = function () {\n    return this.ignorePadding ? exports.margins : 0;\n  };\n\n  cardArrangementInfo.prototype.getScrollableHeight = function () {\n    return Math.max(this.rowCount * this.cellHeight - this.getMarginOffset(), this.viewerHeight);\n  };\n\n  cardArrangementInfo.prototype.getScrollableWidth = function () {\n    return Math.max(this.columnCount * this.cellWidth - this.getMarginOffset(), this.viewerWidth);\n  };\n\n  cardArrangementInfo.prototype.proportionFactor = function () {\n    return Math.abs((this.etalonWidth - this.etalonHeight) / (this.etalonWidth + this.etalonHeight) - (this.cellWidth - this.cellHeight) / (this.cellWidth + this.cellHeight));\n  };\n\n  cardArrangementInfo.prototype.getCardContentHeight = function () {\n    return this.cellHeight - exports.margins - exports.paddings - exports.borders;\n  };\n\n  cardArrangementInfo.prototype.getCardContentWidth = function () {\n    return this.cellWidth - exports.margins - exports.paddings - exports.borders;\n  };\n\n  cardArrangementInfo.prototype.getCardWidth = function () {\n    return this.cellWidth - exports.margins;\n  };\n\n  cardArrangementInfo.prototype.getCardHeight = function () {\n    return this.cellHeight - exports.margins;\n  };\n\n  cardArrangementInfo.prototype.hasVerticalScroll = function () {\n    return this.getScrollableHeight() > this.viewerHeight;\n  };\n\n  cardArrangementInfo.prototype.hasHorizontalScroll = function () {\n    return this.getScrollableWidth() > this.viewerWidth;\n  };\n\n  return cardArrangementInfo;\n}();\n\nexports.cardArrangementInfo = cardArrangementInfo;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/widgets/widgets-viewer/cards/_card-arrangement-info.js"],"names":["Object","defineProperty","exports","value","cardArrangementInfo","borders","paddings","margins","_new_card_item_1","require","newCardMeasurements","margin","padding","borderWidth","etalonWidth","etalonHeight","arrangementDirection","ignorePadding","prototype","getMarginOffset","getScrollableHeight","Math","max","rowCount","cellHeight","viewerHeight","getScrollableWidth","columnCount","cellWidth","viewerWidth","proportionFactor","abs","getCardContentHeight","getCardContentWidth","getCardWidth","getCardHeight","hasVerticalScroll","hasHorizontalScroll"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_card-arrangement-info.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cardArrangementInfo = exports.borders = exports.paddings = exports.margins = void 0;\nvar _new_card_item_1 = require(\"./_new-card-item\");\nexports.margins = _new_card_item_1.newCardMeasurements.margin * 2, exports.paddings = _new_card_item_1.newCardMeasurements.padding * 2, exports.borders = _new_card_item_1.newCardMeasurements.borderWidth * 2;\nvar cardArrangementInfo = (function () {\n    function cardArrangementInfo() {\n        this.etalonWidth = 11;\n        this.etalonHeight = 10;\n        this.arrangementDirection = 'column';\n        this.ignorePadding = false;\n    }\n    cardArrangementInfo.prototype.getMarginOffset = function () {\n        return this.ignorePadding ? exports.margins : 0;\n    };\n    cardArrangementInfo.prototype.getScrollableHeight = function () {\n        return Math.max(this.rowCount * this.cellHeight - this.getMarginOffset(), this.viewerHeight);\n    };\n    cardArrangementInfo.prototype.getScrollableWidth = function () {\n        return Math.max(this.columnCount * this.cellWidth - this.getMarginOffset(), this.viewerWidth);\n    };\n    cardArrangementInfo.prototype.proportionFactor = function () {\n        return Math.abs(((this.etalonWidth - this.etalonHeight) / (this.etalonWidth + this.etalonHeight)) - ((this.cellWidth - this.cellHeight) / (this.cellWidth + this.cellHeight)));\n    };\n    cardArrangementInfo.prototype.getCardContentHeight = function () {\n        return this.cellHeight - exports.margins - exports.paddings - exports.borders;\n    };\n    cardArrangementInfo.prototype.getCardContentWidth = function () {\n        return this.cellWidth - exports.margins - exports.paddings - exports.borders;\n    };\n    cardArrangementInfo.prototype.getCardWidth = function () {\n        return this.cellWidth - exports.margins;\n    };\n    cardArrangementInfo.prototype.getCardHeight = function () {\n        return this.cellHeight - exports.margins;\n    };\n    cardArrangementInfo.prototype.hasVerticalScroll = function () {\n        return this.getScrollableHeight() > this.viewerHeight;\n    };\n    cardArrangementInfo.prototype.hasHorizontalScroll = function () {\n        return this.getScrollableWidth() > this.viewerWidth;\n    };\n    return cardArrangementInfo;\n}());\nexports.cardArrangementInfo = cardArrangementInfo;\n"]},"metadata":{},"sourceType":"script"}