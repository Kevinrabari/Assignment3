{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_expanding-manager.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExpandingManager = void 0;\n\nvar _date_utils_1 = require(\"./_date-utils\");\n\nvar ExpandingManager = function () {\n  function ExpandingManager() {\n    this._expandingParams = undefined;\n    this._expandingState = undefined;\n  }\n\n  ExpandingManager.prototype.getPivotExpandViewState = function () {\n    return this._dxPivotState;\n  };\n\n  ExpandingManager.prototype.setExpandingParams = function (expandingParams) {\n    this._expandingParams = expandingParams;\n  };\n\n  ExpandingManager.prototype.onViewStateChanged = function (expandingState, dxPivotState) {\n    this._expandingState = expandingState;\n    this._dxPivotState = dxPivotState;\n  };\n\n  ExpandingManager.prototype.canProvideExpandingState = function () {\n    return this._expandingParams || this._expandingState;\n  };\n\n  ExpandingManager.prototype.calculateExpandingState = function () {\n    var params = this._expandingParams;\n    var state = this._expandingState;\n    return {\n      rows: state && _date_utils_1.toStringArray(state.rows) || [],\n      columns: state && _date_utils_1.toStringArray(state.columns) || [],\n      values: !!params ? _date_utils_1.toStringArray(params.values) : undefined,\n      isColumn: !!params && params.isColumn\n    };\n  };\n\n  ExpandingManager.prototype.resetExpandingParams = function () {\n    this._expandingParams = undefined;\n  };\n\n  ExpandingManager.prototype.resetColumnViewState = function (autoExpand) {\n    this._expandingState = {\n      rows: this._expandingState.rows,\n      columns: []\n    };\n\n    if (this._dxPivotState) {\n      this._dxPivotState.fields && this._dxPivotState.fields.filter(function (f) {\n        return f.area === 'column';\n      }).forEach(function (f) {\n        f.expanded = autoExpand;\n      });\n      this._dxPivotState.columnExpandedPaths = [];\n    }\n  };\n\n  ExpandingManager.prototype.resetRowViewState = function (autoExpand) {\n    this._expandingState = {\n      rows: [],\n      columns: this._expandingState.columns\n    };\n\n    if (this._dxPivotState) {\n      this._dxPivotState.fields && this._dxPivotState.fields.filter(function (f) {\n        return f.area === 'row';\n      }).forEach(function (f) {\n        f.expanded = autoExpand;\n      });\n      this._dxPivotState.rowExpandedPaths = [];\n    }\n  };\n\n  return ExpandingManager;\n}();\n\nexports.ExpandingManager = ExpandingManager;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/model/internal/_expanding-manager.js"],"names":["Object","defineProperty","exports","value","ExpandingManager","_date_utils_1","require","_expandingParams","undefined","_expandingState","prototype","getPivotExpandViewState","_dxPivotState","setExpandingParams","expandingParams","onViewStateChanged","expandingState","dxPivotState","canProvideExpandingState","calculateExpandingState","params","state","rows","toStringArray","columns","values","isColumn","resetExpandingParams","resetColumnViewState","autoExpand","fields","filter","f","area","forEach","expanded","columnExpandedPaths","resetRowViewState","rowExpandedPaths"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_expanding-manager.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExpandingManager = void 0;\nvar _date_utils_1 = require(\"./_date-utils\");\nvar ExpandingManager = (function () {\n    function ExpandingManager() {\n        this._expandingParams = undefined;\n        this._expandingState = undefined;\n    }\n    ExpandingManager.prototype.getPivotExpandViewState = function () {\n        return this._dxPivotState;\n    };\n    ExpandingManager.prototype.setExpandingParams = function (expandingParams) {\n        this._expandingParams = expandingParams;\n    };\n    ExpandingManager.prototype.onViewStateChanged = function (expandingState, dxPivotState) {\n        this._expandingState = expandingState;\n        this._dxPivotState = dxPivotState;\n    };\n    ExpandingManager.prototype.canProvideExpandingState = function () {\n        return this._expandingParams || this._expandingState;\n    };\n    ExpandingManager.prototype.calculateExpandingState = function () {\n        var params = this._expandingParams;\n        var state = this._expandingState;\n        return {\n            rows: state && _date_utils_1.toStringArray(state.rows) || [],\n            columns: state && _date_utils_1.toStringArray(state.columns) || [],\n            values: !!params ? _date_utils_1.toStringArray(params.values) : undefined,\n            isColumn: !!params && params.isColumn\n        };\n    };\n    ExpandingManager.prototype.resetExpandingParams = function () {\n        this._expandingParams = undefined;\n    };\n    ExpandingManager.prototype.resetColumnViewState = function (autoExpand) {\n        this._expandingState = { rows: this._expandingState.rows, columns: [] };\n        if (this._dxPivotState) {\n            this._dxPivotState.fields && this._dxPivotState.fields.filter(function (f) { return f.area === 'column'; }).forEach(function (f) { f.expanded = autoExpand; });\n            this._dxPivotState.columnExpandedPaths = [];\n        }\n    };\n    ExpandingManager.prototype.resetRowViewState = function (autoExpand) {\n        this._expandingState = { rows: [], columns: this._expandingState.columns };\n        if (this._dxPivotState) {\n            this._dxPivotState.fields && this._dxPivotState.fields.filter(function (f) { return f.area === 'row'; }).forEach(function (f) { f.expanded = autoExpand; });\n            this._dxPivotState.rowExpandedPaths = [];\n        }\n    };\n    return ExpandingManager;\n}());\nexports.ExpandingManager = ExpandingManager;\n"]},"metadata":{},"sourceType":"script"}