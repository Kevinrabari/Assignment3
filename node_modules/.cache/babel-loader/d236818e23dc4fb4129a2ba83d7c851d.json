{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_card-layout.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verticalAlignment = exports.horizontalAlignment = exports.sparklineOptions = exports.cardSparklineElement = exports.cardIndicatorElement = exports.cardRowElement = exports.cardRowElementBase = exports.cardRow = exports.cardLayout = void 0;\n\nvar _utils_1 = require(\"../../../../data/_utils\");\n\nvar _cssHelper_1 = require(\"../../../viewer/_cssHelper\");\n\nvar cardLayout = function () {\n  function cardLayout(apiHandlers) {\n    var _this = this;\n\n    this.apiHandlers = apiHandlers;\n    this.rows = [];\n\n    this._cardCFFilter = function (elementModel) {\n      return function (rule, applyToCardId) {\n        var cardRule = rule;\n        var result = false;\n\n        if (_this._isValidCardId(cardRule, applyToCardId)) {\n          if (!elementModel || cardRule.ApplyToRow) result = true;else {\n            if (cardRule.ApplyToLayoutElementModel.ApplyToLayoutElement === elementModel.Type) {\n              if (cardRule.ApplyToLayoutElementModel.ApplyToLayoutElement === 'Dimension') result = cardRule.ApplyToLayoutElementModel.DimensionId === elementModel.DataId;else if (cardRule.ApplyToLayoutElementModel.ApplyToLayoutElement === 'Text') result = cardRule.ApplyToLayoutElementModel.Text === elementModel.Text;else result = true;\n            }\n          }\n        }\n\n        return result;\n      };\n    };\n\n    this._layoutElementCssClassesLinks = [];\n    this._layoutElementCssClassesNames = [];\n  }\n\n  cardLayout.prototype.hasRowElementCssClass = function (className) {\n    return this._layoutElementCssClassesNames.filter(function (x) {\n      return x === className;\n    }).length > 0;\n  };\n\n  cardLayout.prototype.addRowElementCss = function (className, selector, properties) {\n    if (!this.hasRowElementCssClass(className)) {\n      this._layoutElementCssClassesNames.push(className);\n\n      this._layoutElementCssClassesLinks.push(_cssHelper_1.createCssClass(selector, properties));\n    }\n  };\n\n  cardLayout.prototype.getCardBackgroundColor = function () {\n    return this.apiHandlers && this.apiHandlers.cardBackColor;\n  };\n\n  cardLayout.prototype._isValidCardId = function (cardRule, applyToCardId) {\n    if (cardRule.ApplyToCardId) return cardRule.ApplyToCardId === applyToCardId;\n    return true;\n  };\n\n  cardLayout.prototype.fill = function (layoutModel) {\n    var _this = this;\n\n    this.minWidth = layoutModel.MinWidth;\n    this.maxWidth = layoutModel.MaxWidth;\n    layoutModel.Rows.forEach(function (rowModel, i) {\n      var row = new cardRow();\n      row.vAlignment = _this.convertVAlignment(rowModel.VAlignment);\n      row.indent = rowModel.Indent;\n      rowModel.Elements.forEach(function (elementModel, j) {\n        if (elementModel.Type === 'Indicator') {\n          var indicatorElement = new cardIndicatorElement();\n\n          indicatorElement.getStyleSettings = function (data) {\n            return data.getStyleSettingsInfo(_this._cardCFFilter(elementModel));\n          };\n\n          indicatorElement.getIndicatorType = function (data) {\n            return _this.isDeltaType(elementModel.Type) && data.getIndicatorType();\n          };\n\n          indicatorElement.getIsGood = function (data) {\n            return _this.isDeltaType(elementModel.Type) && data.getIsGood();\n          };\n\n          indicatorElement.width = elementModel.Size;\n          indicatorElement.height = Math.round(elementModel.Size / elementModel.IndicatorWidthRatio);\n          indicatorElement.hAlignment = _this.convertHAlignment(elementModel.HAlignment);\n          row.elements.push(indicatorElement);\n        } else if (elementModel.Type === 'Sparkline') {\n          var sparklineElement = new cardSparklineElement();\n          sparklineElement.height = elementModel.Size;\n\n          sparklineElement.getSparklineOptions = function (data) {\n            return data.getSparklineOptions();\n          };\n\n          row.elements.push(sparklineElement);\n        } else {\n          var rowElement = new cardRowElement();\n          rowElement.id = elementModel.Id;\n\n          rowElement.getStyleSettings = function (data) {\n            return data.getStyleSettingsInfo(_this._cardCFFilter(elementModel));\n          };\n\n          rowElement.predefinedColor = elementModel.PredefinedColor;\n          rowElement.color = _this.convertElementColor(elementModel.Color);\n          rowElement.hAlignment = _this.convertHAlignment(elementModel.HAlignment);\n          rowElement.fontSize = elementModel.FontSize;\n          rowElement.fontFamily = elementModel.FontFamily;\n\n          rowElement.getValueArgs = function (data) {\n            return _this.getElementValue(data, elementModel);\n          };\n\n          rowElement.getText = function (data) {\n            var text;\n\n            var valueArgs = _this.getElementValue(data, elementModel);\n\n            if (_this.apiHandlers && _this.apiHandlers.onCustomizeText) {\n              text = _this.apiHandlers.onCustomizeText(valueArgs);\n            }\n\n            return text || valueArgs.getDefaultText();\n          };\n\n          rowElement.getIndicatorType = function (data) {\n            return _this.isDeltaType(elementModel.Type) ? data.getIndicatorType() : undefined;\n          };\n\n          rowElement.getIsGood = function (data) {\n            return _this.isDeltaType(elementModel.Type) && data.getIsGood();\n          };\n\n          row.elements.push(rowElement);\n        }\n      });\n\n      _this.rows.push(row);\n    });\n\n    this.getStyleSettings = function (data) {\n      return data.getStyleSettingsInfo(_this._cardCFFilter());\n    };\n  };\n\n  cardLayout.prototype.isDeltaType = function (elementType) {\n    return elementType === 'AbsoluteVariation' || elementType === 'PercentVariation' || elementType === 'PercentOfTarget' || elementType === 'ActualValue' || elementType === 'TargetValue' || elementType === 'Indicator';\n  };\n\n  cardLayout.prototype.convertElementColor = function (color) {\n    return color ? _utils_1.toColor(color) : null;\n  };\n\n  cardLayout.prototype.getElementValue = function (data, elementModel) {\n    var valueGetter = function () {\n      return '';\n    };\n\n    var displayTextGetter = function () {\n      return '';\n    };\n\n    switch (elementModel.Type) {\n      case 'Title':\n        valueGetter = data.getTitle;\n        displayTextGetter = data.getTitle;\n        break;\n\n      case 'Subtitle':\n        valueGetter = data.getSubtitle;\n        displayTextGetter = data.getSubtitle;\n        break;\n\n      case 'Text':\n        valueGetter = function (s) {\n          return elementModel.Text;\n        };\n\n        displayTextGetter = function (s) {\n          return elementModel.Text;\n        };\n\n        break;\n\n      case 'ActualValue':\n        valueGetter = data.getActualValue;\n        displayTextGetter = data.getActualValueText;\n        break;\n\n      case 'AbsoluteVariation':\n        valueGetter = data.getAbsoluteVariationValue;\n        displayTextGetter = data.getAbsoluteVariationText;\n        break;\n\n      case 'PercentVariation':\n        valueGetter = data.getPercentVariationValue;\n        displayTextGetter = data.getPercentVariationText;\n        break;\n\n      case 'PercentOfTarget':\n        valueGetter = data.getPercentOfTargetValue;\n        displayTextGetter = data.getPercentOfTargetText;\n        break;\n\n      case 'TargetValue':\n        valueGetter = data.getTargetValue;\n        displayTextGetter = data.getTargetValueText;\n        break;\n\n      case 'Dimension':\n        valueGetter = data.getDimensionValue;\n        displayTextGetter = data.getDimensionValueText;\n        break;\n\n      case 'Measure':\n        valueGetter = data.getMeasureValue;\n        displayTextGetter = data.getMeasureDisplayText;\n        break;\n\n      case 'CardName':\n        valueGetter = data.getCardName;\n        displayTextGetter = data.getCardName;\n        break;\n    }\n\n    return {\n      getValue: function () {\n        return valueGetter(elementModel.DataId);\n      },\n      getDefaultText: function () {\n        return displayTextGetter(elementModel.DataId);\n      }\n    };\n  };\n\n  cardLayout.prototype.convertVAlignment = function (value) {\n    switch (value) {\n      case 'Top':\n        return verticalAlignment.top;\n\n      case 'Bottom':\n        return verticalAlignment.bottom;\n\n      case 'Center':\n      default:\n        return verticalAlignment.center;\n    }\n  };\n\n  cardLayout.prototype.convertHAlignment = function (value) {\n    switch (value) {\n      case 'Center':\n        return horizontalAlignment.center;\n\n      case 'Right':\n        return horizontalAlignment.right;\n\n      case 'Left':\n      default:\n        return horizontalAlignment.left;\n    }\n  };\n\n  cardLayout.prototype.dispose = function () {\n    this._layoutElementCssClassesLinks.forEach(function (style) {\n      return style.remove();\n    });\n\n    this._layoutElementCssClassesLinks = [];\n    this._layoutElementCssClassesNames = [];\n  };\n\n  return cardLayout;\n}();\n\nexports.cardLayout = cardLayout;\n\nvar cardRow = function () {\n  function cardRow() {\n    this.elements = [];\n  }\n\n  return cardRow;\n}();\n\nexports.cardRow = cardRow;\n\nvar cardRowElementBase = function () {\n  function cardRowElementBase() {}\n\n  return cardRowElementBase;\n}();\n\nexports.cardRowElementBase = cardRowElementBase;\n\nvar cardRowElement = function (_super) {\n  __extends(cardRowElement, _super);\n\n  function cardRowElement() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return cardRowElement;\n}(cardRowElementBase);\n\nexports.cardRowElement = cardRowElement;\n\nvar cardIndicatorElement = function (_super) {\n  __extends(cardIndicatorElement, _super);\n\n  function cardIndicatorElement() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return cardIndicatorElement;\n}(cardRowElementBase);\n\nexports.cardIndicatorElement = cardIndicatorElement;\n\nvar cardSparklineElement = function (_super) {\n  __extends(cardSparklineElement, _super);\n\n  function cardSparklineElement() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return cardSparklineElement;\n}(cardRowElementBase);\n\nexports.cardSparklineElement = cardSparklineElement;\n\nvar sparklineOptions = function () {\n  function sparklineOptions(sparklineOptionsModel) {\n    this.viewType = sparklineOptionsModel.ViewType;\n    this.highlightMinMaxPoints = sparklineOptionsModel.HighlightMinMaxPoints;\n    this.highlightStartEndPoints = sparklineOptionsModel.HighlightStartEndPoints;\n  }\n\n  return sparklineOptions;\n}();\n\nexports.sparklineOptions = sparklineOptions;\nvar horizontalAlignment;\n\n(function (horizontalAlignment) {\n  horizontalAlignment[horizontalAlignment[\"left\"] = 0] = \"left\";\n  horizontalAlignment[horizontalAlignment[\"right\"] = 1] = \"right\";\n  horizontalAlignment[horizontalAlignment[\"center\"] = 2] = \"center\";\n})(horizontalAlignment = exports.horizontalAlignment || (exports.horizontalAlignment = {}));\n\nvar verticalAlignment;\n\n(function (verticalAlignment) {\n  verticalAlignment[verticalAlignment[\"top\"] = 0] = \"top\";\n  verticalAlignment[verticalAlignment[\"center\"] = 1] = \"center\";\n  verticalAlignment[verticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(verticalAlignment = exports.verticalAlignment || (exports.verticalAlignment = {}));","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/widgets/widgets-viewer/cards/_card-layout.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","verticalAlignment","horizontalAlignment","sparklineOptions","cardSparklineElement","cardIndicatorElement","cardRowElement","cardRowElementBase","cardRow","cardLayout","_utils_1","require","_cssHelper_1","apiHandlers","_this","rows","_cardCFFilter","elementModel","rule","applyToCardId","cardRule","result","_isValidCardId","ApplyToRow","ApplyToLayoutElementModel","ApplyToLayoutElement","Type","DimensionId","DataId","Text","_layoutElementCssClassesLinks","_layoutElementCssClassesNames","hasRowElementCssClass","className","filter","x","length","addRowElementCss","selector","properties","push","createCssClass","getCardBackgroundColor","cardBackColor","ApplyToCardId","fill","layoutModel","minWidth","MinWidth","maxWidth","MaxWidth","Rows","forEach","rowModel","i","row","vAlignment","convertVAlignment","VAlignment","indent","Indent","Elements","j","indicatorElement","getStyleSettings","data","getStyleSettingsInfo","getIndicatorType","isDeltaType","getIsGood","width","Size","height","Math","round","IndicatorWidthRatio","hAlignment","convertHAlignment","HAlignment","elements","sparklineElement","getSparklineOptions","rowElement","id","Id","predefinedColor","PredefinedColor","color","convertElementColor","Color","fontSize","FontSize","fontFamily","FontFamily","getValueArgs","getElementValue","getText","text","valueArgs","onCustomizeText","getDefaultText","undefined","elementType","toColor","valueGetter","displayTextGetter","getTitle","getSubtitle","s","getActualValue","getActualValueText","getAbsoluteVariationValue","getAbsoluteVariationText","getPercentVariationValue","getPercentVariationText","getPercentOfTargetValue","getPercentOfTargetText","getTargetValue","getTargetValueText","getDimensionValue","getDimensionValueText","getMeasureValue","getMeasureDisplayText","getCardName","getValue","top","bottom","center","right","left","dispose","style","remove","_super","apply","arguments","sparklineOptionsModel","viewType","ViewType","highlightMinMaxPoints","HighlightMinMaxPoints","highlightStartEndPoints","HighlightStartEndPoints"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_card-layout.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verticalAlignment = exports.horizontalAlignment = exports.sparklineOptions = exports.cardSparklineElement = exports.cardIndicatorElement = exports.cardRowElement = exports.cardRowElementBase = exports.cardRow = exports.cardLayout = void 0;\nvar _utils_1 = require(\"../../../../data/_utils\");\nvar _cssHelper_1 = require(\"../../../viewer/_cssHelper\");\nvar cardLayout = (function () {\n    function cardLayout(apiHandlers) {\n        var _this = this;\n        this.apiHandlers = apiHandlers;\n        this.rows = [];\n        this._cardCFFilter = function (elementModel) {\n            return (function (rule, applyToCardId) {\n                var cardRule = rule;\n                var result = false;\n                if (_this._isValidCardId(cardRule, applyToCardId)) {\n                    if (!elementModel || cardRule.ApplyToRow)\n                        result = true;\n                    else {\n                        if (cardRule.ApplyToLayoutElementModel.ApplyToLayoutElement === elementModel.Type) {\n                            if (cardRule.ApplyToLayoutElementModel.ApplyToLayoutElement === 'Dimension')\n                                result = cardRule.ApplyToLayoutElementModel.DimensionId === elementModel.DataId;\n                            else if (cardRule.ApplyToLayoutElementModel.ApplyToLayoutElement === 'Text')\n                                result = cardRule.ApplyToLayoutElementModel.Text === elementModel.Text;\n                            else\n                                result = true;\n                        }\n                    }\n                }\n                return result;\n            });\n        };\n        this._layoutElementCssClassesLinks = [];\n        this._layoutElementCssClassesNames = [];\n    }\n    cardLayout.prototype.hasRowElementCssClass = function (className) {\n        return this._layoutElementCssClassesNames.filter(function (x) { return x === className; }).length > 0;\n    };\n    cardLayout.prototype.addRowElementCss = function (className, selector, properties) {\n        if (!this.hasRowElementCssClass(className)) {\n            this._layoutElementCssClassesNames.push(className);\n            this._layoutElementCssClassesLinks.push(_cssHelper_1.createCssClass(selector, properties));\n        }\n    };\n    cardLayout.prototype.getCardBackgroundColor = function () {\n        return this.apiHandlers && this.apiHandlers.cardBackColor;\n    };\n    cardLayout.prototype._isValidCardId = function (cardRule, applyToCardId) {\n        if (cardRule.ApplyToCardId)\n            return cardRule.ApplyToCardId === applyToCardId;\n        return true;\n    };\n    cardLayout.prototype.fill = function (layoutModel) {\n        var _this = this;\n        this.minWidth = layoutModel.MinWidth;\n        this.maxWidth = layoutModel.MaxWidth;\n        layoutModel.Rows.forEach(function (rowModel, i) {\n            var row = new cardRow();\n            row.vAlignment = _this.convertVAlignment(rowModel.VAlignment);\n            row.indent = rowModel.Indent;\n            rowModel.Elements.forEach(function (elementModel, j) {\n                if (elementModel.Type === 'Indicator') {\n                    var indicatorElement = new cardIndicatorElement();\n                    indicatorElement.getStyleSettings = function (data) {\n                        return data.getStyleSettingsInfo(_this._cardCFFilter(elementModel));\n                    };\n                    indicatorElement.getIndicatorType = function (data) {\n                        return _this.isDeltaType(elementModel.Type) && data.getIndicatorType();\n                    };\n                    indicatorElement.getIsGood = function (data) {\n                        return _this.isDeltaType(elementModel.Type) && data.getIsGood();\n                    };\n                    indicatorElement.width = elementModel.Size;\n                    indicatorElement.height = Math.round(elementModel.Size / elementModel.IndicatorWidthRatio);\n                    indicatorElement.hAlignment = _this.convertHAlignment(elementModel.HAlignment);\n                    row.elements.push(indicatorElement);\n                }\n                else if (elementModel.Type === 'Sparkline') {\n                    var sparklineElement = new cardSparklineElement();\n                    sparklineElement.height = elementModel.Size;\n                    sparklineElement.getSparklineOptions = function (data) {\n                        return data.getSparklineOptions();\n                    };\n                    row.elements.push(sparklineElement);\n                }\n                else {\n                    var rowElement = new cardRowElement();\n                    rowElement.id = elementModel.Id;\n                    rowElement.getStyleSettings = function (data) {\n                        return data.getStyleSettingsInfo(_this._cardCFFilter(elementModel));\n                    };\n                    rowElement.predefinedColor = elementModel.PredefinedColor;\n                    rowElement.color = _this.convertElementColor(elementModel.Color);\n                    rowElement.hAlignment = _this.convertHAlignment(elementModel.HAlignment);\n                    rowElement.fontSize = elementModel.FontSize;\n                    rowElement.fontFamily = elementModel.FontFamily;\n                    rowElement.getValueArgs = function (data) {\n                        return _this.getElementValue(data, elementModel);\n                    };\n                    rowElement.getText = function (data) {\n                        var text;\n                        var valueArgs = _this.getElementValue(data, elementModel);\n                        if (_this.apiHandlers && _this.apiHandlers.onCustomizeText) {\n                            text = _this.apiHandlers.onCustomizeText(valueArgs);\n                        }\n                        return text || valueArgs.getDefaultText();\n                    };\n                    rowElement.getIndicatorType = function (data) {\n                        return _this.isDeltaType(elementModel.Type) ? data.getIndicatorType() : undefined;\n                    };\n                    rowElement.getIsGood = function (data) {\n                        return _this.isDeltaType(elementModel.Type) && data.getIsGood();\n                    };\n                    row.elements.push(rowElement);\n                }\n            });\n            _this.rows.push(row);\n        });\n        this.getStyleSettings = function (data) {\n            return data.getStyleSettingsInfo(_this._cardCFFilter());\n        };\n    };\n    cardLayout.prototype.isDeltaType = function (elementType) {\n        return elementType === 'AbsoluteVariation' ||\n            elementType === 'PercentVariation' ||\n            elementType === 'PercentOfTarget' ||\n            elementType === 'ActualValue' ||\n            elementType === 'TargetValue' ||\n            elementType === 'Indicator';\n    };\n    cardLayout.prototype.convertElementColor = function (color) {\n        return color ? _utils_1.toColor(color) : null;\n    };\n    cardLayout.prototype.getElementValue = function (data, elementModel) {\n        var valueGetter = function () { return ''; };\n        var displayTextGetter = function () { return ''; };\n        switch (elementModel.Type) {\n            case 'Title':\n                valueGetter = data.getTitle;\n                displayTextGetter = data.getTitle;\n                break;\n            case 'Subtitle':\n                valueGetter = data.getSubtitle;\n                displayTextGetter = data.getSubtitle;\n                break;\n            case 'Text':\n                valueGetter = function (s) { return elementModel.Text; };\n                displayTextGetter = function (s) { return elementModel.Text; };\n                break;\n            case 'ActualValue':\n                valueGetter = data.getActualValue;\n                displayTextGetter = data.getActualValueText;\n                break;\n            case 'AbsoluteVariation':\n                valueGetter = data.getAbsoluteVariationValue;\n                displayTextGetter = data.getAbsoluteVariationText;\n                break;\n            case 'PercentVariation':\n                valueGetter = data.getPercentVariationValue;\n                displayTextGetter = data.getPercentVariationText;\n                break;\n            case 'PercentOfTarget':\n                valueGetter = data.getPercentOfTargetValue;\n                displayTextGetter = data.getPercentOfTargetText;\n                break;\n            case 'TargetValue':\n                valueGetter = data.getTargetValue;\n                displayTextGetter = data.getTargetValueText;\n                break;\n            case 'Dimension':\n                valueGetter = data.getDimensionValue;\n                displayTextGetter = data.getDimensionValueText;\n                break;\n            case 'Measure':\n                valueGetter = data.getMeasureValue;\n                displayTextGetter = data.getMeasureDisplayText;\n                break;\n            case 'CardName':\n                valueGetter = data.getCardName;\n                displayTextGetter = data.getCardName;\n                break;\n        }\n        return {\n            getValue: function () {\n                return valueGetter(elementModel.DataId);\n            },\n            getDefaultText: function () {\n                return displayTextGetter(elementModel.DataId);\n            }\n        };\n    };\n    cardLayout.prototype.convertVAlignment = function (value) {\n        switch (value) {\n            case 'Top':\n                return verticalAlignment.top;\n            case 'Bottom':\n                return verticalAlignment.bottom;\n            case 'Center':\n            default:\n                return verticalAlignment.center;\n        }\n    };\n    cardLayout.prototype.convertHAlignment = function (value) {\n        switch (value) {\n            case 'Center':\n                return horizontalAlignment.center;\n            case 'Right':\n                return horizontalAlignment.right;\n            case 'Left':\n            default:\n                return horizontalAlignment.left;\n        }\n    };\n    cardLayout.prototype.dispose = function () {\n        this._layoutElementCssClassesLinks.forEach(function (style) { return style.remove(); });\n        this._layoutElementCssClassesLinks = [];\n        this._layoutElementCssClassesNames = [];\n    };\n    return cardLayout;\n}());\nexports.cardLayout = cardLayout;\nvar cardRow = (function () {\n    function cardRow() {\n        this.elements = [];\n    }\n    return cardRow;\n}());\nexports.cardRow = cardRow;\nvar cardRowElementBase = (function () {\n    function cardRowElementBase() {\n    }\n    return cardRowElementBase;\n}());\nexports.cardRowElementBase = cardRowElementBase;\nvar cardRowElement = (function (_super) {\n    __extends(cardRowElement, _super);\n    function cardRowElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return cardRowElement;\n}(cardRowElementBase));\nexports.cardRowElement = cardRowElement;\nvar cardIndicatorElement = (function (_super) {\n    __extends(cardIndicatorElement, _super);\n    function cardIndicatorElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return cardIndicatorElement;\n}(cardRowElementBase));\nexports.cardIndicatorElement = cardIndicatorElement;\nvar cardSparklineElement = (function (_super) {\n    __extends(cardSparklineElement, _super);\n    function cardSparklineElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return cardSparklineElement;\n}(cardRowElementBase));\nexports.cardSparklineElement = cardSparklineElement;\nvar sparklineOptions = (function () {\n    function sparklineOptions(sparklineOptionsModel) {\n        this.viewType = sparklineOptionsModel.ViewType;\n        this.highlightMinMaxPoints = sparklineOptionsModel.HighlightMinMaxPoints;\n        this.highlightStartEndPoints = sparklineOptionsModel.HighlightStartEndPoints;\n    }\n    return sparklineOptions;\n}());\nexports.sparklineOptions = sparklineOptions;\nvar horizontalAlignment;\n(function (horizontalAlignment) {\n    horizontalAlignment[horizontalAlignment[\"left\"] = 0] = \"left\";\n    horizontalAlignment[horizontalAlignment[\"right\"] = 1] = \"right\";\n    horizontalAlignment[horizontalAlignment[\"center\"] = 2] = \"center\";\n})(horizontalAlignment = exports.horizontalAlignment || (exports.horizontalAlignment = {}));\nvar verticalAlignment;\n(function (verticalAlignment) {\n    verticalAlignment[verticalAlignment[\"top\"] = 0] = \"top\";\n    verticalAlignment[verticalAlignment[\"center\"] = 1] = \"center\";\n    verticalAlignment[verticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(verticalAlignment = exports.verticalAlignment || (exports.verticalAlignment = {}));\n"]},"metadata":{},"sourceType":"script"}