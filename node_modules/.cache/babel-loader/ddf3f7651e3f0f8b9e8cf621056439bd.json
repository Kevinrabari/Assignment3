{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_card-arrangement-table-generator.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cardArrangementTableGenerator = void 0;\n\nvar $ = require(\"jquery\");\n\nvar _css_class_names_1 = require(\"../_css-class-names\");\n\nvar _new_card_item_1 = require(\"./_new-card-item\");\n\nvar cardArrangementTableGenerator = function () {\n  function cardArrangementTableGenerator() {}\n\n  cardArrangementTableGenerator.prototype.generateTable = function (container, cardArrangements) {\n    this.reset();\n    this.cardArrangements = cardArrangements;\n    this.generateCells(container, this.cardArrangements);\n  };\n\n  cardArrangementTableGenerator.prototype.drawCellContent = function (startIndex, endIndex, drawHandler) {\n    for (var i = startIndex; i <= endIndex; i++) {\n      drawHandler(this.cells[i], this.cardArrangements, i);\n    }\n  };\n\n  cardArrangementTableGenerator.prototype.reset = function () {\n    this.cells = [];\n  };\n\n  cardArrangementTableGenerator.prototype.generateCells = function (tableStruct, cardArrangements) {\n    var _this = this;\n\n    if (cardArrangements.arrangementDirection === 'column') {\n      for (var rowIndex = 0; rowIndex < cardArrangements.rowCount; rowIndex++) {\n        var row = this.createRow(cardArrangements, rowIndex);\n\n        for (var columnIndex = 0; columnIndex < cardArrangements.columnCount; columnIndex++) {\n          var itemIndex = rowIndex * cardArrangements.columnCount + columnIndex;\n          if (itemIndex >= cardArrangements.itemsCount) break;\n          var cell = this.createCell(cardArrangements, rowIndex, columnIndex);\n          this.cells.push(cell);\n          row.append(cell);\n        }\n\n        tableStruct.append(row);\n      }\n    } else {\n      var rows = {};\n\n      var getRow = function (index) {\n        var row = rows[index];\n\n        if (!row) {\n          row = _this.createRow(cardArrangements, index);\n          rows[index] = row;\n        }\n\n        return row;\n      };\n\n      for (var columnIndex = 0; columnIndex < cardArrangements.columnCount; columnIndex++) {\n        for (var rowIndex = 0; rowIndex < cardArrangements.rowCount; rowIndex++) {\n          var itemIndex = columnIndex * cardArrangements.rowCount + rowIndex;\n          if (itemIndex >= cardArrangements.itemsCount) break;\n          var row = getRow(rowIndex);\n          var cell = this.createCell(cardArrangements, rowIndex, columnIndex);\n          this.cells.push(cell);\n          row.append(cell);\n        }\n\n        $.each(rows, function (_, row) {\n          tableStruct.append(row);\n        });\n      }\n    }\n  };\n\n  cardArrangementTableGenerator.prototype.createRow = function (cardArrangements, rowIndex) {\n    var actualHeight = cardArrangements.cellHeight;\n\n    if (cardArrangements.ignorePadding && rowIndex === 0) {\n      actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n    }\n\n    if (cardArrangements.ignorePadding && rowIndex === cardArrangements.rowCount - 1) {\n      actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n    }\n\n    var div = $('<div>', {\n      'class': _css_class_names_1.cssClassNames.widgetViewerRow,\n      css: {\n        height: actualHeight,\n        width: cardArrangements.getScrollableWidth()\n      }\n    });\n    return div;\n  };\n\n  cardArrangementTableGenerator.prototype.createCell = function (cardArrangements, rowIndex, columnIndex) {\n    var actualWidth = cardArrangements.cellWidth;\n    var actualHeight = cardArrangements.cellHeight;\n    var ignorePadding = cardArrangements.ignorePadding;\n    var ignoreLeft = false,\n        ignoreRight = false,\n        ignoreTop = false,\n        ignoreBottom = false;\n\n    if (ignorePadding && columnIndex === 0) {\n      actualWidth -= _new_card_item_1.newCardMeasurements.margin;\n      ignoreLeft = true;\n    }\n\n    if (ignorePadding && columnIndex === cardArrangements.columnCount - 1) {\n      actualWidth -= _new_card_item_1.newCardMeasurements.margin;\n      ignoreRight = true;\n    }\n\n    if (ignorePadding && rowIndex === 0) {\n      actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n      ignoreTop = true;\n    }\n\n    if (ignorePadding && rowIndex === cardArrangements.rowCount - 1) {\n      actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n      ignoreBottom = true;\n    }\n\n    var div = $('<div >', {\n      'class': _css_class_names_1.cssClassNames.widgetViewerCell,\n      css: {\n        height: actualHeight,\n        width: actualWidth,\n        float: 'left'\n      }\n    });\n    if (ignoreLeft) div.addClass('dx-flex-card-cell-ignore-left-margin');\n    if (ignoreRight) div.addClass('dx-flex-card-cell-ignore-right-margin');\n    if (ignoreTop) div.addClass('dx-flex-card-cell-ignore-top-margin');\n    if (ignoreBottom) div.addClass('dx-flex-card-cell-ignore-bototm-margin');\n    return div;\n  };\n\n  return cardArrangementTableGenerator;\n}();\n\nexports.cardArrangementTableGenerator = cardArrangementTableGenerator;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/widgets/widgets-viewer/cards/_card-arrangement-table-generator.js"],"names":["Object","defineProperty","exports","value","cardArrangementTableGenerator","$","require","_css_class_names_1","_new_card_item_1","prototype","generateTable","container","cardArrangements","reset","generateCells","drawCellContent","startIndex","endIndex","drawHandler","i","cells","tableStruct","_this","arrangementDirection","rowIndex","rowCount","row","createRow","columnIndex","columnCount","itemIndex","itemsCount","cell","createCell","push","append","rows","getRow","index","each","_","actualHeight","cellHeight","ignorePadding","newCardMeasurements","margin","div","cssClassNames","widgetViewerRow","css","height","width","getScrollableWidth","actualWidth","cellWidth","ignoreLeft","ignoreRight","ignoreTop","ignoreBottom","widgetViewerCell","float","addClass"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_card-arrangement-table-generator.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cardArrangementTableGenerator = void 0;\nvar $ = require(\"jquery\");\nvar _css_class_names_1 = require(\"../_css-class-names\");\nvar _new_card_item_1 = require(\"./_new-card-item\");\nvar cardArrangementTableGenerator = (function () {\n    function cardArrangementTableGenerator() {\n    }\n    cardArrangementTableGenerator.prototype.generateTable = function (container, cardArrangements) {\n        this.reset();\n        this.cardArrangements = cardArrangements;\n        this.generateCells(container, this.cardArrangements);\n    };\n    cardArrangementTableGenerator.prototype.drawCellContent = function (startIndex, endIndex, drawHandler) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            drawHandler(this.cells[i], this.cardArrangements, i);\n        }\n    };\n    cardArrangementTableGenerator.prototype.reset = function () {\n        this.cells = [];\n    };\n    cardArrangementTableGenerator.prototype.generateCells = function (tableStruct, cardArrangements) {\n        var _this = this;\n        if (cardArrangements.arrangementDirection === 'column') {\n            for (var rowIndex = 0; rowIndex < cardArrangements.rowCount; rowIndex++) {\n                var row = this.createRow(cardArrangements, rowIndex);\n                for (var columnIndex = 0; columnIndex < cardArrangements.columnCount; columnIndex++) {\n                    var itemIndex = rowIndex * cardArrangements.columnCount + columnIndex;\n                    if (itemIndex >= cardArrangements.itemsCount)\n                        break;\n                    var cell = this.createCell(cardArrangements, rowIndex, columnIndex);\n                    this.cells.push(cell);\n                    row.append(cell);\n                }\n                tableStruct.append(row);\n            }\n        }\n        else {\n            var rows = {};\n            var getRow = function (index) {\n                var row = rows[index];\n                if (!row) {\n                    row = _this.createRow(cardArrangements, index);\n                    rows[index] = row;\n                }\n                return row;\n            };\n            for (var columnIndex = 0; columnIndex < cardArrangements.columnCount; columnIndex++) {\n                for (var rowIndex = 0; rowIndex < cardArrangements.rowCount; rowIndex++) {\n                    var itemIndex = columnIndex * cardArrangements.rowCount + rowIndex;\n                    if (itemIndex >= cardArrangements.itemsCount)\n                        break;\n                    var row = getRow(rowIndex);\n                    var cell = this.createCell(cardArrangements, rowIndex, columnIndex);\n                    this.cells.push(cell);\n                    row.append(cell);\n                }\n                $.each(rows, function (_, row) {\n                    tableStruct.append(row);\n                });\n            }\n        }\n    };\n    cardArrangementTableGenerator.prototype.createRow = function (cardArrangements, rowIndex) {\n        var actualHeight = cardArrangements.cellHeight;\n        if (cardArrangements.ignorePadding && rowIndex === 0) {\n            actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n        }\n        if (cardArrangements.ignorePadding && rowIndex === cardArrangements.rowCount - 1) {\n            actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n        }\n        var div = $('<div>', {\n            'class': _css_class_names_1.cssClassNames.widgetViewerRow, css: {\n                height: actualHeight,\n                width: cardArrangements.getScrollableWidth()\n            }\n        });\n        return div;\n    };\n    cardArrangementTableGenerator.prototype.createCell = function (cardArrangements, rowIndex, columnIndex) {\n        var actualWidth = cardArrangements.cellWidth;\n        var actualHeight = cardArrangements.cellHeight;\n        var ignorePadding = cardArrangements.ignorePadding;\n        var ignoreLeft = false, ignoreRight = false, ignoreTop = false, ignoreBottom = false;\n        if (ignorePadding && columnIndex === 0) {\n            actualWidth -= _new_card_item_1.newCardMeasurements.margin;\n            ignoreLeft = true;\n        }\n        if (ignorePadding && columnIndex === cardArrangements.columnCount - 1) {\n            actualWidth -= _new_card_item_1.newCardMeasurements.margin;\n            ignoreRight = true;\n        }\n        if (ignorePadding && rowIndex === 0) {\n            actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n            ignoreTop = true;\n        }\n        if (ignorePadding && rowIndex === cardArrangements.rowCount - 1) {\n            actualHeight -= _new_card_item_1.newCardMeasurements.margin;\n            ignoreBottom = true;\n        }\n        var div = $('<div >', {\n            'class': _css_class_names_1.cssClassNames.widgetViewerCell,\n            css: {\n                height: actualHeight,\n                width: actualWidth,\n                float: 'left'\n            }\n        });\n        if (ignoreLeft)\n            div.addClass('dx-flex-card-cell-ignore-left-margin');\n        if (ignoreRight)\n            div.addClass('dx-flex-card-cell-ignore-right-margin');\n        if (ignoreTop)\n            div.addClass('dx-flex-card-cell-ignore-top-margin');\n        if (ignoreBottom)\n            div.addClass('dx-flex-card-cell-ignore-bototm-margin');\n        return div;\n    };\n    return cardArrangementTableGenerator;\n}());\nexports.cardArrangementTableGenerator = cardArrangementTableGenerator;\n"]},"metadata":{},"sourceType":"script"}