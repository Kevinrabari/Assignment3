{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/chart.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight } from \"../core/utils/size\";\nimport { noop } from \"../core/utils/common\";\nimport { extend as _extend } from \"../core/utils/extend\";\nimport { hasWindow } from \"../core/utils/window\";\nimport { each as _each } from \"../core/utils/iterator\";\nimport registerComponent from \"../core/component_registrator\";\nimport { prepareSegmentRectPoints } from \"./utils\";\nimport { map as _map, getLog, getCategoriesInfo, updatePanesCanvases, convertVisualRangeObject, PANE_PADDING, normalizePanesHeight, rangesAreEqual, isRelativeHeightPane } from \"./core/utils\";\nimport { type, isDefined as _isDefined } from \"../core/utils/type\";\nimport { getPrecision } from \"../core/utils/math\";\nimport { overlapping } from \"./chart_components/base_chart\";\nimport multiAxesSynchronizer from \"./chart_components/multi_axes_synchronizer\";\nimport { AdvancedChart } from \"./chart_components/advanced_chart\";\nimport { ScrollBar } from \"./chart_components/scroll_bar\";\nimport { Crosshair, getMargins } from \"./chart_components/crosshair\";\nimport rangeDataCalculator from \"./series/helpers/range_data_calculator\";\nimport { LayoutManager } from \"./chart_components/layout_manager\";\nimport { Range } from \"./translators/range\";\nvar DEFAULT_PANE_NAME = \"default\";\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\nvar DEFAULT_PANES = [{\n  name: DEFAULT_PANE_NAME,\n  border: {}\n}];\nvar DISCRETE = \"discrete\";\nvar _isArray = Array.isArray;\n\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\n  var result;\n\n  for (var i = 0; i < axes.length; i++) {\n    if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\n      result = axes[i].name;\n      break;\n    }\n  }\n\n  if (!result) {\n    result = axes[0].name;\n  }\n\n  return result;\n}\n\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\n  var gridOpt = axis.getOptions().grid;\n  var minorGridOpt = axis.getOptions().minorGrid;\n  gridOpt.visible = gridVisibility;\n  minorGridOpt && (minorGridOpt.visible = minorGridVisibility);\n}\n\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\n  var axisShown = false;\n  var hiddenStubAxis = [];\n  var minorGridVisibility = axesForPane.some(function (axis) {\n    var minorGridOptions = axis.getOptions().minorGrid;\n    return minorGridOptions && minorGridOptions.visible;\n  });\n  var gridVisibility = axesForPane.some(function (axis) {\n    var gridOptions = axis.getOptions().grid;\n    return gridOptions && gridOptions.visible;\n  });\n\n  if (axesForPane.length > 1) {\n    axesForPane.forEach(function (axis) {\n      var gridOpt = axis.getOptions().grid;\n\n      if (axisShown) {\n        changeVisibilityAxisGrids(axis, false, false);\n      } else if (gridOpt && gridOpt.visible) {\n        if (axis.getTranslator().getBusinessRange().isEmpty()) {\n          changeVisibilityAxisGrids(axis, false, false);\n          hiddenStubAxis.push(axis);\n        } else {\n          axisShown = true;\n          changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility);\n        }\n      }\n    });\n    !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility);\n  }\n}\n\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\n  var result;\n  var axInd;\n\n  for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\n    if (valueAxesOptions[axInd].name === axisName) {\n      result = valueAxesOptions[axInd];\n      result.priority = axInd;\n      break;\n    }\n  }\n\n  if (!result) {\n    for (axInd = 0; axInd < valueAxes.length; axInd++) {\n      if (valueAxes[axInd].name === axisName) {\n        result = valueAxes[axInd].getOptions();\n        result.priority = valueAxes[axInd].priority;\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction findAxis(paneName, axisName, axes) {\n  var axis;\n  var i;\n\n  for (i = 0; i < axes.length; i++) {\n    axis = axes[i];\n\n    if (axis.name === axisName && axis.pane === paneName) {\n      return axis;\n    }\n  }\n\n  if (paneName) {\n    return findAxis(void 0, axisName, axes);\n  }\n}\n\nfunction compareAxes(a, b) {\n  return a.priority - b.priority;\n}\n\nfunction doesPaneExist(panes, paneName) {\n  var found = false;\n\n  _each(panes, function (_, pane) {\n    if (pane.name === paneName) {\n      found = true;\n      return false;\n    }\n  });\n\n  return found;\n}\n\nfunction accumulate(field, src1, src2, auxSpacing) {\n  var val1 = src1[field] || 0;\n  var val2 = src2[field] || 0;\n  return val1 + val2 + (val1 && val2 ? auxSpacing : 0);\n}\n\nfunction pickMax(field, src1, src2) {\n  return pickMaxValue(src1[field], src2[field]);\n}\n\nfunction pickMaxValue(val1, val2) {\n  return Math.max(val1 || 0, val2 || 0);\n}\n\nfunction getAxisMargins(axis) {\n  return axis.getMargins();\n}\n\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\n  return axes.reduce(function (margins, axis) {\n    var _axis$getOrthogonalAx;\n\n    var axisMargins = getMarginsFunc(axis);\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\n    paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\n    paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\n    paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    var orthogonalAxis = null === (_axis$getOrthogonalAx = axis.getOrthogonalAxis) || void 0 === _axis$getOrthogonalAx ? void 0 : _axis$getOrthogonalAx.call(axis);\n\n    if (orthogonalAxis && orthogonalAxis.customPositionIsAvailable() && (!axis.customPositionIsBoundaryOrthogonalAxis() || !orthogonalAxis.customPositionEqualsToPredefined())) {\n      margins[orthogonalAxis.getResolvedBoundaryPosition()] = 0;\n    }\n\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction getVerticalAxesMargins(axes) {\n  return axes.reduce(function (margins, axis) {\n    var axisMargins = axis.getMargins();\n    var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\n    var spacing = axis.getMultipleAxesSpacing();\n    paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\n    paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\n    paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\n    paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\n    margins.top = pickMax(\"top\", paneMargins, margins);\n    margins.bottom = pickMax(\"bottom\", paneMargins, margins);\n    margins.left = pickMax(\"left\", paneMargins, margins);\n    margins.right = pickMax(\"right\", paneMargins, margins);\n    return margins;\n  }, {\n    panes: {}\n  });\n}\n\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\n  axes.forEach(function (axis) {\n    axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3);\n  });\n}\n\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\n  function getMargin(side, margins, pane) {\n    var m = -1 === (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) ? margins : margins.panes[pane] || {};\n    return m[side];\n  }\n\n  function getMaxMargin(side, margins1, margins2, pane) {\n    return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane));\n  }\n\n  var getOriginalField = field => \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\n\n  function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\n    paneNames = paneNames.sort((p1, p2) => canvases[p2][startMargin] - canvases[p1][startMargin]);\n    paneNames.forEach(pane => {\n      var canvas = canvases[pane];\n      oppositeMargins.forEach(margin => {\n        canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane);\n      });\n    });\n    var firstPane = canvases[paneNames[0]];\n    var emptySpace = paneNames.reduce((space, paneName) => {\n      space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\n      return space;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - PANE_PADDING * (paneNames.length - 1);\n    emptySpace -= Object.keys(sizes).reduce((prev, key) => prev + (!isRelativeHeightPane(sizes[key]) ? sizes[key].height : 0), 0);\n    paneNames.reduce((offset, pane) => {\n      var canvas = canvases[pane];\n      var paneSize = sizes[pane];\n      offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\n      canvas[endMargin] = firstPane[sizeField] - offset;\n      offset -= !isRelativeHeightPane(paneSize) ? paneSize.height : Math.floor(emptySpace * paneSize.height);\n      canvas[startMargin] = offset;\n      offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + PANE_PADDING;\n      return offset;\n    }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0));\n  }\n\n  var paneNames = Object.keys(canvases);\n\n  if (!isRotated) {\n    shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"]);\n  } else {\n    shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"]);\n  }\n\n  return canvases;\n}\n\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\n  if (condition) {\n    performActionOnAxes(axes, \"createTicks\", canvases);\n    multiAxesSynchronizer.synchronize(axes);\n  }\n\n  performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions);\n}\n\nfunction shiftAxis(side1, side2) {\n  var shifts = {};\n  return function (axis) {\n    if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\n      var shift = shifts[axis.pane] = shifts[axis.pane] || {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      };\n      var spacing = axis.getMultipleAxesSpacing();\n      var margins = axis.getMargins();\n      axis.shift(shift);\n      shift[side1] = accumulate(side1, shift, margins, spacing);\n      shift[side2] = accumulate(side2, shift, margins, spacing);\n    } else {\n      axis.shift({\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      });\n    }\n  };\n}\n\nfunction getCommonSize(side, margins) {\n  var size = 0;\n  var pane;\n  var paneMargins;\n\n  for (pane in margins.panes) {\n    paneMargins = margins.panes[pane];\n    size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right;\n  }\n\n  return size;\n}\n\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\n  var size = 0;\n\n  if (sizeShortage[side] > 0) {\n    size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n    performActionOnAxes(axes, \"hideTitle\");\n    sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins));\n  }\n\n  if (sizeShortage[side] > 0) {\n    performActionOnAxes(axes, \"hideOuterElements\");\n  }\n}\n\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\n  var pointsCount = pointsToAnimation.reduce((sum, count) => sum + count, 0) / pointsToAnimation.length;\n  return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit;\n}\n\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\n  var series = [];\n  var overloadedSeries = {};\n  var argVisualRange = argAxis.visualRange();\n  var argTranslator = argAxis.getTranslator();\n  var argViewPortFilter = rangeDataCalculator.getViewPortFilter(argVisualRange || {});\n  filteredSeries.forEach(s => {\n    var valAxis = s.getValueAxis();\n    var valVisualRange = valAxis.getCanvasRange();\n    var valTranslator = valAxis.getTranslator();\n    var seriesIndex = allSeries.indexOf(s);\n    var valViewPortFilter = rangeDataCalculator.getViewPortFilter(valVisualRange || {});\n    overloadedSeries[seriesIndex] = {};\n    filteredSeries.forEach(sr => overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0);\n    var seriesPoints = [];\n    s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).forEach(p => {\n      var tp = {\n        seriesIndex: seriesIndex,\n        argument: p.argument,\n        value: p.getMaxValue(true),\n        size: p.bubbleSize || p.getOptions().size\n      };\n\n      if (p.getMinValue(true) !== p.getMaxValue(true)) {\n        var mp = _extend({}, tp);\n\n        mp.value = p.getMinValue(true);\n        mp.x = argTranslator.to(mp.argument, 1);\n        mp.y = valTranslator.to(mp.value, 1);\n        seriesPoints.push(mp);\n      }\n\n      tp.x = argTranslator.to(tp.argument, 1);\n      tp.y = valTranslator.to(tp.value, 1);\n      seriesPoints.push(tp);\n    });\n    overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\n    overloadedSeries[seriesIndex].total = 0;\n    overloadedSeries[seriesIndex].continuousSeries = 0;\n    series.push({\n      name: s.name,\n      index: seriesIndex,\n      points: seriesPoints\n    });\n  });\n  return {\n    series: series,\n    overloadedSeries: overloadedSeries\n  };\n}\n\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\n  var argAxisType = argAxis.getOptions().type;\n  filteredSeries.forEach(s => {\n    var seriesIndex = allSeries.indexOf(s);\n    s.autoHidePointMarkers = false;\n    var tickCount = argAxis.getTicksValues().majorTicksValues.length;\n\n    if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\n      for (var index in overloadedSeries[seriesIndex]) {\n        var i = parseInt(index);\n\n        if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\n          continue;\n        }\n\n        if (i === seriesIndex) {\n          if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\n            s.autoHidePointMarkers = true;\n            break;\n          }\n        } else if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\n          s.autoHidePointMarkers = true;\n          break;\n        }\n      }\n    }\n  });\n}\n\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\n  var area = canvas.width * canvas.height;\n  var seriesPoints = markersInfo.series;\n\n  var _loop = function (i) {\n    var currentSeries = series.filter(s => s.name === seriesPoints[i].name)[0];\n    var points = seriesPoints[i].points;\n    var pointSize = points.length ? points[0].size : 0;\n    var pointsArea = pointSize * pointSize * points.length;\n\n    if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\n      var index = seriesPoints[i].index;\n      currentSeries.autoHidePointMarkers = true;\n      seriesPoints.splice(i, 1);\n      series.splice(series.indexOf(currentSeries), 1);\n      delete markersInfo.overloadedSeries[index];\n    }\n  };\n\n  for (var i = seriesPoints.length - 1; i >= 0; i--) {\n    _loop(i);\n  }\n}\n\nfunction updateMarkersInfo(points, overloadedSeries) {\n  var isContinuousSeries = false;\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var curPoint = points[i];\n    var size = curPoint.size;\n\n    if (_isDefined(curPoint.x) && _isDefined(curPoint.y)) {\n      for (var j = i + 1; j < points.length; j++) {\n        var nextPoint = points[j];\n        var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\n        var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\n\n        if (!_isDefined(next_x) || Math.abs(curPoint.x - next_x) >= size) {\n          isContinuousSeries &= j !== i + 1;\n          break;\n        } else {\n          var distance = _isDefined(next_x) && _isDefined(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\n\n          if (distance && distance < size) {\n            overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\n            overloadedSeries[curPoint.seriesIndex].total++;\n\n            if (!isContinuousSeries) {\n              overloadedSeries[curPoint.seriesIndex].continuousSeries++;\n              isContinuousSeries = true;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nvar dxChart = AdvancedChart.inherit({\n  _themeSection: \"chart\",\n  _fontFields: [\"crosshair.label.font\"],\n  _initCore: function () {\n    this.paneAxis = {};\n    this.callBase();\n  },\n\n  _init() {\n    this._containerInitialHeight = hasWindow() ? getHeight(this._$element) : 0;\n    this.callBase();\n  },\n\n  _correctAxes: function () {\n    this._correctValueAxes(true);\n  },\n  _getExtraOptions: noop,\n  _createPanes: function () {\n    var panes = this.option(\"panes\");\n    var panesNameCounter = 0;\n    var defaultPane;\n\n    if (!panes || _isArray(panes) && !panes.length) {\n      panes = DEFAULT_PANES;\n    }\n\n    this.callBase();\n    defaultPane = this.option(\"defaultPane\");\n    panes = _extend(true, [], _isArray(panes) ? panes : [panes]);\n\n    _each(panes, function (_, pane) {\n      pane.name = !_isDefined(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name;\n    });\n\n    if (_isDefined(defaultPane)) {\n      if (!doesPaneExist(panes, defaultPane)) {\n        this._incidentOccurred(\"W2101\", [defaultPane]);\n\n        defaultPane = panes[panes.length - 1].name;\n      }\n    } else {\n      defaultPane = panes[panes.length - 1].name;\n    }\n\n    this.defaultPane = defaultPane;\n    panes = this._isRotated() ? panes.reverse() : panes;\n    return panes;\n  },\n  _getAxisRenderingOptions: function () {\n    return {\n      axisType: \"xyAxes\",\n      drawingType: \"linear\"\n    };\n  },\n  _prepareAxisOptions: function (typeSelector, userOptions, rotated) {\n    return {\n      isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\n      containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\n    };\n  },\n  _checkPaneName: function (seriesTheme) {\n    var paneList = _map(this.panes, function (pane) {\n      return pane.name;\n    });\n\n    seriesTheme.pane = seriesTheme.pane || this.defaultPane;\n    return paneList.includes(seriesTheme.pane);\n  },\n\n  _initCustomPositioningAxes() {\n    var that = this;\n    var argumentAxis = that.getArgumentAxis();\n    var valueAxisName = argumentAxis.getOptions().customPositionAxis;\n\n    var valueAxis = that._valueAxes.filter(v => v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name))[0];\n\n    that._valueAxes.forEach(v => {\n      if (argumentAxis !== v.getOrthogonalAxis()) {\n        v.getOrthogonalAxis = () => argumentAxis;\n\n        v.customPositionIsBoundaryOrthogonalAxis = () => argumentAxis.customPositionIsBoundary();\n      }\n    });\n\n    if (_isDefined(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\n      argumentAxis.getOrthogonalAxis = () => valueAxis;\n\n      argumentAxis.customPositionIsBoundaryOrthogonalAxis = () => that._valueAxes.some(v => v.customPositionIsBoundary());\n    } else if (_isDefined(argumentAxis.getOrthogonalAxis()) && !_isDefined(valueAxis)) {\n      argumentAxis.getOrthogonalAxis = noop;\n    }\n  },\n\n  _getAllAxes() {\n    return this._argumentAxes.concat(this._valueAxes);\n  },\n\n  _resetAxesAnimation(isFirstDrawing, isHorizontal) {\n    var axes = _isDefined(isHorizontal) ? isHorizontal ^ this._isRotated() ? this._argumentAxes : this._valueAxes : this._getAllAxes();\n    axes.forEach(a => {\n      a.resetApplyingAnimation(isFirstDrawing);\n    });\n  },\n\n  _axesBoundaryPositioning() {\n    var allAxes = this._getAllAxes();\n\n    var boundaryStateChanged = false;\n    allAxes.forEach(a => {\n      if (!a.customPositionIsAvailable()) {\n        return false;\n      }\n\n      var prevBoundaryState = a.customPositionIsBoundary();\n      a._customBoundaryPosition = a.getCustomBoundaryPosition();\n      boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary();\n    });\n    return boundaryStateChanged;\n  },\n\n  _getCrosshairMargins: function () {\n    var crosshairOptions = this._getCrosshairOptions() || {};\n    var crosshairEnabled = crosshairOptions.enabled;\n    var margins = getMargins();\n\n    var horizontalLabel = _extend(true, {}, crosshairOptions.label, crosshairOptions.horizontalLine.label);\n\n    var verticalLabel = _extend(true, {}, crosshairOptions.label, crosshairOptions.verticalLine.label);\n\n    return {\n      x: crosshairEnabled && crosshairOptions.horizontalLine.visible && horizontalLabel.visible ? margins.x : 0,\n      y: crosshairEnabled && crosshairOptions.verticalLine.visible && verticalLabel.visible ? margins.y : 0\n    };\n  },\n  _getValueAxis: function (paneName, axisName) {\n    var valueAxes = this._valueAxes;\n    var valueAxisOptions = this.option(\"valueAxis\") || {};\n    var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\n\n    var rotated = this._isRotated();\n\n    var crosshairMargins = this._getCrosshairMargins();\n\n    var axisOptions;\n    var axis;\n    axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, this.defaultPane);\n    axis = findAxis(paneName, axisName, valueAxes);\n\n    if (!axis) {\n      axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\n\n      if (!axisOptions) {\n        this._incidentOccurred(\"W2102\", [axisName]);\n\n        axisOptions = {\n          name: axisName,\n          priority: valueAxes.length\n        };\n      }\n\n      axis = this._createAxis(false, this._populateAxesOptions(\"valueAxis\", axisOptions, {\n        pane: paneName,\n        name: axisName,\n        optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\n        crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\n      }, rotated));\n      axis.applyVisualRangeSetter(this._getVisualRangeSetter());\n      valueAxes.push(axis);\n    }\n\n    axis.setPane(paneName);\n    return axis;\n  },\n  _correctValueAxes: function (needHideGrids) {\n    var that = this;\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var valueAxes = that._valueAxes;\n    var paneWithAxis = {};\n    that.series.forEach(function (series) {\n      var axis = series.getValueAxis();\n      paneWithAxis[axis.pane] = true;\n    });\n    that.panes.forEach(function (pane) {\n      var paneName = pane.name;\n\n      if (!paneWithAxis[paneName]) {\n        that._getValueAxis(paneName);\n      }\n\n      if (needHideGrids && synchronizeMultiAxes) {\n        hideGridsOnNonFirstValueAxisForPane(valueAxes.filter(function (axis) {\n          return axis.pane === paneName;\n        }));\n      }\n    });\n    that._valueAxes = valueAxes.filter(function (axis) {\n      if (!axis.pane) {\n        axis.setPane(that.defaultPane);\n      }\n\n      var paneExists = doesPaneExist(that.panes, axis.pane);\n\n      if (!paneExists) {\n        axis.dispose();\n        axis = null;\n      }\n\n      return paneExists;\n    }).sort(compareAxes);\n    var defaultAxis = this.getValueAxis();\n\n    that._valueAxes.forEach(axis => {\n      var optionPath = axis.getOptions().optionPath;\n\n      if (optionPath) {\n        var axesWithSamePath = that._valueAxes.filter(a => a.getOptions().optionPath === optionPath);\n\n        if (axesWithSamePath.length > 1) {\n          if (axesWithSamePath.some(a => a === defaultAxis)) {\n            axesWithSamePath.forEach(a => {\n              if (a !== defaultAxis) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          } else {\n            axesWithSamePath.forEach((a, i) => {\n              if (0 !== i) {\n                a.getOptions().optionPath = null;\n              }\n            });\n          }\n        }\n      }\n    });\n  },\n  _getSeriesForPane: function (paneName) {\n    var paneSeries = [];\n\n    _each(this.series, function (_, oneSeries) {\n      if (oneSeries.pane === paneName) {\n        paneSeries.push(oneSeries);\n      }\n    });\n\n    return paneSeries;\n  },\n  _createPanesBorderOptions: function () {\n    var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\n\n    var panesBorderOptions = {};\n    this.panes.forEach(pane => panesBorderOptions[pane.name] = _extend(true, {}, commonBorderOptions, pane.border));\n    return panesBorderOptions;\n  },\n  _createScrollBar: function () {\n    var scrollBarOptions = this._themeManager.getOptions(\"scrollBar\") || {};\n    var scrollBarGroup = this._scrollBarGroup;\n\n    if (scrollBarOptions.visible) {\n      scrollBarOptions.rotated = this._isRotated();\n      this._scrollBar = (this._scrollBar || new ScrollBar(this._renderer, scrollBarGroup)).update(scrollBarOptions);\n    } else {\n      scrollBarGroup.linkRemove();\n      this._scrollBar && this._scrollBar.dispose();\n      this._scrollBar = null;\n    }\n  },\n\n  _executeAppendAfterSeries(append) {\n    append();\n  },\n\n  _prepareToRender(drawOptions) {\n    var panesBorderOptions = this._createPanesBorderOptions();\n\n    this._createPanesBackground();\n\n    this._appendAxesGroups();\n\n    this._adjustViewport();\n\n    return panesBorderOptions;\n  },\n\n  _adjustViewport() {\n    var adjustOnZoom = this._themeManager.getOptions(\"adjustOnZoom\");\n\n    if (!adjustOnZoom) {\n      return;\n    }\n\n    this._valueAxes.forEach(axis => axis.adjust());\n  },\n\n  _recreateSizeDependentObjects(isCanvasChanged) {\n    var that = this;\n\n    var series = that._getVisibleSeries();\n\n    var useAggregation = series.some(s => s.useAggregation());\n\n    var zoomChanged = that._isZooming();\n\n    if (!useAggregation) {\n      return;\n    }\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas, true);\n    });\n\n    series.forEach(function (series) {\n      if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\n        series.createPoints();\n      }\n    });\n\n    that._processSeriesFamilies();\n  },\n\n  _isZooming() {\n    var argumentAxis = this.getArgumentAxis();\n\n    if (!argumentAxis || !argumentAxis.getTranslator()) {\n      return false;\n    }\n\n    var businessRange = argumentAxis.getTranslator().getBusinessRange();\n    var zoomRange = argumentAxis.getViewport();\n    var min = zoomRange ? zoomRange.min : 0;\n    var max = zoomRange ? zoomRange.max : 0;\n\n    if (\"logarithmic\" === businessRange.axisType) {\n      min = getLog(min, businessRange.base);\n      max = getLog(max, businessRange.base);\n    }\n\n    var viewportDistance = businessRange.axisType === DISCRETE ? getCategoriesInfo(businessRange.categories, min, max).categories.length : Math.abs(max - min);\n    var precision = getPrecision(viewportDistance);\n    precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\n    var zoomChanged = Math.round((this._zoomLength - viewportDistance) * precision) / precision !== 0;\n    this._zoomLength = viewportDistance;\n    return zoomChanged;\n  },\n\n  _handleSeriesDataUpdated: function () {\n    var that = this;\n    var viewport = new Range();\n    that.series.forEach(function (s) {\n      viewport.addRange(s.getArgumentRange());\n    });\n\n    that._argumentAxes.forEach(function (axis) {\n      axis.updateCanvas(that._canvas, true);\n      axis.setBusinessRange(viewport, that._axesReinitialized);\n    });\n\n    that.callBase();\n  },\n  _isLegendInside: function () {\n    return this._legend && \"inside\" === this._legend.getPosition();\n  },\n  _isRotated: function () {\n    return this._themeManager.getOptions(\"rotated\");\n  },\n  _getLayoutTargets: function () {\n    return this.panes;\n  },\n  _applyClipRects: function (panesBorderOptions) {\n    this._drawPanesBorders(panesBorderOptions);\n\n    this._createClipRectsForPanes();\n\n    this._applyClipRectsForAxes();\n\n    this._fillPanesBackground();\n  },\n  _updateLegendPosition: function (drawOptions, legendHasInsidePosition) {\n    if (drawOptions.drawLegend && this._legend && legendHasInsidePosition) {\n      var panes = this.panes;\n\n      var newCanvas = _extend({}, panes[0].canvas);\n\n      var layoutManager = new LayoutManager();\n      newCanvas.right = panes[panes.length - 1].canvas.right;\n      newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\n      layoutManager.layoutInsideLegend(this._legend, newCanvas);\n    }\n  },\n  _allowLegendInsidePosition: () => true,\n  _applyExtraSettings: function (series) {\n    var paneIndex = this._getPaneIndex(series.pane);\n\n    var panesClipRects = this._panesClipRects;\n    var wideClipRect = panesClipRects.wide[paneIndex];\n    series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, this._getPaneBorderVisibility(paneIndex));\n  },\n  _updatePanesCanvases: function (drawOptions) {\n    if (!drawOptions.recreateCanvas) {\n      return;\n    }\n\n    updatePanesCanvases(this.panes, this._canvas, this._isRotated());\n  },\n  _normalizePanesHeight: function () {\n    normalizePanesHeight(this.panes);\n  },\n  _renderScaleBreaks: function () {\n    this._valueAxes.concat(this._argumentAxes).forEach(function (axis) {\n      axis.drawScaleBreaks();\n    });\n  },\n\n  _getArgFilter() {\n    return rangeDataCalculator.getViewPortFilter(this.getArgumentAxis().visualRange() || {});\n  },\n\n  _applyPointMarkersAutoHiding() {\n    var that = this;\n    var allSeries = that.series;\n\n    if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\n      allSeries.forEach(s => s.autoHidePointMarkers = false);\n      return;\n    }\n\n    that.panes.forEach(_ref => {\n      var {\n        borderCoords: borderCoords,\n        name: name\n      } = _ref;\n      var series = allSeries.filter(s => s.pane === name && s.usePointsToDefineAutoHiding());\n      var argAxis = that.getArgumentAxis();\n      var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\n      fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\n\n      if (markersInfo.series.length) {\n        var argVisualRange = argAxis.visualRange();\n        var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\n        var sortingCallback = argAxisIsDiscrete ? (p1, p2) => argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument) : (p1, p2) => p1.argument - p2.argument;\n        var points = [];\n        markersInfo.series.forEach(s => points = points.concat(s.points));\n        points.sort(sortingCallback);\n        updateMarkersInfo(points, markersInfo.overloadedSeries);\n        applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis);\n      }\n    });\n  },\n\n  _renderAxes: function (drawOptions, panesBorderOptions) {\n    function calculateTitlesWidth(axes) {\n      return axes.map(axis => {\n        if (!axis.getTitle) {\n          return 0;\n        }\n\n        var title = axis.getTitle();\n        return title ? title.bBox.width : 0;\n      });\n    }\n\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\n\n    var scrollBar = that._scrollBar ? [that._scrollBar] : [];\n    var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\n    var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\n    var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\n    var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\n    var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n    var allElements = allAxes.concat(scrollBar);\n    var verticalAxesFirstDrawing = verticalAxes.some(v => v.isFirstDrawing());\n\n    that._normalizePanesHeight();\n\n    that._updatePanesCanvases(drawOptions);\n\n    var panesCanvases = that.panes.reduce(function (canvases, pane) {\n      canvases[pane.name] = _extend({}, pane.canvas);\n      return canvases;\n    }, {});\n    var paneSizes = that.panes.reduce((sizes, pane) => {\n      sizes[pane.name] = {\n        height: pane.height,\n        unit: pane.unit\n      };\n      return sizes;\n    }, {});\n\n    var cleanPanesCanvases = _extend(true, {}, panesCanvases);\n\n    that._initCustomPositioningAxes();\n\n    var needCustomAdjustAxes = that._axesBoundaryPositioning();\n\n    if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\n      drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\n      performActionOnAxes(allAxes, \"prepareAnimation\");\n\n      that._renderScaleBreaks();\n\n      horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\n      verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\n      return false;\n    }\n\n    if (needCustomAdjustAxes) {\n      allAxes.forEach(a => a.customPositionIsAvailable() && a.shift({\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      }));\n    }\n\n    if (that._scrollBar) {\n      that._scrollBar.setPane(that.panes);\n    }\n\n    var vAxesMargins = {\n      panes: {}\n    };\n    var hAxesMargins = getHorizontalAxesMargins(horizontalElements, axis => axis.estimateMargins(panesCanvases[axis.pane]));\n    panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n\n    var drawAxesAndSetCanvases = isHorizontal => {\n      var axes = isHorizontal ? horizontalAxes : verticalAxes;\n      var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\n      drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\n\n      if (isHorizontal) {\n        hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins);\n      } else {\n        vAxesMargins = getVerticalAxesMargins(verticalElements);\n      }\n\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n    };\n\n    drawAxesAndSetCanvases(false);\n    drawAxesAndSetCanvases(true);\n\n    if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\n      drawAxesAndSetCanvases(false);\n    }\n\n    var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n\n    var visibleSeries = that._getVisibleSeries();\n\n    var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\n\n    var axesIsAnimated = axisAnimationEnabled(drawOptions, pointsToAnimation);\n    performActionOnAxes(allElements, \"updateSize\", panesCanvases, axesIsAnimated);\n    horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\n    verticalElements.forEach(shiftAxis(\"left\", \"right\"));\n\n    that._renderScaleBreaks();\n\n    that.panes.forEach(function (pane) {\n      _extend(pane.canvas, panesCanvases[pane.name]);\n    });\n\n    that._valueAxes.forEach(axis => {\n      axis.setInitRange();\n    });\n\n    verticalAxes.forEach((axis, i) => {\n      var _axis$hasWrap;\n\n      if (null !== (_axis$hasWrap = axis.hasWrap) && void 0 !== _axis$hasWrap && _axis$hasWrap.call(axis)) {\n        var title = axis.getTitle();\n        var newTitleWidth = title ? title.bBox.width : 0;\n        var offset = newTitleWidth - oldTitlesWidth[i];\n\n        if (\"right\" === axis.getOptions().position) {\n          vAxesMargins.right += offset;\n        } else {\n          vAxesMargins.left += offset;\n          that.panes.forEach(_ref2 => {\n            var {\n              name: name\n            } = _ref2;\n            return vAxesMargins.panes[name].left += offset;\n          });\n        }\n\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\n        oldTitlesWidth = calculateTitlesWidth(verticalAxes);\n      }\n    });\n\n    if (verticalAxes.some(v => v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition)) {\n      axesIsAnimated && that._resetAxesAnimation(verticalAxesFirstDrawing, false);\n      performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, axesIsAnimated);\n    }\n\n    horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\n    verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\n    return cleanPanesCanvases;\n  },\n\n  _getExtraTemplatesItems() {\n    var allAxes = (this._argumentAxes || []).concat(this._valueAxes || []);\n\n    var elements = this._collectTemplatesFromItems(allAxes);\n\n    return {\n      items: elements.items,\n      groups: elements.groups,\n\n      launchRequest() {\n        allAxes.forEach(function (a) {\n          a.setRenderedState(true);\n        });\n      },\n\n      doneRequest() {\n        allAxes.forEach(function (a) {\n          a.setRenderedState(false);\n        });\n      }\n\n    };\n  },\n\n  _estimateTickIntervals: (axes, canvases) => axes.some(axis => axis.estimateTickInterval(canvases[axis.pane])),\n\n  checkForMoreSpaceForPanesCanvas() {\n    var rotated = this._isRotated();\n\n    var panesAreCustomSized = this.panes.filter(p => p.unit).length === this.panes.length;\n    var needSpace = false;\n\n    if (panesAreCustomSized) {\n      var needHorizontalSpace = 0;\n      var needVerticalSpace = 0;\n\n      if (rotated) {\n        var argAxisRightMargin = this.getArgumentAxis().getMargins().right;\n        var rightPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.right));\n        needHorizontalSpace = this._canvas.right + argAxisRightMargin - rightPanesIndent;\n      } else {\n        var argAxisBottomMargin = this.getArgumentAxis().getMargins().bottom;\n        var bottomPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.bottom));\n        needVerticalSpace = this._canvas.bottom + argAxisBottomMargin - bottomPanesIndent;\n      }\n\n      needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\n        width: needHorizontalSpace,\n        height: needVerticalSpace\n      } : false;\n\n      if (0 !== needVerticalSpace) {\n        var realSize = this.getSize();\n        var customSize = this.option(\"size\");\n        var container = this._$element[0];\n        var containerHasStyledHeight = !!parseInt(container.style.height) || 0 !== this._containerInitialHeight;\n\n        if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\n          this._forceResize(realSize.width, realSize.height + needVerticalSpace);\n\n          needSpace = false;\n        }\n      }\n    } else {\n      needSpace = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), rotated, pane => ({\n        width: rotated && !!pane.unit,\n        height: !rotated && !!pane.unit\n      }));\n    }\n\n    return needSpace;\n  },\n\n  _forceResize(width, height) {\n    this._renderer.resize(width, height);\n\n    this._updateSize();\n\n    this._setContentSize();\n\n    this._preserveOriginalCanvas();\n\n    this._updateCanvasClipRect(this._canvas);\n  },\n\n  _shrinkAxes(sizeShortage, panesCanvases) {\n    if (!sizeShortage || !panesCanvases) {\n      return;\n    }\n\n    this._renderer.stopAllAnimations(true);\n\n    var rotated = this._isRotated();\n\n    var scrollBar = this._scrollBar ? [this._scrollBar] : [];\n    var extendedArgAxes = this._isArgumentAxisBeforeScrollBar() ? this._argumentAxes.concat(scrollBar) : scrollBar.concat(this._argumentAxes);\n    var verticalAxes = rotated ? extendedArgAxes : this._valueAxes;\n    var horizontalAxes = rotated ? this._valueAxes : extendedArgAxes;\n    var allAxes = verticalAxes.concat(horizontalAxes);\n\n    if (sizeShortage.width || sizeShortage.height) {\n      checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\n      checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      var paneSizes = this.panes.reduce((sizes, pane) => {\n        sizes[pane.name] = {\n          height: pane.height,\n          unit: pane.unit\n        };\n        return sizes;\n      }, {});\n      panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\n      performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\n      horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\n      verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\n      this.panes.forEach(pane => _extend(pane.canvas, panesCanvases[pane.name]));\n    }\n  },\n\n  _isArgumentAxisBeforeScrollBar() {\n    var argumentAxis = this.getArgumentAxis();\n\n    if (this._scrollBar) {\n      var _argumentAxis$getOpti;\n\n      var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\n      var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\n\n      var scrollBarPosition = this._scrollBar.getOptions().position;\n\n      return argumentAxis.hasNonBoundaryPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition;\n    }\n\n    return false;\n  },\n\n  _getPanesParameters: function () {\n    var panes = this.panes;\n    var i;\n    var params = [];\n\n    for (i = 0; i < panes.length; i++) {\n      if (this._getPaneBorderVisibility(i)) {\n        params.push({\n          coords: panes[i].borderCoords,\n          clipRect: this._panesClipRects.fixed[i]\n        });\n      }\n    }\n\n    return params;\n  },\n  _createCrosshairCursor: function () {\n    var options = this._themeManager.getOptions(\"crosshair\") || {};\n    var argumentAxis = this.getArgumentAxis();\n    var axes = !this._isRotated() ? [[argumentAxis], this._valueAxes] : [this._valueAxes, [argumentAxis]];\n    var parameters = {\n      canvas: this._getCommonCanvas(),\n      panes: this._getPanesParameters(),\n      axes: axes\n    };\n\n    if (!options || !options.enabled) {\n      return;\n    }\n\n    if (!this._crosshair) {\n      this._crosshair = new Crosshair(this._renderer, options, parameters, this._crosshairCursorGroup);\n    } else {\n      this._crosshair.update(options, parameters);\n    }\n\n    this._crosshair.render();\n  },\n  _getCommonCanvas: function () {\n    var i;\n    var canvas;\n    var commonCanvas;\n    var panes = this.panes;\n\n    for (i = 0; i < panes.length; i++) {\n      canvas = panes[i].canvas;\n\n      if (!commonCanvas) {\n        commonCanvas = _extend({}, canvas);\n      } else {\n        commonCanvas.right = canvas.right;\n        commonCanvas.bottom = canvas.bottom;\n      }\n    }\n\n    return commonCanvas;\n  },\n  _createPanesBackground: function () {\n    var defaultBackgroundColor = this._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\n\n    var backgroundColor;\n    var renderer = this._renderer;\n    var rect;\n    var i;\n    var rects = [];\n\n    this._panesBackgroundGroup.clear();\n\n    for (i = 0; i < this.panes.length; i++) {\n      backgroundColor = this.panes[i].backgroundColor || defaultBackgroundColor;\n\n      if (!backgroundColor || \"none\" === backgroundColor) {\n        rects.push(null);\n        continue;\n      }\n\n      rect = renderer.rect(0, 0, 0, 0).attr({\n        fill: backgroundColor,\n        \"stroke-width\": 0\n      }).append(this._panesBackgroundGroup);\n      rects.push(rect);\n    }\n\n    this.panesBackground = rects;\n  },\n  _fillPanesBackground: function () {\n    var that = this;\n    var bc;\n\n    _each(that.panes, function (i, pane) {\n      bc = pane.borderCoords;\n\n      if (null !== that.panesBackground[i]) {\n        that.panesBackground[i].attr({\n          x: bc.left,\n          y: bc.top,\n          width: bc.width,\n          height: bc.height\n        });\n      }\n    });\n  },\n  _calcPaneBorderCoords: function (pane) {\n    var canvas = pane.canvas;\n    var bc = pane.borderCoords = pane.borderCoords || {};\n    bc.left = canvas.left;\n    bc.top = canvas.top;\n    bc.right = canvas.width - canvas.right;\n    bc.bottom = canvas.height - canvas.bottom;\n    bc.width = Math.max(bc.right - bc.left, 0);\n    bc.height = Math.max(bc.bottom - bc.top, 0);\n  },\n  _drawPanesBorders: function (panesBorderOptions) {\n    var that = this;\n\n    var rotated = that._isRotated();\n\n    that._panesBorderGroup.linkRemove().clear();\n\n    _each(that.panes, function (i, pane) {\n      var borderOptions = panesBorderOptions[pane.name];\n      var attr = {\n        fill: \"none\",\n        stroke: borderOptions.color,\n        \"stroke-opacity\": borderOptions.opacity,\n        \"stroke-width\": borderOptions.width,\n        dashStyle: borderOptions.dashStyle,\n        \"stroke-linecap\": \"square\"\n      };\n\n      that._calcPaneBorderCoords(pane, rotated);\n\n      if (!borderOptions.visible) {\n        return;\n      }\n\n      var bc = pane.borderCoords;\n      var segmentRectParams = prepareSegmentRectPoints(bc.left, bc.top, bc.width, bc.height, borderOptions);\n\n      that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup);\n    });\n\n    that._panesBorderGroup.linkAppend();\n  },\n  _createClipRect: function (clipArray, index, left, top, width, height) {\n    var clipRect = clipArray[index];\n\n    if (!clipRect) {\n      clipRect = this._renderer.clipRect(left, top, width, height);\n      clipArray[index] = clipRect;\n    } else {\n      clipRect.attr({\n        x: left,\n        y: top,\n        width: width,\n        height: height\n      });\n    }\n  },\n  _createClipRectsForPanes: function () {\n    var that = this;\n    var canvas = that._canvas;\n\n    _each(that.panes, function (i, pane) {\n      var needWideClipRect = false;\n      var bc = pane.borderCoords;\n      var left = bc.left;\n      var top = bc.top;\n      var width = bc.width;\n      var height = bc.height;\n      var panesClipRects = that._panesClipRects;\n\n      that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\n\n      that._createClipRect(panesClipRects.base, i, left, top, width, height);\n\n      _each(that.series, function (_, series) {\n        if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\n          needWideClipRect = true;\n        }\n      });\n\n      if (needWideClipRect) {\n        if (that._isRotated()) {\n          top = 0;\n          height = canvas.height;\n        } else {\n          left = 0;\n          width = canvas.width;\n        }\n\n        that._createClipRect(panesClipRects.wide, i, left, top, width, height);\n      } else {\n        panesClipRects.wide[i] = null;\n      }\n    });\n  },\n\n  _applyClipRectsForAxes() {\n    var axes = this._getAllAxes();\n\n    var chartCanvasClipRectID = this._getCanvasClipRectID();\n\n    for (var i = 0; i < axes.length; i++) {\n      var elementsClipRectID = this._getElementsClipRectID(axes[i].pane);\n\n      axes[i].applyClipRects(elementsClipRectID, chartCanvasClipRectID);\n    }\n  },\n\n  _getPaneBorderVisibility: function (paneIndex) {\n    var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\n\n    var pane = this.panes[paneIndex] || {};\n    var paneBorder = pane.border || {};\n    return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible;\n  },\n  _getCanvasForPane: function (paneName) {\n    var panes = this.panes;\n    var panesNumber = panes.length;\n    var i;\n\n    for (i = 0; i < panesNumber; i++) {\n      if (panes[i].name === paneName) {\n        return panes[i].canvas;\n      }\n    }\n  },\n  _getTrackerSettings: function () {\n    var themeManager = this._themeManager;\n    return _extend(this.callBase(), {\n      chart: this,\n      rotated: this._isRotated(),\n      crosshair: this._getCrosshairOptions().enabled ? this._crosshair : null,\n      stickyHovering: themeManager.getOptions(\"stickyHovering\")\n    });\n  },\n  _resolveLabelOverlappingStack: function () {\n    var that = this;\n\n    var isRotated = that._isRotated();\n\n    var shiftDirection = isRotated ? function (box, length) {\n      return {\n        x: box.x - length,\n        y: box.y\n      };\n    } : function (box, length) {\n      return {\n        x: box.x,\n        y: box.y - length\n      };\n    };\n\n    _each(that._getStackPoints(), function (_, stacks) {\n      _each(stacks, function (_, points) {\n        var isInverted = points[0].series.getValueAxis().getOptions().inverted;\n        overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, isInverted, shiftDirection, (a, b) => {\n          var coordPosition = isRotated ? 1 : 0;\n          var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\n          var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\n\n          if (figureCenter1 - figureCenter12 === 0) {\n            return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1);\n          }\n\n          return 0;\n        });\n      });\n    });\n  },\n  _getStackPoints: function () {\n    var stackPoints = {};\n\n    var visibleSeries = this._getVisibleSeries();\n\n    _each(visibleSeries, function (_, singleSeries) {\n      var points = singleSeries.getPoints();\n      var stackName = singleSeries.getStackName() || null;\n\n      _each(points, function (_, point) {\n        var argument = point.argument;\n\n        if (!stackPoints[argument]) {\n          stackPoints[argument] = {};\n        }\n\n        if (!stackPoints[argument][stackName]) {\n          stackPoints[argument][stackName] = [];\n        }\n\n        stackPoints[argument][stackName].push(point);\n      });\n    });\n\n    return stackPoints;\n  },\n  _getCrosshairOptions: function () {\n    return this._getOption(\"crosshair\");\n  },\n\n  zoomArgument(min, max) {\n    if (!this._initialized || !_isDefined(min) && !_isDefined(max)) {\n      return;\n    }\n\n    this.getArgumentAxis().visualRange([min, max]);\n  },\n\n  resetVisualRange() {\n    var that = this;\n    var axes = that._argumentAxes;\n    var nonVirtualArgumentAxis = that.getArgumentAxis();\n    axes.forEach(axis => {\n      axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\n\n      that._applyCustomVisualRangeOption(axis);\n    });\n    that.callBase();\n  },\n\n  getVisibleArgumentBounds: function () {\n    var translator = this._argumentAxes[0].getTranslator();\n\n    var range = translator.getBusinessRange();\n    var isDiscrete = range.axisType === DISCRETE;\n    var categories = range.categories;\n    return {\n      minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\n      maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\n    };\n  },\n\n  _change_FULL_RENDER() {\n    this.callBase();\n\n    if (this._changes.has(VISUAL_RANGE)) {\n      this._raiseZoomEndHandlers();\n    }\n  },\n\n  _getAxesForScaling() {\n    return [this.getArgumentAxis()].concat(this._valueAxes);\n  },\n\n  _applyVisualRangeByVirtualAxes(axis, range) {\n    if (axis.isArgumentAxis) {\n      if (axis !== this.getArgumentAxis()) {\n        return true;\n      }\n\n      this._argumentAxes.filter(a => a !== axis).forEach(a => a.visualRange(range, {\n        start: true,\n        end: true\n      }));\n    }\n\n    return false;\n  },\n\n  _raiseZoomEndHandlers() {\n    this._argumentAxes.forEach(axis => axis.handleZoomEnd());\n\n    this.callBase();\n  },\n\n  _setOptionsByReference() {\n    this.callBase();\n\n    _extend(this._optionsByReference, {\n      \"argumentAxis.visualRange\": true\n    });\n  },\n\n  option() {\n    var option = this.callBase.apply(this, arguments);\n\n    var valueAxis = this._options.silent(\"valueAxis\");\n\n    if (\"array\" === type(valueAxis)) {\n      for (var i = 0; i < valueAxis.length; i++) {\n        var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\n        this._optionsByReference[optionPath] = true;\n      }\n    }\n\n    return option;\n  },\n\n  _notifyVisualRange() {\n    var argAxis = this._argumentAxes[0];\n    var argumentVisualRange = convertVisualRangeObject(argAxis.visualRange(), !_isArray(this.option(\"argumentAxis.visualRange\")));\n\n    if (!argAxis.skipEventRising || !rangesAreEqual(argumentVisualRange, this.option(\"argumentAxis.visualRange\"))) {\n      this.option(\"argumentAxis.visualRange\", argumentVisualRange);\n    } else {\n      argAxis.skipEventRising = null;\n    }\n\n    this.callBase();\n  }\n\n});\nimport shutterZoom from \"./chart_components/shutter_zoom\";\nimport zoomAndPan from \"./chart_components/zoom_and_pan\";\nimport { plugins } from \"./core/annotations\";\ndxChart.addPlugin(shutterZoom);\ndxChart.addPlugin(zoomAndPan);\ndxChart.addPlugin(plugins.core);\ndxChart.addPlugin(plugins.chart);\nregisterComponent(\"dxChart\", dxChart);\nexport default dxChart;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/viz/chart.js"],"names":["getHeight","noop","extend","_extend","hasWindow","each","_each","registerComponent","prepareSegmentRectPoints","map","_map","getLog","getCategoriesInfo","updatePanesCanvases","convertVisualRangeObject","PANE_PADDING","normalizePanesHeight","rangesAreEqual","isRelativeHeightPane","type","isDefined","_isDefined","getPrecision","overlapping","multiAxesSynchronizer","AdvancedChart","ScrollBar","Crosshair","getMargins","rangeDataCalculator","LayoutManager","Range","DEFAULT_PANE_NAME","VISUAL_RANGE","DEFAULT_PANES","name","border","DISCRETE","_isArray","Array","isArray","getFirstAxisNameForPane","axes","paneName","defaultPane","result","i","length","pane","changeVisibilityAxisGrids","axis","gridVisibility","minorGridVisibility","gridOpt","getOptions","grid","minorGridOpt","minorGrid","visible","hideGridsOnNonFirstValueAxisForPane","axesForPane","axisShown","hiddenStubAxis","some","minorGridOptions","gridOptions","forEach","getTranslator","getBusinessRange","isEmpty","push","findAxisOptions","valueAxes","valueAxesOptions","axisName","axInd","priority","findAxis","compareAxes","a","b","doesPaneExist","panes","found","_","accumulate","field","src1","src2","auxSpacing","val1","val2","pickMax","pickMaxValue","Math","max","getAxisMargins","getHorizontalAxesMargins","getMarginsFunc","reduce","margins","_axis$getOrthogonalAx","axisMargins","paneMargins","spacing","getMultipleAxesSpacing","top","bottom","left","right","orthogonalAxis","getOrthogonalAxis","call","customPositionIsAvailable","customPositionIsBoundaryOrthogonalAxis","customPositionEqualsToPredefined","getResolvedBoundaryPosition","getVerticalAxesMargins","performActionOnAxes","action","actionArgument1","actionArgument2","actionArgument3","shrinkCanvases","isRotated","canvases","sizes","verticalMargins","horizontalMargins","getMargin","side","m","indexOf","getMaxMargin","margins1","margins2","getOriginalField","concat","toUpperCase","slice","shrink","paneNames","sizeField","startMargin","endMargin","oppositeMargins","sort","p1","p2","canvas","margin","firstPane","emptySpace","space","Object","keys","prev","key","height","offset","paneSize","floor","drawAxesWithTicks","condition","panesBorderOptions","synchronize","shiftAxis","side1","side2","shifts","shift","getCommonSize","size","checkUsedSpace","sizeShortage","getMarginFunc","axisAnimationEnabled","drawOptions","pointsToAnimation","pointsCount","sum","count","animate","animationPointsLimit","collectMarkersInfoBySeries","allSeries","filteredSeries","argAxis","series","overloadedSeries","argVisualRange","visualRange","argTranslator","argViewPortFilter","getViewPortFilter","s","valAxis","getValueAxis","valVisualRange","getCanvasRange","valTranslator","seriesIndex","valViewPortFilter","sr","seriesPoints","getPoints","filter","p","argument","getMinValue","getMaxValue","tp","value","bubbleSize","mp","x","to","y","total","continuousSeries","index","points","applyAutoHidePointMarkers","argAxisType","autoHidePointMarkers","tickCount","getTicksValues","majorTicksValues","autoHidePointMarkersEnabled","parseInt","isNaN","fastHidingPointMarkersByArea","markersInfo","area","width","_loop","currentSeries","pointSize","pointsArea","splice","updateMarkersInfo","isContinuousSeries","curPoint","j","nextPoint","next_x","next_y","abs","distance","sqrt","pow","dxChart","inherit","_themeSection","_fontFields","_initCore","paneAxis","callBase","_init","_containerInitialHeight","_$element","_correctAxes","_correctValueAxes","_getExtraOptions","_createPanes","option","panesNameCounter","_incidentOccurred","_isRotated","reverse","_getAxisRenderingOptions","axisType","drawingType","_prepareAxisOptions","typeSelector","userOptions","rotated","isHorizontal","containerColor","_themeManager","_checkPaneName","seriesTheme","paneList","includes","_initCustomPositioningAxes","that","argumentAxis","getArgumentAxis","valueAxisName","customPositionAxis","valueAxis","_valueAxes","v","customPositionIsBoundary","_getAllAxes","_argumentAxes","_resetAxesAnimation","isFirstDrawing","resetApplyingAnimation","_axesBoundaryPositioning","allAxes","boundaryStateChanged","prevBoundaryState","_customBoundaryPosition","getCustomBoundaryPosition","_getCrosshairMargins","crosshairOptions","_getCrosshairOptions","crosshairEnabled","enabled","horizontalLabel","label","horizontalLine","verticalLabel","verticalLine","_getValueAxis","valueAxisOptions","crosshairMargins","axisOptions","_createAxis","_populateAxesOptions","optionPath","crosshairMargin","applyVisualRangeSetter","_getVisualRangeSetter","setPane","needHideGrids","synchronizeMultiAxes","paneWithAxis","paneExists","dispose","defaultAxis","axesWithSamePath","_getSeriesForPane","paneSeries","oneSeries","_createPanesBorderOptions","commonBorderOptions","_createScrollBar","scrollBarOptions","scrollBarGroup","_scrollBarGroup","_scrollBar","_renderer","update","linkRemove","_executeAppendAfterSeries","append","_prepareToRender","_createPanesBackground","_appendAxesGroups","_adjustViewport","adjustOnZoom","adjust","_recreateSizeDependentObjects","isCanvasChanged","_getVisibleSeries","useAggregation","zoomChanged","_isZooming","updateCanvas","_canvas","_useAllAggregatedPoints","createPoints","_processSeriesFamilies","businessRange","zoomRange","getViewport","min","base","viewportDistance","categories","precision","round","_zoomLength","_handleSeriesDataUpdated","viewport","addRange","getArgumentRange","setBusinessRange","_axesReinitialized","_isLegendInside","_legend","getPosition","_getLayoutTargets","_applyClipRects","_drawPanesBorders","_createClipRectsForPanes","_applyClipRectsForAxes","_fillPanesBackground","_updateLegendPosition","legendHasInsidePosition","drawLegend","newCanvas","layoutManager","layoutInsideLegend","_allowLegendInsidePosition","_applyExtraSettings","paneIndex","_getPaneIndex","panesClipRects","_panesClipRects","wideClipRect","wide","setClippingParams","id","_getPaneBorderVisibility","_updatePanesCanvases","recreateCanvas","_normalizePanesHeight","_renderScaleBreaks","drawScaleBreaks","_getArgFilter","_applyPointMarkersAutoHiding","_ref","borderCoords","usePointsToDefineAutoHiding","argAxisIsDiscrete","sortingCallback","_renderAxes","calculateTitlesWidth","getTitle","title","bBox","scrollBar","extendedArgAxes","_isArgumentAxisBeforeScrollBar","verticalAxes","verticalElements","horizontalAxes","horizontalElements","allElements","verticalAxesFirstDrawing","panesCanvases","paneSizes","unit","cleanPanesCanvases","needCustomAdjustAxes","adjustAxes","resolveOverlappingForCustomPositioning","vAxesMargins","hAxesMargins","estimateMargins","drawAxesAndSetCanvases","_changesApplying","_estimateTickIntervals","oldTitlesWidth","visibleSeries","_getPointsToAnimation","axesIsAnimated","setInitRange","_axis$hasWrap","hasWrap","newTitleWidth","position","_ref2","getCustomPosition","_axisPosition","_getExtraTemplatesItems","elements","_collectTemplatesFromItems","items","groups","launchRequest","setRenderedState","doneRequest","estimateTickInterval","checkForMoreSpaceForPanesCanvas","panesAreCustomSized","needSpace","needHorizontalSpace","needVerticalSpace","argAxisRightMargin","rightPanesIndent","apply","argAxisBottomMargin","bottomPanesIndent","realSize","getSize","customSize","container","containerHasStyledHeight","style","_forceResize","needMoreSpaceForPanesCanvas","resize","_updateSize","_setContentSize","_preserveOriginalCanvas","_updateCanvasClipRect","_shrinkAxes","stopAllAnimations","_argumentAxis$getOpti","argAxisPosition","argAxisLabelPosition","scrollBarPosition","hasNonBoundaryPosition","_getPanesParameters","params","coords","clipRect","fixed","_createCrosshairCursor","options","parameters","_getCommonCanvas","_crosshair","_crosshairCursorGroup","render","commonCanvas","defaultBackgroundColor","backgroundColor","renderer","rect","rects","_panesBackgroundGroup","clear","attr","fill","panesBackground","bc","_calcPaneBorderCoords","_panesBorderGroup","borderOptions","stroke","color","opacity","dashStyle","segmentRectParams","path","pathType","linkAppend","_createClipRect","clipArray","needWideClipRect","isFinancialSeries","areErrorBarsVisible","chartCanvasClipRectID","_getCanvasClipRectID","elementsClipRectID","_getElementsClipRectID","applyClipRects","commonPaneBorderVisible","paneBorder","_getCanvasForPane","panesNumber","_getTrackerSettings","themeManager","chart","crosshair","stickyHovering","_resolveLabelOverlappingStack","shiftDirection","box","_getStackPoints","stacks","isInverted","inverted","resolveLabelOverlappingInOneDirection","coordPosition","figureCenter1","labels","getFigureCenter","figureCenter12","getPoint","stackPoints","singleSeries","stackName","getStackName","point","_getOption","zoomArgument","_initialized","resetVisualRange","nonVirtualArgumentAxis","_applyCustomVisualRangeOption","getVisibleArgumentBounds","translator","range","isDiscrete","minVisible","maxVisible","_change_FULL_RENDER","_changes","has","_raiseZoomEndHandlers","_getAxesForScaling","_applyVisualRangeByVirtualAxes","isArgumentAxis","start","end","handleZoomEnd","_setOptionsByReference","_optionsByReference","arguments","_options","silent","_notifyVisualRange","argumentVisualRange","skipEventRising","shutterZoom","zoomAndPan","plugins","addPlugin","core"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/viz/chart.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../core/utils/size\";\r\nimport {\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport {\r\n    extend as _extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    each as _each\r\n} from \"../core/utils/iterator\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    prepareSegmentRectPoints\r\n} from \"./utils\";\r\nimport {\r\n    map as _map,\r\n    getLog,\r\n    getCategoriesInfo,\r\n    updatePanesCanvases,\r\n    convertVisualRangeObject,\r\n    PANE_PADDING,\r\n    normalizePanesHeight,\r\n    rangesAreEqual,\r\n    isRelativeHeightPane\r\n} from \"./core/utils\";\r\nimport {\r\n    type,\r\n    isDefined as _isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    getPrecision\r\n} from \"../core/utils/math\";\r\nimport {\r\n    overlapping\r\n} from \"./chart_components/base_chart\";\r\nimport multiAxesSynchronizer from \"./chart_components/multi_axes_synchronizer\";\r\nimport {\r\n    AdvancedChart\r\n} from \"./chart_components/advanced_chart\";\r\nimport {\r\n    ScrollBar\r\n} from \"./chart_components/scroll_bar\";\r\nimport {\r\n    Crosshair,\r\n    getMargins\r\n} from \"./chart_components/crosshair\";\r\nimport rangeDataCalculator from \"./series/helpers/range_data_calculator\";\r\nimport {\r\n    LayoutManager\r\n} from \"./chart_components/layout_manager\";\r\nimport {\r\n    Range\r\n} from \"./translators/range\";\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\nvar DEFAULT_PANES = [{\r\n    name: DEFAULT_PANE_NAME,\r\n    border: {}\r\n}];\r\nvar DISCRETE = \"discrete\";\r\nvar _isArray = Array.isArray;\r\n\r\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\r\n    var result;\r\n    for (var i = 0; i < axes.length; i++) {\r\n        if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\r\n            result = axes[i].name;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = axes[0].name\r\n    }\r\n    return result\r\n}\r\n\r\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\r\n    var gridOpt = axis.getOptions().grid;\r\n    var minorGridOpt = axis.getOptions().minorGrid;\r\n    gridOpt.visible = gridVisibility;\r\n    minorGridOpt && (minorGridOpt.visible = minorGridVisibility)\r\n}\r\n\r\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\r\n    var axisShown = false;\r\n    var hiddenStubAxis = [];\r\n    var minorGridVisibility = axesForPane.some((function(axis) {\r\n        var minorGridOptions = axis.getOptions().minorGrid;\r\n        return minorGridOptions && minorGridOptions.visible\r\n    }));\r\n    var gridVisibility = axesForPane.some((function(axis) {\r\n        var gridOptions = axis.getOptions().grid;\r\n        return gridOptions && gridOptions.visible\r\n    }));\r\n    if (axesForPane.length > 1) {\r\n        axesForPane.forEach((function(axis) {\r\n            var gridOpt = axis.getOptions().grid;\r\n            if (axisShown) {\r\n                changeVisibilityAxisGrids(axis, false, false)\r\n            } else if (gridOpt && gridOpt.visible) {\r\n                if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                    changeVisibilityAxisGrids(axis, false, false);\r\n                    hiddenStubAxis.push(axis)\r\n                } else {\r\n                    axisShown = true;\r\n                    changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility)\r\n                }\r\n            }\r\n        }));\r\n        !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility)\r\n    }\r\n}\r\n\r\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\r\n    var result;\r\n    var axInd;\r\n    for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\r\n        if (valueAxesOptions[axInd].name === axisName) {\r\n            result = valueAxesOptions[axInd];\r\n            result.priority = axInd;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (axInd = 0; axInd < valueAxes.length; axInd++) {\r\n            if (valueAxes[axInd].name === axisName) {\r\n                result = valueAxes[axInd].getOptions();\r\n                result.priority = valueAxes[axInd].priority;\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction findAxis(paneName, axisName, axes) {\r\n    var axis;\r\n    var i;\r\n    for (i = 0; i < axes.length; i++) {\r\n        axis = axes[i];\r\n        if (axis.name === axisName && axis.pane === paneName) {\r\n            return axis\r\n        }\r\n    }\r\n    if (paneName) {\r\n        return findAxis(void 0, axisName, axes)\r\n    }\r\n}\r\n\r\nfunction compareAxes(a, b) {\r\n    return a.priority - b.priority\r\n}\r\n\r\nfunction doesPaneExist(panes, paneName) {\r\n    var found = false;\r\n    _each(panes, (function(_, pane) {\r\n        if (pane.name === paneName) {\r\n            found = true;\r\n            return false\r\n        }\r\n    }));\r\n    return found\r\n}\r\n\r\nfunction accumulate(field, src1, src2, auxSpacing) {\r\n    var val1 = src1[field] || 0;\r\n    var val2 = src2[field] || 0;\r\n    return val1 + val2 + (val1 && val2 ? auxSpacing : 0)\r\n}\r\n\r\nfunction pickMax(field, src1, src2) {\r\n    return pickMaxValue(src1[field], src2[field])\r\n}\r\n\r\nfunction pickMaxValue(val1, val2) {\r\n    return Math.max(val1 || 0, val2 || 0)\r\n}\r\n\r\nfunction getAxisMargins(axis) {\r\n    return axis.getMargins()\r\n}\r\n\r\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\r\n    return axes.reduce((function(margins, axis) {\r\n        var _axis$getOrthogonalAx;\r\n        var axisMargins = getMarginsFunc(axis);\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\r\n        paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\r\n        paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\r\n        paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        var orthogonalAxis = null === (_axis$getOrthogonalAx = axis.getOrthogonalAxis) || void 0 === _axis$getOrthogonalAx ? void 0 : _axis$getOrthogonalAx.call(axis);\r\n        if (orthogonalAxis && orthogonalAxis.customPositionIsAvailable() && (!axis.customPositionIsBoundaryOrthogonalAxis() || !orthogonalAxis.customPositionEqualsToPredefined())) {\r\n            margins[orthogonalAxis.getResolvedBoundaryPosition()] = 0\r\n        }\r\n        return margins\r\n    }), {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction getVerticalAxesMargins(axes) {\r\n    return axes.reduce((function(margins, axis) {\r\n        var axisMargins = axis.getMargins();\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\r\n        paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\r\n        paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\r\n        paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }), {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\r\n    axes.forEach((function(axis) {\r\n        axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3)\r\n    }))\r\n}\r\n\r\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\r\n    function getMargin(side, margins, pane) {\r\n        var m = -1 === (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) ? margins : margins.panes[pane] || {};\r\n        return m[side]\r\n    }\r\n\r\n    function getMaxMargin(side, margins1, margins2, pane) {\r\n        return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane))\r\n    }\r\n    var getOriginalField = field => \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\r\n\r\n    function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\r\n        paneNames = paneNames.sort((p1, p2) => canvases[p2][startMargin] - canvases[p1][startMargin]);\r\n        paneNames.forEach(pane => {\r\n            var canvas = canvases[pane];\r\n            oppositeMargins.forEach(margin => {\r\n                canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane)\r\n            })\r\n        });\r\n        var firstPane = canvases[paneNames[0]];\r\n        var emptySpace = paneNames.reduce((space, paneName) => {\r\n            space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\r\n            return space\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - PANE_PADDING * (paneNames.length - 1);\r\n        emptySpace -= Object.keys(sizes).reduce((prev, key) => prev + (!isRelativeHeightPane(sizes[key]) ? sizes[key].height : 0), 0);\r\n        paneNames.reduce((offset, pane) => {\r\n            var canvas = canvases[pane];\r\n            var paneSize = sizes[pane];\r\n            offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\r\n            canvas[endMargin] = firstPane[sizeField] - offset;\r\n            offset -= !isRelativeHeightPane(paneSize) ? paneSize.height : Math.floor(emptySpace * paneSize.height);\r\n            canvas[startMargin] = offset;\r\n            offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + PANE_PADDING;\r\n            return offset\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0))\r\n    }\r\n    var paneNames = Object.keys(canvases);\r\n    if (!isRotated) {\r\n        shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"])\r\n    } else {\r\n        shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"])\r\n    }\r\n    return canvases\r\n}\r\n\r\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\r\n    if (condition) {\r\n        performActionOnAxes(axes, \"createTicks\", canvases);\r\n        multiAxesSynchronizer.synchronize(axes)\r\n    }\r\n    performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions)\r\n}\r\n\r\nfunction shiftAxis(side1, side2) {\r\n    var shifts = {};\r\n    return function(axis) {\r\n        if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\r\n            var shift = shifts[axis.pane] = shifts[axis.pane] || {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            };\r\n            var spacing = axis.getMultipleAxesSpacing();\r\n            var margins = axis.getMargins();\r\n            axis.shift(shift);\r\n            shift[side1] = accumulate(side1, shift, margins, spacing);\r\n            shift[side2] = accumulate(side2, shift, margins, spacing)\r\n        } else {\r\n            axis.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCommonSize(side, margins) {\r\n    var size = 0;\r\n    var pane;\r\n    var paneMargins;\r\n    for (pane in margins.panes) {\r\n        paneMargins = margins.panes[pane];\r\n        size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right\r\n    }\r\n    return size\r\n}\r\n\r\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\r\n    var size = 0;\r\n    if (sizeShortage[side] > 0) {\r\n        size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\r\n        performActionOnAxes(axes, \"hideTitle\");\r\n        sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins))\r\n    }\r\n    if (sizeShortage[side] > 0) {\r\n        performActionOnAxes(axes, \"hideOuterElements\")\r\n    }\r\n}\r\n\r\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\r\n    var pointsCount = pointsToAnimation.reduce((sum, count) => sum + count, 0) / pointsToAnimation.length;\r\n    return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit\r\n}\r\n\r\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\r\n    var series = [];\r\n    var overloadedSeries = {};\r\n    var argVisualRange = argAxis.visualRange();\r\n    var argTranslator = argAxis.getTranslator();\r\n    var argViewPortFilter = rangeDataCalculator.getViewPortFilter(argVisualRange || {});\r\n    filteredSeries.forEach(s => {\r\n        var valAxis = s.getValueAxis();\r\n        var valVisualRange = valAxis.getCanvasRange();\r\n        var valTranslator = valAxis.getTranslator();\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        var valViewPortFilter = rangeDataCalculator.getViewPortFilter(valVisualRange || {});\r\n        overloadedSeries[seriesIndex] = {};\r\n        filteredSeries.forEach(sr => overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0);\r\n        var seriesPoints = [];\r\n        s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).forEach(p => {\r\n            var tp = {\r\n                seriesIndex: seriesIndex,\r\n                argument: p.argument,\r\n                value: p.getMaxValue(true),\r\n                size: p.bubbleSize || p.getOptions().size\r\n            };\r\n            if (p.getMinValue(true) !== p.getMaxValue(true)) {\r\n                var mp = _extend({}, tp);\r\n                mp.value = p.getMinValue(true);\r\n                mp.x = argTranslator.to(mp.argument, 1);\r\n                mp.y = valTranslator.to(mp.value, 1);\r\n                seriesPoints.push(mp)\r\n            }\r\n            tp.x = argTranslator.to(tp.argument, 1);\r\n            tp.y = valTranslator.to(tp.value, 1);\r\n            seriesPoints.push(tp)\r\n        });\r\n        overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\r\n        overloadedSeries[seriesIndex].total = 0;\r\n        overloadedSeries[seriesIndex].continuousSeries = 0;\r\n        series.push({\r\n            name: s.name,\r\n            index: seriesIndex,\r\n            points: seriesPoints\r\n        })\r\n    });\r\n    return {\r\n        series: series,\r\n        overloadedSeries: overloadedSeries\r\n    }\r\n}\r\n\r\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\r\n    var argAxisType = argAxis.getOptions().type;\r\n    filteredSeries.forEach(s => {\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        s.autoHidePointMarkers = false;\r\n        var tickCount = argAxis.getTicksValues().majorTicksValues.length;\r\n        if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\r\n            for (var index in overloadedSeries[seriesIndex]) {\r\n                var i = parseInt(index);\r\n                if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\r\n                    continue\r\n                }\r\n                if (i === seriesIndex) {\r\n                    if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\r\n                        s.autoHidePointMarkers = true;\r\n                        break\r\n                    }\r\n                } else if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\r\n                    s.autoHidePointMarkers = true;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\r\n    var area = canvas.width * canvas.height;\r\n    var seriesPoints = markersInfo.series;\r\n    var _loop = function(i) {\r\n        var currentSeries = series.filter(s => s.name === seriesPoints[i].name)[0];\r\n        var points = seriesPoints[i].points;\r\n        var pointSize = points.length ? points[0].size : 0;\r\n        var pointsArea = pointSize * pointSize * points.length;\r\n        if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\r\n            var index = seriesPoints[i].index;\r\n            currentSeries.autoHidePointMarkers = true;\r\n            seriesPoints.splice(i, 1);\r\n            series.splice(series.indexOf(currentSeries), 1);\r\n            delete markersInfo.overloadedSeries[index]\r\n        }\r\n    };\r\n    for (var i = seriesPoints.length - 1; i >= 0; i--) {\r\n        _loop(i)\r\n    }\r\n}\r\n\r\nfunction updateMarkersInfo(points, overloadedSeries) {\r\n    var isContinuousSeries = false;\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var curPoint = points[i];\r\n        var size = curPoint.size;\r\n        if (_isDefined(curPoint.x) && _isDefined(curPoint.y)) {\r\n            for (var j = i + 1; j < points.length; j++) {\r\n                var nextPoint = points[j];\r\n                var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\r\n                var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\r\n                if (!_isDefined(next_x) || Math.abs(curPoint.x - next_x) >= size) {\r\n                    isContinuousSeries &= j !== i + 1;\r\n                    break\r\n                } else {\r\n                    var distance = _isDefined(next_x) && _isDefined(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\r\n                    if (distance && distance < size) {\r\n                        overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\r\n                        overloadedSeries[curPoint.seriesIndex].total++;\r\n                        if (!isContinuousSeries) {\r\n                            overloadedSeries[curPoint.seriesIndex].continuousSeries++;\r\n                            isContinuousSeries = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nvar dxChart = AdvancedChart.inherit({\r\n    _themeSection: \"chart\",\r\n    _fontFields: [\"crosshair.label.font\"],\r\n    _initCore: function() {\r\n        this.paneAxis = {};\r\n        this.callBase()\r\n    },\r\n    _init() {\r\n        this._containerInitialHeight = hasWindow() ? getHeight(this._$element) : 0;\r\n        this.callBase()\r\n    },\r\n    _correctAxes: function() {\r\n        this._correctValueAxes(true)\r\n    },\r\n    _getExtraOptions: noop,\r\n    _createPanes: function() {\r\n        var panes = this.option(\"panes\");\r\n        var panesNameCounter = 0;\r\n        var defaultPane;\r\n        if (!panes || _isArray(panes) && !panes.length) {\r\n            panes = DEFAULT_PANES\r\n        }\r\n        this.callBase();\r\n        defaultPane = this.option(\"defaultPane\");\r\n        panes = _extend(true, [], _isArray(panes) ? panes : [panes]);\r\n        _each(panes, (function(_, pane) {\r\n            pane.name = !_isDefined(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name\r\n        }));\r\n        if (_isDefined(defaultPane)) {\r\n            if (!doesPaneExist(panes, defaultPane)) {\r\n                this._incidentOccurred(\"W2101\", [defaultPane]);\r\n                defaultPane = panes[panes.length - 1].name\r\n            }\r\n        } else {\r\n            defaultPane = panes[panes.length - 1].name\r\n        }\r\n        this.defaultPane = defaultPane;\r\n        panes = this._isRotated() ? panes.reverse() : panes;\r\n        return panes\r\n    },\r\n    _getAxisRenderingOptions: function() {\r\n        return {\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        }\r\n    },\r\n    _prepareAxisOptions: function(typeSelector, userOptions, rotated) {\r\n        return {\r\n            isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\r\n            containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\r\n        }\r\n    },\r\n    _checkPaneName: function(seriesTheme) {\r\n        var paneList = _map(this.panes, (function(pane) {\r\n            return pane.name\r\n        }));\r\n        seriesTheme.pane = seriesTheme.pane || this.defaultPane;\r\n        return paneList.includes(seriesTheme.pane)\r\n    },\r\n    _initCustomPositioningAxes() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var valueAxisName = argumentAxis.getOptions().customPositionAxis;\r\n        var valueAxis = that._valueAxes.filter(v => v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name))[0];\r\n        that._valueAxes.forEach(v => {\r\n            if (argumentAxis !== v.getOrthogonalAxis()) {\r\n                v.getOrthogonalAxis = () => argumentAxis;\r\n                v.customPositionIsBoundaryOrthogonalAxis = () => argumentAxis.customPositionIsBoundary()\r\n            }\r\n        });\r\n        if (_isDefined(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\r\n            argumentAxis.getOrthogonalAxis = () => valueAxis;\r\n            argumentAxis.customPositionIsBoundaryOrthogonalAxis = () => that._valueAxes.some(v => v.customPositionIsBoundary())\r\n        } else if (_isDefined(argumentAxis.getOrthogonalAxis()) && !_isDefined(valueAxis)) {\r\n            argumentAxis.getOrthogonalAxis = noop\r\n        }\r\n    },\r\n    _getAllAxes() {\r\n        return this._argumentAxes.concat(this._valueAxes)\r\n    },\r\n    _resetAxesAnimation(isFirstDrawing, isHorizontal) {\r\n        var axes = _isDefined(isHorizontal) ? isHorizontal ^ this._isRotated() ? this._argumentAxes : this._valueAxes : this._getAllAxes();\r\n        axes.forEach(a => {\r\n            a.resetApplyingAnimation(isFirstDrawing)\r\n        })\r\n    },\r\n    _axesBoundaryPositioning() {\r\n        var allAxes = this._getAllAxes();\r\n        var boundaryStateChanged = false;\r\n        allAxes.forEach(a => {\r\n            if (!a.customPositionIsAvailable()) {\r\n                return false\r\n            }\r\n            var prevBoundaryState = a.customPositionIsBoundary();\r\n            a._customBoundaryPosition = a.getCustomBoundaryPosition();\r\n            boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary()\r\n        });\r\n        return boundaryStateChanged\r\n    },\r\n    _getCrosshairMargins: function() {\r\n        var crosshairOptions = this._getCrosshairOptions() || {};\r\n        var crosshairEnabled = crosshairOptions.enabled;\r\n        var margins = getMargins();\r\n        var horizontalLabel = _extend(true, {}, crosshairOptions.label, crosshairOptions.horizontalLine.label);\r\n        var verticalLabel = _extend(true, {}, crosshairOptions.label, crosshairOptions.verticalLine.label);\r\n        return {\r\n            x: crosshairEnabled && crosshairOptions.horizontalLine.visible && horizontalLabel.visible ? margins.x : 0,\r\n            y: crosshairEnabled && crosshairOptions.verticalLine.visible && verticalLabel.visible ? margins.y : 0\r\n        }\r\n    },\r\n    _getValueAxis: function(paneName, axisName) {\r\n        var valueAxes = this._valueAxes;\r\n        var valueAxisOptions = this.option(\"valueAxis\") || {};\r\n        var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\r\n        var rotated = this._isRotated();\r\n        var crosshairMargins = this._getCrosshairMargins();\r\n        var axisOptions;\r\n        var axis;\r\n        axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, this.defaultPane);\r\n        axis = findAxis(paneName, axisName, valueAxes);\r\n        if (!axis) {\r\n            axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\r\n            if (!axisOptions) {\r\n                this._incidentOccurred(\"W2102\", [axisName]);\r\n                axisOptions = {\r\n                    name: axisName,\r\n                    priority: valueAxes.length\r\n                }\r\n            }\r\n            axis = this._createAxis(false, this._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                pane: paneName,\r\n                name: axisName,\r\n                optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n            }, rotated));\r\n            axis.applyVisualRangeSetter(this._getVisualRangeSetter());\r\n            valueAxes.push(axis)\r\n        }\r\n        axis.setPane(paneName);\r\n        return axis\r\n    },\r\n    _correctValueAxes: function(needHideGrids) {\r\n        var that = this;\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var valueAxes = that._valueAxes;\r\n        var paneWithAxis = {};\r\n        that.series.forEach((function(series) {\r\n            var axis = series.getValueAxis();\r\n            paneWithAxis[axis.pane] = true\r\n        }));\r\n        that.panes.forEach((function(pane) {\r\n            var paneName = pane.name;\r\n            if (!paneWithAxis[paneName]) {\r\n                that._getValueAxis(paneName)\r\n            }\r\n            if (needHideGrids && synchronizeMultiAxes) {\r\n                hideGridsOnNonFirstValueAxisForPane(valueAxes.filter((function(axis) {\r\n                    return axis.pane === paneName\r\n                })))\r\n            }\r\n        }));\r\n        that._valueAxes = valueAxes.filter((function(axis) {\r\n            if (!axis.pane) {\r\n                axis.setPane(that.defaultPane)\r\n            }\r\n            var paneExists = doesPaneExist(that.panes, axis.pane);\r\n            if (!paneExists) {\r\n                axis.dispose();\r\n                axis = null\r\n            }\r\n            return paneExists\r\n        })).sort(compareAxes);\r\n        var defaultAxis = this.getValueAxis();\r\n        that._valueAxes.forEach(axis => {\r\n            var optionPath = axis.getOptions().optionPath;\r\n            if (optionPath) {\r\n                var axesWithSamePath = that._valueAxes.filter(a => a.getOptions().optionPath === optionPath);\r\n                if (axesWithSamePath.length > 1) {\r\n                    if (axesWithSamePath.some(a => a === defaultAxis)) {\r\n                        axesWithSamePath.forEach(a => {\r\n                            if (a !== defaultAxis) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    } else {\r\n                        axesWithSamePath.forEach((a, i) => {\r\n                            if (0 !== i) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSeriesForPane: function(paneName) {\r\n        var paneSeries = [];\r\n        _each(this.series, (function(_, oneSeries) {\r\n            if (oneSeries.pane === paneName) {\r\n                paneSeries.push(oneSeries)\r\n            }\r\n        }));\r\n        return paneSeries\r\n    },\r\n    _createPanesBorderOptions: function() {\r\n        var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\r\n        var panesBorderOptions = {};\r\n        this.panes.forEach(pane => panesBorderOptions[pane.name] = _extend(true, {}, commonBorderOptions, pane.border));\r\n        return panesBorderOptions\r\n    },\r\n    _createScrollBar: function() {\r\n        var scrollBarOptions = this._themeManager.getOptions(\"scrollBar\") || {};\r\n        var scrollBarGroup = this._scrollBarGroup;\r\n        if (scrollBarOptions.visible) {\r\n            scrollBarOptions.rotated = this._isRotated();\r\n            this._scrollBar = (this._scrollBar || new ScrollBar(this._renderer, scrollBarGroup)).update(scrollBarOptions)\r\n        } else {\r\n            scrollBarGroup.linkRemove();\r\n            this._scrollBar && this._scrollBar.dispose();\r\n            this._scrollBar = null\r\n        }\r\n    },\r\n    _executeAppendAfterSeries(append) {\r\n        append()\r\n    },\r\n    _prepareToRender(drawOptions) {\r\n        var panesBorderOptions = this._createPanesBorderOptions();\r\n        this._createPanesBackground();\r\n        this._appendAxesGroups();\r\n        this._adjustViewport();\r\n        return panesBorderOptions\r\n    },\r\n    _adjustViewport() {\r\n        var adjustOnZoom = this._themeManager.getOptions(\"adjustOnZoom\");\r\n        if (!adjustOnZoom) {\r\n            return\r\n        }\r\n        this._valueAxes.forEach(axis => axis.adjust())\r\n    },\r\n    _recreateSizeDependentObjects(isCanvasChanged) {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var useAggregation = series.some(s => s.useAggregation());\r\n        var zoomChanged = that._isZooming();\r\n        if (!useAggregation) {\r\n            return\r\n        }\r\n        that._argumentAxes.forEach((function(axis) {\r\n            axis.updateCanvas(that._canvas, true)\r\n        }));\r\n        series.forEach((function(series) {\r\n            if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\r\n                series.createPoints()\r\n            }\r\n        }));\r\n        that._processSeriesFamilies()\r\n    },\r\n    _isZooming() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (!argumentAxis || !argumentAxis.getTranslator()) {\r\n            return false\r\n        }\r\n        var businessRange = argumentAxis.getTranslator().getBusinessRange();\r\n        var zoomRange = argumentAxis.getViewport();\r\n        var min = zoomRange ? zoomRange.min : 0;\r\n        var max = zoomRange ? zoomRange.max : 0;\r\n        if (\"logarithmic\" === businessRange.axisType) {\r\n            min = getLog(min, businessRange.base);\r\n            max = getLog(max, businessRange.base)\r\n        }\r\n        var viewportDistance = businessRange.axisType === DISCRETE ? getCategoriesInfo(businessRange.categories, min, max).categories.length : Math.abs(max - min);\r\n        var precision = getPrecision(viewportDistance);\r\n        precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\r\n        var zoomChanged = Math.round((this._zoomLength - viewportDistance) * precision) / precision !== 0;\r\n        this._zoomLength = viewportDistance;\r\n        return zoomChanged\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var that = this;\r\n        var viewport = new Range;\r\n        that.series.forEach((function(s) {\r\n            viewport.addRange(s.getArgumentRange())\r\n        }));\r\n        that._argumentAxes.forEach((function(axis) {\r\n            axis.updateCanvas(that._canvas, true);\r\n            axis.setBusinessRange(viewport, that._axesReinitialized)\r\n        }));\r\n        that.callBase()\r\n    },\r\n    _isLegendInside: function() {\r\n        return this._legend && \"inside\" === this._legend.getPosition()\r\n    },\r\n    _isRotated: function() {\r\n        return this._themeManager.getOptions(\"rotated\")\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return this.panes\r\n    },\r\n    _applyClipRects: function(panesBorderOptions) {\r\n        this._drawPanesBorders(panesBorderOptions);\r\n        this._createClipRectsForPanes();\r\n        this._applyClipRectsForAxes();\r\n        this._fillPanesBackground()\r\n    },\r\n    _updateLegendPosition: function(drawOptions, legendHasInsidePosition) {\r\n        if (drawOptions.drawLegend && this._legend && legendHasInsidePosition) {\r\n            var panes = this.panes;\r\n            var newCanvas = _extend({}, panes[0].canvas);\r\n            var layoutManager = new LayoutManager;\r\n            newCanvas.right = panes[panes.length - 1].canvas.right;\r\n            newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\r\n            layoutManager.layoutInsideLegend(this._legend, newCanvas)\r\n        }\r\n    },\r\n    _allowLegendInsidePosition: () => true,\r\n    _applyExtraSettings: function(series) {\r\n        var paneIndex = this._getPaneIndex(series.pane);\r\n        var panesClipRects = this._panesClipRects;\r\n        var wideClipRect = panesClipRects.wide[paneIndex];\r\n        series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, this._getPaneBorderVisibility(paneIndex))\r\n    },\r\n    _updatePanesCanvases: function(drawOptions) {\r\n        if (!drawOptions.recreateCanvas) {\r\n            return\r\n        }\r\n        updatePanesCanvases(this.panes, this._canvas, this._isRotated())\r\n    },\r\n    _normalizePanesHeight: function() {\r\n        normalizePanesHeight(this.panes)\r\n    },\r\n    _renderScaleBreaks: function() {\r\n        this._valueAxes.concat(this._argumentAxes).forEach((function(axis) {\r\n            axis.drawScaleBreaks()\r\n        }))\r\n    },\r\n    _getArgFilter() {\r\n        return rangeDataCalculator.getViewPortFilter(this.getArgumentAxis().visualRange() || {})\r\n    },\r\n    _applyPointMarkersAutoHiding() {\r\n        var that = this;\r\n        var allSeries = that.series;\r\n        if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\r\n            allSeries.forEach(s => s.autoHidePointMarkers = false);\r\n            return\r\n        }\r\n        that.panes.forEach(_ref => {\r\n            var {\r\n                borderCoords: borderCoords,\r\n                name: name\r\n            } = _ref;\r\n            var series = allSeries.filter(s => s.pane === name && s.usePointsToDefineAutoHiding());\r\n            var argAxis = that.getArgumentAxis();\r\n            var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\r\n            fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\r\n            if (markersInfo.series.length) {\r\n                var argVisualRange = argAxis.visualRange();\r\n                var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\r\n                var sortingCallback = argAxisIsDiscrete ? (p1, p2) => argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument) : (p1, p2) => p1.argument - p2.argument;\r\n                var points = [];\r\n                markersInfo.series.forEach(s => points = points.concat(s.points));\r\n                points.sort(sortingCallback);\r\n                updateMarkersInfo(points, markersInfo.overloadedSeries);\r\n                applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis)\r\n            }\r\n        })\r\n    },\r\n    _renderAxes: function(drawOptions, panesBorderOptions) {\r\n        function calculateTitlesWidth(axes) {\r\n            return axes.map(axis => {\r\n                if (!axis.getTitle) {\r\n                    return 0\r\n                }\r\n                var title = axis.getTitle();\r\n                return title ? title.bBox.width : 0\r\n            })\r\n        }\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var scrollBar = that._scrollBar ? [that._scrollBar] : [];\r\n        var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\r\n        var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\r\n        var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        var allElements = allAxes.concat(scrollBar);\r\n        var verticalAxesFirstDrawing = verticalAxes.some(v => v.isFirstDrawing());\r\n        that._normalizePanesHeight();\r\n        that._updatePanesCanvases(drawOptions);\r\n        var panesCanvases = that.panes.reduce((function(canvases, pane) {\r\n            canvases[pane.name] = _extend({}, pane.canvas);\r\n            return canvases\r\n        }), {});\r\n        var paneSizes = that.panes.reduce((sizes, pane) => {\r\n            sizes[pane.name] = {\r\n                height: pane.height,\r\n                unit: pane.unit\r\n            };\r\n            return sizes\r\n        }, {});\r\n        var cleanPanesCanvases = _extend(true, {}, panesCanvases);\r\n        that._initCustomPositioningAxes();\r\n        var needCustomAdjustAxes = that._axesBoundaryPositioning();\r\n        if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\r\n            drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            performActionOnAxes(allAxes, \"prepareAnimation\");\r\n            that._renderScaleBreaks();\r\n            horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\r\n            verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\r\n            return false\r\n        }\r\n        if (needCustomAdjustAxes) {\r\n            allAxes.forEach(a => a.customPositionIsAvailable() && a.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            }))\r\n        }\r\n        if (that._scrollBar) {\r\n            that._scrollBar.setPane(that.panes)\r\n        }\r\n        var vAxesMargins = {\r\n            panes: {}\r\n        };\r\n        var hAxesMargins = getHorizontalAxesMargins(horizontalElements, axis => axis.estimateMargins(panesCanvases[axis.pane]));\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        var drawAxesAndSetCanvases = isHorizontal => {\r\n            var axes = isHorizontal ? horizontalAxes : verticalAxes;\r\n            var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\r\n            drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\r\n            if (isHorizontal) {\r\n                hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins)\r\n            } else {\r\n                vAxesMargins = getVerticalAxesMargins(verticalElements)\r\n            }\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins)\r\n        };\r\n        drawAxesAndSetCanvases(false);\r\n        drawAxesAndSetCanvases(true);\r\n        if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\r\n            drawAxesAndSetCanvases(false)\r\n        }\r\n        var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\r\n        var visibleSeries = that._getVisibleSeries();\r\n        var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\r\n        var axesIsAnimated = axisAnimationEnabled(drawOptions, pointsToAnimation);\r\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, axesIsAnimated);\r\n        horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\r\n        verticalElements.forEach(shiftAxis(\"left\", \"right\"));\r\n        that._renderScaleBreaks();\r\n        that.panes.forEach((function(pane) {\r\n            _extend(pane.canvas, panesCanvases[pane.name])\r\n        }));\r\n        that._valueAxes.forEach(axis => {\r\n            axis.setInitRange()\r\n        });\r\n        verticalAxes.forEach((axis, i) => {\r\n            var _axis$hasWrap;\r\n            if (null !== (_axis$hasWrap = axis.hasWrap) && void 0 !== _axis$hasWrap && _axis$hasWrap.call(axis)) {\r\n                var title = axis.getTitle();\r\n                var newTitleWidth = title ? title.bBox.width : 0;\r\n                var offset = newTitleWidth - oldTitlesWidth[i];\r\n                if (\"right\" === axis.getOptions().position) {\r\n                    vAxesMargins.right += offset\r\n                } else {\r\n                    vAxesMargins.left += offset;\r\n                    that.panes.forEach(_ref2 => {\r\n                        var {\r\n                            name: name\r\n                        } = _ref2;\r\n                        return vAxesMargins.panes[name].left += offset\r\n                    })\r\n                }\r\n                panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n                performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\r\n                oldTitlesWidth = calculateTitlesWidth(verticalAxes)\r\n            }\r\n        });\r\n        if (verticalAxes.some(v => v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition)) {\r\n            axesIsAnimated && that._resetAxesAnimation(verticalAxesFirstDrawing, false);\r\n            performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, axesIsAnimated)\r\n        }\r\n        horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\r\n        verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\r\n        return cleanPanesCanvases\r\n    },\r\n    _getExtraTemplatesItems() {\r\n        var allAxes = (this._argumentAxes || []).concat(this._valueAxes || []);\r\n        var elements = this._collectTemplatesFromItems(allAxes);\r\n        return {\r\n            items: elements.items,\r\n            groups: elements.groups,\r\n            launchRequest() {\r\n                allAxes.forEach((function(a) {\r\n                    a.setRenderedState(true)\r\n                }))\r\n            },\r\n            doneRequest() {\r\n                allAxes.forEach((function(a) {\r\n                    a.setRenderedState(false)\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _estimateTickIntervals: (axes, canvases) => axes.some(axis => axis.estimateTickInterval(canvases[axis.pane])),\r\n    checkForMoreSpaceForPanesCanvas() {\r\n        var rotated = this._isRotated();\r\n        var panesAreCustomSized = this.panes.filter(p => p.unit).length === this.panes.length;\r\n        var needSpace = false;\r\n        if (panesAreCustomSized) {\r\n            var needHorizontalSpace = 0;\r\n            var needVerticalSpace = 0;\r\n            if (rotated) {\r\n                var argAxisRightMargin = this.getArgumentAxis().getMargins().right;\r\n                var rightPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.right));\r\n                needHorizontalSpace = this._canvas.right + argAxisRightMargin - rightPanesIndent\r\n            } else {\r\n                var argAxisBottomMargin = this.getArgumentAxis().getMargins().bottom;\r\n                var bottomPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.bottom));\r\n                needVerticalSpace = this._canvas.bottom + argAxisBottomMargin - bottomPanesIndent\r\n            }\r\n            needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n                width: needHorizontalSpace,\r\n                height: needVerticalSpace\r\n            } : false;\r\n            if (0 !== needVerticalSpace) {\r\n                var realSize = this.getSize();\r\n                var customSize = this.option(\"size\");\r\n                var container = this._$element[0];\r\n                var containerHasStyledHeight = !!parseInt(container.style.height) || 0 !== this._containerInitialHeight;\r\n                if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\r\n                    this._forceResize(realSize.width, realSize.height + needVerticalSpace);\r\n                    needSpace = false\r\n                }\r\n            }\r\n        } else {\r\n            needSpace = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), rotated, pane => ({\r\n                width: rotated && !!pane.unit,\r\n                height: !rotated && !!pane.unit\r\n            }))\r\n        }\r\n        return needSpace\r\n    },\r\n    _forceResize(width, height) {\r\n        this._renderer.resize(width, height);\r\n        this._updateSize();\r\n        this._setContentSize();\r\n        this._preserveOriginalCanvas();\r\n        this._updateCanvasClipRect(this._canvas)\r\n    },\r\n    _shrinkAxes(sizeShortage, panesCanvases) {\r\n        if (!sizeShortage || !panesCanvases) {\r\n            return\r\n        }\r\n        this._renderer.stopAllAnimations(true);\r\n        var rotated = this._isRotated();\r\n        var scrollBar = this._scrollBar ? [this._scrollBar] : [];\r\n        var extendedArgAxes = this._isArgumentAxisBeforeScrollBar() ? this._argumentAxes.concat(scrollBar) : scrollBar.concat(this._argumentAxes);\r\n        var verticalAxes = rotated ? extendedArgAxes : this._valueAxes;\r\n        var horizontalAxes = rotated ? this._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        if (sizeShortage.width || sizeShortage.height) {\r\n            checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\r\n            checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            var paneSizes = this.panes.reduce((sizes, pane) => {\r\n                sizes[pane.name] = {\r\n                    height: pane.height,\r\n                    unit: pane.unit\r\n                };\r\n                return sizes\r\n            }, {});\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\r\n            verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\r\n            this.panes.forEach(pane => _extend(pane.canvas, panesCanvases[pane.name]))\r\n        }\r\n    },\r\n    _isArgumentAxisBeforeScrollBar() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (this._scrollBar) {\r\n            var _argumentAxis$getOpti;\r\n            var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\r\n            var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\r\n            var scrollBarPosition = this._scrollBar.getOptions().position;\r\n            return argumentAxis.hasNonBoundaryPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition\r\n        }\r\n        return false\r\n    },\r\n    _getPanesParameters: function() {\r\n        var panes = this.panes;\r\n        var i;\r\n        var params = [];\r\n        for (i = 0; i < panes.length; i++) {\r\n            if (this._getPaneBorderVisibility(i)) {\r\n                params.push({\r\n                    coords: panes[i].borderCoords,\r\n                    clipRect: this._panesClipRects.fixed[i]\r\n                })\r\n            }\r\n        }\r\n        return params\r\n    },\r\n    _createCrosshairCursor: function() {\r\n        var options = this._themeManager.getOptions(\"crosshair\") || {};\r\n        var argumentAxis = this.getArgumentAxis();\r\n        var axes = !this._isRotated() ? [\r\n            [argumentAxis], this._valueAxes\r\n        ] : [this._valueAxes, [argumentAxis]];\r\n        var parameters = {\r\n            canvas: this._getCommonCanvas(),\r\n            panes: this._getPanesParameters(),\r\n            axes: axes\r\n        };\r\n        if (!options || !options.enabled) {\r\n            return\r\n        }\r\n        if (!this._crosshair) {\r\n            this._crosshair = new Crosshair(this._renderer, options, parameters, this._crosshairCursorGroup)\r\n        } else {\r\n            this._crosshair.update(options, parameters)\r\n        }\r\n        this._crosshair.render()\r\n    },\r\n    _getCommonCanvas: function() {\r\n        var i;\r\n        var canvas;\r\n        var commonCanvas;\r\n        var panes = this.panes;\r\n        for (i = 0; i < panes.length; i++) {\r\n            canvas = panes[i].canvas;\r\n            if (!commonCanvas) {\r\n                commonCanvas = _extend({}, canvas)\r\n            } else {\r\n                commonCanvas.right = canvas.right;\r\n                commonCanvas.bottom = canvas.bottom\r\n            }\r\n        }\r\n        return commonCanvas\r\n    },\r\n    _createPanesBackground: function() {\r\n        var defaultBackgroundColor = this._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\r\n        var backgroundColor;\r\n        var renderer = this._renderer;\r\n        var rect;\r\n        var i;\r\n        var rects = [];\r\n        this._panesBackgroundGroup.clear();\r\n        for (i = 0; i < this.panes.length; i++) {\r\n            backgroundColor = this.panes[i].backgroundColor || defaultBackgroundColor;\r\n            if (!backgroundColor || \"none\" === backgroundColor) {\r\n                rects.push(null);\r\n                continue\r\n            }\r\n            rect = renderer.rect(0, 0, 0, 0).attr({\r\n                fill: backgroundColor,\r\n                \"stroke-width\": 0\r\n            }).append(this._panesBackgroundGroup);\r\n            rects.push(rect)\r\n        }\r\n        this.panesBackground = rects\r\n    },\r\n    _fillPanesBackground: function() {\r\n        var that = this;\r\n        var bc;\r\n        _each(that.panes, (function(i, pane) {\r\n            bc = pane.borderCoords;\r\n            if (null !== that.panesBackground[i]) {\r\n                that.panesBackground[i].attr({\r\n                    x: bc.left,\r\n                    y: bc.top,\r\n                    width: bc.width,\r\n                    height: bc.height\r\n                })\r\n            }\r\n        }))\r\n    },\r\n    _calcPaneBorderCoords: function(pane) {\r\n        var canvas = pane.canvas;\r\n        var bc = pane.borderCoords = pane.borderCoords || {};\r\n        bc.left = canvas.left;\r\n        bc.top = canvas.top;\r\n        bc.right = canvas.width - canvas.right;\r\n        bc.bottom = canvas.height - canvas.bottom;\r\n        bc.width = Math.max(bc.right - bc.left, 0);\r\n        bc.height = Math.max(bc.bottom - bc.top, 0)\r\n    },\r\n    _drawPanesBorders: function(panesBorderOptions) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        that._panesBorderGroup.linkRemove().clear();\r\n        _each(that.panes, (function(i, pane) {\r\n            var borderOptions = panesBorderOptions[pane.name];\r\n            var attr = {\r\n                fill: \"none\",\r\n                stroke: borderOptions.color,\r\n                \"stroke-opacity\": borderOptions.opacity,\r\n                \"stroke-width\": borderOptions.width,\r\n                dashStyle: borderOptions.dashStyle,\r\n                \"stroke-linecap\": \"square\"\r\n            };\r\n            that._calcPaneBorderCoords(pane, rotated);\r\n            if (!borderOptions.visible) {\r\n                return\r\n            }\r\n            var bc = pane.borderCoords;\r\n            var segmentRectParams = prepareSegmentRectPoints(bc.left, bc.top, bc.width, bc.height, borderOptions);\r\n            that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup)\r\n        }));\r\n        that._panesBorderGroup.linkAppend()\r\n    },\r\n    _createClipRect: function(clipArray, index, left, top, width, height) {\r\n        var clipRect = clipArray[index];\r\n        if (!clipRect) {\r\n            clipRect = this._renderer.clipRect(left, top, width, height);\r\n            clipArray[index] = clipRect\r\n        } else {\r\n            clipRect.attr({\r\n                x: left,\r\n                y: top,\r\n                width: width,\r\n                height: height\r\n            })\r\n        }\r\n    },\r\n    _createClipRectsForPanes: function() {\r\n        var that = this;\r\n        var canvas = that._canvas;\r\n        _each(that.panes, (function(i, pane) {\r\n            var needWideClipRect = false;\r\n            var bc = pane.borderCoords;\r\n            var left = bc.left;\r\n            var top = bc.top;\r\n            var width = bc.width;\r\n            var height = bc.height;\r\n            var panesClipRects = that._panesClipRects;\r\n            that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\r\n            that._createClipRect(panesClipRects.base, i, left, top, width, height);\r\n            _each(that.series, (function(_, series) {\r\n                if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\r\n                    needWideClipRect = true\r\n                }\r\n            }));\r\n            if (needWideClipRect) {\r\n                if (that._isRotated()) {\r\n                    top = 0;\r\n                    height = canvas.height\r\n                } else {\r\n                    left = 0;\r\n                    width = canvas.width\r\n                }\r\n                that._createClipRect(panesClipRects.wide, i, left, top, width, height)\r\n            } else {\r\n                panesClipRects.wide[i] = null\r\n            }\r\n        }))\r\n    },\r\n    _applyClipRectsForAxes() {\r\n        var axes = this._getAllAxes();\r\n        var chartCanvasClipRectID = this._getCanvasClipRectID();\r\n        for (var i = 0; i < axes.length; i++) {\r\n            var elementsClipRectID = this._getElementsClipRectID(axes[i].pane);\r\n            axes[i].applyClipRects(elementsClipRectID, chartCanvasClipRectID)\r\n        }\r\n    },\r\n    _getPaneBorderVisibility: function(paneIndex) {\r\n        var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\r\n        var pane = this.panes[paneIndex] || {};\r\n        var paneBorder = pane.border || {};\r\n        return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible\r\n    },\r\n    _getCanvasForPane: function(paneName) {\r\n        var panes = this.panes;\r\n        var panesNumber = panes.length;\r\n        var i;\r\n        for (i = 0; i < panesNumber; i++) {\r\n            if (panes[i].name === paneName) {\r\n                return panes[i].canvas\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var themeManager = this._themeManager;\r\n        return _extend(this.callBase(), {\r\n            chart: this,\r\n            rotated: this._isRotated(),\r\n            crosshair: this._getCrosshairOptions().enabled ? this._crosshair : null,\r\n            stickyHovering: themeManager.getOptions(\"stickyHovering\")\r\n        })\r\n    },\r\n    _resolveLabelOverlappingStack: function() {\r\n        var that = this;\r\n        var isRotated = that._isRotated();\r\n        var shiftDirection = isRotated ? function(box, length) {\r\n            return {\r\n                x: box.x - length,\r\n                y: box.y\r\n            }\r\n        } : function(box, length) {\r\n            return {\r\n                x: box.x,\r\n                y: box.y - length\r\n            }\r\n        };\r\n        _each(that._getStackPoints(), (function(_, stacks) {\r\n            _each(stacks, (function(_, points) {\r\n                var isInverted = points[0].series.getValueAxis().getOptions().inverted;\r\n                overlapping.resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, isInverted, shiftDirection, (a, b) => {\r\n                    var coordPosition = isRotated ? 1 : 0;\r\n                    var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\r\n                    var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\r\n                    if (figureCenter1 - figureCenter12 === 0) {\r\n                        return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1)\r\n                    }\r\n                    return 0\r\n                })\r\n            }))\r\n        }))\r\n    },\r\n    _getStackPoints: function() {\r\n        var stackPoints = {};\r\n        var visibleSeries = this._getVisibleSeries();\r\n        _each(visibleSeries, (function(_, singleSeries) {\r\n            var points = singleSeries.getPoints();\r\n            var stackName = singleSeries.getStackName() || null;\r\n            _each(points, (function(_, point) {\r\n                var argument = point.argument;\r\n                if (!stackPoints[argument]) {\r\n                    stackPoints[argument] = {}\r\n                }\r\n                if (!stackPoints[argument][stackName]) {\r\n                    stackPoints[argument][stackName] = []\r\n                }\r\n                stackPoints[argument][stackName].push(point)\r\n            }))\r\n        }));\r\n        return stackPoints\r\n    },\r\n    _getCrosshairOptions: function() {\r\n        return this._getOption(\"crosshair\")\r\n    },\r\n    zoomArgument(min, max) {\r\n        if (!this._initialized || !_isDefined(min) && !_isDefined(max)) {\r\n            return\r\n        }\r\n        this.getArgumentAxis().visualRange([min, max])\r\n    },\r\n    resetVisualRange() {\r\n        var that = this;\r\n        var axes = that._argumentAxes;\r\n        var nonVirtualArgumentAxis = that.getArgumentAxis();\r\n        axes.forEach(axis => {\r\n            axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that.callBase()\r\n    },\r\n    getVisibleArgumentBounds: function() {\r\n        var translator = this._argumentAxes[0].getTranslator();\r\n        var range = translator.getBusinessRange();\r\n        var isDiscrete = range.axisType === DISCRETE;\r\n        var categories = range.categories;\r\n        return {\r\n            minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\r\n            maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\r\n        }\r\n    },\r\n    _change_FULL_RENDER() {\r\n        this.callBase();\r\n        if (this._changes.has(VISUAL_RANGE)) {\r\n            this._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    _getAxesForScaling() {\r\n        return [this.getArgumentAxis()].concat(this._valueAxes)\r\n    },\r\n    _applyVisualRangeByVirtualAxes(axis, range) {\r\n        if (axis.isArgumentAxis) {\r\n            if (axis !== this.getArgumentAxis()) {\r\n                return true\r\n            }\r\n            this._argumentAxes.filter(a => a !== axis).forEach(a => a.visualRange(range, {\r\n                start: true,\r\n                end: true\r\n            }))\r\n        }\r\n        return false\r\n    },\r\n    _raiseZoomEndHandlers() {\r\n        this._argumentAxes.forEach(axis => axis.handleZoomEnd());\r\n        this.callBase()\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        _extend(this._optionsByReference, {\r\n            \"argumentAxis.visualRange\": true\r\n        })\r\n    },\r\n    option() {\r\n        var option = this.callBase.apply(this, arguments);\r\n        var valueAxis = this._options.silent(\"valueAxis\");\r\n        if (\"array\" === type(valueAxis)) {\r\n            for (var i = 0; i < valueAxis.length; i++) {\r\n                var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\r\n                this._optionsByReference[optionPath] = true\r\n            }\r\n        }\r\n        return option\r\n    },\r\n    _notifyVisualRange() {\r\n        var argAxis = this._argumentAxes[0];\r\n        var argumentVisualRange = convertVisualRangeObject(argAxis.visualRange(), !_isArray(this.option(\"argumentAxis.visualRange\")));\r\n        if (!argAxis.skipEventRising || !rangesAreEqual(argumentVisualRange, this.option(\"argumentAxis.visualRange\"))) {\r\n            this.option(\"argumentAxis.visualRange\", argumentVisualRange)\r\n        } else {\r\n            argAxis.skipEventRising = null\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nimport shutterZoom from \"./chart_components/shutter_zoom\";\r\nimport zoomAndPan from \"./chart_components/zoom_and_pan\";\r\nimport {\r\n    plugins\r\n} from \"./core/annotations\";\r\ndxChart.addPlugin(shutterZoom);\r\ndxChart.addPlugin(zoomAndPan);\r\ndxChart.addPlugin(plugins.core);\r\ndxChart.addPlugin(plugins.chart);\r\nregisterComponent(\"dxChart\", dxChart);\r\nexport default dxChart;\r\n"]},"metadata":{},"sourceType":"module"}