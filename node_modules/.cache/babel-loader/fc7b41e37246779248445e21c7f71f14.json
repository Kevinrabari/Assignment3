{"ast":null,"code":"/**\n* DevExpress Analytics (diagram\\dragDrop\\connectionPointDragHandler.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionPointDragHandler = void 0;\n\nvar _dragDropHandler_1 = require(\"../../core/dragDrop/_dragDropHandler\");\n\nvar connectionPointSurface_1 = require(\"../elements/connectors/connectionPointSurface\");\n\nvar connectingPointModel_1 = require(\"../elements/connectingPointModel\");\n\nvar diagramElementViewModel_1 = require(\"../elements/diagramElementViewModel\");\n\nvar ConnectionPointDragHandler = function (_super) {\n  __extends(ConnectionPointDragHandler, _super);\n\n  function ConnectionPointDragHandler(surface, selection, undoEngine, snapHelper, dragHelperContent) {\n    var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;\n\n    _this.currentConnectionPoint = null;\n    _this.cursor = 'arrow';\n    _this.containment = '.dxrd-ghost-container';\n\n    _this['helper'] = function (draggable) {\n      dragHelperContent.update(draggable);\n    };\n\n    return _this;\n  }\n\n  ConnectionPointDragHandler.prototype.startDrag = function (control) {\n    if (!(control instanceof connectionPointSurface_1.ConnectionPointSurface)) {\n      throw new Error('ConnectionPointDragHandler can be applied to the ConnectionPoint only.');\n    }\n\n    this.currentConnectionPoint = control;\n  };\n\n  ConnectionPointDragHandler.prototype.drag = function (event, ui) {\n    ui.position.left += ui['scroll'].left;\n    ui.position.top += ui['scroll'].top;\n\n    var position = this._getAbsoluteSurfacePosition(ui);\n\n    this.currentConnectionPoint.rect({\n      top: position.top,\n      left: position.left\n    });\n  };\n\n  ConnectionPointDragHandler.prototype.doStopDrag = function () {\n    this.dragHelperContent.reset();\n\n    if (this.selection.dropTarget) {\n      var dropTarget = this.selection.dropTarget.getControlModel();\n\n      if (dropTarget instanceof connectingPointModel_1.ConnectingPointViewModel) {\n        var connector = this.currentConnectionPoint.parent.getControlModel();\n\n        if (this.currentConnectionPoint.getControlModel() === connector.startPoint()) {\n          connector.startPoint().connectingPoint(dropTarget);\n        } else {\n          connector.endPoint().connectingPoint(dropTarget);\n        }\n      } else if (dropTarget instanceof diagramElementViewModel_1.DiagramElementViewModel) {\n        var connector = this.currentConnectionPoint.parent.getControlModel();\n        var connectings = dropTarget.connectingPoints();\n\n        if (this.currentConnectionPoint.getControlModel() === connector.startPoint()) {\n          connector.startPoint().connectingPoint(connectings[0]);\n        } else {\n          connector.endPoint().connectingPoint(connectings[0]);\n        }\n      }\n    }\n  };\n\n  return ConnectionPointDragHandler;\n}(_dragDropHandler_1.DragDropHandler);\n\nexports.ConnectionPointDragHandler = ConnectionPointDragHandler;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/diagram/dragDrop/connectionPointDragHandler.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","ConnectionPointDragHandler","_dragDropHandler_1","require","connectionPointSurface_1","connectingPointModel_1","diagramElementViewModel_1","_super","surface","selection","undoEngine","snapHelper","dragHelperContent","_this","currentConnectionPoint","cursor","containment","draggable","update","startDrag","control","ConnectionPointSurface","Error","drag","event","ui","position","left","top","_getAbsoluteSurfacePosition","rect","doStopDrag","reset","dropTarget","getControlModel","ConnectingPointViewModel","connector","parent","startPoint","connectingPoint","endPoint","DiagramElementViewModel","connectings","connectingPoints","DragDropHandler"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (diagram\\dragDrop\\connectionPointDragHandler.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPointDragHandler = void 0;\nvar _dragDropHandler_1 = require(\"../../core/dragDrop/_dragDropHandler\");\nvar connectionPointSurface_1 = require(\"../elements/connectors/connectionPointSurface\");\nvar connectingPointModel_1 = require(\"../elements/connectingPointModel\");\nvar diagramElementViewModel_1 = require(\"../elements/diagramElementViewModel\");\nvar ConnectionPointDragHandler = (function (_super) {\n    __extends(ConnectionPointDragHandler, _super);\n    function ConnectionPointDragHandler(surface, selection, undoEngine, snapHelper, dragHelperContent) {\n        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;\n        _this.currentConnectionPoint = null;\n        _this.cursor = 'arrow';\n        _this.containment = '.dxrd-ghost-container';\n        _this['helper'] = function (draggable) {\n            dragHelperContent.update(draggable);\n        };\n        return _this;\n    }\n    ConnectionPointDragHandler.prototype.startDrag = function (control) {\n        if (!(control instanceof connectionPointSurface_1.ConnectionPointSurface)) {\n            throw new Error('ConnectionPointDragHandler can be applied to the ConnectionPoint only.');\n        }\n        this.currentConnectionPoint = control;\n    };\n    ConnectionPointDragHandler.prototype.drag = function (event, ui) {\n        ui.position.left += ui['scroll'].left;\n        ui.position.top += ui['scroll'].top;\n        var position = this._getAbsoluteSurfacePosition(ui);\n        this.currentConnectionPoint.rect({ top: position.top, left: position.left });\n    };\n    ConnectionPointDragHandler.prototype.doStopDrag = function () {\n        this.dragHelperContent.reset();\n        if (this.selection.dropTarget) {\n            var dropTarget = this.selection.dropTarget.getControlModel();\n            if (dropTarget instanceof connectingPointModel_1.ConnectingPointViewModel) {\n                var connector = this.currentConnectionPoint.parent.getControlModel();\n                if (this.currentConnectionPoint.getControlModel() === connector.startPoint()) {\n                    connector.startPoint().connectingPoint(dropTarget);\n                }\n                else {\n                    connector.endPoint().connectingPoint(dropTarget);\n                }\n            }\n            else if (dropTarget instanceof diagramElementViewModel_1.DiagramElementViewModel) {\n                var connector = this.currentConnectionPoint.parent.getControlModel();\n                var connectings = dropTarget.connectingPoints();\n                if (this.currentConnectionPoint.getControlModel() === connector.startPoint()) {\n                    connector.startPoint().connectingPoint(connectings[0]);\n                }\n                else {\n                    connector.endPoint().connectingPoint(connectings[0]);\n                }\n            }\n        }\n    };\n    return ConnectionPointDragHandler;\n}(_dragDropHandler_1.DragDropHandler));\nexports.ConnectionPointDragHandler = ConnectionPointDragHandler;\n"]},"metadata":{},"sourceType":"script"}