{"ast":null,"code":"/**\n* DevExpress Analytics (widgets\\criteria\\utils\\criteriaOperatorStateMachine.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CriteriaOperatorStateMachine = exports.MachineState = void 0;\n\nvar _utils_1 = require(\"../../../property-grid/widgets/internal/_utils\");\n\nvar criteriaparser_1 = require(\"../parser/criteriaparser\");\n\nvar MachineState = function () {\n  function MachineState(tokenName, alphabet, startTerm, endTerm) {\n    this.tokenName = tokenName;\n    this.alphabet = alphabet;\n    this.startTerm = startTerm;\n    this.endTerm = endTerm;\n    this.tokenLength = 0;\n    this.isActiveState = false;\n    this.tokens = [];\n  }\n\n  MachineState.prototype._isSubline = function (pos, term) {\n    var result = pos + term.length - 1 < this.alphabet.length;\n\n    for (var i = pos; i < pos + term.length && result; i++) result = this.alphabet[i] == term[i - pos];\n\n    return result;\n  };\n\n  MachineState.prototype._getToken = function (pos) {\n    var token = {\n      type: this.tokenName,\n      start: pos - this.tokenLength + 1,\n      end: pos + this.endTerm.length\n    };\n    token.val = this.alphabet.substring(token.start, token.end);\n    return token;\n  };\n\n  MachineState.prototype.processTransitionFunction = function (pos) {\n    if (this.isActiveState) {\n      this.tokenLength++;\n    }\n\n    if (this._isSubline(pos, this.startTerm) && !this.isActiveState) {\n      this.isActiveState = true;\n      this.tokenLength += this.startTerm.length;\n      return this.startTerm.length - 1;\n    } else if (this.isActiveState && this._isSubline(pos, this.endTerm)) {\n      this.isActiveState = false;\n      this.tokens.push(this._getToken(pos));\n      this.tokenLength = 0;\n      return this.endTerm.length - 1;\n    }\n\n    return 0;\n  };\n\n  return MachineState;\n}();\n\nexports.MachineState = MachineState;\n\nvar CriteriaOperatorStateMachine = function () {\n  function CriteriaOperatorStateMachine(stringCriteria) {\n    this.stringCriteria = stringCriteria;\n    this.machineStates = [];\n    this.machineStates.push(new MachineState('field', stringCriteria, '[', ']'));\n    this.machineStates.push(new MachineState('value', stringCriteria, \"'\", \"'\"));\n    this.machineStates.push(new MachineState('comment', stringCriteria, '/*', '*/'));\n    this._inputStringCriteria = stringCriteria;\n  }\n\n  CriteriaOperatorStateMachine.parse = function (stringCriteria, saveOriginalStringLength) {\n    if (saveOriginalStringLength === void 0) {\n      saveOriginalStringLength = false;\n    }\n\n    if (stringCriteria && stringCriteria !== '') {\n      if (saveOriginalStringLength) return new CriteriaOperatorStateMachine(stringCriteria).replaceCommentsToChar(' ').getCriteria();\n      return new CriteriaOperatorStateMachine(stringCriteria).replaceCommentsToChar().getCriteria();\n    }\n\n    return null;\n  };\n\n  CriteriaOperatorStateMachine.prototype._tokenize = function () {\n    var _this = this;\n\n    for (var i = 0; i < this.stringCriteria.length; i++) {\n      var step = 0;\n      this.machineStates.forEach(function (state) {\n        if (step) return;\n\n        var anotherMachines = _this.machineStates.filter(function (a) {\n          return a != state && a.isActiveState;\n        });\n\n        if (!anotherMachines.length) step = state.processTransitionFunction(i);\n      });\n      i += step;\n    }\n\n    var resultTokens = [];\n    this.machineStates.forEach(function (state) {\n      resultTokens = resultTokens.concat(state.tokens);\n      state.tokens = [];\n    });\n    return resultTokens;\n  };\n\n  CriteriaOperatorStateMachine.prototype._replaceTokenToAnotherToken = function (tokens, newTokenChar, tokenName) {\n    var tempCriteria = this.stringCriteria;\n    tokens = tokens.filter(function (a) {\n      return a.type == tokenName;\n    }).sort(function (a) {\n      return a.start;\n    }).reverse();\n    tokens.forEach(function (token) {\n      var lines = token.val.split('\\n');\n      var start = token.start;\n      var end = token.end;\n      lines.forEach(function (line) {\n        if (line.length + start !== token.end) {\n          end = start + line.length;\n        } else {\n          end = token.end;\n        }\n\n        tempCriteria = _utils_1.stringReplace(tempCriteria, start, end - start, newTokenChar);\n        start = line.length * newTokenChar.length + 1;\n      });\n    });\n    return tempCriteria;\n  };\n\n  CriteriaOperatorStateMachine.prototype.replaceCommentsToChar = function (char) {\n    if (char === void 0) {\n      char = '';\n    }\n\n    this._inputStringCriteria = this._replaceTokenToAnotherToken(this._tokenize(), char, 'comment');\n    return this;\n  };\n\n  CriteriaOperatorStateMachine.prototype.getCriteria = function () {\n    return criteriaparser_1.parse(this._inputStringCriteria);\n  };\n\n  return CriteriaOperatorStateMachine;\n}();\n\nexports.CriteriaOperatorStateMachine = CriteriaOperatorStateMachine;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/widgets/criteria/utils/criteriaOperatorStateMachine.js"],"names":["Object","defineProperty","exports","value","CriteriaOperatorStateMachine","MachineState","_utils_1","require","criteriaparser_1","tokenName","alphabet","startTerm","endTerm","tokenLength","isActiveState","tokens","prototype","_isSubline","pos","term","result","length","i","_getToken","token","type","start","end","val","substring","processTransitionFunction","push","stringCriteria","machineStates","_inputStringCriteria","parse","saveOriginalStringLength","replaceCommentsToChar","getCriteria","_tokenize","_this","step","forEach","state","anotherMachines","filter","a","resultTokens","concat","_replaceTokenToAnotherToken","newTokenChar","tempCriteria","sort","reverse","lines","split","line","stringReplace","char"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (widgets\\criteria\\utils\\criteriaOperatorStateMachine.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CriteriaOperatorStateMachine = exports.MachineState = void 0;\nvar _utils_1 = require(\"../../../property-grid/widgets/internal/_utils\");\nvar criteriaparser_1 = require(\"../parser/criteriaparser\");\nvar MachineState = (function () {\n    function MachineState(tokenName, alphabet, startTerm, endTerm) {\n        this.tokenName = tokenName;\n        this.alphabet = alphabet;\n        this.startTerm = startTerm;\n        this.endTerm = endTerm;\n        this.tokenLength = 0;\n        this.isActiveState = false;\n        this.tokens = [];\n    }\n    MachineState.prototype._isSubline = function (pos, term) {\n        var result = (pos + term.length - 1 < this.alphabet.length);\n        for (var i = pos; i < (pos + term.length) && result; i++)\n            result = this.alphabet[i] == term[i - pos];\n        return result;\n    };\n    MachineState.prototype._getToken = function (pos) {\n        var token = {\n            type: this.tokenName, start: pos - this.tokenLength + 1, end: pos + this.endTerm.length\n        };\n        token.val = this.alphabet.substring(token.start, token.end);\n        return token;\n    };\n    MachineState.prototype.processTransitionFunction = function (pos) {\n        if (this.isActiveState) {\n            this.tokenLength++;\n        }\n        if (this._isSubline(pos, this.startTerm) && !this.isActiveState) {\n            this.isActiveState = true;\n            this.tokenLength += this.startTerm.length;\n            return this.startTerm.length - 1;\n        }\n        else if (this.isActiveState && this._isSubline(pos, this.endTerm)) {\n            this.isActiveState = false;\n            this.tokens.push(this._getToken(pos));\n            this.tokenLength = 0;\n            return this.endTerm.length - 1;\n        }\n        return 0;\n    };\n    return MachineState;\n}());\nexports.MachineState = MachineState;\nvar CriteriaOperatorStateMachine = (function () {\n    function CriteriaOperatorStateMachine(stringCriteria) {\n        this.stringCriteria = stringCriteria;\n        this.machineStates = [];\n        this.machineStates.push(new MachineState('field', stringCriteria, '[', ']'));\n        this.machineStates.push(new MachineState('value', stringCriteria, \"'\", \"'\"));\n        this.machineStates.push(new MachineState('comment', stringCriteria, '/*', '*/'));\n        this._inputStringCriteria = stringCriteria;\n    }\n    CriteriaOperatorStateMachine.parse = function (stringCriteria, saveOriginalStringLength) {\n        if (saveOriginalStringLength === void 0) { saveOriginalStringLength = false; }\n        if (stringCriteria && stringCriteria !== '') {\n            if (saveOriginalStringLength)\n                return new CriteriaOperatorStateMachine(stringCriteria).replaceCommentsToChar(' ').getCriteria();\n            return new CriteriaOperatorStateMachine(stringCriteria).replaceCommentsToChar().getCriteria();\n        }\n        return null;\n    };\n    CriteriaOperatorStateMachine.prototype._tokenize = function () {\n        var _this = this;\n        for (var i = 0; i < this.stringCriteria.length; i++) {\n            var step = 0;\n            this.machineStates.forEach(function (state) {\n                if (step)\n                    return;\n                var anotherMachines = _this.machineStates.filter(function (a) { return a != state && a.isActiveState; });\n                if (!anotherMachines.length)\n                    step = state.processTransitionFunction(i);\n            });\n            i += step;\n        }\n        var resultTokens = [];\n        this.machineStates.forEach(function (state) {\n            resultTokens = resultTokens.concat(state.tokens);\n            state.tokens = [];\n        });\n        return resultTokens;\n    };\n    CriteriaOperatorStateMachine.prototype._replaceTokenToAnotherToken = function (tokens, newTokenChar, tokenName) {\n        var tempCriteria = this.stringCriteria;\n        tokens = tokens.filter(function (a) { return a.type == tokenName; }).sort(function (a) { return a.start; }).reverse();\n        tokens.forEach(function (token) {\n            var lines = token.val.split('\\n');\n            var start = token.start;\n            var end = token.end;\n            lines.forEach(function (line) {\n                if (line.length + start !== token.end) {\n                    end = start + line.length;\n                }\n                else {\n                    end = token.end;\n                }\n                tempCriteria = _utils_1.stringReplace(tempCriteria, start, end - start, newTokenChar);\n                start = (line.length * newTokenChar.length) + 1;\n            });\n        });\n        return tempCriteria;\n    };\n    CriteriaOperatorStateMachine.prototype.replaceCommentsToChar = function (char) {\n        if (char === void 0) { char = ''; }\n        this._inputStringCriteria = this._replaceTokenToAnotherToken(this._tokenize(), char, 'comment');\n        return this;\n    };\n    CriteriaOperatorStateMachine.prototype.getCriteria = function () {\n        return criteriaparser_1.parse(this._inputStringCriteria);\n    };\n    return CriteriaOperatorStateMachine;\n}());\nexports.CriteriaOperatorStateMachine = CriteriaOperatorStateMachine;\n"]},"metadata":{},"sourceType":"script"}