{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\dataSource\\federation\\federatedQueryExpression.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FederatedQueryExpression = exports.FederatedQueryExpressionType = exports.expressionSerializationInfo = void 0;\n\nvar serializer_1 = require(\"../../../serializer/serializer\");\n\nvar _utils_1 = require(\"../../../serializer/_utils\");\n\nvar metadata_1 = require(\"../../metadata\");\n\nexports.expressionSerializationInfo = [{\n  propertyName: 'table',\n  modelName: '@NodeAlias'\n}, metadata_1.name, metadata_1.alias, {\n  propertyName: 'expressionType',\n  modelName: '@ExpressionType'\n}, {\n  propertyName: 'columnExpression',\n  modelName: '@ColumnExpression'\n}];\nvar FederatedQueryExpressionType;\n\n(function (FederatedQueryExpressionType) {\n  FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectColumnExpression\"] = 0] = \"SelectColumnExpression\";\n  FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectExpression\"] = 1] = \"SelectExpression\";\n  FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectAllColumnsExpression\"] = 2] = \"SelectAllColumnsExpression\";\n  FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectAllNodeColumnsExpression\"] = 3] = \"SelectAllNodeColumnsExpression\";\n  FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectRowCountExpression\"] = 4] = \"SelectRowCountExpression\";\n})(FederatedQueryExpressionType = exports.FederatedQueryExpressionType || (exports.FederatedQueryExpressionType = {}));\n\nvar FederatedQueryExpression = function () {\n  function FederatedQueryExpression(model, serializer) {\n    serializer = serializer || new serializer_1.ModelSerializer();\n    serializer.deserialize(this, _utils_1.extend(model, {\n      '@ItemType': 'Expression'\n    }));\n  }\n\n  FederatedQueryExpression.prototype.getInfo = function () {\n    return exports.expressionSerializationInfo;\n  };\n\n  return FederatedQueryExpression;\n}();\n\nexports.FederatedQueryExpression = FederatedQueryExpression;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/dataSource/federation/federatedQueryExpression.js"],"names":["Object","defineProperty","exports","value","FederatedQueryExpression","FederatedQueryExpressionType","expressionSerializationInfo","serializer_1","require","_utils_1","metadata_1","propertyName","modelName","name","alias","model","serializer","ModelSerializer","deserialize","extend","prototype","getInfo"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wBAAR,GAAmCF,OAAO,CAACG,4BAAR,GAAuCH,OAAO,CAACI,2BAAR,GAAsC,KAAK,CAArH;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,gCAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,4BAAD,CAAtB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,gBAAD,CAAxB;;AACAN,OAAO,CAACI,2BAAR,GAAsC,CAClC;AAAEK,EAAAA,YAAY,EAAE,OAAhB;AAAyBC,EAAAA,SAAS,EAAE;AAApC,CADkC,EAElCF,UAAU,CAACG,IAFuB,EAGlCH,UAAU,CAACI,KAHuB,EAIlC;AAAEH,EAAAA,YAAY,EAAE,gBAAhB;AAAkCC,EAAAA,SAAS,EAAE;AAA7C,CAJkC,EAKlC;AAAED,EAAAA,YAAY,EAAE,kBAAhB;AAAoCC,EAAAA,SAAS,EAAE;AAA/C,CALkC,CAAtC;AAOA,IAAIP,4BAAJ;;AACA,CAAC,UAAUA,4BAAV,EAAwC;AACrCA,EAAAA,4BAA4B,CAACA,4BAA4B,CAAC,wBAAD,CAA5B,GAAyD,CAA1D,CAA5B,GAA2F,wBAA3F;AACAA,EAAAA,4BAA4B,CAACA,4BAA4B,CAAC,kBAAD,CAA5B,GAAmD,CAApD,CAA5B,GAAqF,kBAArF;AACAA,EAAAA,4BAA4B,CAACA,4BAA4B,CAAC,4BAAD,CAA5B,GAA6D,CAA9D,CAA5B,GAA+F,4BAA/F;AACAA,EAAAA,4BAA4B,CAACA,4BAA4B,CAAC,gCAAD,CAA5B,GAAiE,CAAlE,CAA5B,GAAmG,gCAAnG;AACAA,EAAAA,4BAA4B,CAACA,4BAA4B,CAAC,0BAAD,CAA5B,GAA2D,CAA5D,CAA5B,GAA6F,0BAA7F;AACH,CAND,EAMGA,4BAA4B,GAAGH,OAAO,CAACG,4BAAR,KAAyCH,OAAO,CAACG,4BAAR,GAAuC,EAAhF,CANlC;;AAOA,IAAID,wBAAwB,GAAI,YAAY;AACxC,WAASA,wBAAT,CAAkCW,KAAlC,EAAyCC,UAAzC,EAAqD;AACjDA,IAAAA,UAAU,GAAGA,UAAU,IAAI,IAAIT,YAAY,CAACU,eAAjB,EAA3B;AACAD,IAAAA,UAAU,CAACE,WAAX,CAAuB,IAAvB,EAA6BT,QAAQ,CAACU,MAAT,CAAgBJ,KAAhB,EAAuB;AAAE,mBAAa;AAAf,KAAvB,CAA7B;AACH;;AACDX,EAAAA,wBAAwB,CAACgB,SAAzB,CAAmCC,OAAnC,GAA6C,YAAY;AACrD,WAAOnB,OAAO,CAACI,2BAAf;AACH,GAFD;;AAGA,SAAOF,wBAAP;AACH,CAT+B,EAAhC;;AAUAF,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\dataSource\\federation\\federatedQueryExpression.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FederatedQueryExpression = exports.FederatedQueryExpressionType = exports.expressionSerializationInfo = void 0;\nvar serializer_1 = require(\"../../../serializer/serializer\");\nvar _utils_1 = require(\"../../../serializer/_utils\");\nvar metadata_1 = require(\"../../metadata\");\nexports.expressionSerializationInfo = [\n    { propertyName: 'table', modelName: '@NodeAlias' },\n    metadata_1.name,\n    metadata_1.alias,\n    { propertyName: 'expressionType', modelName: '@ExpressionType' },\n    { propertyName: 'columnExpression', modelName: '@ColumnExpression' }\n];\nvar FederatedQueryExpressionType;\n(function (FederatedQueryExpressionType) {\n    FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectColumnExpression\"] = 0] = \"SelectColumnExpression\";\n    FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectExpression\"] = 1] = \"SelectExpression\";\n    FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectAllColumnsExpression\"] = 2] = \"SelectAllColumnsExpression\";\n    FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectAllNodeColumnsExpression\"] = 3] = \"SelectAllNodeColumnsExpression\";\n    FederatedQueryExpressionType[FederatedQueryExpressionType[\"SelectRowCountExpression\"] = 4] = \"SelectRowCountExpression\";\n})(FederatedQueryExpressionType = exports.FederatedQueryExpressionType || (exports.FederatedQueryExpressionType = {}));\nvar FederatedQueryExpression = (function () {\n    function FederatedQueryExpression(model, serializer) {\n        serializer = serializer || new serializer_1.ModelSerializer();\n        serializer.deserialize(this, _utils_1.extend(model, { '@ItemType': 'Expression' }));\n    }\n    FederatedQueryExpression.prototype.getInfo = function () {\n        return exports.expressionSerializationInfo;\n    };\n    return FederatedQueryExpression;\n}());\nexports.FederatedQueryExpression = FederatedQueryExpression;\n"]},"metadata":{},"sourceType":"script"}