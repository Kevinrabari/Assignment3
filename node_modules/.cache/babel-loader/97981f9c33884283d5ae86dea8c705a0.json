{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_color-tree-view-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorSchemeTreeViewEditor = exports.ColorTreeViewModel = exports.ColorEntryTreeItem = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _knockout_utils_1 = require(\"../../../model/internal/_knockout-utils\");\n\nvar ColorEntryTreeItem = function () {\n  function ColorEntryTreeItem(value, uniqueKey, entry, editColor, entryComputedColor) {\n    this.value = value;\n    this.uniqueKey = uniqueKey;\n    this.entry = entry;\n    this.items = [];\n    this.expanded = true;\n    this.custom = false;\n\n    if (editColor) {\n      this.editColor = function (_, ev) {\n        editColor(entry, ev);\n      };\n\n      this.custom = entry.custom;\n    }\n\n    var entryColor = !!editColor && entryComputedColor;\n    this.color = !!entryColor ? entryColor.css : null;\n  }\n\n  return ColorEntryTreeItem;\n}();\n\nexports.ColorEntryTreeItem = ColorEntryTreeItem;\n\nvar ColorTreeViewModel = function () {\n  function ColorTreeViewModel(params) {\n    var _this = this;\n\n    this.removeItem = function (item) {\n      _this.removeEntry(item.entry);\n\n      _this.selectedEntry(null);\n    };\n\n    this.selectedTreeItems = ko.observable([]);\n\n    this.onItemSelectionChanged = function (e) {\n      _this.selectedEntry(e.node.itemData.entry);\n    };\n\n    this.dataSource = ko.computed(function () {\n      var tree = [];\n      params.dataSource().forEach(function (entry) {\n        var plainValues = entry.dimensionKeys().map(function (dim) {\n          return {\n            displayValue: dim.displayText(),\n            id: dim.displayText()\n          };\n        });\n\n        if (entry.measureKeys().length) {\n          plainValues.push({\n            displayValue: entry.measureKeys().map(function (m) {\n              return m.displayText();\n            }).join(' | '),\n            id: entry.measureKeys().map(function (m) {\n              return m._id;\n            }).join(' | ')\n          });\n        }\n\n        var entryComputedColor = entry.paletteIndex() === null ? entry.color() : params.colorPalette()[entry.paletteIndex()];\n        ColorTreeViewModel.construct(plainValues, tree, entry, ko.unwrap(params.editColor), entryComputedColor);\n      });\n      return tree;\n    });\n    this.colorPickerModel = params.colorPickerModel;\n    this.isTreeMode = ko.computed(function () {\n      return params.dataSource().length > 0 && params.dataSource()[0].dimensionKeys().length + params.dataSource()[0].measureKeys().length > 1;\n    });\n    this.allowModify = params.allowModify;\n    this.selectedEntry = params.selectedEntry;\n    this.addNewEntry = params.addNewEntry;\n    this.removeEntry = ko.unwrap(params.removeEntry);\n    this.allowAddNewEntry = _knockout_utils_1.safeComputed({\n      colorSchemeEntries: params.dataSource\n    }, function (args) {\n      return _this.allowModify && args.colorSchemeEntries.some(function (entry) {\n        return entry.dimensionKeys().length > 0;\n      });\n    });\n  }\n\n  ColorTreeViewModel.construct = function (values, children, entry, editColor, entryComputedColor) {\n    if (editColor === void 0) {\n      editColor = function () {};\n    }\n\n    var value = values.shift();\n    var foundChild = children.filter(function (item) {\n      return item.uniqueKey === value.id;\n    })[0];\n\n    if (!foundChild && !!value) {\n      foundChild = new ColorEntryTreeItem(value.displayValue, value.id, entry, values.length === 0 ? editColor : null, entryComputedColor);\n      children.push(foundChild);\n    }\n\n    if (foundChild && values.length > 0) {\n      ColorTreeViewModel.construct(values, foundChild.items, entry, editColor, entryComputedColor);\n    }\n  };\n\n  return ColorTreeViewModel;\n}();\n\nexports.ColorTreeViewModel = ColorTreeViewModel;\n\nvar colorSchemeTreeViewEditor = function (options) {\n  return function (context) {\n    return {\n      template: function (args) {\n        return colorSchemeTreeViewEditorTemplate(args, context, options);\n      }\n    };\n  };\n};\n\nexports.colorSchemeTreeViewEditor = colorSchemeTreeViewEditor;\n\nvar colorSchemeTreeViewEditorTemplate = function (args, context, options) {\n  var div = document.createElement('div');\n  div.classList.add('dx-dashboard-form-column-content-wrapper');\n  var viewModel = new ColorTreeViewModel(options);\n  ko.applyBindingsToNode(div, {\n    template: {\n      name: 'dx-dashboard-colors-view',\n      data: viewModel\n    }\n  }, context.bindingContext);\n  return div;\n};\n\nko.components.register('dx-dashboard-colors-component', {\n  viewModel: ColorTreeViewModel,\n  template: {\n    element: 'dx-dashboard-colors-view'\n  }\n});","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/color-scheme-editor-extension/internal/_color-tree-view-model.js"],"names":["Object","defineProperty","exports","value","colorSchemeTreeViewEditor","ColorTreeViewModel","ColorEntryTreeItem","ko","require","_knockout_utils_1","uniqueKey","entry","editColor","entryComputedColor","items","expanded","custom","_","ev","entryColor","color","css","params","_this","removeItem","item","removeEntry","selectedEntry","selectedTreeItems","observable","onItemSelectionChanged","e","node","itemData","dataSource","computed","tree","forEach","plainValues","dimensionKeys","map","dim","displayValue","displayText","id","measureKeys","length","push","m","join","_id","paletteIndex","colorPalette","construct","unwrap","colorPickerModel","isTreeMode","allowModify","addNewEntry","allowAddNewEntry","safeComputed","colorSchemeEntries","args","some","values","children","shift","foundChild","filter","options","context","template","colorSchemeTreeViewEditorTemplate","div","document","createElement","classList","add","viewModel","applyBindingsToNode","name","data","bindingContext","components","register","element"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoCF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,kBAAR,GAA6B,KAAK,CAAnG;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAA/B;;AACA,IAAIF,kBAAkB,GAAI,YAAY;AAClC,WAASA,kBAAT,CAA4BH,KAA5B,EAAmCO,SAAnC,EAA8CC,KAA9C,EAAqDC,SAArD,EAAgEC,kBAAhE,EAAoF;AAChF,SAAKV,KAAL,GAAaA,KAAb;AACA,SAAKO,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,MAAL,GAAc,KAAd;;AACA,QAAIJ,SAAJ,EAAe;AACX,WAAKA,SAAL,GAAiB,UAAUK,CAAV,EAAaC,EAAb,EAAiB;AAC9BN,QAAAA,SAAS,CAACD,KAAD,EAAQO,EAAR,CAAT;AACH,OAFD;;AAGA,WAAKF,MAAL,GAAcL,KAAK,CAACK,MAApB;AACH;;AACD,QAAIG,UAAU,GAAG,CAAC,CAACP,SAAF,IAAeC,kBAAhC;AACA,SAAKO,KAAL,GAAa,CAAC,CAACD,UAAF,GAAeA,UAAU,CAACE,GAA1B,GAAgC,IAA7C;AACH;;AACD,SAAOf,kBAAP;AACH,CAlByB,EAA1B;;AAmBAJ,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B;;AACA,IAAID,kBAAkB,GAAI,YAAY;AAClC,WAASA,kBAAT,CAA4BiB,MAA5B,EAAoC;AAChC,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKC,UAAL,GAAkB,UAAUC,IAAV,EAAgB;AAC9BF,MAAAA,KAAK,CAACG,WAAN,CAAkBD,IAAI,CAACd,KAAvB;;AACAY,MAAAA,KAAK,CAACI,aAAN,CAAoB,IAApB;AACH,KAHD;;AAIA,SAAKC,iBAAL,GAAyBrB,EAAE,CAACsB,UAAH,CAAc,EAAd,CAAzB;;AACA,SAAKC,sBAAL,GAA8B,UAAUC,CAAV,EAAa;AACvCR,MAAAA,KAAK,CAACI,aAAN,CAAoBI,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBtB,KAApC;AACH,KAFD;;AAGA,SAAKuB,UAAL,GAAkB3B,EAAE,CAAC4B,QAAH,CAAY,YAAY;AACtC,UAAIC,IAAI,GAAG,EAAX;AACAd,MAAAA,MAAM,CAACY,UAAP,GAAoBG,OAApB,CAA4B,UAAU1B,KAAV,EAAiB;AACzC,YAAI2B,WAAW,GAAG3B,KAAK,CAAC4B,aAAN,GAAsBC,GAAtB,CAA0B,UAAUC,GAAV,EAAe;AAAE,iBAAQ;AACjEC,YAAAA,YAAY,EAAED,GAAG,CAACE,WAAJ,EADmD;AAEjEC,YAAAA,EAAE,EAAEH,GAAG,CAACE,WAAJ;AAF6D,WAAR;AAGxD,SAHa,CAAlB;;AAIA,YAAIhC,KAAK,CAACkC,WAAN,GAAoBC,MAAxB,EAAgC;AAC5BR,UAAAA,WAAW,CAACS,IAAZ,CAAiB;AACbL,YAAAA,YAAY,EAAE/B,KAAK,CAACkC,WAAN,GAAoBL,GAApB,CAAwB,UAAUQ,CAAV,EAAa;AAAE,qBAAOA,CAAC,CAACL,WAAF,EAAP;AAAyB,aAAhE,EAAkEM,IAAlE,CAAuE,KAAvE,CADD;AAEbL,YAAAA,EAAE,EAAEjC,KAAK,CAACkC,WAAN,GAAoBL,GAApB,CAAwB,UAAUQ,CAAV,EAAa;AAAE,qBAAOA,CAAC,CAACE,GAAT;AAAe,aAAtD,EAAwDD,IAAxD,CAA6D,KAA7D;AAFS,WAAjB;AAIH;;AACD,YAAIpC,kBAAkB,GAAGF,KAAK,CAACwC,YAAN,OAAyB,IAAzB,GAAgCxC,KAAK,CAACS,KAAN,EAAhC,GAAgDE,MAAM,CAAC8B,YAAP,GAAsBzC,KAAK,CAACwC,YAAN,EAAtB,CAAzE;AACA9C,QAAAA,kBAAkB,CAACgD,SAAnB,CAA6Bf,WAA7B,EAA0CF,IAA1C,EAAgDzB,KAAhD,EAAuDJ,EAAE,CAAC+C,MAAH,CAAUhC,MAAM,CAACV,SAAjB,CAAvD,EAAoFC,kBAApF;AACH,OAbD;AAcA,aAAOuB,IAAP;AACH,KAjBiB,CAAlB;AAkBA,SAAKmB,gBAAL,GAAwBjC,MAAM,CAACiC,gBAA/B;AACA,SAAKC,UAAL,GAAkBjD,EAAE,CAAC4B,QAAH,CAAY,YAAY;AACtC,aAAOb,MAAM,CAACY,UAAP,GAAoBY,MAApB,GAA6B,CAA7B,IAAmCxB,MAAM,CAACY,UAAP,GAAoB,CAApB,EAAuBK,aAAvB,GAAuCO,MAAvC,GAAgDxB,MAAM,CAACY,UAAP,GAAoB,CAApB,EAAuBW,WAAvB,GAAqCC,MAAtF,GAAgG,CAAzI;AACH,KAFiB,CAAlB;AAGA,SAAKW,WAAL,GAAmBnC,MAAM,CAACmC,WAA1B;AACA,SAAK9B,aAAL,GAAqBL,MAAM,CAACK,aAA5B;AACA,SAAK+B,WAAL,GAAmBpC,MAAM,CAACoC,WAA1B;AACA,SAAKhC,WAAL,GAAmBnB,EAAE,CAAC+C,MAAH,CAAUhC,MAAM,CAACI,WAAjB,CAAnB;AACA,SAAKiC,gBAAL,GAAwBlD,iBAAiB,CAACmD,YAAlB,CAA+B;AAAEC,MAAAA,kBAAkB,EAAEvC,MAAM,CAACY;AAA7B,KAA/B,EAA0E,UAAU4B,IAAV,EAAgB;AAAE,aAAOvC,KAAK,CAACkC,WAAN,IAAqBK,IAAI,CAACD,kBAAL,CAAwBE,IAAxB,CAA6B,UAAUpD,KAAV,EAAiB;AAAE,eAAOA,KAAK,CAAC4B,aAAN,GAAsBO,MAAtB,GAA+B,CAAtC;AAA0C,OAA1F,CAA5B;AAA0H,KAAtN,CAAxB;AACH;;AACDzC,EAAAA,kBAAkB,CAACgD,SAAnB,GAA+B,UAAUW,MAAV,EAAkBC,QAAlB,EAA4BtD,KAA5B,EAAmCC,SAAnC,EAA8CC,kBAA9C,EAAkE;AAC7F,QAAID,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,MAAAA,SAAS,GAAG,YAAY,CAAG,CAA3B;AAA8B;;AAC1D,QAAIT,KAAK,GAAG6D,MAAM,CAACE,KAAP,EAAZ;AACA,QAAIC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAAU3C,IAAV,EAAgB;AAAE,aAAOA,IAAI,CAACf,SAAL,KAAmBP,KAAK,CAACyC,EAAhC;AAAqC,KAAvE,EAAyE,CAAzE,CAAjB;;AACA,QAAI,CAACuB,UAAD,IAAe,CAAC,CAAChE,KAArB,EAA4B;AACxBgE,MAAAA,UAAU,GAAG,IAAI7D,kBAAJ,CAAuBH,KAAK,CAACuC,YAA7B,EAA2CvC,KAAK,CAACyC,EAAjD,EAAqDjC,KAArD,EAA4DqD,MAAM,CAAClB,MAAP,KAAkB,CAAlB,GAAsBlC,SAAtB,GAAkC,IAA9F,EAAoGC,kBAApG,CAAb;AACAoD,MAAAA,QAAQ,CAAClB,IAAT,CAAcoB,UAAd;AACH;;AACD,QAAIA,UAAU,IAAIH,MAAM,CAAClB,MAAP,GAAgB,CAAlC,EAAqC;AACjCzC,MAAAA,kBAAkB,CAACgD,SAAnB,CAA6BW,MAA7B,EAAqCG,UAAU,CAACrD,KAAhD,EAAuDH,KAAvD,EAA8DC,SAA9D,EAAyEC,kBAAzE;AACH;AACJ,GAXD;;AAYA,SAAOR,kBAAP;AACH,CApDyB,EAA1B;;AAqDAH,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,IAAID,yBAAyB,GAAG,UAAUiE,OAAV,EAAmB;AAAE,SAAO,UAAUC,OAAV,EAAmB;AAAE,WAAQ;AACrFC,MAAAA,QAAQ,EAAE,UAAUT,IAAV,EAAgB;AAAE,eAAOU,iCAAiC,CAACV,IAAD,EAAOQ,OAAP,EAAgBD,OAAhB,CAAxC;AAAmE;AADV,KAAR;AAE5E,GAFgD;AAE7C,CAFR;;AAGAnE,OAAO,CAACE,yBAAR,GAAoCA,yBAApC;;AACA,IAAIoE,iCAAiC,GAAG,UAAUV,IAAV,EAAgBQ,OAAhB,EAAyBD,OAAzB,EAAkC;AACtE,MAAII,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,EAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,0CAAlB;AACA,MAAIC,SAAS,GAAG,IAAIzE,kBAAJ,CAAuBgE,OAAvB,CAAhB;AACA9D,EAAAA,EAAE,CAACwE,mBAAH,CAAuBN,GAAvB,EAA4B;AAAEF,IAAAA,QAAQ,EAAE;AAAES,MAAAA,IAAI,EAAE,0BAAR;AAAoCC,MAAAA,IAAI,EAAEH;AAA1C;AAAZ,GAA5B,EAAiGR,OAAO,CAACY,cAAzG;AACA,SAAOT,GAAP;AACH,CAND;;AAOAlE,EAAE,CAAC4E,UAAH,CAAcC,QAAd,CAAuB,+BAAvB,EAAwD;AACpDN,EAAAA,SAAS,EAAEzE,kBADyC;AAEpDkE,EAAAA,QAAQ,EAAE;AAAEc,IAAAA,OAAO,EAAE;AAAX;AAF0C,CAAxD","sourcesContent":["/**\r\n* DevExpress Dashboard (_color-tree-view-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.colorSchemeTreeViewEditor = exports.ColorTreeViewModel = exports.ColorEntryTreeItem = void 0;\nvar ko = require(\"knockout\");\nvar _knockout_utils_1 = require(\"../../../model/internal/_knockout-utils\");\nvar ColorEntryTreeItem = (function () {\n    function ColorEntryTreeItem(value, uniqueKey, entry, editColor, entryComputedColor) {\n        this.value = value;\n        this.uniqueKey = uniqueKey;\n        this.entry = entry;\n        this.items = [];\n        this.expanded = true;\n        this.custom = false;\n        if (editColor) {\n            this.editColor = function (_, ev) {\n                editColor(entry, ev);\n            };\n            this.custom = entry.custom;\n        }\n        var entryColor = !!editColor && entryComputedColor;\n        this.color = !!entryColor ? entryColor.css : null;\n    }\n    return ColorEntryTreeItem;\n}());\nexports.ColorEntryTreeItem = ColorEntryTreeItem;\nvar ColorTreeViewModel = (function () {\n    function ColorTreeViewModel(params) {\n        var _this = this;\n        this.removeItem = function (item) {\n            _this.removeEntry(item.entry);\n            _this.selectedEntry(null);\n        };\n        this.selectedTreeItems = ko.observable([]);\n        this.onItemSelectionChanged = function (e) {\n            _this.selectedEntry(e.node.itemData.entry);\n        };\n        this.dataSource = ko.computed(function () {\n            var tree = [];\n            params.dataSource().forEach(function (entry) {\n                var plainValues = entry.dimensionKeys().map(function (dim) { return ({\n                    displayValue: dim.displayText(),\n                    id: dim.displayText()\n                }); });\n                if (entry.measureKeys().length) {\n                    plainValues.push({\n                        displayValue: entry.measureKeys().map(function (m) { return m.displayText(); }).join(' | '),\n                        id: entry.measureKeys().map(function (m) { return m._id; }).join(' | ')\n                    });\n                }\n                var entryComputedColor = entry.paletteIndex() === null ? entry.color() : params.colorPalette()[entry.paletteIndex()];\n                ColorTreeViewModel.construct(plainValues, tree, entry, ko.unwrap(params.editColor), entryComputedColor);\n            });\n            return tree;\n        });\n        this.colorPickerModel = params.colorPickerModel;\n        this.isTreeMode = ko.computed(function () {\n            return params.dataSource().length > 0 && (params.dataSource()[0].dimensionKeys().length + params.dataSource()[0].measureKeys().length) > 1;\n        });\n        this.allowModify = params.allowModify;\n        this.selectedEntry = params.selectedEntry;\n        this.addNewEntry = params.addNewEntry;\n        this.removeEntry = ko.unwrap(params.removeEntry);\n        this.allowAddNewEntry = _knockout_utils_1.safeComputed({ colorSchemeEntries: params.dataSource }, function (args) { return _this.allowModify && args.colorSchemeEntries.some(function (entry) { return entry.dimensionKeys().length > 0; }); });\n    }\n    ColorTreeViewModel.construct = function (values, children, entry, editColor, entryComputedColor) {\n        if (editColor === void 0) { editColor = function () { }; }\n        var value = values.shift();\n        var foundChild = children.filter(function (item) { return item.uniqueKey === value.id; })[0];\n        if (!foundChild && !!value) {\n            foundChild = new ColorEntryTreeItem(value.displayValue, value.id, entry, values.length === 0 ? editColor : null, entryComputedColor);\n            children.push(foundChild);\n        }\n        if (foundChild && values.length > 0) {\n            ColorTreeViewModel.construct(values, foundChild.items, entry, editColor, entryComputedColor);\n        }\n    };\n    return ColorTreeViewModel;\n}());\nexports.ColorTreeViewModel = ColorTreeViewModel;\nvar colorSchemeTreeViewEditor = function (options) { return function (context) { return ({\n    template: function (args) { return colorSchemeTreeViewEditorTemplate(args, context, options); }\n}); }; };\nexports.colorSchemeTreeViewEditor = colorSchemeTreeViewEditor;\nvar colorSchemeTreeViewEditorTemplate = function (args, context, options) {\n    var div = document.createElement('div');\n    div.classList.add('dx-dashboard-form-column-content-wrapper');\n    var viewModel = new ColorTreeViewModel(options);\n    ko.applyBindingsToNode(div, { template: { name: 'dx-dashboard-colors-view', data: viewModel } }, context.bindingContext);\n    return div;\n};\nko.components.register('dx-dashboard-colors-component', {\n    viewModel: ColorTreeViewModel,\n    template: { element: 'dx-dashboard-colors-view' }\n});\n"]},"metadata":{},"sourceType":"script"}