{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_chart-data-controller-proto.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.allowedTypesForShowPointMarkers = exports.chartDataControllerProto = void 0;\n\nvar string_1 = require(\"devextreme/core/utils/string\");\n\nvar enums_1 = require(\"../../model/enums\");\n\nvar _date_utils_1 = require(\"../../model/internal/_date-utils\");\n\nvar _render_helper_1 = require(\"../../viewer-parts/widgets/_render-helper\");\n\nvar item_data_axis_names_1 = require(\"../item-data/item-data-axis-names\");\n\nvar special_values_1 = require(\"../special-values\");\n\nvar _chart_helper_1 = require(\"../_chart-helper\");\n\nvar _common_1 = require(\"../_common\");\n\nvar _formatter_1 = require(\"../_formatter\");\n\nvar _localization_ids_1 = require(\"../_localization-ids\");\n\nvar _localizer_1 = require(\"../_localizer\");\n\nvar _utils_1 = require(\"../_utils\");\n\nvar _chart_data_controller_base_1 = require(\"./_chart-data-controller-base\");\n\nvar chartDataControllerProto = function (_super) {\n  __extends(chartDataControllerProto, _super);\n\n  function chartDataControllerProto(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this._legendSeriesPrefix = '__legend__series__';\n    _this._argumentAxisPoints = _this.getArgumentAxisPoints();\n    return _this;\n  }\n\n  chartDataControllerProto.prototype.getLegendSeriesName = function (seriesName) {\n    return this._legendSeriesPrefix + seriesName;\n  };\n\n  chartDataControllerProto.prototype.getLegendSeriesDisplayName = function (seriesName) {\n    return seriesName.indexOf(this._legendSeriesPrefix) !== -1 ? seriesName.replace(this._legendSeriesPrefix, '') : seriesName;\n  };\n\n  chartDataControllerProto.prototype.getDataSourceAndSeries = function (encodeHtml) {\n    var _this = this;\n\n    var that = this;\n\n    if (!that.viewModel || that._argumentAxisPoints.length == 0) {\n      return {\n        dataSource: null,\n        series: null,\n        argumentAxis: {\n          categories: []\n        }\n      };\n    }\n\n    var seriesInfoList = that._getSeriesInfo(encodeHtml),\n        legendInfoList = that.viewModel.Legend && !that.viewModel.IsDefaultColorizationDisabled ? that._getLegendInfo() : [],\n        cfLegendItems = that.viewModel.Legend ? that._getConditionalFormattingLegendItems() : [],\n        result = {\n      dataSource: [],\n      series: [],\n      argumentAxis: null\n    };\n\n    var dataSourceAndCategories = this.getDataSourceAndCategories(seriesInfoList);\n\n    if (dataSourceAndCategories) {\n      result.dataSource = dataSourceAndCategories.dataSource;\n      if (dataSourceAndCategories.categories) result.argumentAxis = {\n        categories: dataSourceAndCategories.categories\n      };\n    }\n\n    if (seriesInfoList.length > 0) {\n      seriesInfoList.forEach(function (seriesInfo) {\n        if (seriesInfo.seriesItem) {\n          result.series.push(seriesInfo.seriesItem);\n        }\n      });\n      legendInfoList.forEach(function (legendInfo) {\n        result.series.push({\n          name: _this.getLegendSeriesName(legendInfo.name),\n          color: legendInfo.color,\n          type: legendInfo.type\n        });\n      });\n      cfLegendItems.forEach(function (legendItem) {\n        result.series.push({\n          name: legendItem.name,\n          color: legendItem.color\n        });\n      });\n    }\n\n    return result;\n  };\n\n  chartDataControllerProto.prototype.getDataSourceAndCategories = function (seriesInfoList) {\n    return this.getDataDefinedDataSourceAndCategories(seriesInfoList);\n  };\n\n  chartDataControllerProto.prototype.getDataDefinedDataSourceAndCategories = function (seriesInfoList) {\n    var _this = this;\n\n    var dataSource = [];\n    var categories;\n\n    if (seriesInfoList.length > 0) {\n      categories = [];\n\n      this._argumentAxisPoints.forEach(function (argumentAxisPoint, pointIndex) {\n        var argument = _this.getArgumentBindingValue(argumentAxisPoint, pointIndex),\n            dataSourceItem = {\n          x: argument\n        };\n\n        if (_this._isSelectionTagsRequired()) {\n          dataSourceItem.tag = {\n            axisPoint: argumentAxisPoint\n          };\n        }\n\n        if (_this.isDiscreteArgument()) {\n          categories.push(argument);\n        }\n\n        seriesInfoList.forEach(function (seriesInfo) {\n          if (seriesInfo.originalSeriesType === 'HighLowClose') {\n            dataSourceItem.nullColumn = null;\n          }\n\n          seriesInfo.valueFields.forEach(function (valueField) {\n            var value = valueField.getValue(argumentAxisPoint);\n            if (value === special_values_1.specialValues.errorValueGuid) value = 0;\n            dataSourceItem[valueField.name] = value;\n          });\n        });\n        dataSource.push(dataSourceItem);\n      });\n    } else {\n      categories = undefined;\n    }\n\n    return {\n      dataSource: dataSource,\n      categories: categories\n    };\n  };\n\n  chartDataControllerProto.prototype.generatePaneName = function (paneName, paneIndex) {\n    return paneName || 'Pane ' + paneIndex;\n  };\n\n  chartDataControllerProto.prototype._getSeriesInfo = function (encodeHtml) {\n    var info;\n\n    var that = this,\n        seriesIndex = 0,\n        seriesAxisPoints = this.getSeriesAxisPoints(),\n        isGrandTotal = !this.viewModel.SummarySeriesMember,\n        includeTags = that._isSelectionTagsRequired(),\n        reversed = this.viewModel.AxisX && this.viewModel.AxisX.Reverse,\n        result = [],\n        add = function (info) {\n      var canReverse = info.seriesItem.type !== 'stackedbar' && info.seriesItem.type !== 'fullstackedbar';\n      if (reversed && canReverse) result.unshift(info);else result.push(info);\n    };\n\n    that._iterateSeriesTemplates(function (pane, seriesTemplate, paneIndex) {\n      var paneName = pane ? that.generatePaneName(pane.Name, paneIndex) : undefined,\n          specifyTitleByName = pane ? pane.SpecifySeriesTitlesWithSeriesName : false,\n          pointLabelInfo = that._getPointLabelInfo(seriesTemplate.PointLabel);\n\n      seriesAxisPoints.forEach(function (seriesAxisPoint) {\n        info = {\n          name: seriesTemplate.Name,\n          dataId: seriesTemplate.DataId,\n          paneName: paneName,\n          pointVisible: that._showPointMarker(seriesTemplate),\n          seriesType: _chart_helper_1.chartHelper.convertSeriesType(seriesTemplate.SeriesType),\n          originalSeriesType: seriesTemplate.SeriesType,\n          plotOnSecondaryAxis: seriesTemplate.PlotOnSecondaryAxis,\n          ignoreEmptyPoints: seriesTemplate.IgnoreEmptyPoints,\n          axisPoint: seriesAxisPoint,\n          dataMembers: seriesTemplate.DataMembers,\n          colorMeasureId: seriesTemplate.ColorMeasureID,\n          valueFormats: [],\n          valueFields: [],\n          pointLabel: pointLabelInfo\n        };\n        info.dataMembers.forEach(function (dataMember) {\n          info.valueFormats.push(that.multiData.getMeasureFormat(dataMember));\n          info.valueFields.push({\n            name: 'y' + seriesIndex.toString(),\n            getValue: function (argumentAxisPoint) {\n              return that._getCrossSlice(argumentAxisPoint, seriesAxisPoint).getMeasureValue(dataMember).getValue();\n            }\n          });\n          seriesIndex++;\n        });\n\n        if (!isGrandTotal) {\n          info.title = that.getTitle(seriesAxisPoint);\n\n          if (specifyTitleByName) {\n            info.title += ' - ' + seriesTemplate.Name;\n          }\n        } else {\n          info.title = seriesTemplate.Name;\n        }\n\n        info.seriesItem = that._createSeriesItem(info, includeTags, encodeHtml);\n        add(info);\n      });\n    });\n\n    return result;\n  };\n\n  chartDataControllerProto.prototype.customizeTooltipText = function (series, point, seriesFormats, encodeHtml) {\n    if (!this._validatePoint(point, series.type)) return null;\n\n    var color = this._getCustomizeTooltipTextColor(point);\n\n    return this._getTooltipHtml(series, point, seriesFormats, encodeHtml, color);\n  };\n\n  chartDataControllerProto.prototype._getTooltipHtml = function (series, point, seriesFormats, encodeHtml, color) {\n    var text = this._getTooltipTextInternal(series, point, seriesFormats, encodeHtml);\n\n    if (color) {\n      text = '<div>' + _render_helper_1.RenderHelper.rectangle(color, 10, 10) + '&nbsp;&nbsp;' + text + '</div>';\n    }\n\n    return text;\n  };\n\n  chartDataControllerProto.prototype._getTooltipTextInternal = function (series, point, seriesFormats, encodeHtml) {\n    var that = this,\n        text = series.name + ': ';\n    text = encodeHtml ? _utils_1.encodeHtml(text) : text;\n\n    switch (series.type) {\n      case 'rangebar':\n      case 'rangearea':\n        text += that._formatValuesList([point.originalMinValue, point.originalValue], seriesFormats, encodeHtml);\n        break;\n\n      case 'bubble':\n        text += that._formatValuesList([point.originalValue, point.size], seriesFormats, encodeHtml);\n        break;\n\n      case 'stock':\n      case 'candlestick':\n        text += that._formatOpenHighLowCloseValues([point.originalOpenValue, point.originalHighValue, point.originalLowValue, point.originalCloseValue], seriesFormats, series.getOptions().openValueField !== 'nullColumn', encodeHtml, '<br>');\n        break;\n\n      default:\n        text += that._formatValuesList([point.originalValue], seriesFormats, encodeHtml);\n        break;\n    }\n\n    return text;\n  };\n\n  chartDataControllerProto.prototype.getTooltipArgumentText = function (obj) {\n    return this.getArgumentText({\n      value: obj.originalArgument\n    });\n  };\n\n  chartDataControllerProto.prototype.getZoomArguments = function () {\n    var that = this,\n        axisX = that.viewModel ? that.viewModel.AxisX : undefined;\n\n    if (axisX && axisX.LimitVisiblePoints && that._argumentAxisPoints.length > axisX.VisiblePointsCount) {\n      var endIndex = axisX.VisiblePointsCount - 1;\n      return {\n        start: that.getArgumentBindingValue(that._argumentAxisPoints[0], 0),\n        end: that.getArgumentBindingValue(that._argumentAxisPoints[endIndex], endIndex)\n      };\n    }\n  };\n\n  chartDataControllerProto.prototype.getArgumentUniquePath = function (value) {\n    var that = this;\n\n    for (var i = 0; i < that._argumentAxisPoints.length; i++) {\n      if (that.getArgument(that._argumentAxisPoints[i]) === value) return that._argumentAxisPoints[i].getUniquePath();\n    }\n  };\n\n  chartDataControllerProto.prototype._getArgumentAutoFormat = function () {\n    var that = this,\n        min = 0,\n        max = 1;\n\n    if (that._argumentAxisPoints.length > 0) {\n      min = that._argumentAxisPoints[0].getValue();\n      max = that._argumentAxisPoints[that._argumentAxisPoints.length - 1].getValue();\n    }\n\n    return _formatter_1.getAxisFormat(min, max);\n  };\n\n  chartDataControllerProto.prototype._createArgumentFormat = function () {\n    var that = this,\n        argumentAxisLabelFormat = undefined,\n        argument = that.viewModel ? that.viewModel.Argument : undefined;\n\n    if (argument && !that.isDiscreteArgument()) {\n      argumentAxisLabelFormat = _formatter_1.convertToFormat(argument.AxisXLabelFormat);\n\n      if (that._isNumericDataType(argument.Type)) {\n        if (!argumentAxisLabelFormat || !argument.AxisXLabelFormat.NumericFormat) {\n          argumentAxisLabelFormat = that._getArgumentAutoFormat();\n        } else {\n          if (argument.AxisXLabelFormat.NumericFormat.Unit == 'Auto') {\n            argumentAxisLabelFormat = __assign(__assign({}, that._getArgumentAutoFormat()), {\n              format: argumentAxisLabelFormat.format\n            });\n          }\n        }\n\n        argumentAxisLabelFormat.dateType = null;\n      }\n\n      if (argumentAxisLabelFormat) {\n        argumentAxisLabelFormat.showTrailingZeros = false;\n      }\n    } else if (that.isSingleArgument()) {\n      argumentAxisLabelFormat = that.getSingleArgumentDimensionFormat();\n    }\n\n    return argumentAxisLabelFormat;\n  };\n\n  chartDataControllerProto.prototype._createAxisXFormat = function () {\n    if (this.viewModel.AxisX.Format && (this.viewModel.AxisX.Format.NumericFormat != null || this.viewModel.AxisX.Format.DateTimeFormat != null)) return _formatter_1.convertToFormat(this.viewModel.AxisX.Format);\n    return this.getArgumentFormat();\n  };\n\n  chartDataControllerProto.prototype.getArgumentFormat = function () {\n    if (this._argumentFormat == null) this._argumentFormat = this._createArgumentFormat();\n    return this._argumentFormat;\n  };\n\n  chartDataControllerProto.prototype.getAxisXFormat = function () {\n    if (this._axisXFormat == null) this._axisXFormat = this._createAxisXFormat();\n    return this._axisXFormat;\n  };\n\n  chartDataControllerProto.prototype.getArgumentText = function (argument) {\n    var _this = this;\n\n    return this._getArgumentText(argument.value, function () {\n      return _this.getArgumentFormat();\n    });\n  };\n\n  chartDataControllerProto.prototype.getAxisXLabelText = function (axisValue) {\n    var _this = this;\n\n    return this._getArgumentText(axisValue.value, function () {\n      return _this.getAxisXFormat();\n    });\n  };\n\n  chartDataControllerProto.prototype._getArgumentText = function (argumentValue, formatGetter) {\n    if (this.isDiscreteArgument() || this.isQualitativeArgument()) {\n      var axisPoint = this._argumentAxisPoints[argumentValue];\n      if (this.viewModel.Argument.AxisXDateTimeFormatSupported) return _formatter_1.formatByFormatInfo(axisPoint.getValue(), formatGetter());\n      return axisPoint ? this.getTitle(axisPoint, '\\n') : argumentValue;\n    }\n\n    return _formatter_1.formatByFormatInfo(argumentValue, formatGetter());\n  };\n\n  chartDataControllerProto.prototype._validatePoint = function (point, seriesType) {\n    switch (seriesType) {\n      case 'rangebar':\n      case 'rangearea':\n        return !(point.originalMinValue === null && point.originalValue === null);\n\n      case 'bubble':\n        return !(point.originalValue === null && point.size === null);\n\n      case 'stock':\n      case 'candlestick':\n        return !(point.originalOpenValue === null && point.originalHighValue === null && point.originalLowValue === null && point.originalCloseValue === null);\n\n      default:\n        return !(point.originalValue === null);\n    }\n  };\n\n  chartDataControllerProto.prototype._getCustomizeTooltipTextColor = function (point) {\n    if (point.getColor) {\n      return point.getColor();\n    }\n  };\n\n  chartDataControllerProto.prototype._getLegendInfo = function () {\n    var _this = this;\n\n    var that = this,\n        values = [],\n        result = [],\n        colorMeasures = that.multiData.getColorMeasures(),\n        argumentPoints = that.getArgumentAxisPoints(that.viewModel.ArgumentColorDimension),\n        seriesPoints = that.getSeriesAxisPoints(that.viewModel.SeriesColorDimension),\n        includeProc = function (axisPoint) {\n      var dim = axisPoint.getDimension();\n      return dim && _this.viewModel.ColorPathMembers && _this.viewModel.ColorPathMembers.indexOf(dim.id) !== -1;\n    },\n        getColorValuesProc = function (axisPoint) {\n      return axisPoint.getValuePath(includeProc);\n    },\n        getColorDisplayTextsProc = function (axisPoint) {\n      return axisPoint.getDisplayPath(includeProc);\n    };\n\n    colorMeasures.forEach(function (colorMeasure) {\n      argumentPoints.forEach(function (argumentPoint) {\n        seriesPoints.forEach(function (seriesPoint) {\n          var color = that._getColorFromData(argumentPoint, seriesPoint, colorMeasure.id);\n\n          if (color) {\n            var valueSet = getColorValuesProc(argumentPoint).concat(getColorValuesProc(seriesPoint));\n            var displayTexts = getColorDisplayTextsProc(argumentPoint).concat(getColorDisplayTextsProc(seriesPoint));\n\n            if (colorMeasure.name) {\n              valueSet.push(colorMeasure);\n              displayTexts.push(colorMeasure.name);\n            }\n\n            if (!that._valuesContainsValueSet(values, valueSet)) {\n              values.push(valueSet);\n              var colorText = displayTexts.join(' - ');\n\n              if (!colorText || colorText == '') {\n                colorText = that._getDisplayTextBySeriesTemplates();\n              }\n\n              var transparentColor = !that.viewModel.ArgumentColorDimension && _chart_helper_1.chartHelper.isTransparentColorType(that._getLastSeriesType(colorMeasure.id));\n\n              result.push({\n                name: colorText,\n                color: color,\n                type: transparentColor ? 'bubble' : 'line',\n                argumentField: 'legendFakeArgument',\n                valueField: 'legendFakeValue'\n              });\n            }\n          }\n        });\n      });\n    });\n    return result;\n  };\n\n  chartDataControllerProto.prototype._getConditionalFormattingLegendItems = function () {\n    var _this = this;\n\n    var cfLegends = [];\n\n    if (this.cfModel) {\n      var isRuleHasRanges_1 = function (rule) {\n        return !!(rule.ConditionModel && rule.ConditionModel.Ranges);\n      };\n\n      this.styleSettingsProvider.cfModel.RuleModels.filter(function (rule) {\n        return !isRuleHasRanges_1(rule);\n      }).forEach(function (rule) {\n        if (rule.ShowInLegend && rule.DisplayName) {\n          var color = _this._getRuleColors(rule)[0];\n\n          cfLegends.push(_this._getConditionalFormattingLegendItem(rule.DisplayName, color));\n        }\n      });\n      this.styleSettingsProvider.cfModel.RuleModels.filter(function (rule) {\n        return isRuleHasRanges_1(rule);\n      }).forEach(function (rule) {\n        if (rule.ShowInLegend) cfLegends = cfLegends.concat(_this._getConditionalFormattingRangeLegendItems(rule));\n      });\n    }\n\n    return cfLegends;\n  };\n\n  chartDataControllerProto.prototype._getConditionalFormattingRangeLegendItems = function (rule) {\n    var colors = this._getRuleColors(rule),\n        maxPercentValue = 1,\n        positiveInfinitySymbol = '∞',\n        negativeInfinitySymbol = '-∞',\n        legendItems = [],\n        rangeConditionModel = rule.ConditionModel,\n        dataItemFormat = this.multiData.getMeasureFormat(rule.CalcByDataId) || this.multiData.getDimensionFormat(rule.CalcByDataId);\n\n    for (var index = rangeConditionModel.Ranges.length - 1; index >= 0; index--) {\n      var rangeModel = rangeConditionModel.Ranges[index],\n          leftValueString = void 0,\n          rightValueString = void 0,\n          leftValue = rangeModel.LeftValue,\n          rightValue = rangeModel.RightValue,\n          color = colors[index];\n\n      if (rangeConditionModel.ValueType === 'Percent') {\n        leftValueString = _formatter_1.formatPercentValue(leftValue ? leftValue / 100 : maxPercentValue);\n        rightValueString = _formatter_1.formatPercentValue(rightValue / 100);\n      } else {\n        leftValueString = leftValue ? _formatter_1.format(_date_utils_1.tryConvertToDateTime(leftValue), dataItemFormat) : positiveInfinitySymbol;\n        rightValueString = rightValue ? _formatter_1.format(_date_utils_1.tryConvertToDateTime(rightValue), dataItemFormat) : negativeInfinitySymbol;\n      }\n\n      var legendDescription = string_1.format(_localizer_1.localizer.getString(_localization_ids_1.localizationId.LegendItemFormatString), leftValueString, rightValueString);\n      legendItems.push(this._getConditionalFormattingLegendItem(legendDescription, color));\n    }\n\n    return legendItems;\n  };\n\n  chartDataControllerProto.prototype._getConditionalFormattingLegendItem = function (desription, color) {\n    return {\n      name: desription,\n      color: color\n    };\n  };\n\n  chartDataControllerProto.prototype._getRuleColors = function (rule) {\n    var _this = this;\n\n    return this.cfModel.FormatConditionStyleSettings.filter(function (style) {\n      return style.RuleIndex == _this.cfModel.RuleModels.indexOf(rule);\n    }).map(function (style) {\n      return _this.styleSettingsProvider.getBackColorFromStyleSettingsModel(style);\n    });\n  };\n\n  chartDataControllerProto.prototype._valuesContainsValueSet = function (values, valueSet) {\n    for (var i = 0; i < values.length; i++) {\n      if (values[i].length !== valueSet.length) continue;\n      var equal = true;\n\n      for (var j = 0; j < values[i].length; j++) {\n        if (values[i][j] !== valueSet[j]) {\n          equal = false;\n          break;\n        }\n      }\n\n      if (equal) return true;\n    }\n\n    return false;\n  };\n\n  chartDataControllerProto.prototype._getLastSeriesType = function (colorMeasureId) {\n    var panes = this.viewModel.Panes;\n\n    for (var i = panes.length - 1; i >= 0; i--) {\n      for (var j = panes[i].SeriesTemplates.length - 1; j >= 0; j--) {\n        if (colorMeasureId === panes[i].SeriesTemplates[j].ColorMeasureID) {\n          return _chart_helper_1.chartHelper.convertSeriesType(panes[i].SeriesTemplates[j].SeriesType);\n        }\n      }\n    }\n  };\n\n  chartDataControllerProto.prototype._getDisplayTextBySeriesTemplates = function () {\n    var displayTexts = [];\n\n    this._iterateSeriesTemplates(function (pane, seriesTemplate, paneIndex, templateIndex) {\n      var name = seriesTemplate.Name;\n\n      if (displayTexts.indexOf(name) === -1) {\n        displayTexts.push(name);\n      }\n    });\n\n    return displayTexts.join(', ');\n  };\n\n  chartDataControllerProto.prototype._iterateSeriesTemplates = function (proc) {\n    this.viewModel.Panes.forEach(function (pane, paneIndex) {\n      pane.SeriesTemplates.forEach(function (seriesTemplate) {\n        proc(pane, seriesTemplate, paneIndex);\n      });\n    });\n  };\n\n  chartDataControllerProto.prototype._isSelectionTagsRequired = function () {\n    return true;\n  };\n\n  chartDataControllerProto.prototype._createSeriesItem = function (seriesInfo, includeTags, encodeHtml) {\n    var that = this,\n        seriesItem = {\n      argumentField: 'x',\n      type: seriesInfo.seriesType,\n      showInLegend: seriesInfo.seriesType === 'stock' || seriesInfo.seriesType === 'candlestick'\n    },\n        setNamesListProc = function (names) {\n      if (seriesInfo.originalSeriesType === 'HighLowClose') {\n        seriesItem[names[0]] = 'nullColumn';\n        names.splice(0, 1);\n      }\n\n      for (var i = 0; i < Math.min(names.length, seriesInfo.valueFields.length); i++) {\n        seriesItem[names[i]] = seriesInfo.valueFields[i].name;\n      }\n    };\n\n    if (_utils_1.type.isDefined(seriesInfo.title)) {\n      seriesItem.name = seriesInfo.title;\n    }\n\n    if (_utils_1.type.isDefined(seriesInfo.paneName)) {\n      seriesItem.pane = seriesInfo.paneName;\n    }\n\n    if (includeTags) {\n      seriesItem.tag = {\n        axisPoint: seriesInfo.axisPoint,\n        dataMembers: seriesInfo.dataMembers,\n        valueFormats: seriesInfo.valueFormats,\n        colorMeasureId: seriesInfo.colorMeasureId\n      };\n    }\n\n    seriesItem.point = {\n      visible: seriesInfo.pointVisible\n    };\n    seriesItem[_common_1.DashboardDataIdField] = seriesInfo.dataId;\n\n    switch (seriesItem.type) {\n      case 'rangebar':\n      case 'rangearea':\n        setNamesListProc(['rangeValue1Field', 'rangeValue2Field']);\n        break;\n\n      case 'bubble':\n        setNamesListProc(['valueField', 'sizeField']);\n        break;\n\n      case 'stock':\n      case 'candlestick':\n        setNamesListProc(['openValueField', 'highValueField', 'lowValueField', 'closeValueField']);\n        break;\n\n      default:\n        setNamesListProc(['valueField']);\n        break;\n    }\n\n    seriesItem.axis = (seriesInfo.paneName || '') + (seriesInfo.plotOnSecondaryAxis ? 'secondary' : 'primary');\n\n    if (seriesInfo.ignoreEmptyPoints) {\n      seriesItem.ignoreEmptyPoints = seriesInfo.ignoreEmptyPoints;\n    }\n\n    if (that.showPointLabels(seriesInfo.pointLabel)) {\n      var pointLabel = seriesInfo.pointLabel;\n      seriesItem.label = {\n        visible: true,\n        rotationAngle: pointLabel.rotationAngle,\n        customizeText: function () {\n          return that._customizePointLabelText(this, pointLabel, seriesInfo);\n        }\n      };\n\n      if (seriesItem.type === 'bar') {\n        seriesItem.label.showForZeroValues = pointLabel.showForZeroValues;\n      }\n\n      if (seriesItem.type === 'bar' || seriesItem.type === 'bubble') {\n        seriesItem.label.position = pointLabel.position;\n      } else if (seriesItem.type === 'fullstackedbar') {\n        seriesItem.label.position = 'inside';\n      }\n    }\n\n    var color = undefined;\n    if (that.viewModel.IsDefaultColorizationDisabled) color = that.styleSettingsProvider.getDefaultBackColor();else if (_utils_1.type.isDefined(seriesInfo.colorMeasureId)) {\n      color = that._getColorFromData(that._argumentAxisPoints[0], seriesInfo.axisPoint, seriesInfo.colorMeasureId);\n    }\n    var cfColor = that.getConditionalFormattingSeriesColor(seriesInfo.axisPoint, seriesInfo.dataMembers[0]);\n    if (cfColor) color = cfColor;\n\n    if (_chart_helper_1.chartHelper.isSeriesColorSupported(seriesItem.type)) {\n      var argumentRootAxisPoint = this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis).getRootPoint();\n      color = that._getElementCustomColor(argumentRootAxisPoint, seriesInfo.axisPoint, seriesInfo.dataMembers, color);\n    }\n\n    if (color) {\n      seriesItem.color = color;\n    }\n\n    if (_chart_helper_1.chartHelper.isStackedAreaType(seriesItem.type)) {\n      seriesItem.opacity = 1;\n    }\n\n    return seriesItem;\n  };\n\n  chartDataControllerProto.prototype._customizePointLabelText = function (valueContainer, pointLabel, seriesInfo) {\n    var that = this,\n        contentType = pointLabel.contentType,\n        formatArgumentProc = function () {\n      return that.getArgumentText({\n        value: valueContainer.argument\n      });\n    },\n        formatValueProc = function () {\n      var formats = seriesInfo.valueFormats;\n\n      switch (seriesInfo.seriesType) {\n        case 'rangebar':\n        case 'rangearea':\n          return that._formatValuesList([valueContainer.value], [formats[valueContainer.index]], false);\n\n        case 'bubble':\n          return that._formatValuesList([valueContainer.value, valueContainer.size], formats, false);\n\n        case 'stock':\n        case 'candlestick':\n          return that._formatOpenHighLowCloseValues([valueContainer.openValue, valueContainer.highValue, valueContainer.lowValue, valueContainer.closeValue], formats, seriesInfo.originalSeriesType !== 'HighLowClose', false, '\\n\\r');\n\n        default:\n          return that._formatValuesList([valueContainer.value], formats, false);\n      }\n    };\n\n    var hasArgument = (contentType & enums_1.PointLabelContentType.Argument) > 0,\n        hasSeriesName = (contentType & enums_1.PointLabelContentType.SeriesName) > 0,\n        hasValue = (contentType & enums_1.PointLabelContentType.Value) > 0,\n        hasPercent = (contentType & enums_1.PointLabelContentType.Percent) > 0 && this._getPercentSupported(seriesInfo);\n\n    var firstPart = '';\n    var secondPart = '';\n    var argument = hasArgument ? formatArgumentProc() : '';\n    var series = hasSeriesName ? valueContainer.seriesName : '';\n    var value = hasValue ? formatValueProc() : '';\n    var percent = hasPercent ? _formatter_1.formatPercentValue(valueContainer.percent) : '';\n\n    if (hasArgument) {\n      firstPart = hasSeriesName ? argument + \" (\" + series + \")\" : \"\" + argument;\n    } else if (hasSeriesName) {\n      firstPart = \"\" + series;\n    }\n\n    if (hasValue) {\n      secondPart = hasPercent ? value + \" (\" + percent + \")\" : \"\" + value;\n    } else if (hasPercent) {\n      secondPart = \"\" + percent;\n    }\n\n    return [\"\" + firstPart, \"\" + secondPart].filter(function (s) {\n      return s != '';\n    }).join(': ');\n  };\n\n  chartDataControllerProto.prototype._getPercentSupported = function (seriesInfo) {\n    var series = ['fullstackedbar', 'fullstackedline', 'fullstackedarea', 'fullstackedsplinearea'];\n    return series.indexOf(seriesInfo.seriesType) >= 0;\n  };\n\n  chartDataControllerProto.prototype._formatOpenHighLowCloseValues = function (values, formats, hasOpenValueField, encodeHtml, delimiter) {\n    var result = '',\n        delimiter = delimiter || ' ',\n        formatsLength = formats ? formats.length : 0,\n        i,\n        formatIndex,\n        valueNames = [_localizer_1.localizer.getString(_localization_ids_1.localizationId.OpenCaption), _localizer_1.localizer.getString(_localization_ids_1.localizationId.HighCaption), _localizer_1.localizer.getString(_localization_ids_1.localizationId.LowCaption), _localizer_1.localizer.getString(_localization_ids_1.localizationId.CloseCaption)];\n\n    if (values && formatsLength > 0 && formatsLength <= values.length) {\n      for (formatIndex = 0, i = hasOpenValueField ? 0 : 1; formatIndex < formatsLength; formatIndex++, i++) {\n        result += delimiter + valueNames[i] + ': ' + this._formatValue(values[i], formats[formatIndex], encodeHtml);\n      }\n    }\n\n    return result;\n  };\n\n  chartDataControllerProto.prototype._formatValuesList = function (valuesList, formats, encodeHtml) {\n    var result = '';\n\n    if (formats && formats.length === valuesList.length) {\n      for (var i = 0; i < valuesList.length; i++) {\n        result = result + (i === 0 ? '' : ' - ') + this._formatValue(valuesList[i], formats[i], encodeHtml);\n      }\n    }\n\n    return result;\n  };\n\n  chartDataControllerProto.prototype._formatValue = function (value, format, encodeHtml) {\n    var text = _formatter_1.format(value ? value : 0, format);\n\n    return encodeHtml ? _utils_1.encodeHtml(text) : text;\n  };\n\n  chartDataControllerProto.prototype._isNumericDataType = function (type) {\n    return type == 'Integer' || type == 'Float' || type == 'Double' || type == 'Decimal';\n  };\n\n  chartDataControllerProto.prototype._convertContentType = function (typeModel) {\n    return enums_1.parsePointLabelContentType(typeModel);\n  };\n\n  chartDataControllerProto.prototype._showPointMarker = function (seriesTemplate) {\n    if (seriesTemplate.SeriesType === 'Point') {\n      return true;\n    } else if (exports.allowedTypesForShowPointMarkers.indexOf(seriesTemplate.SeriesType) !== -1) {\n      return seriesTemplate.ShowPointMarkers;\n    } else {\n      return false;\n    }\n  };\n\n  chartDataControllerProto.prototype.checkSeriesTemplatePointLabels = function (seriesTemplateViewModel) {\n    return this.showPointLabels(this._getPointLabelInfo(seriesTemplateViewModel.PointLabel));\n  };\n\n  chartDataControllerProto.prototype.showPointLabels = function (pointLabelInfo) {\n    return pointLabelInfo && pointLabelInfo.contentType != enums_1.PointLabelContentType.None;\n  };\n\n  chartDataControllerProto.prototype._getPointLabelInfo = function (pointLabelViewModel) {\n    if (pointLabelViewModel) {\n      return {\n        showPointLabels: pointLabelViewModel.ShowPointLabels,\n        rotationAngle: _chart_helper_1.chartHelper.convertPointLabelRotationAngle(pointLabelViewModel.Orientation),\n        position: _chart_helper_1.chartHelper.convertPointLabelPosition(pointLabelViewModel.Position),\n        showForZeroValues: pointLabelViewModel.ShowForZeroValues,\n        contentType: this._convertContentType(pointLabelViewModel.ContentType),\n        scatterContent: pointLabelViewModel.ScatterContent\n      };\n    }\n  };\n\n  return chartDataControllerProto;\n}(_chart_data_controller_base_1.chartDataControllerBase);\n\nexports.chartDataControllerProto = chartDataControllerProto;\nexports.allowedTypesForShowPointMarkers = ['Line', 'Spline', 'StepLine', 'StackedLine', 'FullStackedLine', 'SplineArea', 'Area', 'StepArea', 'RangeArea'];","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/data-controllers/_chart-data-controller-proto.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","allowedTypesForShowPointMarkers","chartDataControllerProto","string_1","require","enums_1","_date_utils_1","_render_helper_1","item_data_axis_names_1","special_values_1","_chart_helper_1","_common_1","_formatter_1","_localization_ids_1","_localizer_1","_utils_1","_chart_data_controller_base_1","_super","options","_this","_legendSeriesPrefix","_argumentAxisPoints","getArgumentAxisPoints","getLegendSeriesName","seriesName","getLegendSeriesDisplayName","indexOf","replace","getDataSourceAndSeries","encodeHtml","that","viewModel","dataSource","series","argumentAxis","categories","seriesInfoList","_getSeriesInfo","legendInfoList","Legend","IsDefaultColorizationDisabled","_getLegendInfo","cfLegendItems","_getConditionalFormattingLegendItems","result","dataSourceAndCategories","getDataSourceAndCategories","forEach","seriesInfo","seriesItem","push","legendInfo","name","color","type","legendItem","getDataDefinedDataSourceAndCategories","argumentAxisPoint","pointIndex","argument","getArgumentBindingValue","dataSourceItem","x","_isSelectionTagsRequired","tag","axisPoint","isDiscreteArgument","originalSeriesType","nullColumn","valueFields","valueField","getValue","specialValues","errorValueGuid","undefined","generatePaneName","paneName","paneIndex","info","seriesIndex","seriesAxisPoints","getSeriesAxisPoints","isGrandTotal","SummarySeriesMember","includeTags","reversed","AxisX","Reverse","add","canReverse","unshift","_iterateSeriesTemplates","pane","seriesTemplate","Name","specifyTitleByName","SpecifySeriesTitlesWithSeriesName","pointLabelInfo","_getPointLabelInfo","PointLabel","seriesAxisPoint","dataId","DataId","pointVisible","_showPointMarker","seriesType","chartHelper","convertSeriesType","SeriesType","plotOnSecondaryAxis","PlotOnSecondaryAxis","ignoreEmptyPoints","IgnoreEmptyPoints","dataMembers","DataMembers","colorMeasureId","ColorMeasureID","valueFormats","pointLabel","dataMember","multiData","getMeasureFormat","toString","_getCrossSlice","getMeasureValue","title","getTitle","_createSeriesItem","customizeTooltipText","point","seriesFormats","_validatePoint","_getCustomizeTooltipTextColor","_getTooltipHtml","text","_getTooltipTextInternal","RenderHelper","rectangle","_formatValuesList","originalMinValue","originalValue","size","_formatOpenHighLowCloseValues","originalOpenValue","originalHighValue","originalLowValue","originalCloseValue","getOptions","openValueField","getTooltipArgumentText","obj","getArgumentText","originalArgument","getZoomArguments","axisX","LimitVisiblePoints","VisiblePointsCount","endIndex","start","end","getArgumentUniquePath","getArgument","getUniquePath","_getArgumentAutoFormat","min","max","getAxisFormat","_createArgumentFormat","argumentAxisLabelFormat","Argument","convertToFormat","AxisXLabelFormat","_isNumericDataType","Type","NumericFormat","Unit","format","dateType","showTrailingZeros","isSingleArgument","getSingleArgumentDimensionFormat","_createAxisXFormat","Format","DateTimeFormat","getArgumentFormat","_argumentFormat","getAxisXFormat","_axisXFormat","_getArgumentText","getAxisXLabelText","axisValue","argumentValue","formatGetter","isQualitativeArgument","AxisXDateTimeFormatSupported","formatByFormatInfo","getColor","values","colorMeasures","getColorMeasures","argumentPoints","ArgumentColorDimension","seriesPoints","SeriesColorDimension","includeProc","dim","getDimension","ColorPathMembers","id","getColorValuesProc","getValuePath","getColorDisplayTextsProc","getDisplayPath","colorMeasure","argumentPoint","seriesPoint","_getColorFromData","valueSet","concat","displayTexts","_valuesContainsValueSet","colorText","join","_getDisplayTextBySeriesTemplates","transparentColor","isTransparentColorType","_getLastSeriesType","argumentField","cfLegends","cfModel","isRuleHasRanges_1","rule","ConditionModel","Ranges","styleSettingsProvider","RuleModels","filter","ShowInLegend","DisplayName","_getRuleColors","_getConditionalFormattingLegendItem","_getConditionalFormattingRangeLegendItems","colors","maxPercentValue","positiveInfinitySymbol","negativeInfinitySymbol","legendItems","rangeConditionModel","dataItemFormat","CalcByDataId","getDimensionFormat","index","rangeModel","leftValueString","rightValueString","leftValue","LeftValue","rightValue","RightValue","ValueType","formatPercentValue","tryConvertToDateTime","legendDescription","localizer","getString","localizationId","LegendItemFormatString","desription","FormatConditionStyleSettings","style","RuleIndex","map","getBackColorFromStyleSettingsModel","equal","j","panes","Panes","SeriesTemplates","templateIndex","proc","showInLegend","setNamesListProc","names","splice","Math","isDefined","visible","DashboardDataIdField","axis","showPointLabels","label","rotationAngle","customizeText","_customizePointLabelText","showForZeroValues","position","getDefaultBackColor","cfColor","getConditionalFormattingSeriesColor","isSeriesColorSupported","argumentRootAxisPoint","getAxis","itemDataAxisNames","chartArgumentAxis","getRootPoint","_getElementCustomColor","isStackedAreaType","opacity","valueContainer","contentType","formatArgumentProc","formatValueProc","formats","openValue","highValue","lowValue","closeValue","hasArgument","PointLabelContentType","hasSeriesName","SeriesName","hasValue","Value","hasPercent","Percent","_getPercentSupported","firstPart","secondPart","percent","hasOpenValueField","delimiter","formatsLength","formatIndex","valueNames","OpenCaption","HighCaption","LowCaption","CloseCaption","_formatValue","valuesList","_convertContentType","typeModel","parsePointLabelContentType","ShowPointMarkers","checkSeriesTemplatePointLabels","seriesTemplateViewModel","None","pointLabelViewModel","ShowPointLabels","convertPointLabelRotationAngle","Orientation","convertPointLabelPosition","Position","ShowForZeroValues","ContentType","scatterContent","ScatterContent","chartDataControllerBase"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_chart-data-controller-proto.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.allowedTypesForShowPointMarkers = exports.chartDataControllerProto = void 0;\nvar string_1 = require(\"devextreme/core/utils/string\");\nvar enums_1 = require(\"../../model/enums\");\nvar _date_utils_1 = require(\"../../model/internal/_date-utils\");\nvar _render_helper_1 = require(\"../../viewer-parts/widgets/_render-helper\");\nvar item_data_axis_names_1 = require(\"../item-data/item-data-axis-names\");\nvar special_values_1 = require(\"../special-values\");\nvar _chart_helper_1 = require(\"../_chart-helper\");\nvar _common_1 = require(\"../_common\");\nvar _formatter_1 = require(\"../_formatter\");\nvar _localization_ids_1 = require(\"../_localization-ids\");\nvar _localizer_1 = require(\"../_localizer\");\nvar _utils_1 = require(\"../_utils\");\nvar _chart_data_controller_base_1 = require(\"./_chart-data-controller-base\");\nvar chartDataControllerProto = (function (_super) {\n    __extends(chartDataControllerProto, _super);\n    function chartDataControllerProto(options) {\n        var _this = _super.call(this, options) || this;\n        _this._legendSeriesPrefix = '__legend__series__';\n        _this._argumentAxisPoints = _this.getArgumentAxisPoints();\n        return _this;\n    }\n    chartDataControllerProto.prototype.getLegendSeriesName = function (seriesName) {\n        return this._legendSeriesPrefix + seriesName;\n    };\n    chartDataControllerProto.prototype.getLegendSeriesDisplayName = function (seriesName) {\n        return seriesName.indexOf(this._legendSeriesPrefix) !== -1 ? seriesName.replace(this._legendSeriesPrefix, '') : seriesName;\n    };\n    chartDataControllerProto.prototype.getDataSourceAndSeries = function (encodeHtml) {\n        var _this = this;\n        var that = this;\n        if (!that.viewModel || that._argumentAxisPoints.length == 0) {\n            return {\n                dataSource: null,\n                series: null,\n                argumentAxis: {\n                    categories: []\n                }\n            };\n        }\n        var seriesInfoList = that._getSeriesInfo(encodeHtml), legendInfoList = that.viewModel.Legend && !that.viewModel.IsDefaultColorizationDisabled ? that._getLegendInfo() : [], cfLegendItems = that.viewModel.Legend ? that._getConditionalFormattingLegendItems() : [], result = {\n            dataSource: [],\n            series: [],\n            argumentAxis: null\n        };\n        var dataSourceAndCategories = this.getDataSourceAndCategories(seriesInfoList);\n        if (dataSourceAndCategories) {\n            result.dataSource = dataSourceAndCategories.dataSource;\n            if (dataSourceAndCategories.categories)\n                result.argumentAxis = { categories: dataSourceAndCategories.categories };\n        }\n        if (seriesInfoList.length > 0) {\n            seriesInfoList.forEach(function (seriesInfo) {\n                if (seriesInfo.seriesItem) {\n                    result.series.push(seriesInfo.seriesItem);\n                }\n            });\n            legendInfoList.forEach(function (legendInfo) {\n                result.series.push({\n                    name: _this.getLegendSeriesName(legendInfo.name),\n                    color: legendInfo.color,\n                    type: legendInfo.type\n                });\n            });\n            cfLegendItems.forEach(function (legendItem) {\n                result.series.push({\n                    name: legendItem.name,\n                    color: legendItem.color,\n                });\n            });\n        }\n        return result;\n    };\n    chartDataControllerProto.prototype.getDataSourceAndCategories = function (seriesInfoList) {\n        return this.getDataDefinedDataSourceAndCategories(seriesInfoList);\n    };\n    chartDataControllerProto.prototype.getDataDefinedDataSourceAndCategories = function (seriesInfoList) {\n        var _this = this;\n        var dataSource = [];\n        var categories;\n        if (seriesInfoList.length > 0) {\n            categories = [];\n            this._argumentAxisPoints.forEach(function (argumentAxisPoint, pointIndex) {\n                var argument = _this.getArgumentBindingValue(argumentAxisPoint, pointIndex), dataSourceItem = {\n                    x: argument\n                };\n                if (_this._isSelectionTagsRequired()) {\n                    dataSourceItem.tag = {\n                        axisPoint: argumentAxisPoint\n                    };\n                }\n                if (_this.isDiscreteArgument()) {\n                    categories.push(argument);\n                }\n                seriesInfoList.forEach(function (seriesInfo) {\n                    if (seriesInfo.originalSeriesType === 'HighLowClose') {\n                        dataSourceItem.nullColumn = null;\n                    }\n                    seriesInfo.valueFields.forEach(function (valueField) {\n                        var value = valueField.getValue(argumentAxisPoint);\n                        if (value === special_values_1.specialValues.errorValueGuid)\n                            value = 0;\n                        dataSourceItem[valueField.name] = value;\n                    });\n                });\n                dataSource.push(dataSourceItem);\n            });\n        }\n        else {\n            categories = undefined;\n        }\n        return {\n            dataSource: dataSource,\n            categories: categories\n        };\n    };\n    chartDataControllerProto.prototype.generatePaneName = function (paneName, paneIndex) {\n        return paneName || 'Pane ' + paneIndex;\n    };\n    chartDataControllerProto.prototype._getSeriesInfo = function (encodeHtml) {\n        var info;\n        var that = this, seriesIndex = 0, seriesAxisPoints = this.getSeriesAxisPoints(), isGrandTotal = !this.viewModel.SummarySeriesMember, includeTags = that._isSelectionTagsRequired(), reversed = this.viewModel.AxisX && this.viewModel.AxisX.Reverse, result = [], add = function (info) {\n            var canReverse = info.seriesItem.type !== 'stackedbar' && info.seriesItem.type !== 'fullstackedbar';\n            if (reversed && canReverse)\n                result.unshift(info);\n            else\n                result.push(info);\n        };\n        that._iterateSeriesTemplates(function (pane, seriesTemplate, paneIndex) {\n            var paneName = pane ? that.generatePaneName(pane.Name, paneIndex) : undefined, specifyTitleByName = pane ? pane.SpecifySeriesTitlesWithSeriesName : false, pointLabelInfo = that._getPointLabelInfo(seriesTemplate.PointLabel);\n            seriesAxisPoints.forEach(function (seriesAxisPoint) {\n                info = {\n                    name: seriesTemplate.Name,\n                    dataId: seriesTemplate.DataId,\n                    paneName: paneName,\n                    pointVisible: that._showPointMarker(seriesTemplate),\n                    seriesType: _chart_helper_1.chartHelper.convertSeriesType(seriesTemplate.SeriesType),\n                    originalSeriesType: seriesTemplate.SeriesType,\n                    plotOnSecondaryAxis: seriesTemplate.PlotOnSecondaryAxis,\n                    ignoreEmptyPoints: seriesTemplate.IgnoreEmptyPoints,\n                    axisPoint: seriesAxisPoint,\n                    dataMembers: seriesTemplate.DataMembers,\n                    colorMeasureId: seriesTemplate.ColorMeasureID,\n                    valueFormats: [],\n                    valueFields: [],\n                    pointLabel: pointLabelInfo\n                };\n                info.dataMembers.forEach(function (dataMember) {\n                    info.valueFormats.push(that.multiData.getMeasureFormat(dataMember));\n                    info.valueFields.push({\n                        name: 'y' + seriesIndex.toString(),\n                        getValue: function (argumentAxisPoint) {\n                            return that._getCrossSlice(argumentAxisPoint, seriesAxisPoint).getMeasureValue(dataMember).getValue();\n                        }\n                    });\n                    seriesIndex++;\n                });\n                if (!isGrandTotal) {\n                    info.title = that.getTitle(seriesAxisPoint);\n                    if (specifyTitleByName) {\n                        info.title += ' - ' + seriesTemplate.Name;\n                    }\n                }\n                else {\n                    info.title = seriesTemplate.Name;\n                }\n                info.seriesItem = that._createSeriesItem(info, includeTags, encodeHtml);\n                add(info);\n            });\n        });\n        return result;\n    };\n    chartDataControllerProto.prototype.customizeTooltipText = function (series, point, seriesFormats, encodeHtml) {\n        if (!this._validatePoint(point, series.type))\n            return null;\n        var color = this._getCustomizeTooltipTextColor(point);\n        return this._getTooltipHtml(series, point, seriesFormats, encodeHtml, color);\n    };\n    chartDataControllerProto.prototype._getTooltipHtml = function (series, point, seriesFormats, encodeHtml, color) {\n        var text = this._getTooltipTextInternal(series, point, seriesFormats, encodeHtml);\n        if (color) {\n            text = '<div>' + _render_helper_1.RenderHelper.rectangle(color, 10, 10) + '&nbsp;&nbsp;' + text + '</div>';\n        }\n        return text;\n    };\n    chartDataControllerProto.prototype._getTooltipTextInternal = function (series, point, seriesFormats, encodeHtml) {\n        var that = this, text = series.name + ': ';\n        text = encodeHtml ? _utils_1.encodeHtml(text) : text;\n        switch (series.type) {\n            case 'rangebar':\n            case 'rangearea':\n                text += that._formatValuesList([point.originalMinValue, point.originalValue], seriesFormats, encodeHtml);\n                break;\n            case 'bubble':\n                text += that._formatValuesList([point.originalValue, point.size], seriesFormats, encodeHtml);\n                break;\n            case 'stock':\n            case 'candlestick':\n                text += that._formatOpenHighLowCloseValues([point.originalOpenValue, point.originalHighValue, point.originalLowValue, point.originalCloseValue], seriesFormats, series.getOptions().openValueField !== 'nullColumn', encodeHtml, '<br>');\n                break;\n            default:\n                text += that._formatValuesList([point.originalValue], seriesFormats, encodeHtml);\n                break;\n        }\n        return text;\n    };\n    chartDataControllerProto.prototype.getTooltipArgumentText = function (obj) {\n        return this.getArgumentText({ value: obj.originalArgument });\n    };\n    chartDataControllerProto.prototype.getZoomArguments = function () {\n        var that = this, axisX = that.viewModel ? that.viewModel.AxisX : undefined;\n        if (axisX && axisX.LimitVisiblePoints && that._argumentAxisPoints.length > axisX.VisiblePointsCount) {\n            var endIndex = axisX.VisiblePointsCount - 1;\n            return {\n                start: that.getArgumentBindingValue(that._argumentAxisPoints[0], 0),\n                end: that.getArgumentBindingValue(that._argumentAxisPoints[endIndex], endIndex)\n            };\n        }\n    };\n    chartDataControllerProto.prototype.getArgumentUniquePath = function (value) {\n        var that = this;\n        for (var i = 0; i < that._argumentAxisPoints.length; i++) {\n            if (that.getArgument(that._argumentAxisPoints[i]) === value)\n                return that._argumentAxisPoints[i].getUniquePath();\n        }\n    };\n    chartDataControllerProto.prototype._getArgumentAutoFormat = function () {\n        var that = this, min = 0, max = 1;\n        if (that._argumentAxisPoints.length > 0) {\n            min = that._argumentAxisPoints[0].getValue();\n            max = that._argumentAxisPoints[that._argumentAxisPoints.length - 1].getValue();\n        }\n        return _formatter_1.getAxisFormat(min, max);\n    };\n    chartDataControllerProto.prototype._createArgumentFormat = function () {\n        var that = this, argumentAxisLabelFormat = undefined, argument = that.viewModel ? that.viewModel.Argument : undefined;\n        if (argument && !that.isDiscreteArgument()) {\n            argumentAxisLabelFormat = _formatter_1.convertToFormat(argument.AxisXLabelFormat);\n            if (that._isNumericDataType(argument.Type)) {\n                if (!argumentAxisLabelFormat || !argument.AxisXLabelFormat.NumericFormat) {\n                    argumentAxisLabelFormat = that._getArgumentAutoFormat();\n                }\n                else {\n                    if (argument.AxisXLabelFormat.NumericFormat.Unit == 'Auto') {\n                        argumentAxisLabelFormat = __assign(__assign({}, that._getArgumentAutoFormat()), { format: argumentAxisLabelFormat.format });\n                    }\n                }\n                argumentAxisLabelFormat.dateType = null;\n            }\n            if (argumentAxisLabelFormat) {\n                argumentAxisLabelFormat.showTrailingZeros = false;\n            }\n        }\n        else if (that.isSingleArgument()) {\n            argumentAxisLabelFormat = that.getSingleArgumentDimensionFormat();\n        }\n        return argumentAxisLabelFormat;\n    };\n    chartDataControllerProto.prototype._createAxisXFormat = function () {\n        if (this.viewModel.AxisX.Format && (this.viewModel.AxisX.Format.NumericFormat != null || this.viewModel.AxisX.Format.DateTimeFormat != null))\n            return _formatter_1.convertToFormat(this.viewModel.AxisX.Format);\n        return this.getArgumentFormat();\n    };\n    chartDataControllerProto.prototype.getArgumentFormat = function () {\n        if (this._argumentFormat == null)\n            this._argumentFormat = this._createArgumentFormat();\n        return this._argumentFormat;\n    };\n    chartDataControllerProto.prototype.getAxisXFormat = function () {\n        if (this._axisXFormat == null)\n            this._axisXFormat = this._createAxisXFormat();\n        return this._axisXFormat;\n    };\n    chartDataControllerProto.prototype.getArgumentText = function (argument) {\n        var _this = this;\n        return this._getArgumentText(argument.value, function () { return _this.getArgumentFormat(); });\n    };\n    chartDataControllerProto.prototype.getAxisXLabelText = function (axisValue) {\n        var _this = this;\n        return this._getArgumentText(axisValue.value, function () { return _this.getAxisXFormat(); });\n    };\n    chartDataControllerProto.prototype._getArgumentText = function (argumentValue, formatGetter) {\n        if (this.isDiscreteArgument() || this.isQualitativeArgument()) {\n            var axisPoint = this._argumentAxisPoints[argumentValue];\n            if (this.viewModel.Argument.AxisXDateTimeFormatSupported)\n                return _formatter_1.formatByFormatInfo(axisPoint.getValue(), formatGetter());\n            return axisPoint ? this.getTitle(axisPoint, '\\n') : argumentValue;\n        }\n        return _formatter_1.formatByFormatInfo(argumentValue, formatGetter());\n    };\n    chartDataControllerProto.prototype._validatePoint = function (point, seriesType) {\n        switch (seriesType) {\n            case 'rangebar':\n            case 'rangearea':\n                return !(point.originalMinValue === null && point.originalValue === null);\n            case 'bubble':\n                return !(point.originalValue === null && point.size === null);\n            case 'stock':\n            case 'candlestick':\n                return !(point.originalOpenValue === null && point.originalHighValue === null && point.originalLowValue === null && point.originalCloseValue === null);\n            default:\n                return !(point.originalValue === null);\n        }\n    };\n    chartDataControllerProto.prototype._getCustomizeTooltipTextColor = function (point) {\n        if (point.getColor) {\n            return point.getColor();\n        }\n    };\n    chartDataControllerProto.prototype._getLegendInfo = function () {\n        var _this = this;\n        var that = this, values = [], result = [], colorMeasures = that.multiData.getColorMeasures(), argumentPoints = that.getArgumentAxisPoints(that.viewModel.ArgumentColorDimension), seriesPoints = that.getSeriesAxisPoints(that.viewModel.SeriesColorDimension), includeProc = function (axisPoint) {\n            var dim = axisPoint.getDimension();\n            return (dim && _this.viewModel.ColorPathMembers && _this.viewModel.ColorPathMembers.indexOf(dim.id) !== -1);\n        }, getColorValuesProc = function (axisPoint) {\n            return axisPoint.getValuePath(includeProc);\n        }, getColorDisplayTextsProc = function (axisPoint) {\n            return axisPoint.getDisplayPath(includeProc);\n        };\n        colorMeasures.forEach(function (colorMeasure) {\n            argumentPoints.forEach(function (argumentPoint) {\n                seriesPoints.forEach(function (seriesPoint) {\n                    var color = that._getColorFromData(argumentPoint, seriesPoint, colorMeasure.id);\n                    if (color) {\n                        var valueSet = getColorValuesProc(argumentPoint).concat(getColorValuesProc(seriesPoint));\n                        var displayTexts = getColorDisplayTextsProc(argumentPoint).concat(getColorDisplayTextsProc(seriesPoint));\n                        if (colorMeasure.name) {\n                            valueSet.push(colorMeasure);\n                            displayTexts.push(colorMeasure.name);\n                        }\n                        if (!that._valuesContainsValueSet(values, valueSet)) {\n                            values.push(valueSet);\n                            var colorText = displayTexts.join(' - ');\n                            if (!colorText || colorText == '') {\n                                colorText = that._getDisplayTextBySeriesTemplates();\n                            }\n                            var transparentColor = !that.viewModel.ArgumentColorDimension && _chart_helper_1.chartHelper.isTransparentColorType(that._getLastSeriesType(colorMeasure.id));\n                            result.push({\n                                name: colorText,\n                                color: color,\n                                type: transparentColor ? 'bubble' : 'line',\n                                argumentField: 'legendFakeArgument',\n                                valueField: 'legendFakeValue'\n                            });\n                        }\n                    }\n                });\n            });\n        });\n        return result;\n    };\n    chartDataControllerProto.prototype._getConditionalFormattingLegendItems = function () {\n        var _this = this;\n        var cfLegends = [];\n        if (this.cfModel) {\n            var isRuleHasRanges_1 = function (rule) { return !!(rule.ConditionModel && rule.ConditionModel.Ranges); };\n            this.styleSettingsProvider.cfModel.RuleModels.filter(function (rule) { return !isRuleHasRanges_1(rule); }).forEach(function (rule) {\n                if (rule.ShowInLegend && rule.DisplayName) {\n                    var color = _this._getRuleColors(rule)[0];\n                    cfLegends.push(_this._getConditionalFormattingLegendItem(rule.DisplayName, color));\n                }\n            });\n            this.styleSettingsProvider.cfModel.RuleModels.filter(function (rule) { return isRuleHasRanges_1(rule); }).forEach(function (rule) {\n                if (rule.ShowInLegend)\n                    cfLegends = cfLegends.concat(_this._getConditionalFormattingRangeLegendItems(rule));\n            });\n        }\n        return cfLegends;\n    };\n    chartDataControllerProto.prototype._getConditionalFormattingRangeLegendItems = function (rule) {\n        var colors = this._getRuleColors(rule), maxPercentValue = 1, positiveInfinitySymbol = '∞', negativeInfinitySymbol = '-∞', legendItems = [], rangeConditionModel = rule.ConditionModel, dataItemFormat = this.multiData.getMeasureFormat(rule.CalcByDataId) || this.multiData.getDimensionFormat(rule.CalcByDataId);\n        for (var index = rangeConditionModel.Ranges.length - 1; index >= 0; index--) {\n            var rangeModel = rangeConditionModel.Ranges[index], leftValueString = void 0, rightValueString = void 0, leftValue = rangeModel.LeftValue, rightValue = rangeModel.RightValue, color = colors[index];\n            if (rangeConditionModel.ValueType === 'Percent') {\n                leftValueString = _formatter_1.formatPercentValue(leftValue ? leftValue / 100 : maxPercentValue);\n                rightValueString = _formatter_1.formatPercentValue(rightValue / 100);\n            }\n            else {\n                leftValueString = leftValue ? _formatter_1.format(_date_utils_1.tryConvertToDateTime(leftValue), dataItemFormat) : positiveInfinitySymbol;\n                rightValueString = rightValue ? _formatter_1.format(_date_utils_1.tryConvertToDateTime(rightValue), dataItemFormat) : negativeInfinitySymbol;\n            }\n            var legendDescription = string_1.format(_localizer_1.localizer.getString(_localization_ids_1.localizationId.LegendItemFormatString), leftValueString, rightValueString);\n            legendItems.push(this._getConditionalFormattingLegendItem(legendDescription, color));\n        }\n        return legendItems;\n    };\n    chartDataControllerProto.prototype._getConditionalFormattingLegendItem = function (desription, color) {\n        return {\n            name: desription,\n            color: color,\n        };\n    };\n    chartDataControllerProto.prototype._getRuleColors = function (rule) {\n        var _this = this;\n        return this.cfModel.FormatConditionStyleSettings\n            .filter(function (style) { return style.RuleIndex == _this.cfModel.RuleModels.indexOf(rule); })\n            .map(function (style) { return _this.styleSettingsProvider.getBackColorFromStyleSettingsModel(style); });\n    };\n    chartDataControllerProto.prototype._valuesContainsValueSet = function (values, valueSet) {\n        for (var i = 0; i < values.length; i++) {\n            if (values[i].length !== valueSet.length)\n                continue;\n            var equal = true;\n            for (var j = 0; j < values[i].length; j++) {\n                if (values[i][j] !== valueSet[j]) {\n                    equal = false;\n                    break;\n                }\n            }\n            if (equal)\n                return true;\n        }\n        return false;\n    };\n    chartDataControllerProto.prototype._getLastSeriesType = function (colorMeasureId) {\n        var panes = this.viewModel.Panes;\n        for (var i = panes.length - 1; i >= 0; i--) {\n            for (var j = panes[i].SeriesTemplates.length - 1; j >= 0; j--) {\n                if (colorMeasureId === panes[i].SeriesTemplates[j].ColorMeasureID) {\n                    return _chart_helper_1.chartHelper.convertSeriesType(panes[i].SeriesTemplates[j].SeriesType);\n                }\n            }\n        }\n    };\n    chartDataControllerProto.prototype._getDisplayTextBySeriesTemplates = function () {\n        var displayTexts = [];\n        this._iterateSeriesTemplates(function (pane, seriesTemplate, paneIndex, templateIndex) {\n            var name = seriesTemplate.Name;\n            if (displayTexts.indexOf(name) === -1) {\n                displayTexts.push(name);\n            }\n        });\n        return displayTexts.join(', ');\n    };\n    chartDataControllerProto.prototype._iterateSeriesTemplates = function (proc) {\n        this.viewModel.Panes.forEach(function (pane, paneIndex) {\n            pane.SeriesTemplates.forEach(function (seriesTemplate) {\n                proc(pane, seriesTemplate, paneIndex);\n            });\n        });\n    };\n    chartDataControllerProto.prototype._isSelectionTagsRequired = function () {\n        return true;\n    };\n    chartDataControllerProto.prototype._createSeriesItem = function (seriesInfo, includeTags, encodeHtml) {\n        var that = this, seriesItem = {\n            argumentField: 'x',\n            type: seriesInfo.seriesType,\n            showInLegend: seriesInfo.seriesType === 'stock' || seriesInfo.seriesType === 'candlestick'\n        }, setNamesListProc = function (names) {\n            if (seriesInfo.originalSeriesType === 'HighLowClose') {\n                seriesItem[names[0]] = 'nullColumn';\n                names.splice(0, 1);\n            }\n            for (var i = 0; i < Math.min(names.length, seriesInfo.valueFields.length); i++) {\n                seriesItem[names[i]] = seriesInfo.valueFields[i].name;\n            }\n        };\n        if (_utils_1.type.isDefined(seriesInfo.title)) {\n            seriesItem.name = seriesInfo.title;\n        }\n        if (_utils_1.type.isDefined(seriesInfo.paneName)) {\n            seriesItem.pane = seriesInfo.paneName;\n        }\n        if (includeTags) {\n            seriesItem.tag = {\n                axisPoint: seriesInfo.axisPoint,\n                dataMembers: seriesInfo.dataMembers,\n                valueFormats: seriesInfo.valueFormats,\n                colorMeasureId: seriesInfo.colorMeasureId\n            };\n        }\n        seriesItem.point = {\n            visible: seriesInfo.pointVisible\n        };\n        seriesItem[_common_1.DashboardDataIdField] = seriesInfo.dataId;\n        switch (seriesItem.type) {\n            case 'rangebar':\n            case 'rangearea':\n                setNamesListProc(['rangeValue1Field', 'rangeValue2Field']);\n                break;\n            case 'bubble':\n                setNamesListProc(['valueField', 'sizeField']);\n                break;\n            case 'stock':\n            case 'candlestick':\n                setNamesListProc(['openValueField', 'highValueField', 'lowValueField', 'closeValueField']);\n                break;\n            default:\n                setNamesListProc(['valueField']);\n                break;\n        }\n        seriesItem.axis = (seriesInfo.paneName || '') + (seriesInfo.plotOnSecondaryAxis ? 'secondary' : 'primary');\n        if (seriesInfo.ignoreEmptyPoints) {\n            seriesItem.ignoreEmptyPoints = seriesInfo.ignoreEmptyPoints;\n        }\n        if (that.showPointLabels(seriesInfo.pointLabel)) {\n            var pointLabel = seriesInfo.pointLabel;\n            seriesItem.label = {\n                visible: true,\n                rotationAngle: pointLabel.rotationAngle,\n                customizeText: function () {\n                    return that._customizePointLabelText(this, pointLabel, seriesInfo);\n                }\n            };\n            if (seriesItem.type === 'bar') {\n                seriesItem.label.showForZeroValues = pointLabel.showForZeroValues;\n            }\n            if (seriesItem.type === 'bar' || seriesItem.type === 'bubble') {\n                seriesItem.label.position = pointLabel.position;\n            }\n            else if (seriesItem.type === 'fullstackedbar') {\n                seriesItem.label.position = 'inside';\n            }\n        }\n        var color = undefined;\n        if (that.viewModel.IsDefaultColorizationDisabled)\n            color = that.styleSettingsProvider.getDefaultBackColor();\n        else if (_utils_1.type.isDefined(seriesInfo.colorMeasureId)) {\n            color = that._getColorFromData(that._argumentAxisPoints[0], seriesInfo.axisPoint, seriesInfo.colorMeasureId);\n        }\n        var cfColor = that.getConditionalFormattingSeriesColor(seriesInfo.axisPoint, seriesInfo.dataMembers[0]);\n        if (cfColor)\n            color = cfColor;\n        if (_chart_helper_1.chartHelper.isSeriesColorSupported(seriesItem.type)) {\n            var argumentRootAxisPoint = this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis).getRootPoint();\n            color = that._getElementCustomColor(argumentRootAxisPoint, seriesInfo.axisPoint, seriesInfo.dataMembers, color);\n        }\n        if (color) {\n            seriesItem.color = color;\n        }\n        if (_chart_helper_1.chartHelper.isStackedAreaType(seriesItem.type)) {\n            seriesItem.opacity = 1;\n        }\n        return seriesItem;\n    };\n    chartDataControllerProto.prototype._customizePointLabelText = function (valueContainer, pointLabel, seriesInfo) {\n        var that = this, contentType = pointLabel.contentType, formatArgumentProc = function () {\n            return that.getArgumentText({ value: valueContainer.argument });\n        }, formatValueProc = function () {\n            var formats = seriesInfo.valueFormats;\n            switch (seriesInfo.seriesType) {\n                case 'rangebar':\n                case 'rangearea':\n                    return that._formatValuesList([valueContainer.value], [formats[valueContainer.index]], false);\n                case 'bubble':\n                    return that._formatValuesList([valueContainer.value, valueContainer.size], formats, false);\n                case 'stock':\n                case 'candlestick':\n                    return that._formatOpenHighLowCloseValues([valueContainer.openValue, valueContainer.highValue, valueContainer.lowValue, valueContainer.closeValue], formats, seriesInfo.originalSeriesType !== 'HighLowClose', false, '\\n\\r');\n                default:\n                    return that._formatValuesList([valueContainer.value], formats, false);\n            }\n        };\n        var hasArgument = (contentType & enums_1.PointLabelContentType.Argument) > 0, hasSeriesName = (contentType & enums_1.PointLabelContentType.SeriesName) > 0, hasValue = (contentType & enums_1.PointLabelContentType.Value) > 0, hasPercent = (contentType & enums_1.PointLabelContentType.Percent) > 0 && this._getPercentSupported(seriesInfo);\n        var firstPart = '';\n        var secondPart = '';\n        var argument = hasArgument ? formatArgumentProc() : '';\n        var series = hasSeriesName ? valueContainer.seriesName : '';\n        var value = hasValue ? formatValueProc() : '';\n        var percent = hasPercent ? _formatter_1.formatPercentValue(valueContainer.percent) : '';\n        if (hasArgument) {\n            firstPart = hasSeriesName ? argument + \" (\" + series + \")\" : \"\" + argument;\n        }\n        else if (hasSeriesName) {\n            firstPart = \"\" + series;\n        }\n        if (hasValue) {\n            secondPart = hasPercent ? value + \" (\" + percent + \")\" : \"\" + value;\n        }\n        else if (hasPercent) {\n            secondPart = \"\" + percent;\n        }\n        return [\"\" + firstPart, \"\" + secondPart].filter(function (s) { return s != ''; }).join(': ');\n    };\n    chartDataControllerProto.prototype._getPercentSupported = function (seriesInfo) {\n        var series = ['fullstackedbar', 'fullstackedline', 'fullstackedarea', 'fullstackedsplinearea'];\n        return series.indexOf(seriesInfo.seriesType) >= 0;\n    };\n    chartDataControllerProto.prototype._formatOpenHighLowCloseValues = function (values, formats, hasOpenValueField, encodeHtml, delimiter) {\n        var result = '', delimiter = delimiter || ' ', formatsLength = formats ? formats.length : 0, i, formatIndex, valueNames = [\n            _localizer_1.localizer.getString(_localization_ids_1.localizationId.OpenCaption),\n            _localizer_1.localizer.getString(_localization_ids_1.localizationId.HighCaption),\n            _localizer_1.localizer.getString(_localization_ids_1.localizationId.LowCaption),\n            _localizer_1.localizer.getString(_localization_ids_1.localizationId.CloseCaption)\n        ];\n        if (values && (formatsLength > 0) && (formatsLength <= values.length)) {\n            for (formatIndex = 0, i = hasOpenValueField ? 0 : 1; formatIndex < formatsLength; formatIndex++, i++) {\n                result += delimiter + valueNames[i] + ': ' + this._formatValue(values[i], formats[formatIndex], encodeHtml);\n            }\n        }\n        return result;\n    };\n    chartDataControllerProto.prototype._formatValuesList = function (valuesList, formats, encodeHtml) {\n        var result = '';\n        if (formats && formats.length === valuesList.length) {\n            for (var i = 0; i < valuesList.length; i++) {\n                result = result + (i === 0 ? '' : ' - ') + this._formatValue(valuesList[i], formats[i], encodeHtml);\n            }\n        }\n        return result;\n    };\n    chartDataControllerProto.prototype._formatValue = function (value, format, encodeHtml) {\n        var text = _formatter_1.format(value ? value : 0, format);\n        return encodeHtml ? _utils_1.encodeHtml(text) : text;\n    };\n    chartDataControllerProto.prototype._isNumericDataType = function (type) {\n        return type == 'Integer' || type == 'Float' || type == 'Double' || type == 'Decimal';\n    };\n    chartDataControllerProto.prototype._convertContentType = function (typeModel) {\n        return enums_1.parsePointLabelContentType(typeModel);\n    };\n    chartDataControllerProto.prototype._showPointMarker = function (seriesTemplate) {\n        if (seriesTemplate.SeriesType === 'Point') {\n            return true;\n        }\n        else if (exports.allowedTypesForShowPointMarkers.indexOf(seriesTemplate.SeriesType) !== -1) {\n            return seriesTemplate.ShowPointMarkers;\n        }\n        else {\n            return false;\n        }\n    };\n    chartDataControllerProto.prototype.checkSeriesTemplatePointLabels = function (seriesTemplateViewModel) {\n        return this.showPointLabels(this._getPointLabelInfo(seriesTemplateViewModel.PointLabel));\n    };\n    chartDataControllerProto.prototype.showPointLabels = function (pointLabelInfo) {\n        return pointLabelInfo && pointLabelInfo.contentType != enums_1.PointLabelContentType.None;\n    };\n    chartDataControllerProto.prototype._getPointLabelInfo = function (pointLabelViewModel) {\n        if (pointLabelViewModel) {\n            return {\n                showPointLabels: pointLabelViewModel.ShowPointLabels,\n                rotationAngle: _chart_helper_1.chartHelper.convertPointLabelRotationAngle(pointLabelViewModel.Orientation),\n                position: _chart_helper_1.chartHelper.convertPointLabelPosition(pointLabelViewModel.Position),\n                showForZeroValues: pointLabelViewModel.ShowForZeroValues,\n                contentType: this._convertContentType(pointLabelViewModel.ContentType),\n                scatterContent: pointLabelViewModel.ScatterContent\n            };\n        }\n    };\n    return chartDataControllerProto;\n}(_chart_data_controller_base_1.chartDataControllerBase));\nexports.chartDataControllerProto = chartDataControllerProto;\nexports.allowedTypesForShowPointMarkers = ['Line', 'Spline', 'StepLine', 'StackedLine', 'FullStackedLine', 'SplineArea', 'Area', 'StepArea', 'RangeArea'];\n"]},"metadata":{},"sourceType":"script"}