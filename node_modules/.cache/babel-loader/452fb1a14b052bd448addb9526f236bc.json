{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_treemap-data-controller.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.treemapDataController = void 0;\n\nvar string_1 = require(\"devextreme/core/utils/string\");\n\nvar special_values_1 = require(\"../special-values\");\n\nvar _formatter_1 = require(\"../_formatter\");\n\nvar _localization_ids_1 = require(\"../_localization-ids\");\n\nvar _localizer_1 = require(\"../_localizer\");\n\nvar _utils_1 = require(\"../_utils\");\n\nvar _data_controller_base_1 = require(\"./_data-controller-base\");\n\nvar treemapDataController = function (_super) {\n  __extends(treemapDataController, _super);\n\n  function treemapDataController(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.elementCustomColor = options.elementCustomColor;\n\n    _this._prepare();\n\n    return _this;\n  }\n\n  treemapDataController.prototype._prepare = function () {\n    var multiData = this.multiData;\n\n    if (multiData) {\n      var dimensions = multiData.getDimensions();\n      this.last_dimension_id = dimensions.length > 0 ? dimensions[dimensions.length - 1].id : null;\n    }\n\n    this.nodeHash = {};\n  };\n\n  treemapDataController.prototype.getDataSource = function () {\n    var that = this,\n        dataSource = [],\n        viewModel = that.viewModel,\n        multiData = that.multiData,\n        measureIndex = 0,\n        contentDescription = viewModel.ContentDescription,\n        measure,\n        measureValue,\n        elementColor,\n        valueId;\n\n    if (viewModel.ProvideValuesAsArguments) {\n      for (var i = 0; i < viewModel.ValueDataMembers.length; i++) {\n        valueId = viewModel.ValueDataMembers[i];\n        measure = multiData.getMeasureById(valueId);\n        measureValue = multiData.getMeasureValue(valueId);\n        elementColor = _utils_1.toColor(multiData.getMeasureValue(viewModel.ColorDataMembers[i]).getValue());\n        elementColor = that._getElementCustomColor(multiData.getAxis().getRootPoint(), elementColor, valueId);\n        dataSource.push({\n          name: measure.name,\n          value: measureValue.getValue(),\n          valueText: measureValue.getDisplayText(),\n          color: elementColor\n        });\n      }\n\n      if (viewModel.LayoutAlgorithm === 'SliceAndDice') {\n        dataSource.sort(function (a, b) {\n          return b.value - a.value;\n        });\n      }\n    } else {\n      if (contentDescription != null && contentDescription.ElementSelectionEnabled) measureIndex = contentDescription.SelectedElementIndex;\n\n      if (viewModel.ValueDataMembers.length > 0) {\n        var root = multiData.getAxis().getRootPoint();\n        dataSource = that._getChildren(root, measureIndex, viewModel.GroupArgumentDataMembers, null);\n      }\n    }\n\n    return dataSource;\n  };\n\n  treemapDataController.prototype.getLabel = function (node, encodeHtml) {\n    if (encodeHtml === void 0) {\n      encodeHtml = true;\n    }\n\n    var viewModel = this.viewModel;\n    return this._getNodeText(node, viewModel.TilesLabelContentType, viewModel.GroupsLabelContentType, encodeHtml);\n  };\n\n  treemapDataController.prototype.getTooltip = function (node, encodeHtml) {\n    if (encodeHtml === void 0) {\n      encodeHtml = true;\n    }\n\n    var viewModel = this.viewModel;\n    return this._getNodeText(node, viewModel.TilesTooltipContentType, viewModel.GroupsTooltipContentType, encodeHtml);\n  };\n\n  treemapDataController.prototype.getChildrenNodesUniqueValues = function (value) {\n    var node = this.nodeHash[value],\n        res = [];\n\n    this._fillChildrenNodesUniqueValues(res, node);\n\n    return res;\n  };\n\n  treemapDataController.prototype._fillChildrenNodesUniqueValues = function (res, node) {\n    if (node.items) {\n      for (var i = 0; i < node.items.length; i++) {\n        this._fillChildrenNodesUniqueValues(res, node.items[i]);\n      }\n    } else res.push(node.uniqueValue);\n  };\n\n  treemapDataController.prototype._getChildren = function (currentPoint, measureIndex, groupArgumentDataMembers, prevArgumentDataMember) {\n    var that = this,\n        viewModel = that.viewModel,\n        items = [],\n        currentArgumentDataMember = groupArgumentDataMembers[0],\n        points,\n        recoveredGroupArgumentDataMembers,\n        node;\n\n    if (groupArgumentDataMembers.length > 1) {\n      recoveredGroupArgumentDataMembers = [];\n\n      for (var i = 1; i < groupArgumentDataMembers.length; i++) {\n        recoveredGroupArgumentDataMembers.push(groupArgumentDataMembers[i]);\n      }\n\n      points = currentPoint.getPointsByDimensionId(currentArgumentDataMember);\n      points.forEach(function (point) {\n        node = that._createNode(point, measureIndex, prevArgumentDataMember);\n        node.items = that._getChildren(point, measureIndex, recoveredGroupArgumentDataMembers, currentArgumentDataMember);\n        items.push(node);\n      });\n    } else {\n      points = currentPoint.getPointsByDimensionId(that.last_dimension_id);\n      points.forEach(function (point) {\n        node = that._createNode(point, measureIndex, prevArgumentDataMember);\n        node.color = that._getColor(point, measureIndex);\n        items.push(node);\n      });\n    }\n\n    return items;\n  };\n\n  treemapDataController.prototype._createNode = function (point, measureIndex, prevArgumentDataMember) {\n    var viewModel = this.viewModel,\n        multiData = this.multiData,\n        valueDataMember = viewModel.ValueDataMembers[measureIndex],\n        measureValue = multiData.getSlice(point).getMeasureValue(valueDataMember),\n        uniqueValue = point.getUniquePath(),\n        node = {\n      name: this._getArgumentString(point, prevArgumentDataMember),\n      value: measureValue.getValue(),\n      valueText: measureValue.getDisplayText(),\n      uniqueValue: uniqueValue,\n      format: function (value) {\n        return _formatter_1.format(value, multiData.getMeasureFormat(valueDataMember));\n      }\n    };\n    this.nodeHash[node.uniqueValue] = node;\n    return node;\n  };\n\n  treemapDataController.prototype._getNodeText = function (node, tileType, groupType, encodeHtml) {\n    if (node.isLeaf()) {\n      return this._getTextByContentType(tileType, node.data.name, node.data.valueText, encodeHtml);\n    } else {\n      return this._getTextByContentType(groupType, node.data.name, node.data.format(node.value()), encodeHtml);\n    }\n  };\n\n  treemapDataController.prototype._getTextByContentType = function (contentType, argumentText, valueText, encodeHtml) {\n    var argumentEncoded = encodeHtml ? _utils_1.encodeHtml(argumentText) : argumentText;\n    var valueEncoded = encodeHtml ? _utils_1.encodeHtml(valueText) : valueText;\n\n    switch (contentType) {\n      case 'Argument':\n        return argumentEncoded;\n\n      case 'ArgumentAndValue':\n        return string_1.format(_localizer_1.localizer.getString(_localization_ids_1.localizationId.TreemapLabelValueTemplate), argumentEncoded, valueEncoded);\n\n      case 'Value':\n        return valueEncoded;\n    }\n  };\n\n  treemapDataController.prototype._getArgumentString = function (point, prevArgumentDataMember) {\n    var argumentString,\n        path = point.getAxisPath(),\n        dimension;\n\n    if (this.drillDownState[point.getAxisName()]) {\n      return point.getDisplayText();\n    }\n\n    for (var i = path.length - 1; i >= 0; i--) {\n      dimension = path[i].getDimension();\n      if (prevArgumentDataMember && dimension && dimension.id === prevArgumentDataMember) break;\n\n      if (path[i].getUniqueValue() !== special_values_1.specialValues.olapNullValueGuid) {\n        if (argumentString) {\n          argumentString = string_1.format(_localizer_1.localizer.getString(_localization_ids_1.localizationId.TreemapLabelArgumentTemplate), path[i].getDisplayText(), argumentString);\n        } else {\n          argumentString = path[i].getDisplayText();\n        }\n      }\n    }\n\n    return argumentString;\n  };\n\n  treemapDataController.prototype._getColor = function (point, measureIndex) {\n    var that = this,\n        viewModel = that.viewModel,\n        multiData = that.multiData,\n        colorId = viewModel.ColorDataMembers[measureIndex],\n        color;\n\n    if (viewModel.ColorArgument) {\n      var colorPoint = point.getParentByDimensionId(viewModel.ColorArgument);\n      multiData = multiData.getSlice(colorPoint);\n    }\n\n    color = _utils_1.toColor(multiData.getMeasureValue(colorId).getValue());\n    return that._getElementCustomColor(point, color, viewModel.ValueDataMembers[measureIndex]);\n  };\n\n  treemapDataController.prototype._getElementCustomColor = function (point, color, valueId) {\n    var that = this,\n        viewModel = that.viewModel,\n        newColor;\n\n    if (that.elementCustomColor && color) {\n      var customElementColorEventArgs = {\n        targetElement: [point],\n        measureIds: [valueId],\n        color: color\n      };\n      that.elementCustomColor(customElementColorEventArgs);\n      newColor = customElementColorEventArgs.color;\n\n      if (!newColor.colorIsInvalid && newColor !== color) {\n        return newColor;\n      }\n    }\n\n    return color;\n  };\n\n  return treemapDataController;\n}(_data_controller_base_1.dataControllerBase);\n\nexports.treemapDataController = treemapDataController;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/data-controllers/_treemap-data-controller.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","treemapDataController","string_1","require","special_values_1","_formatter_1","_localization_ids_1","_localizer_1","_utils_1","_data_controller_base_1","_super","options","_this","elementCustomColor","_prepare","multiData","dimensions","getDimensions","last_dimension_id","length","id","nodeHash","getDataSource","that","dataSource","viewModel","measureIndex","contentDescription","ContentDescription","measure","measureValue","elementColor","valueId","ProvideValuesAsArguments","i","ValueDataMembers","getMeasureById","getMeasureValue","toColor","ColorDataMembers","getValue","_getElementCustomColor","getAxis","getRootPoint","push","name","valueText","getDisplayText","color","LayoutAlgorithm","sort","a","ElementSelectionEnabled","SelectedElementIndex","root","_getChildren","GroupArgumentDataMembers","getLabel","node","encodeHtml","_getNodeText","TilesLabelContentType","GroupsLabelContentType","getTooltip","TilesTooltipContentType","GroupsTooltipContentType","getChildrenNodesUniqueValues","res","_fillChildrenNodesUniqueValues","items","uniqueValue","currentPoint","groupArgumentDataMembers","prevArgumentDataMember","currentArgumentDataMember","points","recoveredGroupArgumentDataMembers","getPointsByDimensionId","forEach","point","_createNode","_getColor","valueDataMember","getSlice","getUniquePath","_getArgumentString","format","getMeasureFormat","tileType","groupType","isLeaf","_getTextByContentType","data","contentType","argumentText","argumentEncoded","valueEncoded","localizer","getString","localizationId","TreemapLabelValueTemplate","argumentString","path","getAxisPath","dimension","drillDownState","getAxisName","getDimension","getUniqueValue","specialValues","olapNullValueGuid","TreemapLabelArgumentTemplate","colorId","ColorArgument","colorPoint","getParentByDimensionId","newColor","customElementColorEventArgs","targetElement","measureIds","colorIsInvalid","dataControllerBase"],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;;AAeAV,MAAM,CAACa,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,8BAAD,CAAtB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,sBAAD,CAAjC;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIM,uBAAuB,GAAGN,OAAO,CAAC,yBAAD,CAArC;;AACA,IAAIF,qBAAqB,GAAI,UAAUS,MAAV,EAAkB;AAC3C7B,EAAAA,SAAS,CAACoB,qBAAD,EAAwBS,MAAxB,CAAT;;AACA,WAAST,qBAAT,CAA+BU,OAA/B,EAAwC;AACpC,QAAIC,KAAK,GAAGF,MAAM,CAAClB,IAAP,CAAY,IAAZ,EAAkBmB,OAAlB,KAA8B,IAA1C;;AACAC,IAAAA,KAAK,CAACC,kBAAN,GAA2BF,OAAO,CAACE,kBAAnC;;AACAD,IAAAA,KAAK,CAACE,QAAN;;AACA,WAAOF,KAAP;AACH;;AACDX,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCwB,QAAhC,GAA2C,YAAY;AACnD,QAAIC,SAAS,GAAG,KAAKA,SAArB;;AACA,QAAIA,SAAJ,EAAe;AACX,UAAIC,UAAU,GAAGD,SAAS,CAACE,aAAV,EAAjB;AACA,WAAKC,iBAAL,GAAyBF,UAAU,CAACG,MAAX,GAAoB,CAApB,GAAwBH,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAAV,CAAkCC,EAA1D,GAA+D,IAAxF;AACH;;AACD,SAAKC,QAAL,GAAgB,EAAhB;AACH,GAPD;;AAQApB,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCgC,aAAhC,GAAgD,YAAY;AACxD,QAAIC,IAAI,GAAG,IAAX;AAAA,QAAiBC,UAAU,GAAG,EAA9B;AAAA,QAAkCC,SAAS,GAAGF,IAAI,CAACE,SAAnD;AAAA,QAA8DV,SAAS,GAAGQ,IAAI,CAACR,SAA/E;AAAA,QAA0FW,YAAY,GAAG,CAAzG;AAAA,QAA4GC,kBAAkB,GAAGF,SAAS,CAACG,kBAA3I;AAAA,QAA+JC,OAA/J;AAAA,QAAwKC,YAAxK;AAAA,QAAsLC,YAAtL;AAAA,QAAoMC,OAApM;;AACA,QAAIP,SAAS,CAACQ,wBAAd,EAAwC;AACpC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAAS,CAACU,gBAAV,CAA2BhB,MAA/C,EAAuDe,CAAC,EAAxD,EAA4D;AACxDF,QAAAA,OAAO,GAAGP,SAAS,CAACU,gBAAV,CAA2BD,CAA3B,CAAV;AACAL,QAAAA,OAAO,GAAGd,SAAS,CAACqB,cAAV,CAAyBJ,OAAzB,CAAV;AACAF,QAAAA,YAAY,GAAGf,SAAS,CAACsB,eAAV,CAA0BL,OAA1B,CAAf;AACAD,QAAAA,YAAY,GAAGvB,QAAQ,CAAC8B,OAAT,CAAiBvB,SAAS,CAACsB,eAAV,CAA0BZ,SAAS,CAACc,gBAAV,CAA2BL,CAA3B,CAA1B,EAAyDM,QAAzD,EAAjB,CAAf;AACAT,QAAAA,YAAY,GAAGR,IAAI,CAACkB,sBAAL,CAA4B1B,SAAS,CAAC2B,OAAV,GAAoBC,YAApB,EAA5B,EAAgEZ,YAAhE,EAA8EC,OAA9E,CAAf;AACAR,QAAAA,UAAU,CAACoB,IAAX,CAAgB;AACZC,UAAAA,IAAI,EAAEhB,OAAO,CAACgB,IADF;AAEZ7C,UAAAA,KAAK,EAAE8B,YAAY,CAACU,QAAb,EAFK;AAGZM,UAAAA,SAAS,EAAEhB,YAAY,CAACiB,cAAb,EAHC;AAIZC,UAAAA,KAAK,EAAEjB;AAJK,SAAhB;AAMH;;AACD,UAAIN,SAAS,CAACwB,eAAV,KAA8B,cAAlC,EAAkD;AAC9CzB,QAAAA,UAAU,CAAC0B,IAAX,CAAgB,UAAUC,CAAV,EAAanE,CAAb,EAAgB;AAC5B,iBAAOA,CAAC,CAACgB,KAAF,GAAUmD,CAAC,CAACnD,KAAnB;AACH,SAFD;AAGH;AACJ,KAnBD,MAoBK;AACD,UAAI2B,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,CAACyB,uBAArD,EACI1B,YAAY,GAAGC,kBAAkB,CAAC0B,oBAAlC;;AACJ,UAAI5B,SAAS,CAACU,gBAAV,CAA2BhB,MAA3B,GAAoC,CAAxC,EAA2C;AACvC,YAAImC,IAAI,GAAGvC,SAAS,CAAC2B,OAAV,GAAoBC,YAApB,EAAX;AACAnB,QAAAA,UAAU,GAAGD,IAAI,CAACgC,YAAL,CAAkBD,IAAlB,EAAwB5B,YAAxB,EAAsCD,SAAS,CAAC+B,wBAAhD,EAA0E,IAA1E,CAAb;AACH;AACJ;;AACD,WAAOhC,UAAP;AACH,GA/BD;;AAgCAvB,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCmE,QAAhC,GAA2C,UAAUC,IAAV,EAAgBC,UAAhB,EAA4B;AACnE,QAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,MAAAA,UAAU,GAAG,IAAb;AAAoB;;AACjD,QAAIlC,SAAS,GAAG,KAAKA,SAArB;AACA,WAAO,KAAKmC,YAAL,CAAkBF,IAAlB,EAAwBjC,SAAS,CAACoC,qBAAlC,EAAyDpC,SAAS,CAACqC,sBAAnE,EAA2FH,UAA3F,CAAP;AACH,GAJD;;AAKA1D,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCyE,UAAhC,GAA6C,UAAUL,IAAV,EAAgBC,UAAhB,EAA4B;AACrE,QAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,MAAAA,UAAU,GAAG,IAAb;AAAoB;;AACjD,QAAIlC,SAAS,GAAG,KAAKA,SAArB;AACA,WAAO,KAAKmC,YAAL,CAAkBF,IAAlB,EAAwBjC,SAAS,CAACuC,uBAAlC,EAA2DvC,SAAS,CAACwC,wBAArE,EAA+FN,UAA/F,CAAP;AACH,GAJD;;AAKA1D,EAAAA,qBAAqB,CAACX,SAAtB,CAAgC4E,4BAAhC,GAA+D,UAAUlE,KAAV,EAAiB;AAC5E,QAAI0D,IAAI,GAAG,KAAKrC,QAAL,CAAcrB,KAAd,CAAX;AAAA,QAAiCmE,GAAG,GAAG,EAAvC;;AACA,SAAKC,8BAAL,CAAoCD,GAApC,EAAyCT,IAAzC;;AACA,WAAOS,GAAP;AACH,GAJD;;AAKAlE,EAAAA,qBAAqB,CAACX,SAAtB,CAAgC8E,8BAAhC,GAAiE,UAAUD,GAAV,EAAeT,IAAf,EAAqB;AAClF,QAAIA,IAAI,CAACW,KAAT,EAAgB;AACZ,WAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,IAAI,CAACW,KAAL,CAAWlD,MAA/B,EAAuCe,CAAC,EAAxC,EAA4C;AACxC,aAAKkC,8BAAL,CAAoCD,GAApC,EAAyCT,IAAI,CAACW,KAAL,CAAWnC,CAAX,CAAzC;AACH;AACJ,KAJD,MAMIiC,GAAG,CAACvB,IAAJ,CAASc,IAAI,CAACY,WAAd;AACP,GARD;;AASArE,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCiE,YAAhC,GAA+C,UAAUgB,YAAV,EAAwB7C,YAAxB,EAAsC8C,wBAAtC,EAAgEC,sBAAhE,EAAwF;AACnI,QAAIlD,IAAI,GAAG,IAAX;AAAA,QAAiBE,SAAS,GAAGF,IAAI,CAACE,SAAlC;AAAA,QAA6C4C,KAAK,GAAG,EAArD;AAAA,QAAyDK,yBAAyB,GAAGF,wBAAwB,CAAC,CAAD,CAA7G;AAAA,QAAkHG,MAAlH;AAAA,QAA0HC,iCAA1H;AAAA,QAA6JlB,IAA7J;;AACA,QAAIc,wBAAwB,CAACrD,MAAzB,GAAkC,CAAtC,EAAyC;AACrCyD,MAAAA,iCAAiC,GAAG,EAApC;;AACA,WAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsC,wBAAwB,CAACrD,MAA7C,EAAqDe,CAAC,EAAtD,EAA0D;AACtD0C,QAAAA,iCAAiC,CAAChC,IAAlC,CAAuC4B,wBAAwB,CAACtC,CAAD,CAA/D;AACH;;AACDyC,MAAAA,MAAM,GAAGJ,YAAY,CAACM,sBAAb,CAAoCH,yBAApC,CAAT;AACAC,MAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC5BrB,QAAAA,IAAI,GAAGnC,IAAI,CAACyD,WAAL,CAAiBD,KAAjB,EAAwBrD,YAAxB,EAAsC+C,sBAAtC,CAAP;AACAf,QAAAA,IAAI,CAACW,KAAL,GAAa9C,IAAI,CAACgC,YAAL,CAAkBwB,KAAlB,EAAyBrD,YAAzB,EAAuCkD,iCAAvC,EAA0EF,yBAA1E,CAAb;AACAL,QAAAA,KAAK,CAACzB,IAAN,CAAWc,IAAX;AACH,OAJD;AAKH,KAXD,MAYK;AACDiB,MAAAA,MAAM,GAAGJ,YAAY,CAACM,sBAAb,CAAoCtD,IAAI,CAACL,iBAAzC,CAAT;AACAyD,MAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC5BrB,QAAAA,IAAI,GAAGnC,IAAI,CAACyD,WAAL,CAAiBD,KAAjB,EAAwBrD,YAAxB,EAAsC+C,sBAAtC,CAAP;AACAf,QAAAA,IAAI,CAACV,KAAL,GAAazB,IAAI,CAAC0D,SAAL,CAAeF,KAAf,EAAsBrD,YAAtB,CAAb;AACA2C,QAAAA,KAAK,CAACzB,IAAN,CAAWc,IAAX;AACH,OAJD;AAKH;;AACD,WAAOW,KAAP;AACH,GAvBD;;AAwBApE,EAAAA,qBAAqB,CAACX,SAAtB,CAAgC0F,WAAhC,GAA8C,UAAUD,KAAV,EAAiBrD,YAAjB,EAA+B+C,sBAA/B,EAAuD;AACjG,QAAIhD,SAAS,GAAG,KAAKA,SAArB;AAAA,QAAgCV,SAAS,GAAG,KAAKA,SAAjD;AAAA,QAA4DmE,eAAe,GAAGzD,SAAS,CAACU,gBAAV,CAA2BT,YAA3B,CAA9E;AAAA,QAAwHI,YAAY,GAAGf,SAAS,CAACoE,QAAV,CAAmBJ,KAAnB,EAA0B1C,eAA1B,CAA0C6C,eAA1C,CAAvI;AAAA,QAAmMZ,WAAW,GAAGS,KAAK,CAACK,aAAN,EAAjN;AAAA,QAAwO1B,IAAI,GAAG;AAC3Ob,MAAAA,IAAI,EAAE,KAAKwC,kBAAL,CAAwBN,KAAxB,EAA+BN,sBAA/B,CADqO;AAE3OzE,MAAAA,KAAK,EAAE8B,YAAY,CAACU,QAAb,EAFoO;AAG3OM,MAAAA,SAAS,EAAEhB,YAAY,CAACiB,cAAb,EAHgO;AAI3OuB,MAAAA,WAAW,EAAEA,WAJ8N;AAK3OgB,MAAAA,MAAM,EAAE,UAAUtF,KAAV,EAAiB;AACrB,eAAOK,YAAY,CAACiF,MAAb,CAAoBtF,KAApB,EAA2Be,SAAS,CAACwE,gBAAV,CAA2BL,eAA3B,CAA3B,CAAP;AACH;AAP0O,KAA/O;AASA,SAAK7D,QAAL,CAAcqC,IAAI,CAACY,WAAnB,IAAkCZ,IAAlC;AACA,WAAOA,IAAP;AACH,GAZD;;AAaAzD,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCsE,YAAhC,GAA+C,UAAUF,IAAV,EAAgB8B,QAAhB,EAA0BC,SAA1B,EAAqC9B,UAArC,EAAiD;AAC5F,QAAID,IAAI,CAACgC,MAAL,EAAJ,EAAmB;AACf,aAAO,KAAKC,qBAAL,CAA2BH,QAA3B,EAAqC9B,IAAI,CAACkC,IAAL,CAAU/C,IAA/C,EAAqDa,IAAI,CAACkC,IAAL,CAAU9C,SAA/D,EAA0Ea,UAA1E,CAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAKgC,qBAAL,CAA2BF,SAA3B,EAAsC/B,IAAI,CAACkC,IAAL,CAAU/C,IAAhD,EAAsDa,IAAI,CAACkC,IAAL,CAAUN,MAAV,CAAiB5B,IAAI,CAAC1D,KAAL,EAAjB,CAAtD,EAAsF2D,UAAtF,CAAP;AACH;AACJ,GAPD;;AAQA1D,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCqG,qBAAhC,GAAwD,UAAUE,WAAV,EAAuBC,YAAvB,EAAqChD,SAArC,EAAgDa,UAAhD,EAA4D;AAChH,QAAIoC,eAAe,GAAGpC,UAAU,GAAGnD,QAAQ,CAACmD,UAAT,CAAoBmC,YAApB,CAAH,GAAuCA,YAAvE;AACA,QAAIE,YAAY,GAAGrC,UAAU,GAAGnD,QAAQ,CAACmD,UAAT,CAAoBb,SAApB,CAAH,GAAoCA,SAAjE;;AACA,YAAQ+C,WAAR;AACI,WAAK,UAAL;AACI,eAAOE,eAAP;;AACJ,WAAK,kBAAL;AACI,eAAO7F,QAAQ,CAACoF,MAAT,CAAgB/E,YAAY,CAAC0F,SAAb,CAAuBC,SAAvB,CAAiC5F,mBAAmB,CAAC6F,cAApB,CAAmCC,yBAApE,CAAhB,EAAgHL,eAAhH,EAAiIC,YAAjI,CAAP;;AACJ,WAAK,OAAL;AACI,eAAOA,YAAP;AANR;AAQH,GAXD;;AAYA/F,EAAAA,qBAAqB,CAACX,SAAtB,CAAgC+F,kBAAhC,GAAqD,UAAUN,KAAV,EAAiBN,sBAAjB,EAAyC;AAC1F,QAAI4B,cAAJ;AAAA,QAAoBC,IAAI,GAAGvB,KAAK,CAACwB,WAAN,EAA3B;AAAA,QAAgDC,SAAhD;;AACA,QAAI,KAAKC,cAAL,CAAoB1B,KAAK,CAAC2B,WAAN,EAApB,CAAJ,EAA8C;AAC1C,aAAO3B,KAAK,CAAChC,cAAN,EAAP;AACH;;AACD,SAAK,IAAIb,CAAC,GAAGoE,IAAI,CAACnF,MAAL,GAAc,CAA3B,EAA8Be,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvCsE,MAAAA,SAAS,GAAGF,IAAI,CAACpE,CAAD,CAAJ,CAAQyE,YAAR,EAAZ;AACA,UAAIlC,sBAAsB,IAAI+B,SAA1B,IAAuCA,SAAS,CAACpF,EAAV,KAAiBqD,sBAA5D,EACI;;AACJ,UAAI6B,IAAI,CAACpE,CAAD,CAAJ,CAAQ0E,cAAR,OAA6BxG,gBAAgB,CAACyG,aAAjB,CAA+BC,iBAAhE,EAAmF;AAC/E,YAAIT,cAAJ,EAAoB;AAChBA,UAAAA,cAAc,GAAGnG,QAAQ,CAACoF,MAAT,CAAgB/E,YAAY,CAAC0F,SAAb,CAAuBC,SAAvB,CAAiC5F,mBAAmB,CAAC6F,cAApB,CAAmCY,4BAApE,CAAhB,EAAmHT,IAAI,CAACpE,CAAD,CAAJ,CAAQa,cAAR,EAAnH,EAA6IsD,cAA7I,CAAjB;AACH,SAFD,MAGK;AACDA,UAAAA,cAAc,GAAGC,IAAI,CAACpE,CAAD,CAAJ,CAAQa,cAAR,EAAjB;AACH;AACJ;AACJ;;AACD,WAAOsD,cAAP;AACH,GAnBD;;AAoBApG,EAAAA,qBAAqB,CAACX,SAAtB,CAAgC2F,SAAhC,GAA4C,UAAUF,KAAV,EAAiBrD,YAAjB,EAA+B;AACvE,QAAIH,IAAI,GAAG,IAAX;AAAA,QAAiBE,SAAS,GAAGF,IAAI,CAACE,SAAlC;AAAA,QAA6CV,SAAS,GAAGQ,IAAI,CAACR,SAA9D;AAAA,QAAyEiG,OAAO,GAAGvF,SAAS,CAACc,gBAAV,CAA2Bb,YAA3B,CAAnF;AAAA,QAA6HsB,KAA7H;;AACA,QAAIvB,SAAS,CAACwF,aAAd,EAA6B;AACzB,UAAIC,UAAU,GAAGnC,KAAK,CAACoC,sBAAN,CAA6B1F,SAAS,CAACwF,aAAvC,CAAjB;AACAlG,MAAAA,SAAS,GAAGA,SAAS,CAACoE,QAAV,CAAmB+B,UAAnB,CAAZ;AACH;;AACDlE,IAAAA,KAAK,GAAGxC,QAAQ,CAAC8B,OAAT,CAAiBvB,SAAS,CAACsB,eAAV,CAA0B2E,OAA1B,EAAmCxE,QAAnC,EAAjB,CAAR;AACA,WAAOjB,IAAI,CAACkB,sBAAL,CAA4BsC,KAA5B,EAAmC/B,KAAnC,EAA0CvB,SAAS,CAACU,gBAAV,CAA2BT,YAA3B,CAA1C,CAAP;AACH,GARD;;AASAzB,EAAAA,qBAAqB,CAACX,SAAtB,CAAgCmD,sBAAhC,GAAyD,UAAUsC,KAAV,EAAiB/B,KAAjB,EAAwBhB,OAAxB,EAAiC;AACtF,QAAIT,IAAI,GAAG,IAAX;AAAA,QAAiBE,SAAS,GAAGF,IAAI,CAACE,SAAlC;AAAA,QAA6C2F,QAA7C;;AACA,QAAI7F,IAAI,CAACV,kBAAL,IAA2BmC,KAA/B,EAAsC;AAClC,UAAIqE,2BAA2B,GAAG;AAC9BC,QAAAA,aAAa,EAAE,CAACvC,KAAD,CADe;AAE9BwC,QAAAA,UAAU,EAAE,CAACvF,OAAD,CAFkB;AAG9BgB,QAAAA,KAAK,EAAEA;AAHuB,OAAlC;AAKAzB,MAAAA,IAAI,CAACV,kBAAL,CAAwBwG,2BAAxB;AACAD,MAAAA,QAAQ,GAAGC,2BAA2B,CAACrE,KAAvC;;AACA,UAAI,CAACoE,QAAQ,CAACI,cAAV,IAA4BJ,QAAQ,KAAKpE,KAA7C,EAAoD;AAChD,eAAOoE,QAAP;AACH;AACJ;;AACD,WAAOpE,KAAP;AACH,GAfD;;AAgBA,SAAO/C,qBAAP;AACH,CA/K4B,CA+K3BQ,uBAAuB,CAACgH,kBA/KG,CAA7B;;AAgLA1H,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["/**\r\n* DevExpress Dashboard (_treemap-data-controller.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treemapDataController = void 0;\nvar string_1 = require(\"devextreme/core/utils/string\");\nvar special_values_1 = require(\"../special-values\");\nvar _formatter_1 = require(\"../_formatter\");\nvar _localization_ids_1 = require(\"../_localization-ids\");\nvar _localizer_1 = require(\"../_localizer\");\nvar _utils_1 = require(\"../_utils\");\nvar _data_controller_base_1 = require(\"./_data-controller-base\");\nvar treemapDataController = (function (_super) {\n    __extends(treemapDataController, _super);\n    function treemapDataController(options) {\n        var _this = _super.call(this, options) || this;\n        _this.elementCustomColor = options.elementCustomColor;\n        _this._prepare();\n        return _this;\n    }\n    treemapDataController.prototype._prepare = function () {\n        var multiData = this.multiData;\n        if (multiData) {\n            var dimensions = multiData.getDimensions();\n            this.last_dimension_id = dimensions.length > 0 ? dimensions[dimensions.length - 1].id : null;\n        }\n        this.nodeHash = {};\n    };\n    treemapDataController.prototype.getDataSource = function () {\n        var that = this, dataSource = [], viewModel = that.viewModel, multiData = that.multiData, measureIndex = 0, contentDescription = viewModel.ContentDescription, measure, measureValue, elementColor, valueId;\n        if (viewModel.ProvideValuesAsArguments) {\n            for (var i = 0; i < viewModel.ValueDataMembers.length; i++) {\n                valueId = viewModel.ValueDataMembers[i];\n                measure = multiData.getMeasureById(valueId);\n                measureValue = multiData.getMeasureValue(valueId);\n                elementColor = _utils_1.toColor(multiData.getMeasureValue(viewModel.ColorDataMembers[i]).getValue());\n                elementColor = that._getElementCustomColor(multiData.getAxis().getRootPoint(), elementColor, valueId);\n                dataSource.push({\n                    name: measure.name,\n                    value: measureValue.getValue(),\n                    valueText: measureValue.getDisplayText(),\n                    color: elementColor\n                });\n            }\n            if (viewModel.LayoutAlgorithm === 'SliceAndDice') {\n                dataSource.sort(function (a, b) {\n                    return b.value - a.value;\n                });\n            }\n        }\n        else {\n            if (contentDescription != null && contentDescription.ElementSelectionEnabled)\n                measureIndex = contentDescription.SelectedElementIndex;\n            if (viewModel.ValueDataMembers.length > 0) {\n                var root = multiData.getAxis().getRootPoint();\n                dataSource = that._getChildren(root, measureIndex, viewModel.GroupArgumentDataMembers, null);\n            }\n        }\n        return dataSource;\n    };\n    treemapDataController.prototype.getLabel = function (node, encodeHtml) {\n        if (encodeHtml === void 0) { encodeHtml = true; }\n        var viewModel = this.viewModel;\n        return this._getNodeText(node, viewModel.TilesLabelContentType, viewModel.GroupsLabelContentType, encodeHtml);\n    };\n    treemapDataController.prototype.getTooltip = function (node, encodeHtml) {\n        if (encodeHtml === void 0) { encodeHtml = true; }\n        var viewModel = this.viewModel;\n        return this._getNodeText(node, viewModel.TilesTooltipContentType, viewModel.GroupsTooltipContentType, encodeHtml);\n    };\n    treemapDataController.prototype.getChildrenNodesUniqueValues = function (value) {\n        var node = this.nodeHash[value], res = [];\n        this._fillChildrenNodesUniqueValues(res, node);\n        return res;\n    };\n    treemapDataController.prototype._fillChildrenNodesUniqueValues = function (res, node) {\n        if (node.items) {\n            for (var i = 0; i < node.items.length; i++) {\n                this._fillChildrenNodesUniqueValues(res, node.items[i]);\n            }\n        }\n        else\n            res.push(node.uniqueValue);\n    };\n    treemapDataController.prototype._getChildren = function (currentPoint, measureIndex, groupArgumentDataMembers, prevArgumentDataMember) {\n        var that = this, viewModel = that.viewModel, items = [], currentArgumentDataMember = groupArgumentDataMembers[0], points, recoveredGroupArgumentDataMembers, node;\n        if (groupArgumentDataMembers.length > 1) {\n            recoveredGroupArgumentDataMembers = [];\n            for (var i = 1; i < groupArgumentDataMembers.length; i++) {\n                recoveredGroupArgumentDataMembers.push(groupArgumentDataMembers[i]);\n            }\n            points = currentPoint.getPointsByDimensionId(currentArgumentDataMember);\n            points.forEach(function (point) {\n                node = that._createNode(point, measureIndex, prevArgumentDataMember);\n                node.items = that._getChildren(point, measureIndex, recoveredGroupArgumentDataMembers, currentArgumentDataMember);\n                items.push(node);\n            });\n        }\n        else {\n            points = currentPoint.getPointsByDimensionId(that.last_dimension_id);\n            points.forEach(function (point) {\n                node = that._createNode(point, measureIndex, prevArgumentDataMember);\n                node.color = that._getColor(point, measureIndex);\n                items.push(node);\n            });\n        }\n        return items;\n    };\n    treemapDataController.prototype._createNode = function (point, measureIndex, prevArgumentDataMember) {\n        var viewModel = this.viewModel, multiData = this.multiData, valueDataMember = viewModel.ValueDataMembers[measureIndex], measureValue = multiData.getSlice(point).getMeasureValue(valueDataMember), uniqueValue = point.getUniquePath(), node = {\n            name: this._getArgumentString(point, prevArgumentDataMember),\n            value: measureValue.getValue(),\n            valueText: measureValue.getDisplayText(),\n            uniqueValue: uniqueValue,\n            format: function (value) {\n                return _formatter_1.format(value, multiData.getMeasureFormat(valueDataMember));\n            }\n        };\n        this.nodeHash[node.uniqueValue] = node;\n        return node;\n    };\n    treemapDataController.prototype._getNodeText = function (node, tileType, groupType, encodeHtml) {\n        if (node.isLeaf()) {\n            return this._getTextByContentType(tileType, node.data.name, node.data.valueText, encodeHtml);\n        }\n        else {\n            return this._getTextByContentType(groupType, node.data.name, node.data.format(node.value()), encodeHtml);\n        }\n    };\n    treemapDataController.prototype._getTextByContentType = function (contentType, argumentText, valueText, encodeHtml) {\n        var argumentEncoded = encodeHtml ? _utils_1.encodeHtml(argumentText) : argumentText;\n        var valueEncoded = encodeHtml ? _utils_1.encodeHtml(valueText) : valueText;\n        switch (contentType) {\n            case 'Argument':\n                return argumentEncoded;\n            case 'ArgumentAndValue':\n                return string_1.format(_localizer_1.localizer.getString(_localization_ids_1.localizationId.TreemapLabelValueTemplate), argumentEncoded, valueEncoded);\n            case 'Value':\n                return valueEncoded;\n        }\n    };\n    treemapDataController.prototype._getArgumentString = function (point, prevArgumentDataMember) {\n        var argumentString, path = point.getAxisPath(), dimension;\n        if (this.drillDownState[point.getAxisName()]) {\n            return point.getDisplayText();\n        }\n        for (var i = path.length - 1; i >= 0; i--) {\n            dimension = path[i].getDimension();\n            if (prevArgumentDataMember && dimension && dimension.id === prevArgumentDataMember)\n                break;\n            if (path[i].getUniqueValue() !== special_values_1.specialValues.olapNullValueGuid) {\n                if (argumentString) {\n                    argumentString = string_1.format(_localizer_1.localizer.getString(_localization_ids_1.localizationId.TreemapLabelArgumentTemplate), path[i].getDisplayText(), argumentString);\n                }\n                else {\n                    argumentString = path[i].getDisplayText();\n                }\n            }\n        }\n        return argumentString;\n    };\n    treemapDataController.prototype._getColor = function (point, measureIndex) {\n        var that = this, viewModel = that.viewModel, multiData = that.multiData, colorId = viewModel.ColorDataMembers[measureIndex], color;\n        if (viewModel.ColorArgument) {\n            var colorPoint = point.getParentByDimensionId(viewModel.ColorArgument);\n            multiData = multiData.getSlice(colorPoint);\n        }\n        color = _utils_1.toColor(multiData.getMeasureValue(colorId).getValue());\n        return that._getElementCustomColor(point, color, viewModel.ValueDataMembers[measureIndex]);\n    };\n    treemapDataController.prototype._getElementCustomColor = function (point, color, valueId) {\n        var that = this, viewModel = that.viewModel, newColor;\n        if (that.elementCustomColor && color) {\n            var customElementColorEventArgs = {\n                targetElement: [point],\n                measureIds: [valueId],\n                color: color\n            };\n            that.elementCustomColor(customElementColorEventArgs);\n            newColor = customElementColorEventArgs.color;\n            if (!newColor.colorIsInvalid && newColor !== color) {\n                return newColor;\n            }\n        }\n        return color;\n    };\n    return treemapDataController;\n}(_data_controller_base_1.dataControllerBase));\nexports.treemapDataController = treemapDataController;\n"]},"metadata":{},"sourceType":"script"}