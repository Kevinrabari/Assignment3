{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_chart-data-controller-base.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chartDataControllerBase = void 0;\n\nvar color_1 = require(\"devextreme/color\");\n\nvar _item_data_axis_helper_1 = require(\"../item-data/internal/_item-data-axis-helper\");\n\nvar item_data_axis_names_1 = require(\"../item-data/item-data-axis-names\");\n\nvar _localization_ids_1 = require(\"../_localization-ids\");\n\nvar _localizer_1 = require(\"../_localizer\");\n\nvar _utils_1 = require(\"../_utils\");\n\nvar _data_controller_base_1 = require(\"./_data-controller-base\");\n\nvar chartDataControllerBase = function (_super) {\n  __extends(chartDataControllerBase, _super);\n\n  function chartDataControllerBase(options) {\n    return _super.call(this, options) || this;\n  }\n\n  chartDataControllerBase._getLegendSeriesName = function (seriesName) {};\n\n  chartDataControllerBase._getLegendSeriesDisplayName = function (seriesName) {};\n\n  chartDataControllerBase.prototype.getArgument = function (argumentAxisPoint) {\n    if (this.isQualitativeArgument()) {\n      return this.getTitle(argumentAxisPoint, '\\n');\n    } else if (this.isDiscreteArgument()) {\n      if (argumentAxisPoint.getParent() != null) {\n        return argumentAxisPoint.getDisplayText() || '';\n      } else {\n        return _localizer_1.localizer.getString(_localization_ids_1.localizationId.ChartTotalValue);\n      }\n    } else {\n      return argumentAxisPoint.getValue();\n    }\n  };\n\n  chartDataControllerBase.prototype.getArgumentAxisPoints = function (argumentId) {\n    if (this.viewModel) {\n      var id = argumentId ? argumentId : this.viewModel.Argument.SummaryArgumentMember,\n          argumentAxis = this._getArgumentAxis();\n\n      return argumentAxis ? argumentAxis.getPointsByDimension(id) : [];\n    } else {\n      return [];\n    }\n  };\n\n  chartDataControllerBase.prototype.getSeriesAxisPoints = function (seriesId) {\n    var seriesAxis = this._getSeriesAxis(),\n        id = seriesId ? seriesId : this.viewModel.SummarySeriesMember;\n\n    return seriesAxis ? seriesAxis.getPointsByDimension(id) : [];\n  };\n\n  chartDataControllerBase.prototype.getSingleArgumentDimensionFormat = function () {\n    var argumentDimension = this._getSingleArgumentDimension();\n\n    return argumentDimension ? argumentDimension.getFormat() : undefined;\n  };\n\n  chartDataControllerBase.prototype.getColor = function (argumentAxisPoint, seriesAxisPoint, measuesIds, colorMeasureId) {\n    var that = this,\n        color;\n    if (that.viewModel.IsDefaultColorizationDisabled) color = that.styleSettingsProvider.getDefaultBackColor();else color = that._getColorFromData(argumentAxisPoint, seriesAxisPoint, colorMeasureId);\n    var cfColor = that.getConditionalFormattingPointColor(argumentAxisPoint, seriesAxisPoint, measuesIds[0]);\n    if (cfColor) color = cfColor;\n    return that._getElementCustomColor(argumentAxisPoint, seriesAxisPoint, measuesIds, color);\n  };\n\n  chartDataControllerBase.prototype.getConditionalFormattingColorCore = function (argumentAxisPoint, seriesAxisPoint, seriesMeasureId, seriesElement) {\n    var color = null;\n\n    if (this.cfModel) {\n      var styleSettingsInfo = this._getStyleSettingsInfo(argumentAxisPoint, seriesAxisPoint, seriesMeasureId, seriesElement);\n\n      if (styleSettingsInfo && styleSettingsInfo.styleIndexes.length > 0) color = this.styleSettingsProvider.getBackColor(styleSettingsInfo);\n    }\n\n    return color;\n  };\n\n  chartDataControllerBase.prototype.getConditionalFormattingSeriesColor = function (seriesAxisPoint, seriesMeasureId) {\n    return this.getConditionalFormattingColorCore(null, seriesAxisPoint, seriesMeasureId, 'LineOrArea');\n  };\n\n  chartDataControllerBase.prototype.getConditionalFormattingPointColor = function (argumentAxisPoint, seriesAxisPoint, seriesMeasureId) {\n    return this.getConditionalFormattingColorCore(argumentAxisPoint, seriesAxisPoint, seriesMeasureId, 'Point');\n  };\n\n  chartDataControllerBase.prototype.isDiscreteArgument = function () {\n    return this.viewModel && this.viewModel.Argument.Type === 'String';\n  };\n\n  chartDataControllerBase.prototype.isQualitativeArgument = function () {\n    return this._getArgumentAxisDimensions().length > 1 && !this.drillDownState[item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis];\n  };\n\n  chartDataControllerBase.prototype.isSingleArgument = function () {\n    return this._getArgumentAxisDimensions().length == 1 || this.drillDownState[item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis] != null;\n  };\n\n  chartDataControllerBase.prototype.hasSeriesPoints = function () {\n    return this.viewModel && !!this.viewModel.SummarySeriesMember;\n  };\n\n  chartDataControllerBase.prototype._getElementCustomColor = function (argumentAxisPoint, seriesAxisPoint, measuesIds, color) {\n    var that = this,\n        dxColor = new color_1.default(color),\n        newColor;\n\n    if (that.elementCustomColor && color) {\n      var customElementColorEventArgs = {\n        targetElement: [argumentAxisPoint, seriesAxisPoint],\n        measureIds: measuesIds,\n        color: dxColor.toHex()\n      };\n      that.elementCustomColor(customElementColorEventArgs);\n      newColor = new color_1.default(customElementColorEventArgs.color);\n\n      if (!newColor.colorIsInvalid && customElementColorEventArgs.color !== dxColor.toHex()) {\n        return customElementColorEventArgs.color;\n      }\n    }\n\n    return color;\n  };\n\n  chartDataControllerBase.prototype._getColorFromData = function (argumentAxisPoint, seriesAxisPoint, colorMeasureId) {\n    var that = this,\n        colorArgumentAxisPoint = argumentAxisPoint ? argumentAxisPoint.getParentByDimensionId(that.viewModel.ArgumentColorDimension) : undefined,\n        colorSeriesAxisPoint = seriesAxisPoint.getParentByDimensionId(that.viewModel.SeriesColorDimension);\n\n    if (_utils_1.type.isDefined(colorMeasureId)) {\n      try {\n        var colorValue = that._getCrossSlice(colorArgumentAxisPoint, colorSeriesAxisPoint).getColorMeasureValue(colorMeasureId);\n\n        return colorValue !== null ? _utils_1.toColor(colorValue) : undefined;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    return undefined;\n  };\n\n  chartDataControllerBase.prototype._getStyleSettingsInfo = function (argumentAxisPoint, seriesAxisPoint, seriesMeasureId, chartElement) {\n    if (this.cfModel) {\n      var rules = [],\n          seriesInfo = {\n        argumentAxisPoint: argumentAxisPoint,\n        seriesAxisPoint: seriesAxisPoint,\n        chartElement: chartElement\n      };\n      rules = this.cfModel.RuleModels.filter(function (rule) {\n        return rule.ApplyToSeriesId === seriesMeasureId && rule.ApplyToChartElement === chartElement;\n      });\n      return this._getStyleSettingsInfoCore(seriesInfo, rules, this.viewModel.ColumnAxisName, item_data_axis_names_1.itemDataAxisNames.defaultAxis);\n    }\n  };\n\n  chartDataControllerBase.prototype._getStyleIndexes = function (rule, seriesInfo, points) {\n    var isExpressionRule = rule.CalcByDataId ? false : true;\n    var isDimensionRule = this.multiData.getDimensions(item_data_axis_names_1.itemDataAxisNames.chartSeriesAxis).concat(this.multiData.getDimensions(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis)).filter(function (dimension) {\n      return dimension.id === rule.CalcByDataId;\n    }).length > 0;\n\n    if (seriesInfo.chartElement === 'Point') {\n      if (isExpressionRule) {\n        var seriesPointPath = seriesInfo.seriesAxisPoint.getAxisPath();\n        var argumentPointPath = seriesInfo.argumentAxisPoint.getAxisPath();\n        if (seriesPointPath.length > 0 && argumentPointPath.length > 0) return this.findStylesOnPointPathsIntersection(seriesPointPath, argumentPointPath, rule.FormatConditionMeasureId);else if (seriesPointPath.length > 0) return this.findStylesOnPointPath(seriesPointPath, null, rule.FormatConditionMeasureId);else return this.findStylesOnPointPath(argumentPointPath, null, rule.FormatConditionMeasureId);\n      } else if (isDimensionRule) return this.findStylesForDimension(seriesInfo.seriesAxisPoint, seriesInfo.argumentAxisPoint, rule.CalcByDataId, rule.FormatConditionMeasureId);\n\n      return this.findStylesOnPointIntersection([seriesInfo.seriesAxisPoint, seriesInfo.argumentAxisPoint], rule.FormatConditionMeasureId);\n    } else if (seriesInfo.chartElement === 'LineOrArea') return this.getStyleIndexesOnArgumentAxis(seriesInfo.seriesAxisPoint, rule.FormatConditionMeasureId, isExpressionRule, isDimensionRule, rule.CalcByDataId);\n\n    return null;\n  };\n\n  chartDataControllerBase.prototype.findStylesForDimension = function (seriesPoint, argumentPoint, idDimensionCalculateBy, formatRuleMeasureId) {\n    var isSeriesDimension = this.multiData.getDimensions(item_data_axis_names_1.itemDataAxisNames.chartSeriesAxis).filter(function (dimension) {\n      return dimension.id === idDimensionCalculateBy;\n    }).length > 0,\n        slicePoint = (isSeriesDimension ? seriesPoint : argumentPoint).getParentByDimensionId(idDimensionCalculateBy);\n    return this.findStylesOnPointIntersection([slicePoint], formatRuleMeasureId);\n  };\n\n  chartDataControllerBase.prototype.findStylesOnPointIntersection = function (points, ruleMeasureId) {\n    return this._getMeasureValueByAxisPoints(points.filter(function (point) {\n      return point;\n    }), ruleMeasureId);\n  };\n\n  chartDataControllerBase.prototype.findStylesOnPointPath = function (pointPath, intercestionPoint, ruleMeasureId) {\n    var styles;\n\n    for (var _i = 0, pointPath_1 = pointPath; _i < pointPath_1.length; _i++) {\n      var point = pointPath_1[_i];\n      styles = this.findStylesOnPointIntersection([point, intercestionPoint], ruleMeasureId);\n      if (styles) break;\n    }\n\n    return styles;\n  };\n\n  chartDataControllerBase.prototype.findStylesOnPointPathsIntersection = function (firstPointPath, secondPointPath, ruleMeasureId) {\n    var styles;\n\n    for (var _i = 0, firstPointPath_1 = firstPointPath; _i < firstPointPath_1.length; _i++) {\n      var point = firstPointPath_1[_i];\n      styles = this.findStylesOnPointPath(secondPointPath, point, ruleMeasureId);\n      if (styles) break;\n    }\n\n    return styles;\n  };\n\n  chartDataControllerBase.prototype.getStyleIndexesOnArgumentAxis = function (seriesAxisPoint, cfMeasureId, isExpressionRule, isDimensionRule, idDimensionCalculateBy) {\n    var _this = this;\n\n    var helper = _item_data_axis_helper_1.itemDataAxisHelper,\n        styles = [],\n        rootArgumentPoint = this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis).getRootPoint();\n    var targetSeriesPoint = seriesAxisPoint ? seriesAxisPoint : this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis).getRootPoint();\n    helper.eachPoint(rootArgumentPoint, function (point) {\n      var currentStyles;\n      if (isExpressionRule) currentStyles = _this.findStylesOnPointPath(targetSeriesPoint.getAxisPath(), point, cfMeasureId);else if (isDimensionRule) currentStyles = _this.findStylesForDimension(targetSeriesPoint, point, idDimensionCalculateBy, cfMeasureId);else currentStyles = _this.findStylesOnPointIntersection([point, targetSeriesPoint], cfMeasureId);\n\n      if (currentStyles && currentStyles.length > 0) {\n        styles = styles.concat(currentStyles);\n        return false;\n      }\n    });\n    return styles;\n  };\n\n  chartDataControllerBase.prototype._getCrossSlice = function (argumentAxisPoint, seriesAxisPoint) {\n    var slice = this.multiData.getSlice(seriesAxisPoint);\n    return argumentAxisPoint ? slice.getSlice(argumentAxisPoint) : slice;\n  };\n\n  chartDataControllerBase.prototype._getArgumentAxis = function () {\n    return this.multiData ? this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis) : undefined;\n  };\n\n  chartDataControllerBase.prototype._getSeriesAxis = function () {\n    return this.multiData ? this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartSeriesAxis) : undefined;\n  };\n\n  chartDataControllerBase.prototype._getArgumentAxisDimensions = function () {\n    var argumentAxis = this._getArgumentAxis(),\n        dimensions = argumentAxis ? argumentAxis.getDimensions() : [];\n\n    return dimensions ? dimensions : [];\n  };\n\n  chartDataControllerBase.prototype._getSingleArgumentDimension = function () {\n    var argumentDimensions = this._getArgumentAxisDimensions();\n\n    if (argumentDimensions.length > 0) {\n      return argumentDimensions[argumentDimensions.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n\n  return chartDataControllerBase;\n}(_data_controller_base_1.dataControllerBase);\n\nexports.chartDataControllerBase = chartDataControllerBase;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/data-controllers/_chart-data-controller-base.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","chartDataControllerBase","color_1","require","_item_data_axis_helper_1","item_data_axis_names_1","_localization_ids_1","_localizer_1","_utils_1","_data_controller_base_1","_super","options","_getLegendSeriesName","seriesName","_getLegendSeriesDisplayName","getArgument","argumentAxisPoint","isQualitativeArgument","getTitle","isDiscreteArgument","getParent","getDisplayText","localizer","getString","localizationId","ChartTotalValue","getValue","getArgumentAxisPoints","argumentId","viewModel","id","Argument","SummaryArgumentMember","argumentAxis","_getArgumentAxis","getPointsByDimension","getSeriesAxisPoints","seriesId","seriesAxis","_getSeriesAxis","SummarySeriesMember","getSingleArgumentDimensionFormat","argumentDimension","_getSingleArgumentDimension","getFormat","undefined","getColor","seriesAxisPoint","measuesIds","colorMeasureId","that","color","IsDefaultColorizationDisabled","styleSettingsProvider","getDefaultBackColor","_getColorFromData","cfColor","getConditionalFormattingPointColor","_getElementCustomColor","getConditionalFormattingColorCore","seriesMeasureId","seriesElement","cfModel","styleSettingsInfo","_getStyleSettingsInfo","styleIndexes","length","getBackColor","getConditionalFormattingSeriesColor","Type","_getArgumentAxisDimensions","drillDownState","itemDataAxisNames","chartArgumentAxis","isSingleArgument","hasSeriesPoints","dxColor","default","newColor","elementCustomColor","customElementColorEventArgs","targetElement","measureIds","toHex","colorIsInvalid","colorArgumentAxisPoint","getParentByDimensionId","ArgumentColorDimension","colorSeriesAxisPoint","SeriesColorDimension","type","isDefined","colorValue","_getCrossSlice","getColorMeasureValue","toColor","e","chartElement","rules","seriesInfo","RuleModels","filter","rule","ApplyToSeriesId","ApplyToChartElement","_getStyleSettingsInfoCore","ColumnAxisName","defaultAxis","_getStyleIndexes","points","isExpressionRule","CalcByDataId","isDimensionRule","multiData","getDimensions","chartSeriesAxis","concat","dimension","seriesPointPath","getAxisPath","argumentPointPath","findStylesOnPointPathsIntersection","FormatConditionMeasureId","findStylesOnPointPath","findStylesForDimension","findStylesOnPointIntersection","getStyleIndexesOnArgumentAxis","seriesPoint","argumentPoint","idDimensionCalculateBy","formatRuleMeasureId","isSeriesDimension","slicePoint","ruleMeasureId","_getMeasureValueByAxisPoints","point","pointPath","intercestionPoint","styles","_i","pointPath_1","firstPointPath","secondPointPath","firstPointPath_1","cfMeasureId","_this","helper","itemDataAxisHelper","rootArgumentPoint","getAxis","getRootPoint","targetSeriesPoint","eachPoint","currentStyles","slice","getSlice","dimensions","argumentDimensions","dataControllerBase"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_chart-data-controller-base.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chartDataControllerBase = void 0;\nvar color_1 = require(\"devextreme/color\");\nvar _item_data_axis_helper_1 = require(\"../item-data/internal/_item-data-axis-helper\");\nvar item_data_axis_names_1 = require(\"../item-data/item-data-axis-names\");\nvar _localization_ids_1 = require(\"../_localization-ids\");\nvar _localizer_1 = require(\"../_localizer\");\nvar _utils_1 = require(\"../_utils\");\nvar _data_controller_base_1 = require(\"./_data-controller-base\");\nvar chartDataControllerBase = (function (_super) {\n    __extends(chartDataControllerBase, _super);\n    function chartDataControllerBase(options) {\n        return _super.call(this, options) || this;\n    }\n    chartDataControllerBase._getLegendSeriesName = function (seriesName) {\n    };\n    chartDataControllerBase._getLegendSeriesDisplayName = function (seriesName) {\n    };\n    chartDataControllerBase.prototype.getArgument = function (argumentAxisPoint) {\n        if (this.isQualitativeArgument()) {\n            return this.getTitle(argumentAxisPoint, '\\n');\n        }\n        else if (this.isDiscreteArgument()) {\n            if (argumentAxisPoint.getParent() != null) {\n                return argumentAxisPoint.getDisplayText() || '';\n            }\n            else {\n                return _localizer_1.localizer.getString(_localization_ids_1.localizationId.ChartTotalValue);\n            }\n        }\n        else {\n            return argumentAxisPoint.getValue();\n        }\n    };\n    chartDataControllerBase.prototype.getArgumentAxisPoints = function (argumentId) {\n        if (this.viewModel) {\n            var id = argumentId ? argumentId : this.viewModel.Argument.SummaryArgumentMember, argumentAxis = this._getArgumentAxis();\n            return argumentAxis ? argumentAxis.getPointsByDimension(id) : [];\n        }\n        else {\n            return [];\n        }\n    };\n    chartDataControllerBase.prototype.getSeriesAxisPoints = function (seriesId) {\n        var seriesAxis = this._getSeriesAxis(), id = seriesId ? seriesId : this.viewModel.SummarySeriesMember;\n        return seriesAxis ? seriesAxis.getPointsByDimension(id) : [];\n    };\n    chartDataControllerBase.prototype.getSingleArgumentDimensionFormat = function () {\n        var argumentDimension = this._getSingleArgumentDimension();\n        return argumentDimension ? argumentDimension.getFormat() : undefined;\n    };\n    chartDataControllerBase.prototype.getColor = function (argumentAxisPoint, seriesAxisPoint, measuesIds, colorMeasureId) {\n        var that = this, color;\n        if (that.viewModel.IsDefaultColorizationDisabled)\n            color = that.styleSettingsProvider.getDefaultBackColor();\n        else\n            color = that._getColorFromData(argumentAxisPoint, seriesAxisPoint, colorMeasureId);\n        var cfColor = that.getConditionalFormattingPointColor(argumentAxisPoint, seriesAxisPoint, measuesIds[0]);\n        if (cfColor)\n            color = cfColor;\n        return that._getElementCustomColor(argumentAxisPoint, seriesAxisPoint, measuesIds, color);\n    };\n    chartDataControllerBase.prototype.getConditionalFormattingColorCore = function (argumentAxisPoint, seriesAxisPoint, seriesMeasureId, seriesElement) {\n        var color = null;\n        if (this.cfModel) {\n            var styleSettingsInfo = this._getStyleSettingsInfo(argumentAxisPoint, seriesAxisPoint, seriesMeasureId, seriesElement);\n            if (styleSettingsInfo && styleSettingsInfo.styleIndexes.length > 0)\n                color = this.styleSettingsProvider.getBackColor(styleSettingsInfo);\n        }\n        return color;\n    };\n    chartDataControllerBase.prototype.getConditionalFormattingSeriesColor = function (seriesAxisPoint, seriesMeasureId) {\n        return this.getConditionalFormattingColorCore(null, seriesAxisPoint, seriesMeasureId, 'LineOrArea');\n    };\n    chartDataControllerBase.prototype.getConditionalFormattingPointColor = function (argumentAxisPoint, seriesAxisPoint, seriesMeasureId) {\n        return this.getConditionalFormattingColorCore(argumentAxisPoint, seriesAxisPoint, seriesMeasureId, 'Point');\n    };\n    chartDataControllerBase.prototype.isDiscreteArgument = function () {\n        return this.viewModel && (this.viewModel.Argument.Type === 'String');\n    };\n    chartDataControllerBase.prototype.isQualitativeArgument = function () {\n        return this._getArgumentAxisDimensions().length > 1 && !this.drillDownState[item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis];\n    };\n    chartDataControllerBase.prototype.isSingleArgument = function () {\n        return this._getArgumentAxisDimensions().length == 1 || this.drillDownState[item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis] != null;\n    };\n    chartDataControllerBase.prototype.hasSeriesPoints = function () {\n        return this.viewModel && !!this.viewModel.SummarySeriesMember;\n    };\n    chartDataControllerBase.prototype._getElementCustomColor = function (argumentAxisPoint, seriesAxisPoint, measuesIds, color) {\n        var that = this, dxColor = new color_1.default(color), newColor;\n        if (that.elementCustomColor && color) {\n            var customElementColorEventArgs = {\n                targetElement: [argumentAxisPoint, seriesAxisPoint],\n                measureIds: measuesIds,\n                color: dxColor.toHex()\n            };\n            that.elementCustomColor(customElementColorEventArgs);\n            newColor = new color_1.default(customElementColorEventArgs.color);\n            if (!newColor.colorIsInvalid && customElementColorEventArgs.color !== dxColor.toHex()) {\n                return customElementColorEventArgs.color;\n            }\n        }\n        return color;\n    };\n    chartDataControllerBase.prototype._getColorFromData = function (argumentAxisPoint, seriesAxisPoint, colorMeasureId) {\n        var that = this, colorArgumentAxisPoint = argumentAxisPoint ? argumentAxisPoint.getParentByDimensionId(that.viewModel.ArgumentColorDimension) : undefined, colorSeriesAxisPoint = seriesAxisPoint.getParentByDimensionId(that.viewModel.SeriesColorDimension);\n        if (_utils_1.type.isDefined(colorMeasureId)) {\n            try {\n                var colorValue = that._getCrossSlice(colorArgumentAxisPoint, colorSeriesAxisPoint).getColorMeasureValue(colorMeasureId);\n                return colorValue !== null ? _utils_1.toColor(colorValue) : undefined;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n        return undefined;\n    };\n    chartDataControllerBase.prototype._getStyleSettingsInfo = function (argumentAxisPoint, seriesAxisPoint, seriesMeasureId, chartElement) {\n        if (this.cfModel) {\n            var rules = [], seriesInfo = {\n                argumentAxisPoint: argumentAxisPoint,\n                seriesAxisPoint: seriesAxisPoint,\n                chartElement: chartElement\n            };\n            rules = this.cfModel.RuleModels.filter(function (rule) { return rule.ApplyToSeriesId === seriesMeasureId && rule.ApplyToChartElement === chartElement; });\n            return this._getStyleSettingsInfoCore(seriesInfo, rules, this.viewModel.ColumnAxisName, item_data_axis_names_1.itemDataAxisNames.defaultAxis);\n        }\n    };\n    chartDataControllerBase.prototype._getStyleIndexes = function (rule, seriesInfo, points) {\n        var isExpressionRule = rule.CalcByDataId ? false : true;\n        var isDimensionRule = this.multiData.getDimensions(item_data_axis_names_1.itemDataAxisNames.chartSeriesAxis).concat(this.multiData.getDimensions(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis)).filter(function (dimension) { return dimension.id === rule.CalcByDataId; }).length > 0;\n        if (seriesInfo.chartElement === 'Point') {\n            if (isExpressionRule) {\n                var seriesPointPath = seriesInfo.seriesAxisPoint.getAxisPath();\n                var argumentPointPath = seriesInfo.argumentAxisPoint.getAxisPath();\n                if (seriesPointPath.length > 0 && argumentPointPath.length > 0)\n                    return this.findStylesOnPointPathsIntersection(seriesPointPath, argumentPointPath, rule.FormatConditionMeasureId);\n                else if (seriesPointPath.length > 0)\n                    return this.findStylesOnPointPath(seriesPointPath, null, rule.FormatConditionMeasureId);\n                else\n                    return this.findStylesOnPointPath(argumentPointPath, null, rule.FormatConditionMeasureId);\n            }\n            else if (isDimensionRule)\n                return this.findStylesForDimension(seriesInfo.seriesAxisPoint, seriesInfo.argumentAxisPoint, rule.CalcByDataId, rule.FormatConditionMeasureId);\n            return this.findStylesOnPointIntersection([seriesInfo.seriesAxisPoint, seriesInfo.argumentAxisPoint], rule.FormatConditionMeasureId);\n        }\n        else if (seriesInfo.chartElement === 'LineOrArea')\n            return this.getStyleIndexesOnArgumentAxis(seriesInfo.seriesAxisPoint, rule.FormatConditionMeasureId, isExpressionRule, isDimensionRule, rule.CalcByDataId);\n        return null;\n    };\n    chartDataControllerBase.prototype.findStylesForDimension = function (seriesPoint, argumentPoint, idDimensionCalculateBy, formatRuleMeasureId) {\n        var isSeriesDimension = this.multiData.getDimensions(item_data_axis_names_1.itemDataAxisNames.chartSeriesAxis).filter(function (dimension) { return dimension.id === idDimensionCalculateBy; }).length > 0, slicePoint = (isSeriesDimension ? seriesPoint : argumentPoint).getParentByDimensionId(idDimensionCalculateBy);\n        return this.findStylesOnPointIntersection([slicePoint], formatRuleMeasureId);\n    };\n    chartDataControllerBase.prototype.findStylesOnPointIntersection = function (points, ruleMeasureId) {\n        return this._getMeasureValueByAxisPoints(points.filter(function (point) { return point; }), ruleMeasureId);\n    };\n    chartDataControllerBase.prototype.findStylesOnPointPath = function (pointPath, intercestionPoint, ruleMeasureId) {\n        var styles;\n        for (var _i = 0, pointPath_1 = pointPath; _i < pointPath_1.length; _i++) {\n            var point = pointPath_1[_i];\n            styles = this.findStylesOnPointIntersection([point, intercestionPoint], ruleMeasureId);\n            if (styles)\n                break;\n        }\n        return styles;\n    };\n    chartDataControllerBase.prototype.findStylesOnPointPathsIntersection = function (firstPointPath, secondPointPath, ruleMeasureId) {\n        var styles;\n        for (var _i = 0, firstPointPath_1 = firstPointPath; _i < firstPointPath_1.length; _i++) {\n            var point = firstPointPath_1[_i];\n            styles = this.findStylesOnPointPath(secondPointPath, point, ruleMeasureId);\n            if (styles)\n                break;\n        }\n        return styles;\n    };\n    chartDataControllerBase.prototype.getStyleIndexesOnArgumentAxis = function (seriesAxisPoint, cfMeasureId, isExpressionRule, isDimensionRule, idDimensionCalculateBy) {\n        var _this = this;\n        var helper = _item_data_axis_helper_1.itemDataAxisHelper, styles = [], rootArgumentPoint = this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis).getRootPoint();\n        var targetSeriesPoint = seriesAxisPoint ? seriesAxisPoint : this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis).getRootPoint();\n        helper.eachPoint(rootArgumentPoint, function (point) {\n            var currentStyles;\n            if (isExpressionRule)\n                currentStyles = _this.findStylesOnPointPath(targetSeriesPoint.getAxisPath(), point, cfMeasureId);\n            else if (isDimensionRule)\n                currentStyles = _this.findStylesForDimension(targetSeriesPoint, point, idDimensionCalculateBy, cfMeasureId);\n            else\n                currentStyles = _this.findStylesOnPointIntersection([point, targetSeriesPoint], cfMeasureId);\n            if (currentStyles && currentStyles.length > 0) {\n                styles = styles.concat(currentStyles);\n                return false;\n            }\n        });\n        return styles;\n    };\n    chartDataControllerBase.prototype._getCrossSlice = function (argumentAxisPoint, seriesAxisPoint) {\n        var slice = this.multiData.getSlice(seriesAxisPoint);\n        return argumentAxisPoint ? slice.getSlice(argumentAxisPoint) : slice;\n    };\n    chartDataControllerBase.prototype._getArgumentAxis = function () {\n        return this.multiData ? this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartArgumentAxis) : undefined;\n    };\n    chartDataControllerBase.prototype._getSeriesAxis = function () {\n        return this.multiData ? this.multiData.getAxis(item_data_axis_names_1.itemDataAxisNames.chartSeriesAxis) : undefined;\n    };\n    chartDataControllerBase.prototype._getArgumentAxisDimensions = function () {\n        var argumentAxis = this._getArgumentAxis(), dimensions = argumentAxis ? argumentAxis.getDimensions() : [];\n        return dimensions ? dimensions : [];\n    };\n    chartDataControllerBase.prototype._getSingleArgumentDimension = function () {\n        var argumentDimensions = this._getArgumentAxisDimensions();\n        if (argumentDimensions.length > 0) {\n            return argumentDimensions[argumentDimensions.length - 1];\n        }\n        else {\n            return undefined;\n        }\n    };\n    return chartDataControllerBase;\n}(_data_controller_base_1.dataControllerBase));\nexports.chartDataControllerBase = chartDataControllerBase;\n"]},"metadata":{},"sourceType":"script"}