{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_data-storage.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dataStorage = void 0;\n\nvar _data_slice_1 = require(\"./_data-slice\");\n\nvar dataStorage = function () {\n  function dataStorage(dto) {\n    this._sliceRep = this._createSliceRep(dto);\n  }\n\n  dataStorage.prototype._createSliceRep = function (dto) {\n    var decodeMaps = dto.EncodeMaps,\n        encodeMaps = {},\n        encodeCounters = {},\n        sliceListDTO = dto.Slices,\n        decode = function (keyId, key) {\n      return key === -1 ? null : decodeMaps[keyId][key];\n    },\n        encode = function (keyId, value) {\n      var map = encodeMaps[keyId];\n\n      if (!map) {\n        map = {};\n        var decodeMap = decodeMaps[keyId];\n\n        if (!decodeMap) {\n          decodeMap = [];\n          decodeMaps[keyId] = decodeMap;\n        }\n\n        encodeCounters[keyId] = decodeMap.length;\n        decodeMap.forEach(function (value, index) {\n          map[value] = index;\n        });\n        encodeMaps[keyId] = map;\n      }\n\n      var code = map[value];\n\n      if (code === undefined) {\n        var counter = encodeCounters[keyId];\n        map[value] = counter;\n        encodeCounters[keyId] = ++counter;\n        decodeMaps[keyId].push(value);\n      }\n\n      return map[value];\n    };\n\n    return new _data_slice_1.sliceRepository(sliceListDTO, decode, encode);\n  };\n\n  dataStorage.prototype._initialize = function () {};\n\n  dataStorage.prototype.getSlices = function () {\n    return this._sliceRep.getAll();\n  };\n\n  dataStorage.prototype.getSlice = function (sliceKey) {\n    return this._sliceRep.get(sliceKey);\n  };\n\n  dataStorage.prototype.getSliceKey = function (keyIds) {\n    return this._sliceRep.getKey(keyIds);\n  };\n\n  dataStorage.prototype.getSliceByIds = function (keyIds) {\n    return this._sliceRep._getByKeyIds(keyIds);\n  };\n\n  dataStorage.prototype.getOrCreateSlice = function (keyIds) {\n    return this._sliceRep.getOrCreate(keyIds);\n  };\n\n  dataStorage.prototype.findDataRowKey = function (sliceKey, dataRowKey) {\n    return this._sliceRep.findDataRowKey(sliceKey, dataRowKey);\n  };\n\n  dataStorage.prototype.getCrossValue = function (dataRowKeys, valueId) {\n    return this._sliceRep.getCrossValue(dataRowKeys, valueId);\n  };\n\n  dataStorage.prototype.getKeyValue = function (dataRow, keyId) {\n    return this._sliceRep.getKeyValue(dataRow, keyId);\n  };\n\n  dataStorage.prototype.getValue = function (dataRow, valueId) {\n    return this._sliceRep.getValue(dataRow, valueId);\n  };\n\n  dataStorage.prototype.isEmpty = function () {\n    return this._sliceRep.isEmpty();\n  };\n\n  dataStorage.prototype.insert = function (ds, sortOrderSlices) {\n    var that = this,\n        slices = ds.getSlices(),\n        iterators = {};\n    slices.forEach(function (slice) {\n      var keyIds = slice.getKeyIds();\n      var ownSlice = that.getOrCreateSlice(keyIds);\n      iterators[ownSlice.getKey()] = ownSlice.append(slice);\n    });\n    return iterators;\n  };\n\n  dataStorage.prototype.insertSlice = function (ds, keyIds) {\n    var newSlice = ds.getSliceByIds(keyIds);\n    var existedSlice = this.getOrCreateSlice(keyIds);\n    existedSlice.append(newSlice);\n  };\n\n  return dataStorage;\n}();\n\nexports.dataStorage = dataStorage;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/data-storage/_data-storage.js"],"names":["Object","defineProperty","exports","value","dataStorage","_data_slice_1","require","dto","_sliceRep","_createSliceRep","prototype","decodeMaps","EncodeMaps","encodeMaps","encodeCounters","sliceListDTO","Slices","decode","keyId","key","encode","map","decodeMap","length","forEach","index","code","undefined","counter","push","sliceRepository","_initialize","getSlices","getAll","getSlice","sliceKey","get","getSliceKey","keyIds","getKey","getSliceByIds","_getByKeyIds","getOrCreateSlice","getOrCreate","findDataRowKey","dataRowKey","getCrossValue","dataRowKeys","valueId","getKeyValue","dataRow","getValue","isEmpty","insert","ds","sortOrderSlices","that","slices","iterators","slice","getKeyIds","ownSlice","append","insertSlice","newSlice","existedSlice"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_data-storage.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dataStorage = void 0;\nvar _data_slice_1 = require(\"./_data-slice\");\nvar dataStorage = (function () {\n    function dataStorage(dto) {\n        this._sliceRep = this._createSliceRep(dto);\n    }\n    dataStorage.prototype._createSliceRep = function (dto) {\n        var decodeMaps = dto.EncodeMaps, encodeMaps = {}, encodeCounters = {}, sliceListDTO = dto.Slices, decode = function (keyId, key) {\n            return key === -1 ? null : decodeMaps[keyId][key];\n        }, encode = function (keyId, value) {\n            var map = encodeMaps[keyId];\n            if (!map) {\n                map = {};\n                var decodeMap = decodeMaps[keyId];\n                if (!decodeMap) {\n                    decodeMap = [];\n                    decodeMaps[keyId] = decodeMap;\n                }\n                encodeCounters[keyId] = decodeMap.length;\n                decodeMap.forEach(function (value, index) {\n                    map[value] = index;\n                });\n                encodeMaps[keyId] = map;\n            }\n            var code = map[value];\n            if (code === undefined) {\n                var counter = encodeCounters[keyId];\n                map[value] = counter;\n                encodeCounters[keyId] = ++counter;\n                decodeMaps[keyId].push(value);\n            }\n            return map[value];\n        };\n        return new _data_slice_1.sliceRepository(sliceListDTO, decode, encode);\n    };\n    dataStorage.prototype._initialize = function () {\n    };\n    dataStorage.prototype.getSlices = function () {\n        return this._sliceRep.getAll();\n    };\n    dataStorage.prototype.getSlice = function (sliceKey) {\n        return this._sliceRep.get(sliceKey);\n    };\n    dataStorage.prototype.getSliceKey = function (keyIds) {\n        return this._sliceRep.getKey(keyIds);\n    };\n    dataStorage.prototype.getSliceByIds = function (keyIds) {\n        return this._sliceRep._getByKeyIds(keyIds);\n    };\n    dataStorage.prototype.getOrCreateSlice = function (keyIds) {\n        return this._sliceRep.getOrCreate(keyIds);\n    };\n    dataStorage.prototype.findDataRowKey = function (sliceKey, dataRowKey) {\n        return this._sliceRep.findDataRowKey(sliceKey, dataRowKey);\n    };\n    dataStorage.prototype.getCrossValue = function (dataRowKeys, valueId) {\n        return this._sliceRep.getCrossValue(dataRowKeys, valueId);\n    };\n    dataStorage.prototype.getKeyValue = function (dataRow, keyId) {\n        return this._sliceRep.getKeyValue(dataRow, keyId);\n    };\n    dataStorage.prototype.getValue = function (dataRow, valueId) {\n        return this._sliceRep.getValue(dataRow, valueId);\n    };\n    dataStorage.prototype.isEmpty = function () {\n        return this._sliceRep.isEmpty();\n    };\n    dataStorage.prototype.insert = function (ds, sortOrderSlices) {\n        var that = this, slices = ds.getSlices(), iterators = {};\n        slices.forEach(function (slice) {\n            var keyIds = slice.getKeyIds();\n            var ownSlice = that.getOrCreateSlice(keyIds);\n            iterators[ownSlice.getKey()] = ownSlice.append(slice);\n        });\n        return iterators;\n    };\n    dataStorage.prototype.insertSlice = function (ds, keyIds) {\n        var newSlice = ds.getSliceByIds(keyIds);\n        var existedSlice = this.getOrCreateSlice(keyIds);\n        existedSlice.append(newSlice);\n    };\n    return dataStorage;\n}());\nexports.dataStorage = dataStorage;\n"]},"metadata":{},"sourceType":"script"}