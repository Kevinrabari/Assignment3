{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.notification_manager.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Guid from \"../../core/guid\";\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport FileManagerProgressPanel from \"./ui.file_manager.notification.progress_panel\";\nvar FILE_MANAGER_PROGRESS_BOX_CLASS = \"dx-filemanager-progress-box\";\nvar FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-error\");\nvar FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-image\");\nvar FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-wrapper\");\nvar FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-common\");\nvar MANAGER_ID_NAME = \"__operationInfoManager\";\nvar ACTION_PROGRESS_STATUS = {\n  default: \"default\",\n  progress: \"progress\",\n  error: \"error\",\n  success: \"success\"\n};\n\nclass NotificationManagerBase {\n  constructor(_ref) {\n    var {\n      onActionProgressStatusChanged: onActionProgressStatusChanged,\n      isActual: isActual\n    } = _ref;\n    this._id = new Guid().toString();\n    this._isActual = isActual || false;\n    this._actionProgressStatus = ACTION_PROGRESS_STATUS.default;\n    this._raiseActionProgress = onActionProgressStatusChanged;\n  }\n\n  getId() {\n    return this._id;\n  }\n\n  isActual() {\n    return this._isActual;\n  }\n\n  createErrorDetailsProgressBox($container, item, errorText) {\n    var detailsItem = this._createDetailsItem($container, item);\n\n    this.renderError(detailsItem.$wrapper, errorText);\n  }\n\n  renderError($container, errorText) {\n    $(\"<div>\").text(errorText).addClass(FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS).appendTo($container);\n  }\n\n  isActionProgressStatusDefault() {\n    return this._actionProgressStatus === ACTION_PROGRESS_STATUS.default;\n  }\n\n  _createDetailsItem($container, item) {\n    var $detailsItem = $(\"<div>\").appendTo($container);\n    return this._createProgressBox($detailsItem, {\n      commonText: item.commonText,\n      imageUrl: item.imageUrl\n    });\n  }\n\n  _createProgressBox($container, options) {\n    $container.addClass(FILE_MANAGER_PROGRESS_BOX_CLASS);\n\n    if (options.imageUrl) {\n      getImageContainer(options.imageUrl).addClass(FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS).appendTo($container);\n    }\n\n    var $wrapper = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS).appendTo($container);\n    var $commonText = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS).text(options.commonText).appendTo($wrapper);\n    return {\n      $commonText: $commonText,\n      $element: $container,\n      $wrapper: $wrapper\n    };\n  }\n\n}\n\nclass NotificationManagerStub extends NotificationManagerBase {\n  addOperation() {\n    return {\n      [MANAGER_ID_NAME]: this._id\n    };\n  }\n\n  addOperationDetails() {}\n\n  updateOperationItemProgress() {}\n\n  completeOperationItem() {}\n\n  completeOperation() {}\n\n  completeSingleOperationWithError() {}\n\n  addOperationDetailsError() {}\n\n  handleDimensionChanged() {\n    return false;\n  }\n\n  ensureProgressPanelCreated() {}\n\n  tryHideActionProgress() {\n    this._updateActionProgress(\"\", ACTION_PROGRESS_STATUS.default);\n  }\n\n  updateActionProgressStatus() {\n    this._updateActionProgress(\"\", ACTION_PROGRESS_STATUS.default);\n  }\n\n  _updateActionProgress(message, status) {\n    if (status !== ACTION_PROGRESS_STATUS.default && status !== ACTION_PROGRESS_STATUS.progress) {\n      return;\n    }\n\n    this._actionProgressStatus = status;\n\n    this._raiseActionProgress(message, status);\n  }\n\n  hasNoOperations() {\n    return true;\n  }\n\n  get _operationInProgressCount() {\n    return 0;\n  }\n\n  set _operationInProgressCount(value) {}\n\n  get _failedOperationCount() {\n    return 0;\n  }\n\n  set _failedOperationCount(value) {}\n\n}\n\nclass NotificationManager extends NotificationManagerBase {\n  constructor(options) {\n    super(options);\n    this._failedOperationCount = 0;\n    this._operationInProgressCount = 0;\n  }\n\n  addOperation(processingMessage, allowCancel, allowProgressAutoUpdate) {\n    this._operationInProgressCount++;\n\n    var operationInfo = this._progressPanel.addOperation(processingMessage, allowCancel, allowProgressAutoUpdate);\n\n    operationInfo[MANAGER_ID_NAME] = this._id;\n\n    this._updateActionProgress(processingMessage, ACTION_PROGRESS_STATUS.progress);\n\n    return operationInfo;\n  }\n\n  addOperationDetails(operationInfo, details, showCloseButton) {\n    this._progressPanel.addOperationDetails(operationInfo, details, showCloseButton);\n  }\n\n  updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress) {\n    this._progressPanel.updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress);\n  }\n\n  completeOperationItem(operationInfo, itemIndex, commonProgress) {\n    this._progressPanel.completeOperationItem(operationInfo, itemIndex, commonProgress);\n  }\n\n  completeOperation(operationInfo, commonText, isError, statusText) {\n    this._operationInProgressCount--;\n\n    if (isError) {\n      this._failedOperationCount++;\n    }\n\n    this._progressPanel.completeOperation(operationInfo, commonText, isError, statusText);\n  }\n\n  completeSingleOperationWithError(operationInfo, errorInfo) {\n    this._progressPanel.completeSingleOperationWithError(operationInfo, errorInfo.detailErrorText);\n\n    this._notifyError(errorInfo);\n  }\n\n  addOperationDetailsError(operationInfo, errorInfo) {\n    this._progressPanel.addOperationDetailsError(operationInfo, errorInfo.itemIndex, errorInfo.detailErrorText);\n\n    this._notifyError(errorInfo);\n  }\n\n  handleDimensionChanged() {\n    if (this._progressPanel) {\n      this._progressPanel.$element().detach();\n    }\n\n    return true;\n  }\n\n  ensureProgressPanelCreated(container, options) {\n    if (!this._progressPanel) {\n      var $progressPanelElement = $(\"<div>\").appendTo(container);\n\n      var ProgressPanelClass = this._getProgressPanelComponent();\n\n      this._progressPanel = new ProgressPanelClass($progressPanelElement, extend({}, options, {\n        onOperationClosed: _ref2 => {\n          var {\n            info: info\n          } = _ref2;\n          return this._onProgressPanelOperationClosed(info);\n        }\n      }));\n    } else {\n      this._progressPanel.$element().appendTo(container);\n    }\n  }\n\n  _getProgressPanelComponent() {\n    return FileManagerProgressPanel;\n  }\n\n  _onProgressPanelOperationClosed(operationInfo) {\n    if (operationInfo.hasError) {\n      this._failedOperationCount--;\n      this.tryHideActionProgress();\n    }\n  }\n\n  tryHideActionProgress() {\n    if (this.hasNoOperations()) {\n      this._updateActionProgress(\"\", ACTION_PROGRESS_STATUS.default);\n    }\n  }\n\n  updateActionProgressStatus(operationInfo) {\n    if (operationInfo) {\n      var status = 0 === this._failedOperationCount ? ACTION_PROGRESS_STATUS.success : ACTION_PROGRESS_STATUS.error;\n\n      this._updateActionProgress(\"\", status);\n    }\n  }\n\n  _notifyError(errorInfo) {\n    var status = this.hasNoOperations() ? ACTION_PROGRESS_STATUS.default : ACTION_PROGRESS_STATUS.error;\n\n    this._updateActionProgress(errorInfo.commonErrorText, status);\n  }\n\n  _updateActionProgress(message, status) {\n    this._actionProgressStatus = status;\n\n    this._raiseActionProgress(message, status);\n  }\n\n  hasNoOperations() {\n    return 0 === this._operationInProgressCount && 0 === this._failedOperationCount;\n  }\n\n  get _operationInProgressCount() {\n    return this._operationInProgressCountInternal;\n  }\n\n  set _operationInProgressCount(value) {\n    this._operationInProgressCountInternal = value;\n  }\n\n  get _failedOperationCount() {\n    return this._failedOperationCountInternal;\n  }\n\n  set _failedOperationCount(value) {\n    this._failedOperationCountInternal = value;\n  }\n\n}\n\nexport { NotificationManager, NotificationManagerStub, MANAGER_ID_NAME };","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.notification_manager.js"],"names":["Guid","$","extend","getImageContainer","FileManagerProgressPanel","FILE_MANAGER_PROGRESS_BOX_CLASS","FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS","concat","FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS","FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS","FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS","MANAGER_ID_NAME","ACTION_PROGRESS_STATUS","default","progress","error","success","NotificationManagerBase","constructor","_ref","onActionProgressStatusChanged","isActual","_id","toString","_isActual","_actionProgressStatus","_raiseActionProgress","getId","createErrorDetailsProgressBox","$container","item","errorText","detailsItem","_createDetailsItem","renderError","$wrapper","text","addClass","appendTo","isActionProgressStatusDefault","$detailsItem","_createProgressBox","commonText","imageUrl","options","$commonText","$element","NotificationManagerStub","addOperation","addOperationDetails","updateOperationItemProgress","completeOperationItem","completeOperation","completeSingleOperationWithError","addOperationDetailsError","handleDimensionChanged","ensureProgressPanelCreated","tryHideActionProgress","_updateActionProgress","updateActionProgressStatus","message","status","hasNoOperations","_operationInProgressCount","value","_failedOperationCount","NotificationManager","processingMessage","allowCancel","allowProgressAutoUpdate","operationInfo","_progressPanel","details","showCloseButton","itemIndex","itemProgress","commonProgress","isError","statusText","errorInfo","detailErrorText","_notifyError","detach","container","$progressPanelElement","ProgressPanelClass","_getProgressPanelComponent","onOperationClosed","_ref2","info","_onProgressPanelOperationClosed","hasError","commonErrorText","_operationInProgressCountInternal","_failedOperationCountInternal"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.notification_manager.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Guid from \"../../core/guid\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport FileManagerProgressPanel from \"./ui.file_manager.notification.progress_panel\";\r\nvar FILE_MANAGER_PROGRESS_BOX_CLASS = \"dx-filemanager-progress-box\";\r\nvar FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-error\");\r\nvar FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-image\");\r\nvar FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-wrapper\");\r\nvar FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-common\");\r\nvar MANAGER_ID_NAME = \"__operationInfoManager\";\r\nvar ACTION_PROGRESS_STATUS = {\r\n    default: \"default\",\r\n    progress: \"progress\",\r\n    error: \"error\",\r\n    success: \"success\"\r\n};\r\nclass NotificationManagerBase {\r\n    constructor(_ref) {\r\n        var {\r\n            onActionProgressStatusChanged: onActionProgressStatusChanged,\r\n            isActual: isActual\r\n        } = _ref;\r\n        this._id = (new Guid).toString();\r\n        this._isActual = isActual || false;\r\n        this._actionProgressStatus = ACTION_PROGRESS_STATUS.default;\r\n        this._raiseActionProgress = onActionProgressStatusChanged\r\n    }\r\n    getId() {\r\n        return this._id\r\n    }\r\n    isActual() {\r\n        return this._isActual\r\n    }\r\n    createErrorDetailsProgressBox($container, item, errorText) {\r\n        var detailsItem = this._createDetailsItem($container, item);\r\n        this.renderError(detailsItem.$wrapper, errorText)\r\n    }\r\n    renderError($container, errorText) {\r\n        $(\"<div>\").text(errorText).addClass(FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS).appendTo($container)\r\n    }\r\n    isActionProgressStatusDefault() {\r\n        return this._actionProgressStatus === ACTION_PROGRESS_STATUS.default\r\n    }\r\n    _createDetailsItem($container, item) {\r\n        var $detailsItem = $(\"<div>\").appendTo($container);\r\n        return this._createProgressBox($detailsItem, {\r\n            commonText: item.commonText,\r\n            imageUrl: item.imageUrl\r\n        })\r\n    }\r\n    _createProgressBox($container, options) {\r\n        $container.addClass(FILE_MANAGER_PROGRESS_BOX_CLASS);\r\n        if (options.imageUrl) {\r\n            getImageContainer(options.imageUrl).addClass(FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS).appendTo($container)\r\n        }\r\n        var $wrapper = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS).appendTo($container);\r\n        var $commonText = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS).text(options.commonText).appendTo($wrapper);\r\n        return {\r\n            $commonText: $commonText,\r\n            $element: $container,\r\n            $wrapper: $wrapper\r\n        }\r\n    }\r\n}\r\nclass NotificationManagerStub extends NotificationManagerBase {\r\n    addOperation() {\r\n        return {\r\n            [MANAGER_ID_NAME]: this._id\r\n        }\r\n    }\r\n    addOperationDetails() {}\r\n    updateOperationItemProgress() {}\r\n    completeOperationItem() {}\r\n    completeOperation() {}\r\n    completeSingleOperationWithError() {}\r\n    addOperationDetailsError() {}\r\n    handleDimensionChanged() {\r\n        return false\r\n    }\r\n    ensureProgressPanelCreated() {}\r\n    tryHideActionProgress() {\r\n        this._updateActionProgress(\"\", ACTION_PROGRESS_STATUS.default)\r\n    }\r\n    updateActionProgressStatus() {\r\n        this._updateActionProgress(\"\", ACTION_PROGRESS_STATUS.default)\r\n    }\r\n    _updateActionProgress(message, status) {\r\n        if (status !== ACTION_PROGRESS_STATUS.default && status !== ACTION_PROGRESS_STATUS.progress) {\r\n            return\r\n        }\r\n        this._actionProgressStatus = status;\r\n        this._raiseActionProgress(message, status)\r\n    }\r\n    hasNoOperations() {\r\n        return true\r\n    }\r\n    get _operationInProgressCount() {\r\n        return 0\r\n    }\r\n    set _operationInProgressCount(value) {}\r\n    get _failedOperationCount() {\r\n        return 0\r\n    }\r\n    set _failedOperationCount(value) {}\r\n}\r\nclass NotificationManager extends NotificationManagerBase {\r\n    constructor(options) {\r\n        super(options);\r\n        this._failedOperationCount = 0;\r\n        this._operationInProgressCount = 0\r\n    }\r\n    addOperation(processingMessage, allowCancel, allowProgressAutoUpdate) {\r\n        this._operationInProgressCount++;\r\n        var operationInfo = this._progressPanel.addOperation(processingMessage, allowCancel, allowProgressAutoUpdate);\r\n        operationInfo[MANAGER_ID_NAME] = this._id;\r\n        this._updateActionProgress(processingMessage, ACTION_PROGRESS_STATUS.progress);\r\n        return operationInfo\r\n    }\r\n    addOperationDetails(operationInfo, details, showCloseButton) {\r\n        this._progressPanel.addOperationDetails(operationInfo, details, showCloseButton)\r\n    }\r\n    updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress) {\r\n        this._progressPanel.updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress)\r\n    }\r\n    completeOperationItem(operationInfo, itemIndex, commonProgress) {\r\n        this._progressPanel.completeOperationItem(operationInfo, itemIndex, commonProgress)\r\n    }\r\n    completeOperation(operationInfo, commonText, isError, statusText) {\r\n        this._operationInProgressCount--;\r\n        if (isError) {\r\n            this._failedOperationCount++\r\n        }\r\n        this._progressPanel.completeOperation(operationInfo, commonText, isError, statusText)\r\n    }\r\n    completeSingleOperationWithError(operationInfo, errorInfo) {\r\n        this._progressPanel.completeSingleOperationWithError(operationInfo, errorInfo.detailErrorText);\r\n        this._notifyError(errorInfo)\r\n    }\r\n    addOperationDetailsError(operationInfo, errorInfo) {\r\n        this._progressPanel.addOperationDetailsError(operationInfo, errorInfo.itemIndex, errorInfo.detailErrorText);\r\n        this._notifyError(errorInfo)\r\n    }\r\n    handleDimensionChanged() {\r\n        if (this._progressPanel) {\r\n            this._progressPanel.$element().detach()\r\n        }\r\n        return true\r\n    }\r\n    ensureProgressPanelCreated(container, options) {\r\n        if (!this._progressPanel) {\r\n            var $progressPanelElement = $(\"<div>\").appendTo(container);\r\n            var ProgressPanelClass = this._getProgressPanelComponent();\r\n            this._progressPanel = new ProgressPanelClass($progressPanelElement, extend({}, options, {\r\n                onOperationClosed: _ref2 => {\r\n                    var {\r\n                        info: info\r\n                    } = _ref2;\r\n                    return this._onProgressPanelOperationClosed(info)\r\n                }\r\n            }))\r\n        } else {\r\n            this._progressPanel.$element().appendTo(container)\r\n        }\r\n    }\r\n    _getProgressPanelComponent() {\r\n        return FileManagerProgressPanel\r\n    }\r\n    _onProgressPanelOperationClosed(operationInfo) {\r\n        if (operationInfo.hasError) {\r\n            this._failedOperationCount--;\r\n            this.tryHideActionProgress()\r\n        }\r\n    }\r\n    tryHideActionProgress() {\r\n        if (this.hasNoOperations()) {\r\n            this._updateActionProgress(\"\", ACTION_PROGRESS_STATUS.default)\r\n        }\r\n    }\r\n    updateActionProgressStatus(operationInfo) {\r\n        if (operationInfo) {\r\n            var status = 0 === this._failedOperationCount ? ACTION_PROGRESS_STATUS.success : ACTION_PROGRESS_STATUS.error;\r\n            this._updateActionProgress(\"\", status)\r\n        }\r\n    }\r\n    _notifyError(errorInfo) {\r\n        var status = this.hasNoOperations() ? ACTION_PROGRESS_STATUS.default : ACTION_PROGRESS_STATUS.error;\r\n        this._updateActionProgress(errorInfo.commonErrorText, status)\r\n    }\r\n    _updateActionProgress(message, status) {\r\n        this._actionProgressStatus = status;\r\n        this._raiseActionProgress(message, status)\r\n    }\r\n    hasNoOperations() {\r\n        return 0 === this._operationInProgressCount && 0 === this._failedOperationCount\r\n    }\r\n    get _operationInProgressCount() {\r\n        return this._operationInProgressCountInternal\r\n    }\r\n    set _operationInProgressCount(value) {\r\n        this._operationInProgressCountInternal = value\r\n    }\r\n    get _failedOperationCount() {\r\n        return this._failedOperationCountInternal\r\n    }\r\n    set _failedOperationCount(value) {\r\n        this._failedOperationCountInternal = value\r\n    }\r\n}\r\nexport {\r\n    NotificationManager,\r\n    NotificationManagerStub,\r\n    MANAGER_ID_NAME\r\n};\r\n"]},"metadata":{},"sourceType":"module"}