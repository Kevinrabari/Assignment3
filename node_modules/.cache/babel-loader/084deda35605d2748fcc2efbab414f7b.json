{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_treemap-item.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.treemapItem = void 0;\n\nvar tree_map_1 = require(\"devextreme/viz/tree_map\");\n\nvar _jquery_helpers_1 = require(\"../../data/_jquery-helpers\");\n\nvar _utils_1 = require(\"../../data/_utils\");\n\nvar _base_item_1 = require(\"./_base-item\");\n\nvar _interactivity_controller_1 = require(\"./_interactivity-controller\");\n\nvar treemapItem = function (_super) {\n  __extends(treemapItem, _super);\n\n  function treemapItem(container, options) {\n    var _this = _super.call(this, container, options) || this;\n\n    _this.itemElementCustomColor = _jquery_helpers_1.createJQueryCallbacks();\n    return _this;\n  }\n\n  Object.defineProperty(treemapItem.prototype, \"dataController\", {\n    get: function () {\n      return this._dataController;\n    },\n    set: function (dataController) {\n      this._dataController = dataController;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  treemapItem.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.treemapViewer && this.treemapViewer.dispose();\n  };\n\n  treemapItem.prototype._initializeData = function (newOptions) {\n    var _this = this;\n\n    _super.prototype._initializeData.call(this, newOptions);\n\n    if (this._dataController) {\n      this._dataController.elementCustomColor = function (eventArgs) {\n        return _this._elementCustomColor(eventArgs);\n      };\n    }\n  };\n\n  treemapItem.prototype._clearSelectionUnsafe = function () {\n    this.treemapViewer.clearSelection();\n  };\n\n  treemapItem.prototype.selectTupleUnsafe = function (tuple, state) {\n    var that = this;\n    tuple.forEach(function (tupleValue) {\n      that._selectNodes(tupleValue.value, state);\n    });\n  };\n\n  treemapItem.prototype._setSelectionUnsafe = function (values) {\n    _super.prototype._setSelectionUnsafe.call(this, values);\n\n    this.clearSelection();\n\n    this._applySelection();\n  };\n\n  treemapItem.prototype.renderContentUnsafe = function (element, changeExisting, afterRenderCallback) {\n    var options = this._getTreeMapViewerOptions();\n\n    this._raiseItemWidgetOptionsPrepared(options);\n\n    if (changeExisting && this.treemapViewer) {\n      this.treemapViewer.option(options);\n    } else {\n      this.treemapViewer = new tree_map_1.default(element, options);\n    }\n\n    var selectedValues = this.options.SelectedValues;\n    if (selectedValues) this.setSelection(selectedValues);\n    return false;\n  };\n\n  treemapItem.prototype.updateContentStateUnsafe = function () {\n    if (this._getCustomHoverEnabled()) {\n      this.treemapViewer.option('hoverEnabled', true);\n    }\n  };\n\n  treemapItem.prototype._selectNodes = function (valueSet, state) {\n    var that = this;\n    that.treemapViewer.getRootNode().getAllNodes().forEach(function (node) {\n      if (_utils_1.checkValuesAreEqual(valueSet, node.data.uniqueValue)) node.select(state);\n    });\n  };\n\n  treemapItem.prototype._clickAction = function (tuple) {\n    var newTuples = [],\n        tupleValue = tuple[0],\n        values = this._dataController.getChildrenNodesUniqueValues(tupleValue.value),\n        isMultipleMode = this._canSetMultipleMasterFilter() || this.customSelectionMode === _interactivity_controller_1.dashboardSelectionMode.multiple,\n        currentSelection = isMultipleMode && this.allowMultiselection ? this.getSelectedTuples().slice() : [],\n        existingTuples = [];\n\n    if (!isMultipleMode && values.length > 1) return;\n\n    for (var i = 0; i < values.length; i++) {\n      var newTuple = [{\n        axisName: tupleValue.axisName,\n        value: values[i]\n      }];\n      if (_utils_1.checkArrayContainsTuple(currentSelection, newTuple) === undefined) newTuples.push(newTuple);else existingTuples.push(newTuple);\n    }\n\n    this.interactivityController.clickAction(newTuples.length > 0 ? newTuples : existingTuples);\n  };\n\n  treemapItem.prototype._elementCustomColor = function (eventArgs) {\n    this.itemElementCustomColor.fire(this.getName(), eventArgs);\n  };\n\n  treemapItem.prototype._getTreeMapViewerOptions = function () {\n    var that = this,\n        viewModel = that.options.ViewModel,\n        isSingleMasterFilterMode = this._canSetMasterFilter() && !this._canSetMultipleMasterFilter(),\n        setLabel = function (node) {\n      var label = that._dataController.getLabel(node, that._isEncodeHtml());\n\n      if (label) node.label(label);else node.label(' ');\n    },\n        options = {\n      dataSource: that._dataController.getDataSource(),\n      layoutAlgorithm: that._getLayoutAlgorithm(),\n      layoutDirection: that._getLayoutDirection(),\n      selectionMode: 'multiple',\n      tile: {\n        label: {\n          textOverflow: 'ellipsis'\n        }\n      },\n      hoverEnabled: that.isInteractivityActionEnabled(),\n      tooltip: {\n        enabled: true,\n        container: _utils_1.tooltipContainerSelector,\n        customizeTooltip: function (arg) {\n          return {\n            text: that._dataController.getTooltip(arg.node, that._isEncodeHtml())\n          };\n        }\n      },\n      onClick: function (e) {\n        that._raiseItemClick(e.node.data);\n      },\n      onNodesRendering: function () {\n        this.getRootNode().getAllNodes().forEach(setLabel);\n      },\n      group: {\n        hoverEnabled: !isSingleMasterFilterMode,\n        label: {\n          textOverflow: 'ellipsis'\n        }\n      }\n    };\n\n    return options;\n  };\n\n  treemapItem.prototype._getLayoutAlgorithm = function () {\n    var viewModel = this.options.ViewModel;\n\n    switch (viewModel.LayoutAlgorithm) {\n      case 'SliceAndDice':\n        return this.width() >= this.height() ? 'sliceanddice' : 'rotatedsliceanddice';\n\n      case 'Squarified':\n        return 'squarified';\n\n      case 'Striped':\n        return 'strip';\n    }\n  };\n\n  treemapItem.prototype._getLayoutDirection = function () {\n    var viewModel = this.options.ViewModel;\n\n    switch (viewModel.LayoutDirection) {\n      case 'BottomLeftToTopRight':\n        return 'leftBottomRightTop';\n\n      case 'BottomRightToTopLeft':\n        return 'rightBottomLeftTop';\n\n      case 'TopLeftToBottomRight':\n        return 'leftTopRightBottom';\n\n      case 'TopRightToBottomLeft':\n        return 'rightTopLeftBottom';\n    }\n  };\n\n  treemapItem.prototype._getDataPoint = function (element) {\n    var that = this;\n    return {\n      getValues: function () {\n        return that._getElementInteractionValue(element);\n      },\n      getMeasureIds: function () {\n        return that._getDataPointMeasureIds();\n      },\n      getDeltaIds: function () {\n        return [];\n      }\n    };\n  };\n\n  treemapItem.prototype._getElementInteractionValue = function (element) {\n    if (!this.options.ViewModel.ProvideValuesAsArguments) return element.uniqueValue;\n  };\n\n  treemapItem.prototype._getDataPointMeasureIds = function () {\n    var viewModel = this.options.ViewModel,\n        contentDescription = viewModel.ContentDescription,\n        elementIndex = 0,\n        measureIds = [];\n    if (contentDescription != null && contentDescription.ElementSelectionEnabled) elementIndex = contentDescription.SelectedElementIndex;\n\n    if (!viewModel.ProvideValuesAsArguments && viewModel.ValueDataMembers.length > 0) {\n      measureIds.push(viewModel.ValueDataMembers[elementIndex]);\n    } else {\n      viewModel.ValueDataMembers.forEach(function (value) {\n        measureIds.push(value);\n      });\n    }\n\n    return measureIds;\n  };\n\n  treemapItem.prototype._updateContentSizeUnsafe = function () {\n    _super.prototype._updateContentSizeUnsafe.call(this);\n\n    if (!!this.treemapViewer) {\n      this.treemapViewer.option('layoutAlgorithm', this._getLayoutAlgorithm());\n      this.treemapViewer.render();\n    }\n  };\n\n  treemapItem.prototype._getWidget = function () {\n    return this.treemapViewer;\n  };\n\n  treemapItem.prototype._isMultiDataSupported = function () {\n    return true;\n  };\n\n  treemapItem.prototype._applySelectionUnsafe = function () {\n    var that = this;\n    that.getSelectedTuples().forEach(function (tuple) {\n      return that.selectTuple(tuple, true);\n    });\n  };\n\n  return treemapItem;\n}(_base_item_1.baseItem);\n\nexports.treemapItem = treemapItem;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/viewer-items/_treemap-item.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","treemapItem","tree_map_1","require","_jquery_helpers_1","_utils_1","_base_item_1","_interactivity_controller_1","_super","container","options","_this","itemElementCustomColor","createJQueryCallbacks","get","_dataController","set","dataController","enumerable","configurable","dispose","treemapViewer","_initializeData","newOptions","elementCustomColor","eventArgs","_elementCustomColor","_clearSelectionUnsafe","clearSelection","selectTupleUnsafe","tuple","state","that","forEach","tupleValue","_selectNodes","_setSelectionUnsafe","values","_applySelection","renderContentUnsafe","element","changeExisting","afterRenderCallback","_getTreeMapViewerOptions","_raiseItemWidgetOptionsPrepared","option","default","selectedValues","SelectedValues","setSelection","updateContentStateUnsafe","_getCustomHoverEnabled","valueSet","getRootNode","getAllNodes","node","checkValuesAreEqual","data","uniqueValue","select","_clickAction","newTuples","getChildrenNodesUniqueValues","isMultipleMode","_canSetMultipleMasterFilter","customSelectionMode","dashboardSelectionMode","multiple","currentSelection","allowMultiselection","getSelectedTuples","slice","existingTuples","length","i","newTuple","axisName","checkArrayContainsTuple","undefined","push","interactivityController","clickAction","fire","getName","viewModel","ViewModel","isSingleMasterFilterMode","_canSetMasterFilter","setLabel","label","getLabel","_isEncodeHtml","dataSource","getDataSource","layoutAlgorithm","_getLayoutAlgorithm","layoutDirection","_getLayoutDirection","selectionMode","tile","textOverflow","hoverEnabled","isInteractivityActionEnabled","tooltip","enabled","tooltipContainerSelector","customizeTooltip","arg","text","getTooltip","onClick","e","_raiseItemClick","onNodesRendering","group","LayoutAlgorithm","width","height","LayoutDirection","_getDataPoint","getValues","_getElementInteractionValue","getMeasureIds","_getDataPointMeasureIds","getDeltaIds","ProvideValuesAsArguments","contentDescription","ContentDescription","elementIndex","measureIds","ElementSelectionEnabled","SelectedElementIndex","ValueDataMembers","_updateContentSizeUnsafe","render","_getWidget","_isMultiDataSupported","_applySelectionUnsafe","selectTuple","baseItem"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_treemap-item.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treemapItem = void 0;\nvar tree_map_1 = require(\"devextreme/viz/tree_map\");\nvar _jquery_helpers_1 = require(\"../../data/_jquery-helpers\");\nvar _utils_1 = require(\"../../data/_utils\");\nvar _base_item_1 = require(\"./_base-item\");\nvar _interactivity_controller_1 = require(\"./_interactivity-controller\");\nvar treemapItem = (function (_super) {\n    __extends(treemapItem, _super);\n    function treemapItem(container, options) {\n        var _this = _super.call(this, container, options) || this;\n        _this.itemElementCustomColor = _jquery_helpers_1.createJQueryCallbacks();\n        return _this;\n    }\n    Object.defineProperty(treemapItem.prototype, \"dataController\", {\n        get: function () { return this._dataController; },\n        set: function (dataController) { this._dataController = dataController; },\n        enumerable: false,\n        configurable: true\n    });\n    treemapItem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.treemapViewer && this.treemapViewer.dispose();\n    };\n    treemapItem.prototype._initializeData = function (newOptions) {\n        var _this = this;\n        _super.prototype._initializeData.call(this, newOptions);\n        if (this._dataController) {\n            this._dataController.elementCustomColor = function (eventArgs) { return _this._elementCustomColor(eventArgs); };\n        }\n    };\n    treemapItem.prototype._clearSelectionUnsafe = function () {\n        this.treemapViewer.clearSelection();\n    };\n    treemapItem.prototype.selectTupleUnsafe = function (tuple, state) {\n        var that = this;\n        tuple.forEach(function (tupleValue) {\n            that._selectNodes(tupleValue.value, state);\n        });\n    };\n    treemapItem.prototype._setSelectionUnsafe = function (values) {\n        _super.prototype._setSelectionUnsafe.call(this, values);\n        this.clearSelection();\n        this._applySelection();\n    };\n    treemapItem.prototype.renderContentUnsafe = function (element, changeExisting, afterRenderCallback) {\n        var options = this._getTreeMapViewerOptions();\n        this._raiseItemWidgetOptionsPrepared(options);\n        if (changeExisting && this.treemapViewer) {\n            this.treemapViewer.option(options);\n        }\n        else {\n            this.treemapViewer = new tree_map_1.default(element, options);\n        }\n        var selectedValues = this.options.SelectedValues;\n        if (selectedValues)\n            this.setSelection(selectedValues);\n        return false;\n    };\n    treemapItem.prototype.updateContentStateUnsafe = function () {\n        if (this._getCustomHoverEnabled()) {\n            this.treemapViewer.option('hoverEnabled', true);\n        }\n    };\n    treemapItem.prototype._selectNodes = function (valueSet, state) {\n        var that = this;\n        that.treemapViewer.getRootNode().getAllNodes().forEach(function (node) {\n            if (_utils_1.checkValuesAreEqual(valueSet, node.data.uniqueValue))\n                node.select(state);\n        });\n    };\n    treemapItem.prototype._clickAction = function (tuple) {\n        var newTuples = [], tupleValue = tuple[0], values = this._dataController.getChildrenNodesUniqueValues(tupleValue.value), isMultipleMode = this._canSetMultipleMasterFilter() || this.customSelectionMode === _interactivity_controller_1.dashboardSelectionMode.multiple, currentSelection = isMultipleMode && this.allowMultiselection ? this.getSelectedTuples().slice() : [], existingTuples = [];\n        if (!isMultipleMode && values.length > 1)\n            return;\n        for (var i = 0; i < values.length; i++) {\n            var newTuple = [{ axisName: tupleValue.axisName, value: values[i] }];\n            if (_utils_1.checkArrayContainsTuple(currentSelection, newTuple) === undefined)\n                newTuples.push(newTuple);\n            else\n                existingTuples.push(newTuple);\n        }\n        this.interactivityController.clickAction(newTuples.length > 0 ? newTuples : existingTuples);\n    };\n    treemapItem.prototype._elementCustomColor = function (eventArgs) {\n        this.itemElementCustomColor.fire(this.getName(), eventArgs);\n    };\n    treemapItem.prototype._getTreeMapViewerOptions = function () {\n        var that = this, viewModel = that.options.ViewModel, isSingleMasterFilterMode = this._canSetMasterFilter() && !this._canSetMultipleMasterFilter(), setLabel = function (node) {\n            var label = that._dataController.getLabel(node, that._isEncodeHtml());\n            if (label)\n                node.label(label);\n            else\n                node.label(' ');\n        }, options = {\n            dataSource: that._dataController.getDataSource(),\n            layoutAlgorithm: that._getLayoutAlgorithm(),\n            layoutDirection: that._getLayoutDirection(),\n            selectionMode: 'multiple',\n            tile: {\n                label: {\n                    textOverflow: 'ellipsis'\n                }\n            },\n            hoverEnabled: that.isInteractivityActionEnabled(),\n            tooltip: {\n                enabled: true,\n                container: _utils_1.tooltipContainerSelector,\n                customizeTooltip: function (arg) {\n                    return {\n                        text: that._dataController.getTooltip(arg.node, that._isEncodeHtml())\n                    };\n                }\n            },\n            onClick: function (e) {\n                that._raiseItemClick(e.node.data);\n            },\n            onNodesRendering: function () {\n                this.getRootNode().getAllNodes().forEach(setLabel);\n            },\n            group: {\n                hoverEnabled: !isSingleMasterFilterMode,\n                label: {\n                    textOverflow: 'ellipsis'\n                }\n            }\n        };\n        return options;\n    };\n    treemapItem.prototype._getLayoutAlgorithm = function () {\n        var viewModel = this.options.ViewModel;\n        switch (viewModel.LayoutAlgorithm) {\n            case 'SliceAndDice':\n                return this.width() >= this.height() ? 'sliceanddice' : 'rotatedsliceanddice';\n            case 'Squarified':\n                return 'squarified';\n            case 'Striped':\n                return 'strip';\n        }\n    };\n    treemapItem.prototype._getLayoutDirection = function () {\n        var viewModel = this.options.ViewModel;\n        switch (viewModel.LayoutDirection) {\n            case 'BottomLeftToTopRight':\n                return 'leftBottomRightTop';\n            case 'BottomRightToTopLeft':\n                return 'rightBottomLeftTop';\n            case 'TopLeftToBottomRight':\n                return 'leftTopRightBottom';\n            case 'TopRightToBottomLeft':\n                return 'rightTopLeftBottom';\n        }\n    };\n    treemapItem.prototype._getDataPoint = function (element) {\n        var that = this;\n        return {\n            getValues: function () {\n                return that._getElementInteractionValue(element);\n            },\n            getMeasureIds: function () {\n                return that._getDataPointMeasureIds();\n            },\n            getDeltaIds: function () {\n                return [];\n            }\n        };\n    };\n    treemapItem.prototype._getElementInteractionValue = function (element) {\n        if (!this.options.ViewModel.ProvideValuesAsArguments)\n            return element.uniqueValue;\n    };\n    treemapItem.prototype._getDataPointMeasureIds = function () {\n        var viewModel = this.options.ViewModel, contentDescription = viewModel.ContentDescription, elementIndex = 0, measureIds = [];\n        if (contentDescription != null && contentDescription.ElementSelectionEnabled)\n            elementIndex = contentDescription.SelectedElementIndex;\n        if (!viewModel.ProvideValuesAsArguments && viewModel.ValueDataMembers.length > 0) {\n            measureIds.push(viewModel.ValueDataMembers[elementIndex]);\n        }\n        else {\n            viewModel.ValueDataMembers.forEach(function (value) {\n                measureIds.push(value);\n            });\n        }\n        return measureIds;\n    };\n    treemapItem.prototype._updateContentSizeUnsafe = function () {\n        _super.prototype._updateContentSizeUnsafe.call(this);\n        if (!!this.treemapViewer) {\n            this.treemapViewer.option('layoutAlgorithm', this._getLayoutAlgorithm());\n            this.treemapViewer.render();\n        }\n    };\n    treemapItem.prototype._getWidget = function () {\n        return this.treemapViewer;\n    };\n    treemapItem.prototype._isMultiDataSupported = function () {\n        return true;\n    };\n    treemapItem.prototype._applySelectionUnsafe = function () {\n        var that = this;\n        that.getSelectedTuples().forEach(function (tuple) { return that.selectTuple(tuple, true); });\n    };\n    return treemapItem;\n}(_base_item_1.baseItem));\nexports.treemapItem = treemapItem;\n"]},"metadata":{},"sourceType":"script"}