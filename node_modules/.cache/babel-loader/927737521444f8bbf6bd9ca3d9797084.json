{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/html_editor/utils/toolbar_helper.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport localizationMessage from \"../../../localization/message\";\nimport { getTableOperationHandler, hasEmbedContent, unfixTableWidth, getColumnElements, getAutoSizedElements, setLineElementsFormat, getLineElements, getRowElements } from \"./table_helper\";\nimport { isDefined, isBoolean } from \"../../../core/utils/type\";\nimport { each } from \"../../../core/utils/iterator\";\nimport Form from \"../../form\";\nimport ButtonGroup from \"../../button_group\";\nimport ColorBox from \"../../color_box\";\nimport ScrollView from \"../../scroll_view\";\nimport { getOuterHeight, getWidth, getOuterWidth } from \"../../../core/utils/size\";\nimport { ImageUploader } from \"./image_uploader_helper\";\nimport { getWindow } from \"../../../core/utils/window\";\nimport { getQuill } from \"../quill_importer\";\nvar MIN_HEIGHT = 400;\nvar BORDER_STYLES = [\"none\", \"hidden\", \"dotted\", \"dashed\", \"solid\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\"];\nvar USER_ACTION = \"user\";\nvar SILENT_ACTION = \"silent\";\nvar DIALOG_COLOR_CAPTION = \"dxHtmlEditor-dialogColorCaption\";\nvar DIALOG_BACKGROUND_CAPTION = \"dxHtmlEditor-dialogBackgroundCaption\";\nvar DIALOG_LINK_CAPTION = \"dxHtmlEditor-dialogLinkCaption\";\nvar DIALOG_TABLE_CAPTION = \"dxHtmlEditor-dialogInsertTableCaption\";\nvar DIALOG_LINK_FIELD_URL = \"dxHtmlEditor-dialogLinkUrlField\";\nvar DIALOG_LINK_FIELD_TEXT = \"dxHtmlEditor-dialogLinkTextField\";\nvar DIALOG_LINK_FIELD_TARGET = \"dxHtmlEditor-dialogLinkTargetField\";\nvar DIALOG_LINK_FIELD_TARGET_CLASS = \"dx-formdialog-field-target\";\nvar DIALOG_TABLE_FIELD_COLUMNS = \"dxHtmlEditor-dialogInsertTableRowsField\";\nvar DIALOG_TABLE_FIELD_ROWS = \"dxHtmlEditor-dialogInsertTableColumnsField\";\nvar ICON_MAP = {\n  insertHeaderRow: \"header\",\n  clear: \"clearformat\"\n};\n\nfunction getFormatHandlers(module) {\n  return {\n    clear: _ref => {\n      var {\n        event: event\n      } = _ref;\n      var range = module.quill.getSelection();\n\n      if (range) {\n        var _getToolbarModule;\n\n        module.saveValueChangeEvent(event);\n        module.quill.removeFormat(range);\n        null === (_getToolbarModule = getToolbarModule(module)) || void 0 === _getToolbarModule ? void 0 : _getToolbarModule.updateFormatWidgets();\n      }\n    },\n    link: prepareLinkHandler(module),\n    image: prepareImageHandler(module, module.editorInstance.option(\"imageUpload\")),\n    color: prepareColorClickHandler(module, \"color\"),\n    background: prepareColorClickHandler(module, \"background\"),\n    orderedList: prepareShortcutHandler(module, \"list\", \"ordered\"),\n    bulletList: prepareShortcutHandler(module, \"list\", \"bullet\"),\n    alignLeft: prepareShortcutHandler(module, \"align\", \"left\"),\n    alignCenter: prepareShortcutHandler(module, \"align\", \"center\"),\n    alignRight: prepareShortcutHandler(module, \"align\", \"right\"),\n    alignJustify: prepareShortcutHandler(module, \"align\", \"justify\"),\n    codeBlock: getDefaultClickHandler(module, \"code-block\"),\n    undo: _ref2 => {\n      var {\n        event: event\n      } = _ref2;\n      module.saveValueChangeEvent(event);\n      module.quill.history.undo();\n    },\n    redo: _ref3 => {\n      var {\n        event: event\n      } = _ref3;\n      module.saveValueChangeEvent(event);\n      module.quill.history.redo();\n    },\n    increaseIndent: _ref4 => {\n      var {\n        event: event\n      } = _ref4;\n      applyFormat(module, [\"indent\", \"+1\", USER_ACTION], event);\n    },\n    decreaseIndent: _ref5 => {\n      var {\n        event: event\n      } = _ref5;\n      applyFormat(module, [\"indent\", \"-1\", USER_ACTION], event);\n    },\n    superscript: prepareShortcutHandler(module, \"script\", \"super\"),\n    subscript: prepareShortcutHandler(module, \"script\", \"sub\"),\n    insertTable: prepareInsertTableHandler(module),\n    insertHeaderRow: getTableOperationHandler(module.quill, \"insertHeaderRow\"),\n    insertRowAbove: getTableOperationHandler(module.quill, \"insertRowAbove\"),\n    insertRowBelow: getTableOperationHandler(module.quill, \"insertRowBelow\"),\n    insertColumnLeft: getTableOperationHandler(module.quill, \"insertColumnLeft\"),\n    insertColumnRight: getTableOperationHandler(module.quill, \"insertColumnRight\"),\n    deleteColumn: getTableOperationHandler(module.quill, \"deleteColumn\"),\n    deleteRow: getTableOperationHandler(module.quill, \"deleteRow\"),\n    deleteTable: getTableOperationHandler(module.quill, \"deleteTable\"),\n    cellProperties: prepareShowFormProperties(module, \"cell\"),\n    tableProperties: prepareShowFormProperties(module, \"table\")\n  };\n}\n\nfunction resetFormDialogOptions(editorInstance, _ref6) {\n  var {\n    contentTemplate: contentTemplate,\n    title: title,\n    minHeight: minHeight,\n    minWidth: minWidth,\n    maxWidth: maxWidth\n  } = _ref6;\n  editorInstance.formDialogOption({\n    contentTemplate: contentTemplate,\n    title: title,\n    minHeight: null !== minHeight && void 0 !== minHeight ? minHeight : 0,\n    minWidth: null !== minWidth && void 0 !== minWidth ? minWidth : 0,\n    maxWidth: null !== maxWidth && void 0 !== maxWidth ? maxWidth : \"none\"\n  });\n}\n\nfunction prepareShowFormProperties(module, type) {\n  return $element => {\n    var _$element, _module$quill$getModu;\n\n    if (!(null !== (_$element = $element) && void 0 !== _$element && _$element.length)) {\n      $element = $(getTargetTableNode(module, type));\n    }\n\n    var [tableBlot, rowBlot] = null !== (_module$quill$getModu = module.quill.getModule(\"table\").getTable()) && void 0 !== _module$quill$getModu ? _module$quill$getModu : [];\n    var formats = module.quill.getFormat(module.editorInstance.getSelection(true));\n    var tablePropertiesFormConfig = getFormConfigConstructor(type)(module, {\n      $element: $element,\n      formats: formats,\n      tableBlot: tableBlot,\n      rowBlot: rowBlot\n    });\n\n    var {\n      contentTemplate: contentTemplate,\n      title: title,\n      minHeight: minHeight,\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    } = module.editorInstance._formDialog._popup.option();\n\n    var savedOptions = {\n      contentTemplate: contentTemplate,\n      title: title,\n      minHeight: minHeight,\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    };\n    var formInstance;\n    module.editorInstance.formDialogOption({\n      contentTemplate: container => {\n        var $content = $(\"<div>\").appendTo(container);\n        var $form = $(\"<div>\").appendTo($content);\n\n        module.editorInstance._createComponent($form, Form, tablePropertiesFormConfig.formOptions);\n\n        module.editorInstance._createComponent($content, ScrollView, {});\n\n        formInstance = $form.dxForm(\"instance\");\n        return $content;\n      },\n      title: localizationMessage.format(\"dxHtmlEditor-\".concat(type, \"Properties\")),\n      minHeight: MIN_HEIGHT,\n      minWidth: Math.min(800, .9 * getWidth(getWindow()) - 1),\n      maxWidth: .9 * getWidth(getWindow())\n    });\n    var promise = module.editorInstance.showFormDialog();\n    promise.done((formData, event) => {\n      module.saveValueChangeEvent(event);\n      tablePropertiesFormConfig.applyHandler(formInstance);\n      resetFormDialogOptions(module.editorInstance, savedOptions);\n    });\n    promise.fail(() => {\n      module.quill.focus();\n      resetFormDialogOptions(module.editorInstance, savedOptions);\n    });\n  };\n}\n\nfunction applyFormat(module, formatArgs, event) {\n  module.editorInstance._saveValueChangeEvent(event);\n\n  module.quill.format(...formatArgs);\n}\n\nfunction getTargetTableNode(module, partName) {\n  var currentSelectionParts = module.quill.getModule(\"table\").getTable();\n  return \"table\" === partName ? currentSelectionParts[0].domNode : currentSelectionParts[2].domNode;\n}\n\nfunction getLinkRange(module, range) {\n  var Quill = getQuill();\n  var LinkBlot = Quill.import(\"formats/link\");\n  var [link, offset] = module.quill.scroll.descendant(LinkBlot, range.index);\n  var result = !link ? null : {\n    index: range.index - offset,\n    length: link.length()\n  };\n  return result;\n}\n\nfunction prepareLinkHandler(module) {\n  return () => {\n    var _selection;\n\n    module.quill.focus();\n    var selection = module.quill.getSelection();\n    var selectionHasEmbedContent = hasEmbedContent(module, selection);\n    var formats = selection ? module.quill.getFormat() : {};\n    var isCursorAtLink = formats.link && 0 === (null === (_selection = selection) || void 0 === _selection ? void 0 : _selection.length);\n    var href = formats.link || \"\";\n\n    if (isCursorAtLink) {\n      var linkRange = getLinkRange(module, selection);\n\n      if (linkRange) {\n        selection = linkRange;\n      } else {\n        href = \"\";\n      }\n    }\n\n    var formData = {\n      href: href,\n      text: selection && !selectionHasEmbedContent ? module.quill.getText(selection) : \"\",\n      target: Object.prototype.hasOwnProperty.call(formats, \"target\") ? !!formats.target : true\n    };\n    module.editorInstance.formDialogOption(\"title\", localizationMessage.format(DIALOG_LINK_CAPTION));\n    var promise = module.editorInstance.showFormDialog({\n      formData: formData,\n      items: getLinkFormItems(module, selection)\n    });\n    promise.done((formData, event) => {\n      if (selection && !selectionHasEmbedContent) {\n        var text = formData.text || formData.href;\n        var {\n          index: index,\n          length: length\n        } = selection;\n        formData.text = void 0;\n        module.saveValueChangeEvent(event);\n        length && module.quill.deleteText(index, length, SILENT_ACTION);\n        module.quill.insertText(index, text, \"link\", formData, USER_ACTION);\n        module.quill.setSelection(index + text.length, 0, USER_ACTION);\n      } else {\n        formData.text = !selection && !formData.text ? formData.href : formData.text;\n        applyFormat(module, [\"link\", formData, USER_ACTION], event);\n      }\n    });\n    promise.fail(() => {\n      module.quill.focus();\n    });\n  };\n}\n\nfunction prepareImageHandler(module, imageUploadOption) {\n  var imageUploader = new ImageUploader(module, imageUploadOption);\n  return () => {\n    imageUploader.render();\n  };\n}\n\nfunction getLinkFormItems(module, selection) {\n  return [{\n    dataField: \"href\",\n    label: {\n      text: localizationMessage.format(DIALOG_LINK_FIELD_URL)\n    }\n  }, {\n    dataField: \"text\",\n    label: {\n      text: localizationMessage.format(DIALOG_LINK_FIELD_TEXT)\n    },\n    visible: !hasEmbedContent(module, selection)\n  }, {\n    dataField: \"target\",\n    editorType: \"dxCheckBox\",\n    editorOptions: {\n      text: localizationMessage.format(DIALOG_LINK_FIELD_TARGET)\n    },\n    cssClass: DIALOG_LINK_FIELD_TARGET_CLASS,\n    label: {\n      visible: false\n    }\n  }];\n}\n\nfunction prepareColorClickHandler(module, name) {\n  return () => {\n    var formData = module.quill.getFormat();\n    var caption = \"color\" === name ? DIALOG_COLOR_CAPTION : DIALOG_BACKGROUND_CAPTION;\n    module.editorInstance.formDialogOption(\"title\", localizationMessage.format(caption));\n    var promise = module.editorInstance.showFormDialog({\n      formData: formData,\n      items: [{\n        dataField: name,\n        editorType: \"dxColorView\",\n        editorOptions: {\n          focusStateEnabled: false\n        },\n        label: {\n          visible: false\n        }\n      }]\n    });\n    promise.done((formData, event) => {\n      applyFormat(module, [name, formData[name], USER_ACTION], event);\n    });\n    promise.fail(() => {\n      module.quill.focus();\n    });\n  };\n}\n\nfunction prepareShortcutHandler(module, name, shortcutValue) {\n  return _ref7 => {\n    var _getToolbarModule2;\n\n    var {\n      event: event\n    } = _ref7;\n    var formats = module.quill.getFormat();\n    var value = formats[name] === shortcutValue ? false : shortcutValue;\n    applyFormat(module, [name, value, USER_ACTION], event);\n    null === (_getToolbarModule2 = getToolbarModule(module)) || void 0 === _getToolbarModule2 ? void 0 : _getToolbarModule2.updateFormatWidgets(true);\n  };\n}\n\nfunction getToolbarModule(module) {\n  return module._updateFormatWidget ? module : module.quill.getModule(\"toolbar\");\n}\n\nfunction getDefaultClickHandler(module, name) {\n  return _ref8 => {\n    var _getToolbarModule3;\n\n    var {\n      event: event\n    } = _ref8;\n    var formats = module.quill.getFormat();\n    var value = formats[name];\n    var newValue = !(isBoolean(value) ? value : isDefined(value));\n    applyFormat(module, [name, newValue, USER_ACTION], event);\n    null === (_getToolbarModule3 = getToolbarModule(module)) || void 0 === _getToolbarModule3 ? void 0 : _getToolbarModule3._updateFormatWidget(name, newValue, formats);\n  };\n}\n\nfunction insertTableFormItems() {\n  return [{\n    dataField: \"columns\",\n    editorType: \"dxNumberBox\",\n    editorOptions: {\n      min: 1\n    },\n    label: {\n      text: localizationMessage.format(DIALOG_TABLE_FIELD_COLUMNS)\n    }\n  }, {\n    dataField: \"rows\",\n    editorType: \"dxNumberBox\",\n    editorOptions: {\n      min: 1\n    },\n    label: {\n      text: localizationMessage.format(DIALOG_TABLE_FIELD_ROWS)\n    }\n  }];\n}\n\nfunction prepareInsertTableHandler(module) {\n  return () => {\n    var formats = module.quill.getFormat();\n\n    var isTableFocused = module._tableFormats.some(format => Object.prototype.hasOwnProperty.call(formats, format));\n\n    if (isTableFocused) {\n      module.quill.focus();\n      return;\n    }\n\n    module.editorInstance.formDialogOption(\"title\", localizationMessage.format(DIALOG_TABLE_CAPTION));\n    var promise = module.editorInstance.showFormDialog({\n      formData: {\n        rows: 1,\n        columns: 1\n      },\n      items: insertTableFormItems()\n    });\n    promise.done((formData, event) => {\n      module.quill.focus();\n      var table = module.quill.getModule(\"table\");\n\n      if (table) {\n        module.saveValueChangeEvent(event);\n        var {\n          columns: columns,\n          rows: rows\n        } = formData;\n        table.insertTable(columns, rows);\n      }\n    }).always(() => {\n      module.quill.focus();\n    });\n  };\n}\n\nfunction getTablePropertiesFormConfig(module, _ref9) {\n  var {\n    $element: $element,\n    formats: formats,\n    tableBlot: tableBlot\n  } = _ref9;\n  var window = getWindow();\n  var alignmentEditorInstance;\n  var borderColorEditorInstance;\n  var backgroundColorEditorInstance;\n  var $table = $element;\n  var editorInstance = module.editorInstance;\n  var startTableWidth = isDefined(formats.tableWidth) ? parseInt(formats.tableWidth) : getOuterWidth($table);\n  var tableStyles = window.getComputedStyle($table.get(0));\n  var startTextAlign = \"start\" === tableStyles.textAlign ? \"left\" : tableStyles.textAlign;\n  var formOptions = {\n    colCount: 2,\n    formData: {\n      width: startTableWidth,\n      height: isDefined(formats.tableHeight) ? parseInt(formats.tableHeight) : getOuterHeight($table),\n      backgroundColor: formats.tableBackgroundColor || tableStyles.backgroundColor,\n      borderStyle: formats.tableBorderStyle || tableStyles.borderTopStyle,\n      borderColor: formats.tableBorderColor || tableStyles.borderTopColor,\n      borderWidth: parseInt(isDefined(formats.tableBorderWidth) ? formats.tableBorderWidth : tableStyles.borderTopWidth),\n      alignment: formats.tableAlign || startTextAlign\n    },\n    items: [{\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-border\"),\n      colCountByScreen: {\n        xs: 2\n      },\n      colCount: 2,\n      items: [{\n        dataField: \"borderStyle\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-style\")\n        },\n        editorType: \"dxSelectBox\",\n        editorOptions: {\n          items: BORDER_STYLES,\n          placeholder: \"Select style\"\n        }\n      }, {\n        dataField: \"borderWidth\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-borderWidth\")\n        },\n        editorOptions: {\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }, {\n        itemType: \"simple\",\n        dataField: \"borderColor\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\n        },\n        colSpan: 2,\n        template: e => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ColorBox, {\n            editAlphaChannel: true,\n            value: e.component.option(\"formData\").borderColor,\n            onInitialized: e => {\n              borderColorEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }]\n    }, {\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-dimensions\"),\n      colCountByScreen: {\n        xs: 2\n      },\n      colCount: 2,\n      items: [{\n        dataField: \"width\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-width\")\n        },\n        editorOptions: {\n          min: 0,\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }, {\n        dataField: \"height\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-height\")\n        },\n        editorOptions: {\n          min: 0,\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }]\n    }, {\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-tableBackground\"),\n      items: [{\n        itemType: \"simple\",\n        dataField: \"backgroundColor\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\n        },\n        template: e => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ColorBox, {\n            editAlphaChannel: true,\n            value: e.component.option(\"formData\").backgroundColor,\n            onInitialized: e => {\n              backgroundColorEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }]\n    }, {\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-alignment\"),\n      items: [{\n        itemType: \"simple\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-horizontal\")\n        },\n        template: () => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ButtonGroup, {\n            items: [{\n              value: \"left\",\n              icon: \"alignleft\"\n            }, {\n              value: \"center\",\n              icon: \"aligncenter\"\n            }, {\n              value: \"right\",\n              icon: \"alignright\"\n            }, {\n              value: \"justify\",\n              icon: \"alignjustify\"\n            }],\n            keyExpr: \"value\",\n            selectedItemKeys: [startTextAlign],\n            onInitialized: e => {\n              alignmentEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }]\n    }],\n    showColonAfterLabel: true,\n    labelLocation: \"top\",\n    minColWidth: 400\n  };\n  return {\n    formOptions: formOptions,\n    applyHandler: formInstance => {\n      var formData = formInstance.option(\"formData\");\n      var newWidth = formData.width === startTableWidth ? void 0 : formData.width;\n      var newHeight = formData.height;\n      applyTableDimensionChanges(module, {\n        $table: $table,\n        newHeight: newHeight,\n        newWidth: newWidth,\n        tableBlot: tableBlot\n      });\n      module.editorInstance.format(\"tableBorderStyle\", formData.borderStyle);\n      module.editorInstance.format(\"tableBorderWidth\", formData.borderWidth + \"px\");\n      module.editorInstance.format(\"tableBorderColor\", borderColorEditorInstance.option(\"value\"));\n      module.editorInstance.format(\"tableBackgroundColor\", backgroundColorEditorInstance.option(\"value\"));\n      module.editorInstance.format(\"tableTextAlign\", alignmentEditorInstance.option(\"selectedItemKeys\")[0]);\n    }\n  };\n}\n\nfunction getCellPropertiesFormConfig(module, _ref10) {\n  var {\n    $element: $element,\n    formats: formats,\n    tableBlot: tableBlot,\n    rowBlot: rowBlot\n  } = _ref10;\n  var window = getWindow();\n  var alignmentEditorInstance;\n  var verticalAlignmentEditorInstance;\n  var borderColorEditorInstance;\n  var backgroundColorEditorInstance;\n  var $cell = $element;\n  var startCellWidth = isDefined(formats.cellWidth) ? parseInt(formats.cellWidth) : getOuterWidth($cell);\n  var editorInstance = module.editorInstance;\n  var cellStyles = window.getComputedStyle($cell.get(0));\n  var startTextAlign = \"start\" === cellStyles.textAlign ? \"left\" : cellStyles.textAlign;\n  var formOptions = {\n    colCount: 2,\n    formData: {\n      width: startCellWidth,\n      height: isDefined(formats.cellHeight) ? parseInt(formats.cellHeight) : getOuterHeight($cell),\n      backgroundColor: formats.cellBackgroundColor || cellStyles.backgroundColor,\n      borderStyle: formats.cellBorderStyle || cellStyles.borderTopStyle,\n      borderColor: formats.cellBorderColor || cellStyles.borderTopColor,\n      borderWidth: parseInt(isDefined(formats.cellBorderWidth) ? formats.cellBorderWidth : cellStyles.borderTopWidth),\n      alignment: formats.cellTextAlign || startTextAlign,\n      verticalAlignment: formats.cellVerticalAlign || cellStyles.verticalAlign,\n      verticalPadding: parseInt(isDefined(formats.cellPaddingTop) ? formats.cellPaddingTop : cellStyles.paddingTop),\n      horizontalPadding: parseInt(isDefined(formats.cellPaddingLeft) ? formats.cellPaddingLeft : cellStyles.paddingLeft)\n    },\n    items: [{\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-border\"),\n      colCountByScreen: {\n        xs: 2\n      },\n      colCount: 2,\n      items: [{\n        dataField: \"borderStyle\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-style\")\n        },\n        editorType: \"dxSelectBox\",\n        editorOptions: {\n          items: BORDER_STYLES\n        }\n      }, {\n        dataField: \"borderWidth\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-borderWidth\")\n        },\n        editorOptions: {\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }, {\n        itemType: \"simple\",\n        dataField: \"borderColor\",\n        colSpan: 2,\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\n        },\n        template: e => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ColorBox, {\n            editAlphaChannel: true,\n            value: e.component.option(\"formData\").borderColor,\n            onInitialized: e => {\n              borderColorEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }]\n    }, {\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-dimensions\"),\n      colCount: 2,\n      colCountByScreen: {\n        xs: 2\n      },\n      items: [{\n        dataField: \"width\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-width\")\n        },\n        editorOptions: {\n          min: 0,\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }, {\n        dataField: \"height\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-height\")\n        },\n        editorOptions: {\n          min: 0,\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }, {\n        dataField: \"verticalPadding\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-paddingVertical\")\n        },\n        editorOptions: {\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }, {\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-paddingHorizontal\")\n        },\n        dataField: \"horizontalPadding\",\n        editorOptions: {\n          placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\n        }\n      }]\n    }, {\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-tableBackground\"),\n      items: [{\n        itemType: \"simple\",\n        dataField: \"backgroundColor\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\n        },\n        template: e => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ColorBox, {\n            editAlphaChannel: true,\n            value: e.component.option(\"formData\").backgroundColor,\n            onInitialized: e => {\n              backgroundColorEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }]\n    }, {\n      itemType: \"group\",\n      caption: localizationMessage.format(\"dxHtmlEditor-alignment\"),\n      colCount: 2,\n      items: [{\n        itemType: \"simple\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-horizontal\")\n        },\n        template: () => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ButtonGroup, {\n            items: [{\n              value: \"left\",\n              icon: \"alignleft\"\n            }, {\n              value: \"center\",\n              icon: \"aligncenter\"\n            }, {\n              value: \"right\",\n              icon: \"alignright\"\n            }, {\n              value: \"justify\",\n              icon: \"alignjustify\"\n            }],\n            keyExpr: \"value\",\n            selectedItemKeys: [startTextAlign],\n            onInitialized: e => {\n              alignmentEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }, {\n        itemType: \"simple\",\n        label: {\n          text: localizationMessage.format(\"dxHtmlEditor-vertical\")\n        },\n        template: () => {\n          var $content = $(\"<div>\");\n\n          editorInstance._createComponent($content, ButtonGroup, {\n            items: [{\n              value: \"top\",\n              icon: \"verticalaligntop\"\n            }, {\n              value: \"middle\",\n              icon: \"verticalaligncenter\"\n            }, {\n              value: \"bottom\",\n              icon: \"verticalalignbottom\"\n            }],\n            keyExpr: \"value\",\n            selectedItemKeys: [cellStyles.verticalAlign],\n            onInitialized: e => {\n              verticalAlignmentEditorInstance = e.component;\n            }\n          });\n\n          return $content;\n        }\n      }]\n    }],\n    showColonAfterLabel: true,\n    labelLocation: \"top\",\n    minColWidth: 400\n  };\n  return {\n    formOptions: formOptions,\n    applyHandler: formInstance => {\n      var formData = formInstance.option(\"formData\");\n      var newWidth = formData.width === parseInt(startCellWidth) ? void 0 : formData.width;\n      var newHeight = formData.height;\n      applyCellDimensionChanges(module, {\n        $cell: $cell,\n        newHeight: newHeight,\n        newWidth: newWidth,\n        tableBlot: tableBlot,\n        rowBlot: rowBlot\n      });\n      module.editorInstance.format(\"cellBorderWidth\", formData.borderWidth + \"px\");\n      module.editorInstance.format(\"cellBorderColor\", borderColorEditorInstance.option(\"value\"));\n      module.editorInstance.format(\"cellBorderStyle\", formData.borderStyle);\n      module.editorInstance.format(\"cellBackgroundColor\", backgroundColorEditorInstance.option(\"value\"));\n      module.editorInstance.format(\"cellTextAlign\", alignmentEditorInstance.option(\"selectedItemKeys\")[0]);\n      module.editorInstance.format(\"cellVerticalAlign\", verticalAlignmentEditorInstance.option(\"selectedItemKeys\")[0]);\n      module.editorInstance.format(\"cellPaddingLeft\", formData.horizontalPadding + \"px\");\n      module.editorInstance.format(\"cellPaddingRight\", formData.horizontalPadding + \"px\");\n      module.editorInstance.format(\"cellPaddingTop\", formData.verticalPadding + \"px\");\n      module.editorInstance.format(\"cellPaddingBottom\", formData.verticalPadding + \"px\");\n    }\n  };\n}\n\nfunction getFormConfigConstructor(type) {\n  return \"cell\" === type ? getCellPropertiesFormConfig : getTablePropertiesFormConfig;\n}\n\nfunction applyTableDimensionChanges(module, _ref11) {\n  var {\n    $table: $table,\n    newHeight: newHeight,\n    newWidth: newWidth,\n    tableBlot: tableBlot\n  } = _ref11;\n\n  if (isDefined(newWidth)) {\n    var autoWidthColumns = getAutoSizedElements($table);\n\n    if (autoWidthColumns.length > 0) {\n      module.editorInstance.format(\"tableWidth\", newWidth + \"px\");\n    } else {\n      var $columns = getColumnElements($table);\n      var oldTableWidth = getOuterWidth($table);\n      unfixTableWidth($table, {\n        tableBlot: tableBlot\n      });\n      each($columns, (i, element) => {\n        var $element = $(element);\n        var newElementWidth = newWidth / oldTableWidth * getOuterWidth($element);\n        var $lineElements = getLineElements($table, $element.index(), \"horizontal\");\n        setLineElementsFormat(module, {\n          elements: $lineElements,\n          property: \"width\",\n          value: newElementWidth\n        });\n      });\n    }\n  }\n\n  var autoHeightRows = getAutoSizedElements($table, \"vertical\");\n\n  if ((null === autoHeightRows || void 0 === autoHeightRows ? void 0 : autoHeightRows.length) > 0) {\n    tableBlot.format(\"tableHeight\", newHeight + \"px\");\n  } else {\n    var $rows = getRowElements($table);\n    var oldTableHeight = getOuterHeight($table);\n    each($rows, (i, element) => {\n      var $element = $(element);\n      var newElementHeight = newHeight / oldTableHeight * getOuterHeight($element);\n      var $lineElements = getLineElements($table, i, \"vertical\");\n      setLineElementsFormat(module, {\n        elements: $lineElements,\n        property: \"height\",\n        value: newElementHeight\n      });\n    });\n  }\n}\n\nfunction applyCellDimensionChanges(module, _ref12) {\n  var {\n    $cell: $cell,\n    newHeight: newHeight,\n    newWidth: newWidth,\n    tableBlot: tableBlot,\n    rowBlot: rowBlot\n  } = _ref12;\n  var $table = $($cell.closest(\"table\"));\n\n  if (isDefined(newWidth)) {\n    var index = $($cell).index();\n    var $verticalCells = getLineElements($table, index);\n    var widthDiff = newWidth - getOuterWidth($cell);\n    var tableWidth = getOuterWidth($table);\n\n    if (newWidth > tableWidth) {\n      unfixTableWidth($table, {\n        tableBlot: tableBlot\n      });\n    }\n\n    setLineElementsFormat(module, {\n      elements: $verticalCells,\n      property: \"width\",\n      value: newWidth\n    });\n    var $nextColumnCell = $cell.next();\n    var shouldUpdateNearestColumnWidth = 0 === getAutoSizedElements($table).length;\n\n    if (shouldUpdateNearestColumnWidth) {\n      unfixTableWidth($table, {\n        tableBlot: tableBlot\n      });\n\n      if (1 === $nextColumnCell.length) {\n        $verticalCells = getLineElements($table, index + 1);\n        var nextColumnWidth = getOuterWidth($verticalCells.eq(0)) - widthDiff;\n        setLineElementsFormat(module, {\n          elements: $verticalCells,\n          property: \"width\",\n          value: Math.max(nextColumnWidth, 0)\n        });\n      } else {\n        var $prevColumnCell = $cell.prev();\n\n        if (1 === $prevColumnCell.length) {\n          $verticalCells = getLineElements($table, index - 1);\n          var prevColumnWidth = getOuterWidth($verticalCells.eq(0)) - widthDiff;\n          setLineElementsFormat(module, {\n            elements: $verticalCells,\n            property: \"width\",\n            value: Math.max(prevColumnWidth, 0)\n          });\n        }\n      }\n    }\n  }\n\n  rowBlot.children.forEach(rowCell => {\n    rowCell.format(\"cellHeight\", newHeight + \"px\");\n  });\n  var autoHeightRows = getAutoSizedElements($table, \"vertical\");\n\n  if (0 === autoHeightRows.length) {\n    $table.css(\"height\", \"auto\");\n  }\n}\n\nexport { getFormatHandlers, getDefaultClickHandler, ICON_MAP, applyFormat };","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/html_editor/utils/toolbar_helper.js"],"names":["$","localizationMessage","getTableOperationHandler","hasEmbedContent","unfixTableWidth","getColumnElements","getAutoSizedElements","setLineElementsFormat","getLineElements","getRowElements","isDefined","isBoolean","each","Form","ButtonGroup","ColorBox","ScrollView","getOuterHeight","getWidth","getOuterWidth","ImageUploader","getWindow","getQuill","MIN_HEIGHT","BORDER_STYLES","USER_ACTION","SILENT_ACTION","DIALOG_COLOR_CAPTION","DIALOG_BACKGROUND_CAPTION","DIALOG_LINK_CAPTION","DIALOG_TABLE_CAPTION","DIALOG_LINK_FIELD_URL","DIALOG_LINK_FIELD_TEXT","DIALOG_LINK_FIELD_TARGET","DIALOG_LINK_FIELD_TARGET_CLASS","DIALOG_TABLE_FIELD_COLUMNS","DIALOG_TABLE_FIELD_ROWS","ICON_MAP","insertHeaderRow","clear","getFormatHandlers","module","_ref","event","range","quill","getSelection","_getToolbarModule","saveValueChangeEvent","removeFormat","getToolbarModule","updateFormatWidgets","link","prepareLinkHandler","image","prepareImageHandler","editorInstance","option","color","prepareColorClickHandler","background","orderedList","prepareShortcutHandler","bulletList","alignLeft","alignCenter","alignRight","alignJustify","codeBlock","getDefaultClickHandler","undo","_ref2","history","redo","_ref3","increaseIndent","_ref4","applyFormat","decreaseIndent","_ref5","superscript","subscript","insertTable","prepareInsertTableHandler","insertRowAbove","insertRowBelow","insertColumnLeft","insertColumnRight","deleteColumn","deleteRow","deleteTable","cellProperties","prepareShowFormProperties","tableProperties","resetFormDialogOptions","_ref6","contentTemplate","title","minHeight","minWidth","maxWidth","formDialogOption","type","$element","_$element","_module$quill$getModu","length","getTargetTableNode","tableBlot","rowBlot","getModule","getTable","formats","getFormat","tablePropertiesFormConfig","getFormConfigConstructor","_formDialog","_popup","savedOptions","formInstance","container","$content","appendTo","$form","_createComponent","formOptions","dxForm","format","concat","Math","min","promise","showFormDialog","done","formData","applyHandler","fail","focus","formatArgs","_saveValueChangeEvent","partName","currentSelectionParts","domNode","getLinkRange","Quill","LinkBlot","import","offset","scroll","descendant","index","result","_selection","selection","selectionHasEmbedContent","isCursorAtLink","href","linkRange","text","getText","target","Object","prototype","hasOwnProperty","call","items","getLinkFormItems","deleteText","insertText","setSelection","imageUploadOption","imageUploader","render","dataField","label","visible","editorType","editorOptions","cssClass","name","caption","focusStateEnabled","shortcutValue","_ref7","_getToolbarModule2","value","_updateFormatWidget","_ref8","_getToolbarModule3","newValue","insertTableFormItems","isTableFocused","_tableFormats","some","rows","columns","table","always","getTablePropertiesFormConfig","_ref9","window","alignmentEditorInstance","borderColorEditorInstance","backgroundColorEditorInstance","$table","startTableWidth","tableWidth","parseInt","tableStyles","getComputedStyle","get","startTextAlign","textAlign","colCount","width","height","tableHeight","backgroundColor","tableBackgroundColor","borderStyle","tableBorderStyle","borderTopStyle","borderColor","tableBorderColor","borderTopColor","borderWidth","tableBorderWidth","borderTopWidth","alignment","tableAlign","itemType","colCountByScreen","xs","placeholder","colSpan","template","e","editAlphaChannel","component","onInitialized","icon","keyExpr","selectedItemKeys","showColonAfterLabel","labelLocation","minColWidth","newWidth","newHeight","applyTableDimensionChanges","getCellPropertiesFormConfig","_ref10","verticalAlignmentEditorInstance","$cell","startCellWidth","cellWidth","cellStyles","cellHeight","cellBackgroundColor","cellBorderStyle","cellBorderColor","cellBorderWidth","cellTextAlign","verticalAlignment","cellVerticalAlign","verticalAlign","verticalPadding","cellPaddingTop","paddingTop","horizontalPadding","cellPaddingLeft","paddingLeft","applyCellDimensionChanges","_ref11","autoWidthColumns","$columns","oldTableWidth","i","element","newElementWidth","$lineElements","elements","property","autoHeightRows","$rows","oldTableHeight","newElementHeight","_ref12","closest","$verticalCells","widthDiff","$nextColumnCell","next","shouldUpdateNearestColumnWidth","nextColumnWidth","eq","max","$prevColumnCell","prev","prevColumnWidth","children","forEach","rowCell","css"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/html_editor/utils/toolbar_helper.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport localizationMessage from \"../../../localization/message\";\r\nimport {\r\n    getTableOperationHandler,\r\n    hasEmbedContent,\r\n    unfixTableWidth,\r\n    getColumnElements,\r\n    getAutoSizedElements,\r\n    setLineElementsFormat,\r\n    getLineElements,\r\n    getRowElements\r\n} from \"./table_helper\";\r\nimport {\r\n    isDefined,\r\n    isBoolean\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport Form from \"../../form\";\r\nimport ButtonGroup from \"../../button_group\";\r\nimport ColorBox from \"../../color_box\";\r\nimport ScrollView from \"../../scroll_view\";\r\nimport {\r\n    getOuterHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    ImageUploader\r\n} from \"./image_uploader_helper\";\r\nimport {\r\n    getWindow\r\n} from \"../../../core/utils/window\";\r\nimport {\r\n    getQuill\r\n} from \"../quill_importer\";\r\nvar MIN_HEIGHT = 400;\r\nvar BORDER_STYLES = [\"none\", \"hidden\", \"dotted\", \"dashed\", \"solid\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\"];\r\nvar USER_ACTION = \"user\";\r\nvar SILENT_ACTION = \"silent\";\r\nvar DIALOG_COLOR_CAPTION = \"dxHtmlEditor-dialogColorCaption\";\r\nvar DIALOG_BACKGROUND_CAPTION = \"dxHtmlEditor-dialogBackgroundCaption\";\r\nvar DIALOG_LINK_CAPTION = \"dxHtmlEditor-dialogLinkCaption\";\r\nvar DIALOG_TABLE_CAPTION = \"dxHtmlEditor-dialogInsertTableCaption\";\r\nvar DIALOG_LINK_FIELD_URL = \"dxHtmlEditor-dialogLinkUrlField\";\r\nvar DIALOG_LINK_FIELD_TEXT = \"dxHtmlEditor-dialogLinkTextField\";\r\nvar DIALOG_LINK_FIELD_TARGET = \"dxHtmlEditor-dialogLinkTargetField\";\r\nvar DIALOG_LINK_FIELD_TARGET_CLASS = \"dx-formdialog-field-target\";\r\nvar DIALOG_TABLE_FIELD_COLUMNS = \"dxHtmlEditor-dialogInsertTableRowsField\";\r\nvar DIALOG_TABLE_FIELD_ROWS = \"dxHtmlEditor-dialogInsertTableColumnsField\";\r\nvar ICON_MAP = {\r\n    insertHeaderRow: \"header\",\r\n    clear: \"clearformat\"\r\n};\r\n\r\nfunction getFormatHandlers(module) {\r\n    return {\r\n        clear: _ref => {\r\n            var {\r\n                event: event\r\n            } = _ref;\r\n            var range = module.quill.getSelection();\r\n            if (range) {\r\n                var _getToolbarModule;\r\n                module.saveValueChangeEvent(event);\r\n                module.quill.removeFormat(range);\r\n                null === (_getToolbarModule = getToolbarModule(module)) || void 0 === _getToolbarModule ? void 0 : _getToolbarModule.updateFormatWidgets()\r\n            }\r\n        },\r\n        link: prepareLinkHandler(module),\r\n        image: prepareImageHandler(module, module.editorInstance.option(\"imageUpload\")),\r\n        color: prepareColorClickHandler(module, \"color\"),\r\n        background: prepareColorClickHandler(module, \"background\"),\r\n        orderedList: prepareShortcutHandler(module, \"list\", \"ordered\"),\r\n        bulletList: prepareShortcutHandler(module, \"list\", \"bullet\"),\r\n        alignLeft: prepareShortcutHandler(module, \"align\", \"left\"),\r\n        alignCenter: prepareShortcutHandler(module, \"align\", \"center\"),\r\n        alignRight: prepareShortcutHandler(module, \"align\", \"right\"),\r\n        alignJustify: prepareShortcutHandler(module, \"align\", \"justify\"),\r\n        codeBlock: getDefaultClickHandler(module, \"code-block\"),\r\n        undo: _ref2 => {\r\n            var {\r\n                event: event\r\n            } = _ref2;\r\n            module.saveValueChangeEvent(event);\r\n            module.quill.history.undo()\r\n        },\r\n        redo: _ref3 => {\r\n            var {\r\n                event: event\r\n            } = _ref3;\r\n            module.saveValueChangeEvent(event);\r\n            module.quill.history.redo()\r\n        },\r\n        increaseIndent: _ref4 => {\r\n            var {\r\n                event: event\r\n            } = _ref4;\r\n            applyFormat(module, [\"indent\", \"+1\", USER_ACTION], event)\r\n        },\r\n        decreaseIndent: _ref5 => {\r\n            var {\r\n                event: event\r\n            } = _ref5;\r\n            applyFormat(module, [\"indent\", \"-1\", USER_ACTION], event)\r\n        },\r\n        superscript: prepareShortcutHandler(module, \"script\", \"super\"),\r\n        subscript: prepareShortcutHandler(module, \"script\", \"sub\"),\r\n        insertTable: prepareInsertTableHandler(module),\r\n        insertHeaderRow: getTableOperationHandler(module.quill, \"insertHeaderRow\"),\r\n        insertRowAbove: getTableOperationHandler(module.quill, \"insertRowAbove\"),\r\n        insertRowBelow: getTableOperationHandler(module.quill, \"insertRowBelow\"),\r\n        insertColumnLeft: getTableOperationHandler(module.quill, \"insertColumnLeft\"),\r\n        insertColumnRight: getTableOperationHandler(module.quill, \"insertColumnRight\"),\r\n        deleteColumn: getTableOperationHandler(module.quill, \"deleteColumn\"),\r\n        deleteRow: getTableOperationHandler(module.quill, \"deleteRow\"),\r\n        deleteTable: getTableOperationHandler(module.quill, \"deleteTable\"),\r\n        cellProperties: prepareShowFormProperties(module, \"cell\"),\r\n        tableProperties: prepareShowFormProperties(module, \"table\")\r\n    }\r\n}\r\n\r\nfunction resetFormDialogOptions(editorInstance, _ref6) {\r\n    var {\r\n        contentTemplate: contentTemplate,\r\n        title: title,\r\n        minHeight: minHeight,\r\n        minWidth: minWidth,\r\n        maxWidth: maxWidth\r\n    } = _ref6;\r\n    editorInstance.formDialogOption({\r\n        contentTemplate: contentTemplate,\r\n        title: title,\r\n        minHeight: null !== minHeight && void 0 !== minHeight ? minHeight : 0,\r\n        minWidth: null !== minWidth && void 0 !== minWidth ? minWidth : 0,\r\n        maxWidth: null !== maxWidth && void 0 !== maxWidth ? maxWidth : \"none\"\r\n    })\r\n}\r\n\r\nfunction prepareShowFormProperties(module, type) {\r\n    return $element => {\r\n        var _$element, _module$quill$getModu;\r\n        if (!(null !== (_$element = $element) && void 0 !== _$element && _$element.length)) {\r\n            $element = $(getTargetTableNode(module, type))\r\n        }\r\n        var [tableBlot, rowBlot] = null !== (_module$quill$getModu = module.quill.getModule(\"table\").getTable()) && void 0 !== _module$quill$getModu ? _module$quill$getModu : [];\r\n        var formats = module.quill.getFormat(module.editorInstance.getSelection(true));\r\n        var tablePropertiesFormConfig = getFormConfigConstructor(type)(module, {\r\n            $element: $element,\r\n            formats: formats,\r\n            tableBlot: tableBlot,\r\n            rowBlot: rowBlot\r\n        });\r\n        var {\r\n            contentTemplate: contentTemplate,\r\n            title: title,\r\n            minHeight: minHeight,\r\n            minWidth: minWidth,\r\n            maxWidth: maxWidth\r\n        } = module.editorInstance._formDialog._popup.option();\r\n        var savedOptions = {\r\n            contentTemplate: contentTemplate,\r\n            title: title,\r\n            minHeight: minHeight,\r\n            minWidth: minWidth,\r\n            maxWidth: maxWidth\r\n        };\r\n        var formInstance;\r\n        module.editorInstance.formDialogOption({\r\n            contentTemplate: container => {\r\n                var $content = $(\"<div>\").appendTo(container);\r\n                var $form = $(\"<div>\").appendTo($content);\r\n                module.editorInstance._createComponent($form, Form, tablePropertiesFormConfig.formOptions);\r\n                module.editorInstance._createComponent($content, ScrollView, {});\r\n                formInstance = $form.dxForm(\"instance\");\r\n                return $content\r\n            },\r\n            title: localizationMessage.format(\"dxHtmlEditor-\".concat(type, \"Properties\")),\r\n            minHeight: MIN_HEIGHT,\r\n            minWidth: Math.min(800, .9 * getWidth(getWindow()) - 1),\r\n            maxWidth: .9 * getWidth(getWindow())\r\n        });\r\n        var promise = module.editorInstance.showFormDialog();\r\n        promise.done((formData, event) => {\r\n            module.saveValueChangeEvent(event);\r\n            tablePropertiesFormConfig.applyHandler(formInstance);\r\n            resetFormDialogOptions(module.editorInstance, savedOptions)\r\n        });\r\n        promise.fail(() => {\r\n            module.quill.focus();\r\n            resetFormDialogOptions(module.editorInstance, savedOptions)\r\n        })\r\n    }\r\n}\r\n\r\nfunction applyFormat(module, formatArgs, event) {\r\n    module.editorInstance._saveValueChangeEvent(event);\r\n    module.quill.format(...formatArgs)\r\n}\r\n\r\nfunction getTargetTableNode(module, partName) {\r\n    var currentSelectionParts = module.quill.getModule(\"table\").getTable();\r\n    return \"table\" === partName ? currentSelectionParts[0].domNode : currentSelectionParts[2].domNode\r\n}\r\n\r\nfunction getLinkRange(module, range) {\r\n    var Quill = getQuill();\r\n    var LinkBlot = Quill.import(\"formats/link\");\r\n    var [link, offset] = module.quill.scroll.descendant(LinkBlot, range.index);\r\n    var result = !link ? null : {\r\n        index: range.index - offset,\r\n        length: link.length()\r\n    };\r\n    return result\r\n}\r\n\r\nfunction prepareLinkHandler(module) {\r\n    return () => {\r\n        var _selection;\r\n        module.quill.focus();\r\n        var selection = module.quill.getSelection();\r\n        var selectionHasEmbedContent = hasEmbedContent(module, selection);\r\n        var formats = selection ? module.quill.getFormat() : {};\r\n        var isCursorAtLink = formats.link && 0 === (null === (_selection = selection) || void 0 === _selection ? void 0 : _selection.length);\r\n        var href = formats.link || \"\";\r\n        if (isCursorAtLink) {\r\n            var linkRange = getLinkRange(module, selection);\r\n            if (linkRange) {\r\n                selection = linkRange\r\n            } else {\r\n                href = \"\"\r\n            }\r\n        }\r\n        var formData = {\r\n            href: href,\r\n            text: selection && !selectionHasEmbedContent ? module.quill.getText(selection) : \"\",\r\n            target: Object.prototype.hasOwnProperty.call(formats, \"target\") ? !!formats.target : true\r\n        };\r\n        module.editorInstance.formDialogOption(\"title\", localizationMessage.format(DIALOG_LINK_CAPTION));\r\n        var promise = module.editorInstance.showFormDialog({\r\n            formData: formData,\r\n            items: getLinkFormItems(module, selection)\r\n        });\r\n        promise.done((formData, event) => {\r\n            if (selection && !selectionHasEmbedContent) {\r\n                var text = formData.text || formData.href;\r\n                var {\r\n                    index: index,\r\n                    length: length\r\n                } = selection;\r\n                formData.text = void 0;\r\n                module.saveValueChangeEvent(event);\r\n                length && module.quill.deleteText(index, length, SILENT_ACTION);\r\n                module.quill.insertText(index, text, \"link\", formData, USER_ACTION);\r\n                module.quill.setSelection(index + text.length, 0, USER_ACTION)\r\n            } else {\r\n                formData.text = !selection && !formData.text ? formData.href : formData.text;\r\n                applyFormat(module, [\"link\", formData, USER_ACTION], event)\r\n            }\r\n        });\r\n        promise.fail(() => {\r\n            module.quill.focus()\r\n        })\r\n    }\r\n}\r\n\r\nfunction prepareImageHandler(module, imageUploadOption) {\r\n    var imageUploader = new ImageUploader(module, imageUploadOption);\r\n    return () => {\r\n        imageUploader.render()\r\n    }\r\n}\r\n\r\nfunction getLinkFormItems(module, selection) {\r\n    return [{\r\n        dataField: \"href\",\r\n        label: {\r\n            text: localizationMessage.format(DIALOG_LINK_FIELD_URL)\r\n        }\r\n    }, {\r\n        dataField: \"text\",\r\n        label: {\r\n            text: localizationMessage.format(DIALOG_LINK_FIELD_TEXT)\r\n        },\r\n        visible: !hasEmbedContent(module, selection)\r\n    }, {\r\n        dataField: \"target\",\r\n        editorType: \"dxCheckBox\",\r\n        editorOptions: {\r\n            text: localizationMessage.format(DIALOG_LINK_FIELD_TARGET)\r\n        },\r\n        cssClass: DIALOG_LINK_FIELD_TARGET_CLASS,\r\n        label: {\r\n            visible: false\r\n        }\r\n    }]\r\n}\r\n\r\nfunction prepareColorClickHandler(module, name) {\r\n    return () => {\r\n        var formData = module.quill.getFormat();\r\n        var caption = \"color\" === name ? DIALOG_COLOR_CAPTION : DIALOG_BACKGROUND_CAPTION;\r\n        module.editorInstance.formDialogOption(\"title\", localizationMessage.format(caption));\r\n        var promise = module.editorInstance.showFormDialog({\r\n            formData: formData,\r\n            items: [{\r\n                dataField: name,\r\n                editorType: \"dxColorView\",\r\n                editorOptions: {\r\n                    focusStateEnabled: false\r\n                },\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }]\r\n        });\r\n        promise.done((formData, event) => {\r\n            applyFormat(module, [name, formData[name], USER_ACTION], event)\r\n        });\r\n        promise.fail(() => {\r\n            module.quill.focus()\r\n        })\r\n    }\r\n}\r\n\r\nfunction prepareShortcutHandler(module, name, shortcutValue) {\r\n    return _ref7 => {\r\n        var _getToolbarModule2;\r\n        var {\r\n            event: event\r\n        } = _ref7;\r\n        var formats = module.quill.getFormat();\r\n        var value = formats[name] === shortcutValue ? false : shortcutValue;\r\n        applyFormat(module, [name, value, USER_ACTION], event);\r\n        null === (_getToolbarModule2 = getToolbarModule(module)) || void 0 === _getToolbarModule2 ? void 0 : _getToolbarModule2.updateFormatWidgets(true)\r\n    }\r\n}\r\n\r\nfunction getToolbarModule(module) {\r\n    return module._updateFormatWidget ? module : module.quill.getModule(\"toolbar\")\r\n}\r\n\r\nfunction getDefaultClickHandler(module, name) {\r\n    return _ref8 => {\r\n        var _getToolbarModule3;\r\n        var {\r\n            event: event\r\n        } = _ref8;\r\n        var formats = module.quill.getFormat();\r\n        var value = formats[name];\r\n        var newValue = !(isBoolean(value) ? value : isDefined(value));\r\n        applyFormat(module, [name, newValue, USER_ACTION], event);\r\n        null === (_getToolbarModule3 = getToolbarModule(module)) || void 0 === _getToolbarModule3 ? void 0 : _getToolbarModule3._updateFormatWidget(name, newValue, formats)\r\n    }\r\n}\r\n\r\nfunction insertTableFormItems() {\r\n    return [{\r\n        dataField: \"columns\",\r\n        editorType: \"dxNumberBox\",\r\n        editorOptions: {\r\n            min: 1\r\n        },\r\n        label: {\r\n            text: localizationMessage.format(DIALOG_TABLE_FIELD_COLUMNS)\r\n        }\r\n    }, {\r\n        dataField: \"rows\",\r\n        editorType: \"dxNumberBox\",\r\n        editorOptions: {\r\n            min: 1\r\n        },\r\n        label: {\r\n            text: localizationMessage.format(DIALOG_TABLE_FIELD_ROWS)\r\n        }\r\n    }]\r\n}\r\n\r\nfunction prepareInsertTableHandler(module) {\r\n    return () => {\r\n        var formats = module.quill.getFormat();\r\n        var isTableFocused = module._tableFormats.some(format => Object.prototype.hasOwnProperty.call(formats, format));\r\n        if (isTableFocused) {\r\n            module.quill.focus();\r\n            return\r\n        }\r\n        module.editorInstance.formDialogOption(\"title\", localizationMessage.format(DIALOG_TABLE_CAPTION));\r\n        var promise = module.editorInstance.showFormDialog({\r\n            formData: {\r\n                rows: 1,\r\n                columns: 1\r\n            },\r\n            items: insertTableFormItems()\r\n        });\r\n        promise.done((formData, event) => {\r\n            module.quill.focus();\r\n            var table = module.quill.getModule(\"table\");\r\n            if (table) {\r\n                module.saveValueChangeEvent(event);\r\n                var {\r\n                    columns: columns,\r\n                    rows: rows\r\n                } = formData;\r\n                table.insertTable(columns, rows)\r\n            }\r\n        }).always(() => {\r\n            module.quill.focus()\r\n        })\r\n    }\r\n}\r\n\r\nfunction getTablePropertiesFormConfig(module, _ref9) {\r\n    var {\r\n        $element: $element,\r\n        formats: formats,\r\n        tableBlot: tableBlot\r\n    } = _ref9;\r\n    var window = getWindow();\r\n    var alignmentEditorInstance;\r\n    var borderColorEditorInstance;\r\n    var backgroundColorEditorInstance;\r\n    var $table = $element;\r\n    var editorInstance = module.editorInstance;\r\n    var startTableWidth = isDefined(formats.tableWidth) ? parseInt(formats.tableWidth) : getOuterWidth($table);\r\n    var tableStyles = window.getComputedStyle($table.get(0));\r\n    var startTextAlign = \"start\" === tableStyles.textAlign ? \"left\" : tableStyles.textAlign;\r\n    var formOptions = {\r\n        colCount: 2,\r\n        formData: {\r\n            width: startTableWidth,\r\n            height: isDefined(formats.tableHeight) ? parseInt(formats.tableHeight) : getOuterHeight($table),\r\n            backgroundColor: formats.tableBackgroundColor || tableStyles.backgroundColor,\r\n            borderStyle: formats.tableBorderStyle || tableStyles.borderTopStyle,\r\n            borderColor: formats.tableBorderColor || tableStyles.borderTopColor,\r\n            borderWidth: parseInt(isDefined(formats.tableBorderWidth) ? formats.tableBorderWidth : tableStyles.borderTopWidth),\r\n            alignment: formats.tableAlign || startTextAlign\r\n        },\r\n        items: [{\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-border\"),\r\n            colCountByScreen: {\r\n                xs: 2\r\n            },\r\n            colCount: 2,\r\n            items: [{\r\n                dataField: \"borderStyle\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-style\")\r\n                },\r\n                editorType: \"dxSelectBox\",\r\n                editorOptions: {\r\n                    items: BORDER_STYLES,\r\n                    placeholder: \"Select style\"\r\n                }\r\n            }, {\r\n                dataField: \"borderWidth\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-borderWidth\")\r\n                },\r\n                editorOptions: {\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }, {\r\n                itemType: \"simple\",\r\n                dataField: \"borderColor\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\r\n                },\r\n                colSpan: 2,\r\n                template: e => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ColorBox, {\r\n                        editAlphaChannel: true,\r\n                        value: e.component.option(\"formData\").borderColor,\r\n                        onInitialized: e => {\r\n                            borderColorEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-dimensions\"),\r\n            colCountByScreen: {\r\n                xs: 2\r\n            },\r\n            colCount: 2,\r\n            items: [{\r\n                dataField: \"width\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-width\")\r\n                },\r\n                editorOptions: {\r\n                    min: 0,\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }, {\r\n                dataField: \"height\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-height\")\r\n                },\r\n                editorOptions: {\r\n                    min: 0,\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-tableBackground\"),\r\n            items: [{\r\n                itemType: \"simple\",\r\n                dataField: \"backgroundColor\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\r\n                },\r\n                template: e => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ColorBox, {\r\n                        editAlphaChannel: true,\r\n                        value: e.component.option(\"formData\").backgroundColor,\r\n                        onInitialized: e => {\r\n                            backgroundColorEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-alignment\"),\r\n            items: [{\r\n                itemType: \"simple\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-horizontal\")\r\n                },\r\n                template: () => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ButtonGroup, {\r\n                        items: [{\r\n                            value: \"left\",\r\n                            icon: \"alignleft\"\r\n                        }, {\r\n                            value: \"center\",\r\n                            icon: \"aligncenter\"\r\n                        }, {\r\n                            value: \"right\",\r\n                            icon: \"alignright\"\r\n                        }, {\r\n                            value: \"justify\",\r\n                            icon: \"alignjustify\"\r\n                        }],\r\n                        keyExpr: \"value\",\r\n                        selectedItemKeys: [startTextAlign],\r\n                        onInitialized: e => {\r\n                            alignmentEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }]\r\n        }],\r\n        showColonAfterLabel: true,\r\n        labelLocation: \"top\",\r\n        minColWidth: 400\r\n    };\r\n    return {\r\n        formOptions: formOptions,\r\n        applyHandler: formInstance => {\r\n            var formData = formInstance.option(\"formData\");\r\n            var newWidth = formData.width === startTableWidth ? void 0 : formData.width;\r\n            var newHeight = formData.height;\r\n            applyTableDimensionChanges(module, {\r\n                $table: $table,\r\n                newHeight: newHeight,\r\n                newWidth: newWidth,\r\n                tableBlot: tableBlot\r\n            });\r\n            module.editorInstance.format(\"tableBorderStyle\", formData.borderStyle);\r\n            module.editorInstance.format(\"tableBorderWidth\", formData.borderWidth + \"px\");\r\n            module.editorInstance.format(\"tableBorderColor\", borderColorEditorInstance.option(\"value\"));\r\n            module.editorInstance.format(\"tableBackgroundColor\", backgroundColorEditorInstance.option(\"value\"));\r\n            module.editorInstance.format(\"tableTextAlign\", alignmentEditorInstance.option(\"selectedItemKeys\")[0])\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCellPropertiesFormConfig(module, _ref10) {\r\n    var {\r\n        $element: $element,\r\n        formats: formats,\r\n        tableBlot: tableBlot,\r\n        rowBlot: rowBlot\r\n    } = _ref10;\r\n    var window = getWindow();\r\n    var alignmentEditorInstance;\r\n    var verticalAlignmentEditorInstance;\r\n    var borderColorEditorInstance;\r\n    var backgroundColorEditorInstance;\r\n    var $cell = $element;\r\n    var startCellWidth = isDefined(formats.cellWidth) ? parseInt(formats.cellWidth) : getOuterWidth($cell);\r\n    var editorInstance = module.editorInstance;\r\n    var cellStyles = window.getComputedStyle($cell.get(0));\r\n    var startTextAlign = \"start\" === cellStyles.textAlign ? \"left\" : cellStyles.textAlign;\r\n    var formOptions = {\r\n        colCount: 2,\r\n        formData: {\r\n            width: startCellWidth,\r\n            height: isDefined(formats.cellHeight) ? parseInt(formats.cellHeight) : getOuterHeight($cell),\r\n            backgroundColor: formats.cellBackgroundColor || cellStyles.backgroundColor,\r\n            borderStyle: formats.cellBorderStyle || cellStyles.borderTopStyle,\r\n            borderColor: formats.cellBorderColor || cellStyles.borderTopColor,\r\n            borderWidth: parseInt(isDefined(formats.cellBorderWidth) ? formats.cellBorderWidth : cellStyles.borderTopWidth),\r\n            alignment: formats.cellTextAlign || startTextAlign,\r\n            verticalAlignment: formats.cellVerticalAlign || cellStyles.verticalAlign,\r\n            verticalPadding: parseInt(isDefined(formats.cellPaddingTop) ? formats.cellPaddingTop : cellStyles.paddingTop),\r\n            horizontalPadding: parseInt(isDefined(formats.cellPaddingLeft) ? formats.cellPaddingLeft : cellStyles.paddingLeft)\r\n        },\r\n        items: [{\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-border\"),\r\n            colCountByScreen: {\r\n                xs: 2\r\n            },\r\n            colCount: 2,\r\n            items: [{\r\n                dataField: \"borderStyle\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-style\")\r\n                },\r\n                editorType: \"dxSelectBox\",\r\n                editorOptions: {\r\n                    items: BORDER_STYLES\r\n                }\r\n            }, {\r\n                dataField: \"borderWidth\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-borderWidth\")\r\n                },\r\n                editorOptions: {\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }, {\r\n                itemType: \"simple\",\r\n                dataField: \"borderColor\",\r\n                colSpan: 2,\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\r\n                },\r\n                template: e => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ColorBox, {\r\n                        editAlphaChannel: true,\r\n                        value: e.component.option(\"formData\").borderColor,\r\n                        onInitialized: e => {\r\n                            borderColorEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-dimensions\"),\r\n            colCount: 2,\r\n            colCountByScreen: {\r\n                xs: 2\r\n            },\r\n            items: [{\r\n                dataField: \"width\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-width\")\r\n                },\r\n                editorOptions: {\r\n                    min: 0,\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }, {\r\n                dataField: \"height\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-height\")\r\n                },\r\n                editorOptions: {\r\n                    min: 0,\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }, {\r\n                dataField: \"verticalPadding\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-paddingVertical\")\r\n                },\r\n                editorOptions: {\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }, {\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-paddingHorizontal\")\r\n                },\r\n                dataField: \"horizontalPadding\",\r\n                editorOptions: {\r\n                    placeholder: localizationMessage.format(\"dxHtmlEditor-pixels\")\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-tableBackground\"),\r\n            items: [{\r\n                itemType: \"simple\",\r\n                dataField: \"backgroundColor\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-borderColor\")\r\n                },\r\n                template: e => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ColorBox, {\r\n                        editAlphaChannel: true,\r\n                        value: e.component.option(\"formData\").backgroundColor,\r\n                        onInitialized: e => {\r\n                            backgroundColorEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"group\",\r\n            caption: localizationMessage.format(\"dxHtmlEditor-alignment\"),\r\n            colCount: 2,\r\n            items: [{\r\n                itemType: \"simple\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-horizontal\")\r\n                },\r\n                template: () => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ButtonGroup, {\r\n                        items: [{\r\n                            value: \"left\",\r\n                            icon: \"alignleft\"\r\n                        }, {\r\n                            value: \"center\",\r\n                            icon: \"aligncenter\"\r\n                        }, {\r\n                            value: \"right\",\r\n                            icon: \"alignright\"\r\n                        }, {\r\n                            value: \"justify\",\r\n                            icon: \"alignjustify\"\r\n                        }],\r\n                        keyExpr: \"value\",\r\n                        selectedItemKeys: [startTextAlign],\r\n                        onInitialized: e => {\r\n                            alignmentEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }, {\r\n                itemType: \"simple\",\r\n                label: {\r\n                    text: localizationMessage.format(\"dxHtmlEditor-vertical\")\r\n                },\r\n                template: () => {\r\n                    var $content = $(\"<div>\");\r\n                    editorInstance._createComponent($content, ButtonGroup, {\r\n                        items: [{\r\n                            value: \"top\",\r\n                            icon: \"verticalaligntop\"\r\n                        }, {\r\n                            value: \"middle\",\r\n                            icon: \"verticalaligncenter\"\r\n                        }, {\r\n                            value: \"bottom\",\r\n                            icon: \"verticalalignbottom\"\r\n                        }],\r\n                        keyExpr: \"value\",\r\n                        selectedItemKeys: [cellStyles.verticalAlign],\r\n                        onInitialized: e => {\r\n                            verticalAlignmentEditorInstance = e.component\r\n                        }\r\n                    });\r\n                    return $content\r\n                }\r\n            }]\r\n        }],\r\n        showColonAfterLabel: true,\r\n        labelLocation: \"top\",\r\n        minColWidth: 400\r\n    };\r\n    return {\r\n        formOptions: formOptions,\r\n        applyHandler: formInstance => {\r\n            var formData = formInstance.option(\"formData\");\r\n            var newWidth = formData.width === parseInt(startCellWidth) ? void 0 : formData.width;\r\n            var newHeight = formData.height;\r\n            applyCellDimensionChanges(module, {\r\n                $cell: $cell,\r\n                newHeight: newHeight,\r\n                newWidth: newWidth,\r\n                tableBlot: tableBlot,\r\n                rowBlot: rowBlot\r\n            });\r\n            module.editorInstance.format(\"cellBorderWidth\", formData.borderWidth + \"px\");\r\n            module.editorInstance.format(\"cellBorderColor\", borderColorEditorInstance.option(\"value\"));\r\n            module.editorInstance.format(\"cellBorderStyle\", formData.borderStyle);\r\n            module.editorInstance.format(\"cellBackgroundColor\", backgroundColorEditorInstance.option(\"value\"));\r\n            module.editorInstance.format(\"cellTextAlign\", alignmentEditorInstance.option(\"selectedItemKeys\")[0]);\r\n            module.editorInstance.format(\"cellVerticalAlign\", verticalAlignmentEditorInstance.option(\"selectedItemKeys\")[0]);\r\n            module.editorInstance.format(\"cellPaddingLeft\", formData.horizontalPadding + \"px\");\r\n            module.editorInstance.format(\"cellPaddingRight\", formData.horizontalPadding + \"px\");\r\n            module.editorInstance.format(\"cellPaddingTop\", formData.verticalPadding + \"px\");\r\n            module.editorInstance.format(\"cellPaddingBottom\", formData.verticalPadding + \"px\")\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFormConfigConstructor(type) {\r\n    return \"cell\" === type ? getCellPropertiesFormConfig : getTablePropertiesFormConfig\r\n}\r\n\r\nfunction applyTableDimensionChanges(module, _ref11) {\r\n    var {\r\n        $table: $table,\r\n        newHeight: newHeight,\r\n        newWidth: newWidth,\r\n        tableBlot: tableBlot\r\n    } = _ref11;\r\n    if (isDefined(newWidth)) {\r\n        var autoWidthColumns = getAutoSizedElements($table);\r\n        if (autoWidthColumns.length > 0) {\r\n            module.editorInstance.format(\"tableWidth\", newWidth + \"px\")\r\n        } else {\r\n            var $columns = getColumnElements($table);\r\n            var oldTableWidth = getOuterWidth($table);\r\n            unfixTableWidth($table, {\r\n                tableBlot: tableBlot\r\n            });\r\n            each($columns, (i, element) => {\r\n                var $element = $(element);\r\n                var newElementWidth = newWidth / oldTableWidth * getOuterWidth($element);\r\n                var $lineElements = getLineElements($table, $element.index(), \"horizontal\");\r\n                setLineElementsFormat(module, {\r\n                    elements: $lineElements,\r\n                    property: \"width\",\r\n                    value: newElementWidth\r\n                })\r\n            })\r\n        }\r\n    }\r\n    var autoHeightRows = getAutoSizedElements($table, \"vertical\");\r\n    if ((null === autoHeightRows || void 0 === autoHeightRows ? void 0 : autoHeightRows.length) > 0) {\r\n        tableBlot.format(\"tableHeight\", newHeight + \"px\")\r\n    } else {\r\n        var $rows = getRowElements($table);\r\n        var oldTableHeight = getOuterHeight($table);\r\n        each($rows, (i, element) => {\r\n            var $element = $(element);\r\n            var newElementHeight = newHeight / oldTableHeight * getOuterHeight($element);\r\n            var $lineElements = getLineElements($table, i, \"vertical\");\r\n            setLineElementsFormat(module, {\r\n                elements: $lineElements,\r\n                property: \"height\",\r\n                value: newElementHeight\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nfunction applyCellDimensionChanges(module, _ref12) {\r\n    var {\r\n        $cell: $cell,\r\n        newHeight: newHeight,\r\n        newWidth: newWidth,\r\n        tableBlot: tableBlot,\r\n        rowBlot: rowBlot\r\n    } = _ref12;\r\n    var $table = $($cell.closest(\"table\"));\r\n    if (isDefined(newWidth)) {\r\n        var index = $($cell).index();\r\n        var $verticalCells = getLineElements($table, index);\r\n        var widthDiff = newWidth - getOuterWidth($cell);\r\n        var tableWidth = getOuterWidth($table);\r\n        if (newWidth > tableWidth) {\r\n            unfixTableWidth($table, {\r\n                tableBlot: tableBlot\r\n            })\r\n        }\r\n        setLineElementsFormat(module, {\r\n            elements: $verticalCells,\r\n            property: \"width\",\r\n            value: newWidth\r\n        });\r\n        var $nextColumnCell = $cell.next();\r\n        var shouldUpdateNearestColumnWidth = 0 === getAutoSizedElements($table).length;\r\n        if (shouldUpdateNearestColumnWidth) {\r\n            unfixTableWidth($table, {\r\n                tableBlot: tableBlot\r\n            });\r\n            if (1 === $nextColumnCell.length) {\r\n                $verticalCells = getLineElements($table, index + 1);\r\n                var nextColumnWidth = getOuterWidth($verticalCells.eq(0)) - widthDiff;\r\n                setLineElementsFormat(module, {\r\n                    elements: $verticalCells,\r\n                    property: \"width\",\r\n                    value: Math.max(nextColumnWidth, 0)\r\n                })\r\n            } else {\r\n                var $prevColumnCell = $cell.prev();\r\n                if (1 === $prevColumnCell.length) {\r\n                    $verticalCells = getLineElements($table, index - 1);\r\n                    var prevColumnWidth = getOuterWidth($verticalCells.eq(0)) - widthDiff;\r\n                    setLineElementsFormat(module, {\r\n                        elements: $verticalCells,\r\n                        property: \"width\",\r\n                        value: Math.max(prevColumnWidth, 0)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    rowBlot.children.forEach(rowCell => {\r\n        rowCell.format(\"cellHeight\", newHeight + \"px\")\r\n    });\r\n    var autoHeightRows = getAutoSizedElements($table, \"vertical\");\r\n    if (0 === autoHeightRows.length) {\r\n        $table.css(\"height\", \"auto\")\r\n    }\r\n}\r\nexport {\r\n    getFormatHandlers,\r\n    getDefaultClickHandler,\r\n    ICON_MAP,\r\n    applyFormat\r\n};\r\n"]},"metadata":{},"sourceType":"module"}