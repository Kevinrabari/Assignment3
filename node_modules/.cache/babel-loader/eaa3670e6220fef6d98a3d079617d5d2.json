{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.headers_area.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { setWidth, setHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { AreaItem } from \"./ui.pivot_grid.area_item\";\nimport Scrollable from \"../scroll_view/ui.scrollable\";\nvar PIVOTGRID_AREA_CLASS = \"dx-pivotgrid-area\";\nvar PIVOTGRID_AREA_COLUMN_CLASS = \"dx-pivotgrid-horizontal-headers\";\nvar PIVOTGRID_AREA_ROW_CLASS = \"dx-pivotgrid-vertical-headers\";\nvar PIVOTGRID_TOTAL_CLASS = \"dx-total\";\nvar PIVOTGRID_GRAND_TOTAL_CLASS = \"dx-grandtotal\";\nvar PIVOTGRID_ROW_TOTAL_CLASS = \"dx-row-total\";\nvar PIVOTGRID_EXPANDED_CLASS = \"dx-pivotgrid-expanded\";\nvar PIVOTGRID_COLLAPSED_CLASS = \"dx-pivotgrid-collapsed\";\nvar PIVOTGRID_LAST_CELL_CLASS = \"dx-last-cell\";\nvar PIVOTGRID_VERTICAL_SCROLL_CLASS = \"dx-vertical-scroll\";\nvar PIVOTGRID_EXPAND_BORDER = \"dx-expand-border\";\nvar isRenovatedScrollable = !!Scrollable.IS_RENOVATED_WIDGET;\n\nfunction getCellPath(tableElement, cell) {\n  if (cell) {\n    var data = tableElement.data().data;\n    var rowIndex = cell.parentNode.rowIndex;\n    var cellIndex = cell.cellIndex;\n    return data[rowIndex] && data[rowIndex][cellIndex] && data[rowIndex][cellIndex].path;\n  }\n}\n\nexport var HorizontalHeadersArea = AreaItem.inherit({\n  ctor: function (component) {\n    this.callBase(component);\n    this._scrollBarWidth = 0;\n  },\n  _getAreaName: function () {\n    return \"column\";\n  },\n  _getAreaClassName: function () {\n    return PIVOTGRID_AREA_COLUMN_CLASS;\n  },\n  _createGroupElement: function () {\n    return $(\"<div>\").addClass(this._getAreaClassName()).addClass(PIVOTGRID_AREA_CLASS);\n  },\n  _applyCustomStyles: function (options) {\n    var cssArray = options.cssArray;\n    var cell = options.cell;\n    var rowsCount = options.rowsCount;\n    var classArray = options.classArray;\n\n    if (options.cellIndex === options.cellsCount - 1) {\n      cssArray.push((options.rtlEnabled ? \"border-left:\" : \"border-right:\") + \"0px\");\n    }\n\n    if (cell.rowspan === rowsCount - options.rowIndex || options.rowIndex + 1 === rowsCount) {\n      cssArray.push(\"border-bottom-width:0px\");\n    }\n\n    if (\"T\" === cell.type || \"GT\" === cell.type) {\n      classArray.push(PIVOTGRID_ROW_TOTAL_CLASS);\n    }\n\n    if (\"T\" === options.cell.type) {\n      classArray.push(PIVOTGRID_TOTAL_CLASS);\n    }\n\n    if (\"GT\" === options.cell.type) {\n      classArray.push(PIVOTGRID_GRAND_TOTAL_CLASS);\n    }\n\n    if (isDefined(cell.expanded)) {\n      classArray.push(cell.expanded ? PIVOTGRID_EXPANDED_CLASS : PIVOTGRID_COLLAPSED_CLASS);\n    }\n\n    this.callBase(options);\n  },\n  _getMainElementMarkup: function () {\n    return \"<thead class='\" + this._getAreaClassName() + \"'>\";\n  },\n  _getCloseMainElementMarkup: function () {\n    return \"</thead>\";\n  },\n  setVirtualContentParams: function (params) {\n    this.callBase(params);\n\n    this._setTableCss({\n      left: params.left,\n      top: 0\n    });\n\n    this._virtualContentWidth = params.width;\n  },\n  hasScroll: function () {\n    var tableWidth = this._virtualContent ? this._virtualContentWidth : this._tableWidth;\n    var groupWidth = this.getGroupWidth();\n\n    if (groupWidth && tableWidth) {\n      return tableWidth - groupWidth >= 1;\n    }\n\n    return false;\n  },\n  renderScrollable: function () {\n    this._groupElement.dxScrollable({\n      useNative: false,\n      useSimulatedScrollbar: false,\n      showScrollbar: \"never\",\n      bounceEnabled: false,\n      direction: \"horizontal\",\n      rtlEnabled: isRenovatedScrollable ? this.component.option(\"rtlEnabled\") : false,\n      updateManually: true\n    });\n  },\n  updateScrollableOptions: function (_ref) {\n    var {\n      rtlEnabled: rtlEnabled\n    } = _ref;\n\n    var scrollable = this._getScrollable();\n\n    isRenovatedScrollable && scrollable.option({\n      rtlEnabled: rtlEnabled\n    });\n  },\n  processScrollBarSpacing: function (scrollBarWidth) {\n    var groupAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\n    var groupWidth = this.getGroupWidth();\n\n    if (groupWidth) {\n      this.setGroupWidth(groupWidth - scrollBarWidth);\n    }\n\n    if (this._scrollBarWidth) {\n      this._groupElement.next().remove();\n    }\n\n    this._groupElement.toggleClass(PIVOTGRID_VERTICAL_SCROLL_CLASS, scrollBarWidth > 0);\n\n    setWidth(this._groupElement.css(\"float\", groupAlignment), this.getGroupHeight());\n    this._scrollBarWidth = scrollBarWidth;\n  },\n  getScrollPath: function (offset) {\n    var tableElement = this.tableElement();\n    var cell;\n    offset -= parseInt(tableElement[0].style.left, 10) || 0;\n    each(tableElement.find(\"td\"), function (_, td) {\n      if (1 === td.colSpan && td.offsetLeft <= offset && td.offsetWidth + td.offsetLeft > offset) {\n        cell = td;\n        return false;\n      }\n    });\n    return getCellPath(tableElement, cell);\n  },\n  _moveFakeTable: function (scrollPos) {\n    this._moveFakeTableHorizontally(scrollPos);\n\n    this.callBase();\n  }\n});\nexport var VerticalHeadersArea = HorizontalHeadersArea.inherit({\n  _getAreaClassName: function () {\n    return PIVOTGRID_AREA_ROW_CLASS;\n  },\n  _applyCustomStyles: function (options) {\n    this.callBase(options);\n\n    if (options.cellIndex === options.cellsCount - 1) {\n      options.classArray.push(PIVOTGRID_LAST_CELL_CLASS);\n    }\n\n    if (options.rowIndex === options.rowsCount - 1) {\n      options.cssArray.push(\"border-bottom: 0px\");\n    }\n\n    if (options.cell.isWhiteSpace) {\n      options.classArray.push(\"dx-white-space-column\");\n    }\n  },\n  _getAreaName: function () {\n    return \"row\";\n  },\n  setVirtualContentParams: function (params) {\n    this.callBase(params);\n\n    this._setTableCss({\n      top: params.top,\n      left: 0\n    });\n\n    this._virtualContentHeight = params.height;\n  },\n  hasScroll: function () {\n    var tableHeight = this._virtualContent ? this._virtualContentHeight : this._tableHeight;\n    var groupHeight = this.getGroupHeight();\n\n    if (groupHeight && tableHeight) {\n      return tableHeight - groupHeight >= 1;\n    }\n\n    return false;\n  },\n  renderScrollable: function () {\n    this._groupElement.dxScrollable({\n      useNative: false,\n      useSimulatedScrollbar: false,\n      showScrollbar: \"never\",\n      bounceEnabled: false,\n      direction: \"vertical\",\n      updateManually: true\n    });\n  },\n  processScrollBarSpacing: function (scrollBarWidth) {\n    var groupHeight = this.getGroupHeight();\n\n    if (groupHeight) {\n      this.setGroupHeight(groupHeight - scrollBarWidth);\n    }\n\n    if (this._scrollBarWidth) {\n      this._groupElement.next().remove();\n    }\n\n    if (scrollBarWidth) {\n      var $div = $(\"<div>\");\n      setWidth($div, \"100%\");\n      setHeight($div, scrollBarWidth - 1);\n\n      this._groupElement.after($div);\n    }\n\n    this._scrollBarWidth = scrollBarWidth;\n  },\n  getScrollPath: function (offset) {\n    var tableElement = this.tableElement();\n    var cell;\n    offset -= parseInt(tableElement[0].style.top, 10) || 0;\n    each(tableElement.find(\"tr\"), function (_, tr) {\n      var td = tr.childNodes[tr.childNodes.length - 1];\n\n      if (td && 1 === td.rowSpan && td.offsetTop <= offset && td.offsetHeight + td.offsetTop > offset) {\n        cell = td;\n        return false;\n      }\n    });\n    return getCellPath(tableElement, cell);\n  },\n  _moveFakeTable: function (scrollPos) {\n    this._moveFakeTableTop(scrollPos);\n\n    this.callBase();\n  },\n  _getRowClassNames: function (rowIndex, cell, rowClassNames) {\n    if (0 !== rowIndex & cell.expanded && !rowClassNames.includes(PIVOTGRID_EXPAND_BORDER)) {\n      rowClassNames.push(PIVOTGRID_EXPAND_BORDER);\n    }\n  },\n  _getMainElementMarkup: function () {\n    return \"<tbody class='\" + this._getAreaClassName() + \"'>\";\n  },\n  _getCloseMainElementMarkup: function () {\n    return \"</tbody>\";\n  },\n  updateColspans: function (columnCount) {\n    var rows = this.tableElement()[0].rows;\n    var columnOffset = 0;\n    var columnOffsetResetIndexes = [];\n\n    if (this.getColumnsCount() - columnCount > 0) {\n      return;\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      for (var j = 0; j < rows[i].cells.length; j++) {\n        var cell = rows[i].cells[j];\n        var rowSpan = cell.rowSpan;\n\n        if (columnOffsetResetIndexes[i]) {\n          columnOffset -= columnOffsetResetIndexes[i];\n          columnOffsetResetIndexes[i] = 0;\n        }\n\n        var diff = columnCount - (columnOffset + cell.colSpan);\n\n        if (j === rows[i].cells.length - 1 && diff > 0) {\n          cell.colSpan = cell.colSpan + diff;\n        }\n\n        columnOffsetResetIndexes[i + rowSpan] = (columnOffsetResetIndexes[i + rowSpan] || 0) + cell.colSpan;\n        columnOffset += cell.colSpan;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.headers_area.js"],"names":["setWidth","setHeight","$","isDefined","each","AreaItem","Scrollable","PIVOTGRID_AREA_CLASS","PIVOTGRID_AREA_COLUMN_CLASS","PIVOTGRID_AREA_ROW_CLASS","PIVOTGRID_TOTAL_CLASS","PIVOTGRID_GRAND_TOTAL_CLASS","PIVOTGRID_ROW_TOTAL_CLASS","PIVOTGRID_EXPANDED_CLASS","PIVOTGRID_COLLAPSED_CLASS","PIVOTGRID_LAST_CELL_CLASS","PIVOTGRID_VERTICAL_SCROLL_CLASS","PIVOTGRID_EXPAND_BORDER","isRenovatedScrollable","IS_RENOVATED_WIDGET","getCellPath","tableElement","cell","data","rowIndex","parentNode","cellIndex","path","HorizontalHeadersArea","inherit","ctor","component","callBase","_scrollBarWidth","_getAreaName","_getAreaClassName","_createGroupElement","addClass","_applyCustomStyles","options","cssArray","rowsCount","classArray","cellsCount","push","rtlEnabled","rowspan","type","expanded","_getMainElementMarkup","_getCloseMainElementMarkup","setVirtualContentParams","params","_setTableCss","left","top","_virtualContentWidth","width","hasScroll","tableWidth","_virtualContent","_tableWidth","groupWidth","getGroupWidth","renderScrollable","_groupElement","dxScrollable","useNative","useSimulatedScrollbar","showScrollbar","bounceEnabled","direction","option","updateManually","updateScrollableOptions","_ref","scrollable","_getScrollable","processScrollBarSpacing","scrollBarWidth","groupAlignment","setGroupWidth","next","remove","toggleClass","css","getGroupHeight","getScrollPath","offset","parseInt","style","find","_","td","colSpan","offsetLeft","offsetWidth","_moveFakeTable","scrollPos","_moveFakeTableHorizontally","VerticalHeadersArea","isWhiteSpace","_virtualContentHeight","height","tableHeight","_tableHeight","groupHeight","setGroupHeight","$div","after","tr","childNodes","length","rowSpan","offsetTop","offsetHeight","_moveFakeTableTop","_getRowClassNames","rowClassNames","includes","updateColspans","columnCount","rows","columnOffset","columnOffsetResetIndexes","getColumnsCount","i","j","cells","diff"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.headers_area.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    AreaItem\r\n} from \"./ui.pivot_grid.area_item\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar PIVOTGRID_AREA_CLASS = \"dx-pivotgrid-area\";\r\nvar PIVOTGRID_AREA_COLUMN_CLASS = \"dx-pivotgrid-horizontal-headers\";\r\nvar PIVOTGRID_AREA_ROW_CLASS = \"dx-pivotgrid-vertical-headers\";\r\nvar PIVOTGRID_TOTAL_CLASS = \"dx-total\";\r\nvar PIVOTGRID_GRAND_TOTAL_CLASS = \"dx-grandtotal\";\r\nvar PIVOTGRID_ROW_TOTAL_CLASS = \"dx-row-total\";\r\nvar PIVOTGRID_EXPANDED_CLASS = \"dx-pivotgrid-expanded\";\r\nvar PIVOTGRID_COLLAPSED_CLASS = \"dx-pivotgrid-collapsed\";\r\nvar PIVOTGRID_LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar PIVOTGRID_VERTICAL_SCROLL_CLASS = \"dx-vertical-scroll\";\r\nvar PIVOTGRID_EXPAND_BORDER = \"dx-expand-border\";\r\nvar isRenovatedScrollable = !!Scrollable.IS_RENOVATED_WIDGET;\r\n\r\nfunction getCellPath(tableElement, cell) {\r\n    if (cell) {\r\n        var data = tableElement.data().data;\r\n        var rowIndex = cell.parentNode.rowIndex;\r\n        var cellIndex = cell.cellIndex;\r\n        return data[rowIndex] && data[rowIndex][cellIndex] && data[rowIndex][cellIndex].path\r\n    }\r\n}\r\nexport var HorizontalHeadersArea = AreaItem.inherit({\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this._scrollBarWidth = 0\r\n    },\r\n    _getAreaName: function() {\r\n        return \"column\"\r\n    },\r\n    _getAreaClassName: function() {\r\n        return PIVOTGRID_AREA_COLUMN_CLASS\r\n    },\r\n    _createGroupElement: function() {\r\n        return $(\"<div>\").addClass(this._getAreaClassName()).addClass(PIVOTGRID_AREA_CLASS)\r\n    },\r\n    _applyCustomStyles: function(options) {\r\n        var cssArray = options.cssArray;\r\n        var cell = options.cell;\r\n        var rowsCount = options.rowsCount;\r\n        var classArray = options.classArray;\r\n        if (options.cellIndex === options.cellsCount - 1) {\r\n            cssArray.push((options.rtlEnabled ? \"border-left:\" : \"border-right:\") + \"0px\")\r\n        }\r\n        if (cell.rowspan === rowsCount - options.rowIndex || options.rowIndex + 1 === rowsCount) {\r\n            cssArray.push(\"border-bottom-width:0px\")\r\n        }\r\n        if (\"T\" === cell.type || \"GT\" === cell.type) {\r\n            classArray.push(PIVOTGRID_ROW_TOTAL_CLASS)\r\n        }\r\n        if (\"T\" === options.cell.type) {\r\n            classArray.push(PIVOTGRID_TOTAL_CLASS)\r\n        }\r\n        if (\"GT\" === options.cell.type) {\r\n            classArray.push(PIVOTGRID_GRAND_TOTAL_CLASS)\r\n        }\r\n        if (isDefined(cell.expanded)) {\r\n            classArray.push(cell.expanded ? PIVOTGRID_EXPANDED_CLASS : PIVOTGRID_COLLAPSED_CLASS)\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _getMainElementMarkup: function() {\r\n        return \"<thead class='\" + this._getAreaClassName() + \"'>\"\r\n    },\r\n    _getCloseMainElementMarkup: function() {\r\n        return \"</thead>\"\r\n    },\r\n    setVirtualContentParams: function(params) {\r\n        this.callBase(params);\r\n        this._setTableCss({\r\n            left: params.left,\r\n            top: 0\r\n        });\r\n        this._virtualContentWidth = params.width\r\n    },\r\n    hasScroll: function() {\r\n        var tableWidth = this._virtualContent ? this._virtualContentWidth : this._tableWidth;\r\n        var groupWidth = this.getGroupWidth();\r\n        if (groupWidth && tableWidth) {\r\n            return tableWidth - groupWidth >= 1\r\n        }\r\n        return false\r\n    },\r\n    renderScrollable: function() {\r\n        this._groupElement.dxScrollable({\r\n            useNative: false,\r\n            useSimulatedScrollbar: false,\r\n            showScrollbar: \"never\",\r\n            bounceEnabled: false,\r\n            direction: \"horizontal\",\r\n            rtlEnabled: isRenovatedScrollable ? this.component.option(\"rtlEnabled\") : false,\r\n            updateManually: true\r\n        })\r\n    },\r\n    updateScrollableOptions: function(_ref) {\r\n        var {\r\n            rtlEnabled: rtlEnabled\r\n        } = _ref;\r\n        var scrollable = this._getScrollable();\r\n        isRenovatedScrollable && scrollable.option({\r\n            rtlEnabled: rtlEnabled\r\n        })\r\n    },\r\n    processScrollBarSpacing: function(scrollBarWidth) {\r\n        var groupAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        var groupWidth = this.getGroupWidth();\r\n        if (groupWidth) {\r\n            this.setGroupWidth(groupWidth - scrollBarWidth)\r\n        }\r\n        if (this._scrollBarWidth) {\r\n            this._groupElement.next().remove()\r\n        }\r\n        this._groupElement.toggleClass(PIVOTGRID_VERTICAL_SCROLL_CLASS, scrollBarWidth > 0);\r\n        setWidth(this._groupElement.css(\"float\", groupAlignment), this.getGroupHeight());\r\n        this._scrollBarWidth = scrollBarWidth\r\n    },\r\n    getScrollPath: function(offset) {\r\n        var tableElement = this.tableElement();\r\n        var cell;\r\n        offset -= parseInt(tableElement[0].style.left, 10) || 0;\r\n        each(tableElement.find(\"td\"), (function(_, td) {\r\n            if (1 === td.colSpan && td.offsetLeft <= offset && td.offsetWidth + td.offsetLeft > offset) {\r\n                cell = td;\r\n                return false\r\n            }\r\n        }));\r\n        return getCellPath(tableElement, cell)\r\n    },\r\n    _moveFakeTable: function(scrollPos) {\r\n        this._moveFakeTableHorizontally(scrollPos);\r\n        this.callBase()\r\n    }\r\n});\r\nexport var VerticalHeadersArea = HorizontalHeadersArea.inherit({\r\n    _getAreaClassName: function() {\r\n        return PIVOTGRID_AREA_ROW_CLASS\r\n    },\r\n    _applyCustomStyles: function(options) {\r\n        this.callBase(options);\r\n        if (options.cellIndex === options.cellsCount - 1) {\r\n            options.classArray.push(PIVOTGRID_LAST_CELL_CLASS)\r\n        }\r\n        if (options.rowIndex === options.rowsCount - 1) {\r\n            options.cssArray.push(\"border-bottom: 0px\")\r\n        }\r\n        if (options.cell.isWhiteSpace) {\r\n            options.classArray.push(\"dx-white-space-column\")\r\n        }\r\n    },\r\n    _getAreaName: function() {\r\n        return \"row\"\r\n    },\r\n    setVirtualContentParams: function(params) {\r\n        this.callBase(params);\r\n        this._setTableCss({\r\n            top: params.top,\r\n            left: 0\r\n        });\r\n        this._virtualContentHeight = params.height\r\n    },\r\n    hasScroll: function() {\r\n        var tableHeight = this._virtualContent ? this._virtualContentHeight : this._tableHeight;\r\n        var groupHeight = this.getGroupHeight();\r\n        if (groupHeight && tableHeight) {\r\n            return tableHeight - groupHeight >= 1\r\n        }\r\n        return false\r\n    },\r\n    renderScrollable: function() {\r\n        this._groupElement.dxScrollable({\r\n            useNative: false,\r\n            useSimulatedScrollbar: false,\r\n            showScrollbar: \"never\",\r\n            bounceEnabled: false,\r\n            direction: \"vertical\",\r\n            updateManually: true\r\n        })\r\n    },\r\n    processScrollBarSpacing: function(scrollBarWidth) {\r\n        var groupHeight = this.getGroupHeight();\r\n        if (groupHeight) {\r\n            this.setGroupHeight(groupHeight - scrollBarWidth)\r\n        }\r\n        if (this._scrollBarWidth) {\r\n            this._groupElement.next().remove()\r\n        }\r\n        if (scrollBarWidth) {\r\n            var $div = $(\"<div>\");\r\n            setWidth($div, \"100%\");\r\n            setHeight($div, scrollBarWidth - 1);\r\n            this._groupElement.after($div)\r\n        }\r\n        this._scrollBarWidth = scrollBarWidth\r\n    },\r\n    getScrollPath: function(offset) {\r\n        var tableElement = this.tableElement();\r\n        var cell;\r\n        offset -= parseInt(tableElement[0].style.top, 10) || 0;\r\n        each(tableElement.find(\"tr\"), (function(_, tr) {\r\n            var td = tr.childNodes[tr.childNodes.length - 1];\r\n            if (td && 1 === td.rowSpan && td.offsetTop <= offset && td.offsetHeight + td.offsetTop > offset) {\r\n                cell = td;\r\n                return false\r\n            }\r\n        }));\r\n        return getCellPath(tableElement, cell)\r\n    },\r\n    _moveFakeTable: function(scrollPos) {\r\n        this._moveFakeTableTop(scrollPos);\r\n        this.callBase()\r\n    },\r\n    _getRowClassNames: function(rowIndex, cell, rowClassNames) {\r\n        if (0 !== rowIndex & cell.expanded && !rowClassNames.includes(PIVOTGRID_EXPAND_BORDER)) {\r\n            rowClassNames.push(PIVOTGRID_EXPAND_BORDER)\r\n        }\r\n    },\r\n    _getMainElementMarkup: function() {\r\n        return \"<tbody class='\" + this._getAreaClassName() + \"'>\"\r\n    },\r\n    _getCloseMainElementMarkup: function() {\r\n        return \"</tbody>\"\r\n    },\r\n    updateColspans: function(columnCount) {\r\n        var rows = this.tableElement()[0].rows;\r\n        var columnOffset = 0;\r\n        var columnOffsetResetIndexes = [];\r\n        if (this.getColumnsCount() - columnCount > 0) {\r\n            return\r\n        }\r\n        for (var i = 0; i < rows.length; i++) {\r\n            for (var j = 0; j < rows[i].cells.length; j++) {\r\n                var cell = rows[i].cells[j];\r\n                var rowSpan = cell.rowSpan;\r\n                if (columnOffsetResetIndexes[i]) {\r\n                    columnOffset -= columnOffsetResetIndexes[i];\r\n                    columnOffsetResetIndexes[i] = 0\r\n                }\r\n                var diff = columnCount - (columnOffset + cell.colSpan);\r\n                if (j === rows[i].cells.length - 1 && diff > 0) {\r\n                    cell.colSpan = cell.colSpan + diff\r\n                }\r\n                columnOffsetResetIndexes[i + rowSpan] = (columnOffsetResetIndexes[i + rowSpan] || 0) + cell.colSpan;\r\n                columnOffset += cell.colSpan\r\n            }\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}