{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_datetime-period-converter.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DateTimePeriodConverter = void 0;\n\nvar _range_filter_selection_validator_1 = require(\"./_range-filter-selection-validator\");\n\nfunction getFirstWeekDate(date, firstDayOfWeek) {\n  var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\n  var result = new Date(date);\n  result.setDate(date.getDate() - delta);\n  return result;\n}\n\nvar DateTimePeriodConverter = function () {\n  function DateTimePeriodConverter() {}\n\n  DateTimePeriodConverter.toRange = function (period, firstDayOfWeek) {\n    var now = new Date();\n    var range = {\n      startValue: this._getDateTime(period.Start, now, firstDayOfWeek),\n      endValue: this._getDateTime(period.End, now, firstDayOfWeek)\n    };\n    var endLimit = period.Start && period.End && period.End < period.Start ? period.Start : period.End;\n    range = _range_filter_selection_validator_1.RangeFilterSelectionValidator.validateLimitsOrder(range);\n\n    if (endLimit && endLimit.Relative) {\n      range.endValue.setMilliseconds(range.endValue.getMilliseconds() - 1);\n      range = _range_filter_selection_validator_1.RangeFilterSelectionValidator.validateLimitsOrder(range);\n    }\n\n    return range;\n  };\n\n  DateTimePeriodConverter._getDateTime = function (limit, now, firstDayOfWeek) {\n    if (limit) {\n      if (!limit.Relative) return limit.Date;\n\n      switch (limit.Interval) {\n        case 'Year':\n          return new Date(now.getFullYear() + limit.Offset, 0, 1);\n\n        case 'Quarter':\n          var quarterIndex = Math.floor(now.getMonth() / 3);\n          return new Date(now.getFullYear(), quarterIndex * 3 + 3 * limit.Offset, 1);\n\n        case 'Month':\n          return new Date(now.getFullYear(), now.getMonth() + limit.Offset, 1);\n\n        case 'Week':\n          var firstDayOfCurrentWeek = getFirstWeekDate(now, firstDayOfWeek);\n          return new Date(firstDayOfCurrentWeek.getFullYear(), firstDayOfCurrentWeek.getMonth(), firstDayOfCurrentWeek.getDate() + 7 * limit.Offset);\n\n        case 'Day':\n          return new Date(now.getFullYear(), now.getMonth(), now.getDate() + limit.Offset);\n\n        case 'Hour':\n          return new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours() + limit.Offset, 0, 0, 0);\n\n        case 'Minute':\n          return new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes() + limit.Offset, 0, 0);\n\n        case 'Second':\n          return new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds() + limit.Offset, 0);\n      }\n    }\n  };\n\n  return DateTimePeriodConverter;\n}();\n\nexports.DateTimePeriodConverter = DateTimePeriodConverter;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/viewer-items/range-selector-item/_datetime-period-converter.js"],"names":["Object","defineProperty","exports","value","DateTimePeriodConverter","_range_filter_selection_validator_1","require","getFirstWeekDate","date","firstDayOfWeek","delta","getDay","result","Date","setDate","getDate","toRange","period","now","range","startValue","_getDateTime","Start","endValue","End","endLimit","RangeFilterSelectionValidator","validateLimitsOrder","Relative","setMilliseconds","getMilliseconds","limit","Interval","getFullYear","Offset","quarterIndex","Math","floor","getMonth","firstDayOfCurrentWeek","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_datetime-period-converter.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DateTimePeriodConverter = void 0;\nvar _range_filter_selection_validator_1 = require(\"./_range-filter-selection-validator\");\nfunction getFirstWeekDate(date, firstDayOfWeek) {\n    var delta = (date.getDay() - firstDayOfWeek + 7) % 7;\n    var result = new Date(date);\n    result.setDate(date.getDate() - delta);\n    return result;\n}\nvar DateTimePeriodConverter = (function () {\n    function DateTimePeriodConverter() {\n    }\n    DateTimePeriodConverter.toRange = function (period, firstDayOfWeek) {\n        var now = new Date();\n        var range = {\n            startValue: this._getDateTime(period.Start, now, firstDayOfWeek),\n            endValue: this._getDateTime(period.End, now, firstDayOfWeek)\n        };\n        var endLimit = period.Start && period.End && period.End < period.Start ? period.Start : period.End;\n        range = _range_filter_selection_validator_1.RangeFilterSelectionValidator.validateLimitsOrder(range);\n        if (endLimit && endLimit.Relative) {\n            range.endValue.setMilliseconds(range.endValue.getMilliseconds() - 1);\n            range = _range_filter_selection_validator_1.RangeFilterSelectionValidator.validateLimitsOrder(range);\n        }\n        return range;\n    };\n    DateTimePeriodConverter._getDateTime = function (limit, now, firstDayOfWeek) {\n        if (limit) {\n            if (!limit.Relative)\n                return limit.Date;\n            switch (limit.Interval) {\n                case 'Year':\n                    return new Date(now.getFullYear() + limit.Offset, 0, 1);\n                case 'Quarter':\n                    var quarterIndex = Math.floor(now.getMonth() / 3);\n                    return new Date(now.getFullYear(), quarterIndex * 3 + 3 * limit.Offset, 1);\n                case 'Month':\n                    return new Date(now.getFullYear(), now.getMonth() + limit.Offset, 1);\n                case 'Week':\n                    var firstDayOfCurrentWeek = getFirstWeekDate(now, firstDayOfWeek);\n                    return new Date(firstDayOfCurrentWeek.getFullYear(), firstDayOfCurrentWeek.getMonth(), firstDayOfCurrentWeek.getDate() + 7 * limit.Offset);\n                case 'Day':\n                    return new Date(now.getFullYear(), now.getMonth(), now.getDate() + limit.Offset);\n                case 'Hour':\n                    return new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours() + limit.Offset, 0, 0, 0);\n                case 'Minute':\n                    return new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes() + limit.Offset, 0, 0);\n                case 'Second':\n                    return new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds() + limit.Offset, 0);\n            }\n        }\n    };\n    return DateTimePeriodConverter;\n}());\nexports.DateTimePeriodConverter = DateTimePeriodConverter;\n"]},"metadata":{},"sourceType":"script"}