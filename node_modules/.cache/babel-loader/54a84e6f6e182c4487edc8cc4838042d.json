{"ast":null,"code":"/**\r\n* DevExpress Dashboard (format-condition-range-set.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormatConditionRangeSet = void 0;\n\nvar analytics_utils_1 = require(\"@devexpress/analytics-core/analytics-utils\");\n\nvar format_condition_range_base_1 = require(\"./format-condition-range-base\");\n\nvar _format_condition_range_set_1 = require(\"./metadata/_format-condition-range-set\");\n\nvar range_generator_1 = require(\"./range-generator\");\n\nvar FormatConditionRangeSet = function (_super) {\n  __extends(FormatConditionRangeSet, _super);\n\n  function FormatConditionRangeSet(modelJson, serializer) {\n    if (serializer === void 0) {\n      serializer = new analytics_utils_1.ModelSerializer();\n    }\n\n    return _super.call(this, modelJson, serializer) || this;\n  }\n\n  FormatConditionRangeSet.prototype.getInfo = function () {\n    return _format_condition_range_set_1.formatConditionRangeSetSerializationsInfo;\n  };\n\n  FormatConditionRangeSet.prototype.getActualPredefinedType = function () {\n    return range_generator_1.FormatConditionRangeGenerator.getPredefinedType(this.actualStyles, function (type) {\n      var c = new FormatConditionRangeSet();\n      range_generator_1.FormatConditionRangeGenerator.generateRangeSet(c, type);\n      return c;\n    });\n  };\n\n  FormatConditionRangeSet.prototype.setActualPredefinedType = function (type) {\n    range_generator_1.FormatConditionRangeGenerator.generateRangeSet(this, type);\n  };\n\n  return FormatConditionRangeSet;\n}(format_condition_range_base_1.FormatConditionRangeBase);\n\nexports.FormatConditionRangeSet = FormatConditionRangeSet;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/model/format-rules/conditions/range/format-condition-range-set.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","FormatConditionRangeSet","analytics_utils_1","require","format_condition_range_base_1","_format_condition_range_set_1","range_generator_1","_super","modelJson","serializer","ModelSerializer","getInfo","formatConditionRangeSetSerializationsInfo","getActualPredefinedType","FormatConditionRangeGenerator","getPredefinedType","actualStyles","type","c","generateRangeSet","setActualPredefinedType","FormatConditionRangeBase"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (format-condition-range-set.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormatConditionRangeSet = void 0;\nvar analytics_utils_1 = require(\"@devexpress/analytics-core/analytics-utils\");\nvar format_condition_range_base_1 = require(\"./format-condition-range-base\");\nvar _format_condition_range_set_1 = require(\"./metadata/_format-condition-range-set\");\nvar range_generator_1 = require(\"./range-generator\");\nvar FormatConditionRangeSet = (function (_super) {\n    __extends(FormatConditionRangeSet, _super);\n    function FormatConditionRangeSet(modelJson, serializer) {\n        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }\n        return _super.call(this, modelJson, serializer) || this;\n    }\n    FormatConditionRangeSet.prototype.getInfo = function () {\n        return _format_condition_range_set_1.formatConditionRangeSetSerializationsInfo;\n    };\n    FormatConditionRangeSet.prototype.getActualPredefinedType = function () {\n        return range_generator_1.FormatConditionRangeGenerator.getPredefinedType(this.actualStyles, function (type) {\n            var c = new FormatConditionRangeSet();\n            range_generator_1.FormatConditionRangeGenerator.generateRangeSet(c, type);\n            return c;\n        });\n    };\n    FormatConditionRangeSet.prototype.setActualPredefinedType = function (type) {\n        range_generator_1.FormatConditionRangeGenerator.generateRangeSet(this, type);\n    };\n    return FormatConditionRangeSet;\n}(format_condition_range_base_1.FormatConditionRangeBase));\nexports.FormatConditionRangeSet = FormatConditionRangeSet;\n"]},"metadata":{},"sourceType":"script"}