{"ast":null,"code":"/**\r\n* DevExpress Dashboard (data-source-wizard-extension.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MultiQueryDataSourceWizardExtension = exports.DataSourceWizardExtension = void 0;\n\nvar analytics_data_1 = require(\"@devexpress/analytics-core/analytics-data\");\n\nvar analytics_internal_1 = require(\"@devexpress/analytics-core/analytics-internal\");\n\nvar analytics_utils_1 = require(\"@devexpress/analytics-core/analytics-utils\");\n\nvar analytics_wizard_1 = require(\"@devexpress/analytics-core/analytics-wizard\");\n\nvar analytics_wizard_internal_1 = require(\"@devexpress/analytics-core/analytics-wizard-internal\");\n\nvar queryBuilder_widgets_internal_1 = require(\"@devexpress/analytics-core/queryBuilder-widgets-internal\");\n\nvar string_1 = require(\"devextreme/core/utils/string\");\n\nvar ko = require(\"knockout\");\n\nvar control_options_1 = require(\"../../common/control-options\");\n\nvar _options_manager_1 = require(\"../../common/internal/_options-manager\");\n\nvar _default_1 = require(\"../../data/localization/_default\");\n\nvar _jquery_helpers_1 = require(\"../../data/_jquery-helpers\");\n\nvar dashboard_1 = require(\"../../model/dashboard\");\n\nvar json_data_source_1 = require(\"../../model/data-sources/json-data-source\");\n\nvar _obsolete_helper_1 = require(\"../../model/internal/_obsolete-helper\");\n\nvar _data_source_wizard_model_1 = require(\"./models/_data-source-wizard-model\");\n\nvar _parameters_item_provider_1 = require(\"./pages/_parameters-item-provider\");\n\nvar _data_source_wizard_1 = require(\"./wizards/_data-source-wizard\");\n\nvar _edit_json_data_source_wizard_1 = require(\"./wizards/_edit-json-data-source-wizard\");\n\nvar _multi_query_data_source_wizard_1 = require(\"./wizards/_multi-query-data-source-wizard\");\n\nvar _helpers_1 = require(\"./_helpers\");\n\nvar name = 'data-source-wizard';\nvar nameAlias = 'dataSourceWizard';\n\nvar DataSourceWizardExtension = function () {\n  function DataSourceWizardExtension(dashboardControl, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.dashboardControl = dashboardControl;\n    this._subscriptions = [];\n    this._loadingPanelVisible = ko.observable(false);\n    this._wizardElement = ko.observable();\n    this._optionsManager = new _options_manager_1.OptionsManager();\n    this._customTemplate = {\n      name: 'dx-dashboard-data-source-wizard',\n      data: {\n        loadingPanelVisible: this._loadingPanelVisible,\n        wizardElement: this._wizardElement\n      }\n    };\n    this.name = name;\n    var defaultOptions = {\n      enableCustomSql: false,\n      allowCreateNewJsonConnection: false,\n      wizardSettings: {\n        enableSqlDataSource: true,\n        enableOlapDataSource: true,\n        enableJsonDataSource: true,\n        enableFederationDataSource: true\n      }\n    };\n\n    this._optionsManager.initialize({\n      alias: nameAlias,\n      dashboardControl: dashboardControl,\n      defaultOptions: defaultOptions,\n      eventsHolder: this,\n      initOptions: options,\n      optionChanged: function (args) {\n        return _this._optionChanged(args);\n      }\n    });\n\n    this._requestWrapper = new _data_source_wizard_model_1.DashboardRequestWrapper(dashboardControl);\n    this._dashboardParameters = ko.computed(function () {\n      return dashboardControl.dashboard() && dashboardControl.dashboard().parameters() || [];\n    });\n\n    this._getConnectionStringsCallback = function () {\n      return _this.dashboardControl.remoteService.getFromServer(dashboardControl._endpointCollection.dataSourceWizardUrls.GetConnectionStringsAction).fail(function (request) {\n        _this.dashboardControl.notificationController.showError(_default_1.getLocalizationById('DashboardWebStringId.Notification.AttemptToConnectionStrings'), request);\n      });\n    };\n\n    _obsolete_helper_1.defineObsoleteMethod({\n      target: this,\n      memberName: 'createDataSource',\n      oldMemberDisplayName: 'DataSourceWizardExtension.createDataSource',\n      newMemberDisplayName: 'DataSourceWizardExtension.showDataSourceCreatingDialog',\n      action: function (dataSources) {\n        _this.showDataSourceCreatingDialog().done(function (dataSource) {\n          dataSources.push(dataSource);\n        });\n      }\n    });\n\n    _obsolete_helper_1.defineObsoleteMethod({\n      target: this,\n      memberName: 'editSqlQuery',\n      oldMemberDisplayName: 'DataSourceWizardExtension.editSqlQuery',\n      newMemberDisplayName: 'DataSourceWizardExtension.showSqlQueryEditingDialog',\n      action: function (dashboardSqlDataSource, queryName) {\n        _this.showSqlQueryEditingDialog(dashboardSqlDataSource, queryName);\n      }\n    });\n  }\n\n  DataSourceWizardExtension._convertDataSource = function (dashboardSqlDataSource, requestWrapper) {\n    var serializer = new analytics_utils_1.ModelSerializer({\n      useRefs: false\n    });\n    return dashboardSqlDataSource ? new analytics_data_1.SqlDataSource(serializer.serialize(dashboardSqlDataSource), serializer, requestWrapper) : new analytics_data_1.SqlDataSource({}, serializer, requestWrapper);\n  };\n\n  Object.defineProperty(DataSourceWizardExtension.prototype, \"isCustomSqlEnabled\", {\n    get: function () {\n      return this._optionsManager.get('enableCustomSql');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSourceWizardExtension.prototype, \"_dataSourceBrowser\", {\n    get: function () {\n      return this.dashboardControl._dataSourceBrowser;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DataSourceWizardExtension.prototype.start = function () {\n    this.dashboardControl.customTemplates.push(this._customTemplate);\n  };\n\n  DataSourceWizardExtension.prototype.stop = function () {\n    this.dashboardControl.customTemplates.remove(this._customTemplate);\n\n    this._subscriptions.forEach(function (s) {\n      return s.dispose();\n    });\n\n    this._subscriptions = [];\n  };\n\n  DataSourceWizardExtension.prototype.showDataSourceCreatingDialog = function () {\n    return this._showDataSourceCreatingDialog(this._getFederationDataProviders());\n  };\n\n  DataSourceWizardExtension.prototype._getDashboardDataSources = function () {\n    return this.dashboardControl.dashboard() && this.dashboardControl.dashboard().dataSources() || [];\n  };\n\n  DataSourceWizardExtension.prototype._getFederationDataProviders = function () {\n    return this._getDashboardDataSources().filter(function (ds) {\n      return ds._isFederationDataProvider;\n    });\n  };\n\n  DataSourceWizardExtension.prototype._showDataSourceCreatingDialog = function (federationDataProviders) {\n    var _this = this;\n\n    var deferred = _jquery_helpers_1.createJQueryDeferred();\n\n    var loadingConnectionsStrings = true;\n\n    this._loadingPanelVisible(true);\n\n    var stopLoading = function () {\n      loadingPanelSubscription.dispose();\n      loadingConnectionsStrings = false;\n    };\n\n    var loadingPanelSubscription = this._loadingPanelVisible.subscribe(function (newValue) {\n      if (!newValue && loadingConnectionsStrings) {\n        stopLoading();\n        deferred.reject();\n      }\n    });\n\n    var dashboardConnectionStrings = {\n      sql: ko.observableArray()\n    };\n\n    this._getConnectionStringsCallback().done(function (connectionStrings) {\n      stopLoading();\n\n      if (deferred.state() !== 'rejected') {\n        dashboardConnectionStrings = {\n          sql: ko.observableArray(connectionStrings.filter(function (c) {\n            return c.connectionType === 'Sql';\n          })),\n          json: ko.observableArray(connectionStrings.filter(function (c) {\n            return c.connectionType === 'Json';\n          })),\n          olap: connectionStrings.filter(function (c) {\n            return c.connectionType === 'Olap';\n          })\n        };\n      }\n    }).always(function () {\n      stopLoading();\n\n      if (deferred.state() !== 'rejected') {\n        var wizardFederationSources = _helpers_1.createDataSourceInfos(federationDataProviders);\n\n        var dataSourceWizard = _this.createDataSourceWizard(dashboardConnectionStrings, wizardFederationSources);\n\n        _this._initializeDataSourceWizard(dataSourceWizard, deferred);\n\n        _this._renderAndStartWizard(dataSourceWizard);\n\n        _this._loadingPanelVisible(false);\n      }\n    });\n\n    return deferred.promise();\n  };\n\n  DataSourceWizardExtension.prototype.showSqlQueryEditingDialog = function (dashboardSqlDataSource, queryName) {\n    var _this = this;\n\n    if (queryName && dashboardSqlDataSource.queries().filter(function (q) {\n      return q.name() === queryName;\n    }).length === 0) throw new Error(string_1.format(_default_1.getLocalizationById('DashboardWebStringId.Notification.QueryDoesNotExist'), queryName));\n\n    var dataSource = DataSourceWizardExtension._convertDataSource(dashboardSqlDataSource, this._requestWrapper);\n\n    var singleDataSourceWizard = this._createEditQueryWizard();\n\n    singleDataSourceWizard.initialize({\n      sqlDataSourceWizard: {\n        sqlDataSourceJSON: JSON.stringify(new analytics_utils_1.ModelSerializer().serialize(dataSource)),\n        queryName: queryName\n      }\n    }, function (factory, stateManager) {\n      return new _data_source_wizard_1.EditQueryWizardIterator(factory, stateManager);\n    });\n\n    singleDataSourceWizard['_finishCallback'] = function (state) {\n      var model = analytics_wizard_1._restoreSqlDataSourceFromState(state.sqlDataSourceWizard);\n\n      var queryIndex = model['_queryIndex'];\n      var query = model.sqlQuery;\n\n      if (queryIndex === dashboardSqlDataSource.queries().length) {\n        dashboardSqlDataSource.queries.push(query);\n      } else {\n        var oldQuery = dashboardSqlDataSource.queries()[queryIndex];\n        dashboardSqlDataSource.queries.splice(queryIndex, 1, query);\n\n        if (oldQuery.name() !== query.name()) {\n          _helpers_1.renameDataMember(_this.dashboardControl.dashboard(), dashboardSqlDataSource, oldQuery.name(), query.name());\n        }\n      }\n\n      var def = _jquery_helpers_1.createJQueryDeferred();\n\n      def.resolve();\n      return def.promise();\n    };\n\n    this._renderAndStartWizard(singleDataSourceWizard);\n  };\n\n  DataSourceWizardExtension.prototype.showFederationQueryEditingDialog = function (dashboardFederationDataSource, queryName) {\n    var _this = this;\n\n    var element = this._wizardElement();\n\n    if (element) {\n      var queryIndex_1 = dashboardFederationDataSource.queries().findIndex(function (q) {\n        return q.alias() === queryName;\n      });\n      if (queryIndex_1 === -1) throw new Error(string_1.format(_default_1.getLocalizationById('DashboardWebStringId.Notification.QueryDoesNotExist'), queryName));\n      var query = dashboardFederationDataSource.queries()[queryIndex_1];\n\n      var federationDataProviders = this._getFederationDataProviders();\n\n      var dataSourceInfos_1 = _helpers_1.createDataSourceInfos(federationDataProviders);\n\n      var analyticsDataSource = _helpers_1.toAnalyticsFederationDataSource(dashboardFederationDataSource, dataSourceInfos_1, this._dataSourceBrowser);\n\n      var analyticsQuery = analyticsDataSource.queries().find(function (q) {\n        return q.alias && q.alias() === queryName;\n      });\n\n      var setQuery = function (analyticsQuery) {\n        analyticsQuery.sources().forEach(function (analyticsSource) {\n          return _helpers_1.addSourceIfNotExists(analyticsSource, dashboardFederationDataSource, dataSourceInfos_1);\n        });\n\n        var newQuery = _helpers_1.toSameSourcesFederationQuery(analyticsQuery);\n\n        _helpers_1.addOrUpdateQuery(_this.dashboardControl.dashboard(), dashboardFederationDataSource, queryIndex_1, newQuery);\n      };\n\n      var popup_1;\n\n      switch (query.queryType) {\n        case 'SelectNode':\n          popup_1 = new analytics_wizard_internal_1.FederationSelectQueryBuilderPopup(setQuery, analyticsDataSource);\n          break;\n\n        case 'UnionNode':\n          popup_1 = new analytics_wizard_internal_1.FederationUnionQueryBuilderPopup(setQuery, analyticsDataSource);\n          break;\n\n        case 'TransformationNode':\n          popup_1 = new analytics_wizard_internal_1.FederationTransformQueryBuilderPopup(setQuery, analyticsDataSource);\n          break;\n\n        default:\n          throw new Error(\"The query of '\" + query.queryType + \"' type cannot be edited. \");\n      }\n\n      ko.cleanNode(element);\n      analytics_internal_1.appendStaticContextToRootViewModel(popup_1);\n      ko.applyBindingsToNode(element, {\n        template: 'dxrd-querybuilder-federation-popup'\n      }, popup_1);\n      var visibleSubscription_1 = popup_1.popupVisible.subscribe(function (visible) {\n        if (!visible) {\n          visibleSubscription_1.dispose();\n          popup_1.dispose();\n          ko.cleanNode(element);\n        }\n      });\n      popup_1.show(analyticsQuery);\n    }\n  };\n\n  DataSourceWizardExtension.prototype.showManageFederationQueriesDialog = function (dashboardFederationDataSource) {\n    var _this = this;\n\n    var element = this._wizardElement();\n\n    if (element) {\n      var federationDataProviders = this._getFederationDataProviders();\n\n      var federationDataProvidersInfos_1 = _helpers_1.createDataSourceInfos(federationDataProviders);\n\n      var analyticsFederationDataSource_1 = _helpers_1.toAnalyticsFederationDataSource(dashboardFederationDataSource, federationDataProvidersInfos_1, this._dataSourceBrowser);\n\n      var editor_1 = new queryBuilder_widgets_internal_1.ManageFederatedQueriesEditor(analyticsFederationDataSource_1, function () {\n        analyticsFederationDataSource_1.sources().forEach(function (analyticsSource) {\n          return _helpers_1.addSourceIfNotExists(analyticsSource, dashboardFederationDataSource, federationDataProvidersInfos_1);\n        });\n        var removedQueries = dashboardFederationDataSource.queries().filter(function (dashboardQuery) {\n          return !analyticsFederationDataSource_1.queries().some(function (analyticsQuery) {\n            return analyticsQuery[_helpers_1.initialQueryAliasSymbol] === dashboardQuery.alias();\n          });\n        });\n        removedQueries.forEach(function (q) {\n          return dashboardFederationDataSource.queries.remove(q);\n        });\n        analyticsFederationDataSource_1.queries().forEach(function (analyticsQuery, i) {\n          var newQuery = _helpers_1.toSameSourcesFederationQuery(analyticsQuery);\n\n          var initialQuery = dashboardFederationDataSource.queries().find(function (q) {\n            return q.alias() === analyticsQuery[_helpers_1.initialQueryAliasSymbol];\n          });\n          var queryIndex = !!initialQuery ? dashboardFederationDataSource.queries().indexOf(initialQuery) : dashboardFederationDataSource.queries().length;\n\n          _helpers_1.addOrUpdateQuery(_this.dashboardControl.dashboard(), dashboardFederationDataSource, queryIndex, newQuery);\n        });\n      });\n      ko.cleanNode(element);\n      analytics_internal_1.appendStaticContextToRootViewModel(editor_1);\n      ko.applyBindingsToNode(element, {\n        template: 'dxrd-federated-manageQueries-editor'\n      }, editor_1);\n      var visibleSubscription_2 = editor_1.popupVisible.subscribe(function (visible) {\n        if (!visible) {\n          visibleSubscription_2.dispose();\n          editor_1.dispose();\n          analyticsFederationDataSource_1.dispose();\n        }\n      });\n      editor_1.popupVisible(true);\n    }\n  };\n\n  DataSourceWizardExtension.prototype._createEditQueryWizard = function () {\n    var wizard = _data_source_wizard_1.createDashboardDataSourceWizard(this._requestWrapper, this._dashboardParameters, !this.isCustomSqlEnabled, false, {\n      enableOlapDataSource: false,\n      enableSqlDataSource: false,\n      enableJsonDataSource: false,\n      enableObjectDataSource: false,\n      enableFederationDataSource: false\n    }, {\n      sql: ko.observableArray()\n    }, [], this._dataSourceBrowser, this.dashboardControl.customTemplates);\n\n    this._customizeDataSourceWizard('EditQueryWizard', wizard);\n\n    return wizard;\n  };\n\n  DataSourceWizardExtension.prototype._optionChanged = function (args) {\n    switch (args.name) {\n      case 'allowCreateNewJsonConnection':\n      case 'enableCustomSql':\n      case 'wizardSettings':\n        return null;\n\n      default:\n        return null;\n    }\n  };\n\n  DataSourceWizardExtension.prototype.createDataSourceWizard = function (connectionStrings, federationSources) {\n    var wizard = _data_source_wizard_1.createDashboardDataSourceWizard(this._requestWrapper, this._dashboardParameters, !this.isCustomSqlEnabled, this._optionsManager.get('allowCreateNewJsonConnection') || this._optionsManager.getInitialOptions()['canCreateNewJsonDataSource'], this._optionsManager.get('wizardSettings'), connectionStrings, federationSources, this._dataSourceBrowser, this.dashboardControl.customTemplates);\n\n    this._customizeDataSourceWizard('DataSourceWizard', wizard);\n\n    return wizard;\n  };\n\n  DataSourceWizardExtension.prototype._createEditJsonDataSourceWizard = function () {\n    var wizard = _edit_json_data_source_wizard_1.createEditJsonDataSourceWizard(this._requestWrapper);\n\n    this._customizeDataSourceWizard('EditJsonDataSourceWizard', wizard);\n\n    return wizard;\n  };\n\n  DataSourceWizardExtension.prototype._customizeDataSourceWizard = function (customizationType, wizard) {\n    this._optionsManager.raiseEvent('customizeDataSourceWizard', {\n      type: customizationType,\n      wizard: wizard\n    });\n  };\n\n  DataSourceWizardExtension.prototype._createNewDataSourceWizardIterator = function (factory, stateManager) {\n    return new _data_source_wizard_1.CreateNewDataSourceWizardIterator(factory, stateManager);\n  };\n\n  DataSourceWizardExtension.prototype._initializeDataSourceWizard = function (wizard, deferred) {\n    var _this = this;\n\n    var initialState = new _data_source_wizard_1.DashboardDataSourceWizardState();\n    wizard.initialize(initialState, function (factory, stateManager) {\n      return _this._createNewDataSourceWizardIterator(factory, stateManager);\n    });\n\n    wizard['_finishCallback'] = function (state) {\n      var sqlModel = state.sqlDataSourceWizard;\n      var olapModel = state.olapDataSourceWizard;\n      var jsonModel = state.jsonDataSourceWizard;\n      var federationModel = state.federationDataSourceWizard;\n\n      if (sqlModel && state.dashboardDataSourceType === 'Sql') {\n        var sqlDataSource_1 = dashboard_1.Dashboard._createDataSource({\n          '@ItemType': 'SqlDataSource'\n        }, new analytics_utils_1.ModelSerializer());\n\n        var dataSourceWrapper = analytics_wizard_1._restoreSqlDataSourceFromState(sqlModel);\n\n        sqlDataSource_1.connection.name(dataSourceWrapper.sqlDataSource.connection.name());\n        sqlDataSource_1.connection.fromAppConfig(true);\n        dataSourceWrapper.sqlDataSource.queries().forEach(function (query) {\n          sqlDataSource_1.queries.push(query);\n          sqlDataSource_1.name(sqlDataSource_1.queries()[0].name());\n        });\n        deferred.resolve(sqlDataSource_1);\n        return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n      } else if (olapModel && state.dashboardDataSourceType === 'Olap') {\n        var olapDataSource = dashboard_1.Dashboard._createDataSource({\n          '@ItemType': 'OLAPDataSource'\n        }, new analytics_utils_1.ModelSerializer());\n\n        olapDataSource.connectionName(olapModel.connectionName);\n        olapDataSource.name(_default_1.getLocalizationById('DashboardStringId.DefaultOlapDataSourceName'));\n        deferred.resolve(olapDataSource);\n        return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n      } else if (jsonModel && state.dashboardDataSourceType === 'Json') {\n        var jsonDeferred_1 = _jquery_helpers_1.createJQueryDeferred();\n\n        var analyticsDataSourceDeferred_1 = _jquery_helpers_1.createJQueryDeferred();\n\n        var analyticsDataSource_1 = analytics_wizard_1._restoreJsonDataSourceFromState(jsonModel);\n\n        if (jsonModel.newConnectionName) {\n          var jsonSource = analyticsDataSource_1.source;\n          var jsonSourceJSON = JSON.stringify(jsonSource.serialize(true));\n          var requestString = JSON.stringify({\n            connectionName: jsonModel.newConnectionName,\n            customJson: jsonSource.json(),\n            uriJsonSourceJSON: jsonSourceJSON\n          });\n\n          _this._requestWrapper.sendRequest('saveJsonSource', encodeURIComponent(requestString)).done(function () {\n            analyticsDataSource_1.connectionName(jsonModel.newConnectionName);\n            analyticsDataSource_1.source = null;\n            analyticsDataSourceDeferred_1.resolve(analyticsDataSource_1);\n          }).fail(function () {\n            return analyticsDataSourceDeferred_1.reject();\n          });\n        } else {\n          analyticsDataSourceDeferred_1.resolve(analyticsDataSource_1);\n        }\n\n        analyticsDataSourceDeferred_1.done(function (repDataSource) {\n          var serializer = new analytics_utils_1.ModelSerializer();\n          var analyticsJsonDataSourceJson = serializer.serialize(repDataSource);\n          var dataSource = new json_data_source_1.JsonDataSource(analyticsJsonDataSourceJson);\n          dataSource.name(_default_1.getLocalizationById('DashboardStringId.DefaultJsonDataSourceName'));\n          deferred.resolve(dataSource);\n          jsonDeferred_1.resolve();\n        }).fail(function () {\n          deferred.reject();\n          jsonDeferred_1.reject();\n        });\n        return jsonDeferred_1.promise();\n      } else if (federationModel && state.dashboardDataSourceType === 'Federation') {\n        deferred.resolve(_helpers_1.createNewFederationDataSource(federationModel, wizard.options.dataSources));\n        return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n      } else {\n        deferred.reject();\n        throw Error(_default_1.getLocalizationById('DashboardWebStringId.Notification.UnsupportedDataSourceType'));\n      }\n    };\n  };\n\n  DataSourceWizardExtension.prototype._showEditJsonDataSourceDialog = function (jsonDataSource) {\n    var serializer = new analytics_utils_1.ModelSerializer();\n    var dashboardJsonDataSourceJson = serializer.serialize(jsonDataSource);\n\n    var editJsonDataSourceWizard = this._createEditJsonDataSourceWizard();\n\n    editJsonDataSourceWizard.initialize({\n      jsonDataSourceWizard: {\n        jsonScheme: JSON.stringify(dashboardJsonDataSourceJson.Schema),\n        rootElement: jsonDataSource.rootElement()\n      }\n    }, function (factory, stateManager) {\n      return new _edit_json_data_source_wizard_1.EditJsonDataSourceWizardIterator(factory, stateManager);\n    });\n\n    editJsonDataSourceWizard['_finishCallback'] = function (state) {\n      var jsonModel = state.jsonDataSourceWizard;\n\n      if (jsonModel) {\n        var modifiedReportsDataSource = analytics_wizard_1._restoreJsonDataSourceFromState(jsonModel);\n\n        jsonDataSource.schema(modifiedReportsDataSource.schema);\n        jsonDataSource.rootElement(modifiedReportsDataSource.rootElement());\n      }\n\n      return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n    };\n\n    this._renderAndStartWizard(editJsonDataSourceWizard);\n  };\n\n  DataSourceWizardExtension.prototype._renderAndStartWizard = function (wizardModel) {\n    var element = this._wizardElement();\n\n    if (element) {\n      ko.cleanNode(element);\n      var viewModel = {\n        wizardModel: wizardModel,\n        dataBindingsProvider: new _parameters_item_provider_1.ParametersItemProvider(this._dashboardParameters()),\n        resizeHandler: {\n          starting: function () {},\n          stopped: function () {},\n          disabled: analytics_internal_1.DragDropHandler.started\n        }\n      };\n      analytics_internal_1.appendStaticContextToRootViewModel(viewModel);\n      ko.applyBindingsToNode(element, {\n        template: 'dx-dashboard-data-source-wizard-binding'\n      }, viewModel);\n      wizardModel.isVisible.subscribe(function (visible) {\n        if (!visible) {\n          wizardModel.dispose();\n          ko.cleanNode(element);\n        }\n      });\n    }\n\n    wizardModel.start();\n  };\n\n  return DataSourceWizardExtension;\n}();\n\nexports.DataSourceWizardExtension = DataSourceWizardExtension;\n\nvar MultiQueryDataSourceWizardExtension = function (_super) {\n  __extends(MultiQueryDataSourceWizardExtension, _super);\n\n  function MultiQueryDataSourceWizardExtension(dashboardControl, options) {\n    return _super.call(this, dashboardControl, options) || this;\n  }\n\n  MultiQueryDataSourceWizardExtension.prototype._createNewDataSourceWizardIterator = function (factory, stateManager) {\n    return new _multi_query_data_source_wizard_1.DashboardMultiQueryWizardIterator(factory, stateManager);\n  };\n\n  MultiQueryDataSourceWizardExtension.prototype.createDataSourceWizard = function (connectionStrings, federationSources) {\n    var wizard = _multi_query_data_source_wizard_1.createDashboardMultiQueryWizard(this._requestWrapper, this._dashboardParameters, !this.isCustomSqlEnabled, this._optionsManager.get('allowCreateNewJsonConnection') || this._optionsManager.getInitialOptions()['canCreateNewJsonDataSource'], this._optionsManager.get('wizardSettings'), connectionStrings, federationSources, this._dataSourceBrowser, this.dashboardControl.customTemplates);\n\n    this._customizeDataSourceWizard('MultiQueryDataSourceWizard', wizard);\n\n    return wizard;\n  };\n\n  return MultiQueryDataSourceWizardExtension;\n}(DataSourceWizardExtension);\n\nexports.MultiQueryDataSourceWizardExtension = MultiQueryDataSourceWizardExtension;\n\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) {\n  return new DataSourceWizardExtension(dashboardControl, options);\n};\n\ncontrol_options_1.extensionNameMap[name] = nameAlias;\nko.virtualElements.allowedBindings['dx-dashboard-element-accessor-binding'] = true;\nko.bindingHandlers['dx-dashboard-element-accessor-binding'] = {\n  init: function (element, valueAccessor, _, __, bindingContext) {\n    var params = ko.unwrap(valueAccessor());\n    params.element(element);\n    return {\n      controlsDescendantBindings: true\n    };\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/data-source-wizard/data-source-wizard-extension.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","MultiQueryDataSourceWizardExtension","DataSourceWizardExtension","analytics_data_1","require","analytics_internal_1","analytics_utils_1","analytics_wizard_1","analytics_wizard_internal_1","queryBuilder_widgets_internal_1","string_1","ko","control_options_1","_options_manager_1","_default_1","_jquery_helpers_1","dashboard_1","json_data_source_1","_obsolete_helper_1","_data_source_wizard_model_1","_parameters_item_provider_1","_data_source_wizard_1","_edit_json_data_source_wizard_1","_multi_query_data_source_wizard_1","_helpers_1","name","nameAlias","dashboardControl","options","_this","_subscriptions","_loadingPanelVisible","observable","_wizardElement","_optionsManager","OptionsManager","_customTemplate","data","loadingPanelVisible","wizardElement","defaultOptions","enableCustomSql","allowCreateNewJsonConnection","wizardSettings","enableSqlDataSource","enableOlapDataSource","enableJsonDataSource","enableFederationDataSource","initialize","alias","eventsHolder","initOptions","optionChanged","args","_optionChanged","_requestWrapper","DashboardRequestWrapper","_dashboardParameters","computed","dashboard","parameters","_getConnectionStringsCallback","remoteService","getFromServer","_endpointCollection","dataSourceWizardUrls","GetConnectionStringsAction","fail","request","notificationController","showError","getLocalizationById","defineObsoleteMethod","target","memberName","oldMemberDisplayName","newMemberDisplayName","action","dataSources","showDataSourceCreatingDialog","done","dataSource","push","dashboardSqlDataSource","queryName","showSqlQueryEditingDialog","_convertDataSource","requestWrapper","serializer","ModelSerializer","useRefs","SqlDataSource","serialize","get","enumerable","configurable","_dataSourceBrowser","start","customTemplates","stop","remove","forEach","s","dispose","_showDataSourceCreatingDialog","_getFederationDataProviders","_getDashboardDataSources","filter","ds","_isFederationDataProvider","federationDataProviders","deferred","createJQueryDeferred","loadingConnectionsStrings","stopLoading","loadingPanelSubscription","subscribe","newValue","reject","dashboardConnectionStrings","sql","observableArray","connectionStrings","state","c","connectionType","json","olap","always","wizardFederationSources","createDataSourceInfos","dataSourceWizard","createDataSourceWizard","_initializeDataSourceWizard","_renderAndStartWizard","promise","queries","q","length","Error","format","singleDataSourceWizard","_createEditQueryWizard","sqlDataSourceWizard","sqlDataSourceJSON","JSON","stringify","factory","stateManager","EditQueryWizardIterator","model","_restoreSqlDataSourceFromState","queryIndex","query","sqlQuery","oldQuery","splice","renameDataMember","def","resolve","showFederationQueryEditingDialog","dashboardFederationDataSource","element","queryIndex_1","findIndex","dataSourceInfos_1","analyticsDataSource","toAnalyticsFederationDataSource","analyticsQuery","find","setQuery","sources","analyticsSource","addSourceIfNotExists","newQuery","toSameSourcesFederationQuery","addOrUpdateQuery","popup_1","queryType","FederationSelectQueryBuilderPopup","FederationUnionQueryBuilderPopup","FederationTransformQueryBuilderPopup","cleanNode","appendStaticContextToRootViewModel","applyBindingsToNode","template","visibleSubscription_1","popupVisible","visible","show","showManageFederationQueriesDialog","federationDataProvidersInfos_1","analyticsFederationDataSource_1","editor_1","ManageFederatedQueriesEditor","removedQueries","dashboardQuery","some","initialQueryAliasSymbol","i","initialQuery","indexOf","visibleSubscription_2","wizard","createDashboardDataSourceWizard","isCustomSqlEnabled","enableObjectDataSource","_customizeDataSourceWizard","federationSources","getInitialOptions","_createEditJsonDataSourceWizard","createEditJsonDataSourceWizard","customizationType","raiseEvent","type","_createNewDataSourceWizardIterator","CreateNewDataSourceWizardIterator","initialState","DashboardDataSourceWizardState","sqlModel","olapModel","olapDataSourceWizard","jsonModel","jsonDataSourceWizard","federationModel","federationDataSourceWizard","dashboardDataSourceType","sqlDataSource_1","Dashboard","_createDataSource","dataSourceWrapper","connection","sqlDataSource","fromAppConfig","olapDataSource","connectionName","jsonDeferred_1","analyticsDataSourceDeferred_1","analyticsDataSource_1","_restoreJsonDataSourceFromState","newConnectionName","jsonSource","source","jsonSourceJSON","requestString","customJson","uriJsonSourceJSON","sendRequest","encodeURIComponent","repDataSource","analyticsJsonDataSourceJson","JsonDataSource","createNewFederationDataSource","_showEditJsonDataSourceDialog","jsonDataSource","dashboardJsonDataSourceJson","editJsonDataSourceWizard","jsonScheme","Schema","rootElement","EditJsonDataSourceWizardIterator","modifiedReportsDataSource","schema","wizardModel","viewModel","dataBindingsProvider","ParametersItemProvider","resizeHandler","starting","stopped","disabled","DragDropHandler","started","isVisible","_super","DashboardMultiQueryWizardIterator","createDashboardMultiQueryWizard","designerExtensions","extensionNameMap","virtualElements","allowedBindings","bindingHandlers","init","valueAccessor","_","bindingContext","params","unwrap","controlsDescendantBindings"],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;;AAeAV,MAAM,CAACa,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mCAAR,GAA8CF,OAAO,CAACG,yBAAR,GAAoC,KAAK,CAAvF;;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,2CAAD,CAA9B;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,+CAAD,CAAlC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,4CAAD,CAA/B;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,6CAAD,CAAhC;;AACA,IAAII,2BAA2B,GAAGJ,OAAO,CAAC,sDAAD,CAAzC;;AACA,IAAIK,+BAA+B,GAAGL,OAAO,CAAC,0DAAD,CAA7C;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,8BAAD,CAAtB;;AACA,IAAIO,EAAE,GAAGP,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIQ,iBAAiB,GAAGR,OAAO,CAAC,8BAAD,CAA/B;;AACA,IAAIS,kBAAkB,GAAGT,OAAO,CAAC,wCAAD,CAAhC;;AACA,IAAIU,UAAU,GAAGV,OAAO,CAAC,kCAAD,CAAxB;;AACA,IAAIW,iBAAiB,GAAGX,OAAO,CAAC,4BAAD,CAA/B;;AACA,IAAIY,WAAW,GAAGZ,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIa,kBAAkB,GAAGb,OAAO,CAAC,2CAAD,CAAhC;;AACA,IAAIc,kBAAkB,GAAGd,OAAO,CAAC,uCAAD,CAAhC;;AACA,IAAIe,2BAA2B,GAAGf,OAAO,CAAC,oCAAD,CAAzC;;AACA,IAAIgB,2BAA2B,GAAGhB,OAAO,CAAC,mCAAD,CAAzC;;AACA,IAAIiB,qBAAqB,GAAGjB,OAAO,CAAC,+BAAD,CAAnC;;AACA,IAAIkB,+BAA+B,GAAGlB,OAAO,CAAC,yCAAD,CAA7C;;AACA,IAAImB,iCAAiC,GAAGnB,OAAO,CAAC,2CAAD,CAA/C;;AACA,IAAIoB,UAAU,GAAGpB,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIqB,IAAI,GAAG,oBAAX;AACA,IAAIC,SAAS,GAAG,kBAAhB;;AACA,IAAIxB,yBAAyB,GAAI,YAAY;AACzC,WAASA,yBAAT,CAAmCyB,gBAAnC,EAAqDC,OAArD,EAA8D;AAC1D,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAID,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAKD,gBAAL,GAAwBA,gBAAxB;AACA,SAAKG,cAAL,GAAsB,EAAtB;AACA,SAAKC,oBAAL,GAA4BpB,EAAE,CAACqB,UAAH,CAAc,KAAd,CAA5B;AACA,SAAKC,cAAL,GAAsBtB,EAAE,CAACqB,UAAH,EAAtB;AACA,SAAKE,eAAL,GAAuB,IAAIrB,kBAAkB,CAACsB,cAAvB,EAAvB;AACA,SAAKC,eAAL,GAAuB;AACnBX,MAAAA,IAAI,EAAE,iCADa;AAEnBY,MAAAA,IAAI,EAAE;AACFC,QAAAA,mBAAmB,EAAE,KAAKP,oBADxB;AAEFQ,QAAAA,aAAa,EAAE,KAAKN;AAFlB;AAFa,KAAvB;AAOA,SAAKR,IAAL,GAAYA,IAAZ;AACA,QAAIe,cAAc,GAAG;AACjBC,MAAAA,eAAe,EAAE,KADA;AAEjBC,MAAAA,4BAA4B,EAAE,KAFb;AAGjBC,MAAAA,cAAc,EAAE;AACZC,QAAAA,mBAAmB,EAAE,IADT;AAEZC,QAAAA,oBAAoB,EAAE,IAFV;AAGZC,QAAAA,oBAAoB,EAAE,IAHV;AAIZC,QAAAA,0BAA0B,EAAE;AAJhB;AAHC,KAArB;;AAUA,SAAKb,eAAL,CAAqBc,UAArB,CAAgC;AAC5BC,MAAAA,KAAK,EAAEvB,SADqB;AAE5BC,MAAAA,gBAAgB,EAAEA,gBAFU;AAG5Ba,MAAAA,cAAc,EAAEA,cAHY;AAI5BU,MAAAA,YAAY,EAAE,IAJc;AAK5BC,MAAAA,WAAW,EAAEvB,OALe;AAM5BwB,MAAAA,aAAa,EAAE,UAAUC,IAAV,EAAgB;AAAE,eAAOxB,KAAK,CAACyB,cAAN,CAAqBD,IAArB,CAAP;AAAoC;AANzC,KAAhC;;AAQA,SAAKE,eAAL,GAAuB,IAAIpC,2BAA2B,CAACqC,uBAAhC,CAAwD7B,gBAAxD,CAAvB;AACA,SAAK8B,oBAAL,GAA4B9C,EAAE,CAAC+C,QAAH,CAAY,YAAY;AAAE,aAAO/B,gBAAgB,CAACgC,SAAjB,MAAgChC,gBAAgB,CAACgC,SAAjB,GAA6BC,UAA7B,EAAhC,IAA6E,EAApF;AAAyF,KAAnH,CAA5B;;AACA,SAAKC,6BAAL,GAAqC,YAAY;AAC7C,aAAOhC,KAAK,CAACF,gBAAN,CAAuBmC,aAAvB,CAAqCC,aAArC,CAAmDpC,gBAAgB,CAACqC,mBAAjB,CAAqCC,oBAArC,CAA0DC,0BAA7G,EACFC,IADE,CACG,UAAUC,OAAV,EAAmB;AACzBvC,QAAAA,KAAK,CAACF,gBAAN,CAAuB0C,sBAAvB,CAA8CC,SAA9C,CAAwDxD,UAAU,CAACyD,mBAAX,CAA+B,8DAA/B,CAAxD,EAAwJH,OAAxJ;AACH,OAHM,CAAP;AAIH,KALD;;AAMAlD,IAAAA,kBAAkB,CAACsD,oBAAnB,CAAwC;AACpCC,MAAAA,MAAM,EAAE,IAD4B;AAEpCC,MAAAA,UAAU,EAAE,kBAFwB;AAGpCC,MAAAA,oBAAoB,EAAE,4CAHc;AAIpCC,MAAAA,oBAAoB,EAAE,wDAJc;AAKpCC,MAAAA,MAAM,EAAE,UAAUC,WAAV,EAAuB;AAC3BjD,QAAAA,KAAK,CAACkD,4BAAN,GAAqCC,IAArC,CAA0C,UAAUC,UAAV,EAAsB;AAC5DH,UAAAA,WAAW,CAACI,IAAZ,CAAiBD,UAAjB;AACH,SAFD;AAGH;AATmC,KAAxC;;AAWA/D,IAAAA,kBAAkB,CAACsD,oBAAnB,CAAwC;AACpCC,MAAAA,MAAM,EAAE,IAD4B;AAEpCC,MAAAA,UAAU,EAAE,cAFwB;AAGpCC,MAAAA,oBAAoB,EAAE,wCAHc;AAIpCC,MAAAA,oBAAoB,EAAE,qDAJc;AAKpCC,MAAAA,MAAM,EAAE,UAAUM,sBAAV,EAAkCC,SAAlC,EAA6C;AACjDvD,QAAAA,KAAK,CAACwD,yBAAN,CAAgCF,sBAAhC,EAAwDC,SAAxD;AACH;AAPmC,KAAxC;AASH;;AACDlF,EAAAA,yBAAyB,CAACoF,kBAA1B,GAA+C,UAAUH,sBAAV,EAAkCI,cAAlC,EAAkD;AAC7F,QAAIC,UAAU,GAAG,IAAIlF,iBAAiB,CAACmF,eAAtB,CAAsC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAtC,CAAjB;AACA,WAAOP,sBAAsB,GACzB,IAAIhF,gBAAgB,CAACwF,aAArB,CAAmCH,UAAU,CAACI,SAAX,CAAqBT,sBAArB,CAAnC,EAAiFK,UAAjF,EAA6FD,cAA7F,CADyB,GAEzB,IAAIpF,gBAAgB,CAACwF,aAArB,CAAmC,EAAnC,EAAuCH,UAAvC,EAAmDD,cAAnD,CAFJ;AAGH,GALD;;AAMAtG,EAAAA,MAAM,CAACa,cAAP,CAAsBI,yBAAyB,CAACZ,SAAhD,EAA2D,oBAA3D,EAAiF;AAC7EuG,IAAAA,GAAG,EAAE,YAAY;AAAE,aAAO,KAAK3D,eAAL,CAAqB2D,GAArB,CAAyB,iBAAzB,CAAP;AAAqD,KADK;AAE7EC,IAAAA,UAAU,EAAE,KAFiE;AAG7EC,IAAAA,YAAY,EAAE;AAH+D,GAAjF;AAKA9G,EAAAA,MAAM,CAACa,cAAP,CAAsBI,yBAAyB,CAACZ,SAAhD,EAA2D,oBAA3D,EAAiF;AAC7EuG,IAAAA,GAAG,EAAE,YAAY;AAAE,aAAO,KAAKlE,gBAAL,CAAsBqE,kBAA7B;AAAkD,KADQ;AAE7EF,IAAAA,UAAU,EAAE,KAFiE;AAG7EC,IAAAA,YAAY,EAAE;AAH+D,GAAjF;;AAKA7F,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC2G,KAApC,GAA4C,YAAY;AACpD,SAAKtE,gBAAL,CAAsBuE,eAAtB,CAAsChB,IAAtC,CAA2C,KAAK9C,eAAhD;AACH,GAFD;;AAGAlC,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC6G,IAApC,GAA2C,YAAY;AACnD,SAAKxE,gBAAL,CAAsBuE,eAAtB,CAAsCE,MAAtC,CAA6C,KAAKhE,eAAlD;;AACA,SAAKN,cAAL,CAAoBuE,OAApB,CAA4B,UAAUC,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACC,OAAF,EAAP;AAAqB,KAAhE;;AACA,SAAKzE,cAAL,GAAsB,EAAtB;AACH,GAJD;;AAKA5B,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCyF,4BAApC,GAAmE,YAAY;AAC3E,WAAO,KAAKyB,6BAAL,CAAmC,KAAKC,2BAAL,EAAnC,CAAP;AACH,GAFD;;AAGAvG,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCoH,wBAApC,GAA+D,YAAY;AACvE,WAAO,KAAK/E,gBAAL,CAAsBgC,SAAtB,MAAqC,KAAKhC,gBAAL,CAAsBgC,SAAtB,GAAkCmB,WAAlC,EAArC,IAAwF,EAA/F;AACH,GAFD;;AAGA5E,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCmH,2BAApC,GAAkE,YAAY;AAC1E,WAAO,KAAKC,wBAAL,GAAgCC,MAAhC,CAAuC,UAAUC,EAAV,EAAc;AAAE,aAAOA,EAAE,CAACC,yBAAV;AAAsC,KAA7F,CAAP;AACH,GAFD;;AAGA3G,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCkH,6BAApC,GAAoE,UAAUM,uBAAV,EAAmC;AACnG,QAAIjF,KAAK,GAAG,IAAZ;;AACA,QAAIkF,QAAQ,GAAGhG,iBAAiB,CAACiG,oBAAlB,EAAf;;AACA,QAAIC,yBAAyB,GAAG,IAAhC;;AACA,SAAKlF,oBAAL,CAA0B,IAA1B;;AACA,QAAImF,WAAW,GAAG,YAAY;AAC1BC,MAAAA,wBAAwB,CAACZ,OAAzB;AACAU,MAAAA,yBAAyB,GAAG,KAA5B;AACH,KAHD;;AAIA,QAAIE,wBAAwB,GAAG,KAAKpF,oBAAL,CAA0BqF,SAA1B,CAAoC,UAAUC,QAAV,EAAoB;AACnF,UAAI,CAACA,QAAD,IAAaJ,yBAAjB,EAA4C;AACxCC,QAAAA,WAAW;AACXH,QAAAA,QAAQ,CAACO,MAAT;AACH;AACJ,KAL8B,CAA/B;;AAMA,QAAIC,0BAA0B,GAAG;AAC7BC,MAAAA,GAAG,EAAE7G,EAAE,CAAC8G,eAAH;AADwB,KAAjC;;AAGA,SAAK5D,6BAAL,GACKmB,IADL,CACU,UAAU0C,iBAAV,EAA6B;AACnCR,MAAAA,WAAW;;AACX,UAAIH,QAAQ,CAACY,KAAT,OAAqB,UAAzB,EAAqC;AACjCJ,QAAAA,0BAA0B,GAAG;AACzBC,UAAAA,GAAG,EAAE7G,EAAE,CAAC8G,eAAH,CAAmBC,iBAAiB,CAACf,MAAlB,CAAyB,UAAUiB,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAACC,cAAF,KAAqB,KAA5B;AAAoC,WAA5E,CAAnB,CADoB;AAEzBC,UAAAA,IAAI,EAAEnH,EAAE,CAAC8G,eAAH,CAAmBC,iBAAiB,CAACf,MAAlB,CAAyB,UAAUiB,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAACC,cAAF,KAAqB,MAA5B;AAAqC,WAA7E,CAAnB,CAFmB;AAGzBE,UAAAA,IAAI,EAAEL,iBAAiB,CAACf,MAAlB,CAAyB,UAAUiB,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAACC,cAAF,KAAqB,MAA5B;AAAqC,WAA7E;AAHmB,SAA7B;AAKH;AACJ,KAVD,EAWKG,MAXL,CAWY,YAAY;AACpBd,MAAAA,WAAW;;AACX,UAAIH,QAAQ,CAACY,KAAT,OAAqB,UAAzB,EAAqC;AACjC,YAAIM,uBAAuB,GAAGzG,UAAU,CAAC0G,qBAAX,CAAiCpB,uBAAjC,CAA9B;;AACA,YAAIqB,gBAAgB,GAAGtG,KAAK,CAACuG,sBAAN,CAA6Bb,0BAA7B,EAAyDU,uBAAzD,CAAvB;;AACApG,QAAAA,KAAK,CAACwG,2BAAN,CAAkCF,gBAAlC,EAAoDpB,QAApD;;AACAlF,QAAAA,KAAK,CAACyG,qBAAN,CAA4BH,gBAA5B;;AACAtG,QAAAA,KAAK,CAACE,oBAAN,CAA2B,KAA3B;AACH;AACJ,KApBD;;AAqBA,WAAOgF,QAAQ,CAACwB,OAAT,EAAP;AACH,GAxCD;;AAyCArI,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC+F,yBAApC,GAAgE,UAAUF,sBAAV,EAAkCC,SAAlC,EAA6C;AACzG,QAAIvD,KAAK,GAAG,IAAZ;;AACA,QAAIuD,SAAS,IAAID,sBAAsB,CAACqD,OAAvB,GAAiC7B,MAAjC,CAAwC,UAAU8B,CAAV,EAAa;AAAE,aAAOA,CAAC,CAAChH,IAAF,OAAa2D,SAApB;AAAgC,KAAvF,EAAyFsD,MAAzF,KAAoG,CAArH,EACI,MAAM,IAAIC,KAAJ,CAAUjI,QAAQ,CAACkI,MAAT,CAAgB9H,UAAU,CAACyD,mBAAX,CAA+B,qDAA/B,CAAhB,EAAuGa,SAAvG,CAAV,CAAN;;AACJ,QAAIH,UAAU,GAAG/E,yBAAyB,CAACoF,kBAA1B,CAA6CH,sBAA7C,EAAqE,KAAK5B,eAA1E,CAAjB;;AACA,QAAIsF,sBAAsB,GAAG,KAAKC,sBAAL,EAA7B;;AACAD,IAAAA,sBAAsB,CAAC7F,UAAvB,CAAkC;AAC9B+F,MAAAA,mBAAmB,EAAE;AACjBC,QAAAA,iBAAiB,EAAEC,IAAI,CAACC,SAAL,CAAe,IAAI5I,iBAAiB,CAACmF,eAAtB,GAAwCG,SAAxC,CAAkDX,UAAlD,CAAf,CADF;AAEjBG,QAAAA,SAAS,EAAEA;AAFM;AADS,KAAlC,EAKG,UAAU+D,OAAV,EAAmBC,YAAnB,EAAiC;AAAE,aAAO,IAAI/H,qBAAqB,CAACgI,uBAA1B,CAAkDF,OAAlD,EAA2DC,YAA3D,CAAP;AAAkF,KALxH;;AAMAP,IAAAA,sBAAsB,CAAC,iBAAD,CAAtB,GAA4C,UAAUlB,KAAV,EAAiB;AACzD,UAAI2B,KAAK,GAAG/I,kBAAkB,CAACgJ,8BAAnB,CAAkD5B,KAAK,CAACoB,mBAAxD,CAAZ;;AACA,UAAIS,UAAU,GAAGF,KAAK,CAAC,aAAD,CAAtB;AACA,UAAIG,KAAK,GAAGH,KAAK,CAACI,QAAlB;;AACA,UAAIF,UAAU,KAAKrE,sBAAsB,CAACqD,OAAvB,GAAiCE,MAApD,EAA4D;AACxDvD,QAAAA,sBAAsB,CAACqD,OAAvB,CAA+BtD,IAA/B,CAAoCuE,KAApC;AACH,OAFD,MAGK;AACD,YAAIE,QAAQ,GAAGxE,sBAAsB,CAACqD,OAAvB,GAAiCgB,UAAjC,CAAf;AACArE,QAAAA,sBAAsB,CAACqD,OAAvB,CAA+BoB,MAA/B,CAAsCJ,UAAtC,EAAkD,CAAlD,EAAqDC,KAArD;;AACA,YAAIE,QAAQ,CAAClI,IAAT,OAAoBgI,KAAK,CAAChI,IAAN,EAAxB,EAAsC;AAClCD,UAAAA,UAAU,CAACqI,gBAAX,CAA4BhI,KAAK,CAACF,gBAAN,CAAuBgC,SAAvB,EAA5B,EAAgEwB,sBAAhE,EAAwFwE,QAAQ,CAAClI,IAAT,EAAxF,EAAyGgI,KAAK,CAAChI,IAAN,EAAzG;AACH;AACJ;;AACD,UAAIqI,GAAG,GAAG/I,iBAAiB,CAACiG,oBAAlB,EAAV;;AACA8C,MAAAA,GAAG,CAACC,OAAJ;AACA,aAAOD,GAAG,CAACvB,OAAJ,EAAP;AACH,KAjBD;;AAkBA,SAAKD,qBAAL,CAA2BO,sBAA3B;AACH,GA/BD;;AAgCA3I,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC0K,gCAApC,GAAuE,UAAUC,6BAAV,EAAyC7E,SAAzC,EAAoD;AACvH,QAAIvD,KAAK,GAAG,IAAZ;;AACA,QAAIqI,OAAO,GAAG,KAAKjI,cAAL,EAAd;;AACA,QAAIiI,OAAJ,EAAa;AACT,UAAIC,YAAY,GAAGF,6BAA6B,CAACzB,OAA9B,GAAwC4B,SAAxC,CAAkD,UAAU3B,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACxF,KAAF,OAAcmC,SAArB;AAAiC,OAAlG,CAAnB;AACA,UAAI+E,YAAY,KAAK,CAAC,CAAtB,EACI,MAAM,IAAIxB,KAAJ,CAAUjI,QAAQ,CAACkI,MAAT,CAAgB9H,UAAU,CAACyD,mBAAX,CAA+B,qDAA/B,CAAhB,EAAuGa,SAAvG,CAAV,CAAN;AACJ,UAAIqE,KAAK,GAAGQ,6BAA6B,CAACzB,OAA9B,GAAwC2B,YAAxC,CAAZ;;AACA,UAAIrD,uBAAuB,GAAG,KAAKL,2BAAL,EAA9B;;AACA,UAAI4D,iBAAiB,GAAG7I,UAAU,CAAC0G,qBAAX,CAAiCpB,uBAAjC,CAAxB;;AACA,UAAIwD,mBAAmB,GAAG9I,UAAU,CAAC+I,+BAAX,CAA2CN,6BAA3C,EAA0EI,iBAA1E,EAA6F,KAAKrE,kBAAlG,CAA1B;;AACA,UAAIwE,cAAc,GAAGF,mBAAmB,CAAC9B,OAApB,GAA8BiC,IAA9B,CAAmC,UAAUhC,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACxF,KAAF,IAAWwF,CAAC,CAACxF,KAAF,OAAcmC,SAAhC;AAA4C,OAA9F,CAArB;;AACA,UAAIsF,QAAQ,GAAG,UAAUF,cAAV,EAA0B;AACrCA,QAAAA,cAAc,CAACG,OAAf,GACKtE,OADL,CACa,UAAUuE,eAAV,EAA2B;AAAE,iBAAOpJ,UAAU,CAACqJ,oBAAX,CAAgCD,eAAhC,EAAiDX,6BAAjD,EAAgFI,iBAAhF,CAAP;AAA4G,SADtJ;;AAEA,YAAIS,QAAQ,GAAGtJ,UAAU,CAACuJ,4BAAX,CAAwCP,cAAxC,CAAf;;AACAhJ,QAAAA,UAAU,CAACwJ,gBAAX,CAA4BnJ,KAAK,CAACF,gBAAN,CAAuBgC,SAAvB,EAA5B,EAAgEsG,6BAAhE,EAA+FE,YAA/F,EAA6GW,QAA7G;AACH,OALD;;AAMA,UAAIG,OAAJ;;AACA,cAAQxB,KAAK,CAACyB,SAAd;AACI,aAAK,YAAL;AACID,UAAAA,OAAO,GAAG,IAAIzK,2BAA2B,CAAC2K,iCAAhC,CAAkET,QAAlE,EAA4EJ,mBAA5E,CAAV;AACA;;AACJ,aAAK,WAAL;AACIW,UAAAA,OAAO,GAAG,IAAIzK,2BAA2B,CAAC4K,gCAAhC,CAAiEV,QAAjE,EAA2EJ,mBAA3E,CAAV;AACA;;AACJ,aAAK,oBAAL;AACIW,UAAAA,OAAO,GAAG,IAAIzK,2BAA2B,CAAC6K,oCAAhC,CAAqEX,QAArE,EAA+EJ,mBAA/E,CAAV;AACA;;AACJ;AACI,gBAAM,IAAI3B,KAAJ,CAAU,mBAAmBc,KAAK,CAACyB,SAAzB,GAAqC,2BAA/C,CAAN;AAXR;;AAaAvK,MAAAA,EAAE,CAAC2K,SAAH,CAAapB,OAAb;AACA7J,MAAAA,oBAAoB,CAACkL,kCAArB,CAAwDN,OAAxD;AACAtK,MAAAA,EAAE,CAAC6K,mBAAH,CAAuBtB,OAAvB,EAAgC;AAAEuB,QAAAA,QAAQ,EAAE;AAAZ,OAAhC,EAAoFR,OAApF;AACA,UAAIS,qBAAqB,GAAGT,OAAO,CAACU,YAAR,CAAqBvE,SAArB,CAA+B,UAAUwE,OAAV,EAAmB;AAC1E,YAAI,CAACA,OAAL,EAAc;AACVF,UAAAA,qBAAqB,CAACnF,OAAtB;AACA0E,UAAAA,OAAO,CAAC1E,OAAR;AACA5F,UAAAA,EAAE,CAAC2K,SAAH,CAAapB,OAAb;AACH;AACJ,OAN2B,CAA5B;AAOAe,MAAAA,OAAO,CAACY,IAAR,CAAarB,cAAb;AACH;AACJ,GA5CD;;AA6CAtK,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCwM,iCAApC,GAAwE,UAAU7B,6BAAV,EAAyC;AAC7G,QAAIpI,KAAK,GAAG,IAAZ;;AACA,QAAIqI,OAAO,GAAG,KAAKjI,cAAL,EAAd;;AACA,QAAIiI,OAAJ,EAAa;AACT,UAAIpD,uBAAuB,GAAG,KAAKL,2BAAL,EAA9B;;AACA,UAAIsF,8BAA8B,GAAGvK,UAAU,CAAC0G,qBAAX,CAAiCpB,uBAAjC,CAArC;;AACA,UAAIkF,+BAA+B,GAAGxK,UAAU,CAAC+I,+BAAX,CAA2CN,6BAA3C,EAA0E8B,8BAA1E,EAA0G,KAAK/F,kBAA/G,CAAtC;;AACA,UAAIiG,QAAQ,GAAG,IAAIxL,+BAA+B,CAACyL,4BAApC,CAAiEF,+BAAjE,EAAkG,YAAY;AACzHA,QAAAA,+BAA+B,CAACrB,OAAhC,GACKtE,OADL,CACa,UAAUuE,eAAV,EAA2B;AAAE,iBAAOpJ,UAAU,CAACqJ,oBAAX,CAAgCD,eAAhC,EAAiDX,6BAAjD,EAAgF8B,8BAAhF,CAAP;AAAyH,SADnK;AAEA,YAAII,cAAc,GAAGlC,6BAA6B,CAACzB,OAA9B,GAAwC7B,MAAxC,CAA+C,UAAUyF,cAAV,EAA0B;AAC1F,iBAAO,CAACJ,+BAA+B,CAACxD,OAAhC,GAA0C6D,IAA1C,CAA+C,UAAU7B,cAAV,EAA0B;AAAE,mBAAOA,cAAc,CAAChJ,UAAU,CAAC8K,uBAAZ,CAAd,KAAuDF,cAAc,CAACnJ,KAAf,EAA9D;AAAuF,WAAlK,CAAR;AACH,SAFoB,CAArB;AAGAkJ,QAAAA,cAAc,CAAC9F,OAAf,CAAuB,UAAUoC,CAAV,EAAa;AAAE,iBAAOwB,6BAA6B,CAACzB,OAA9B,CAAsCpC,MAAtC,CAA6CqC,CAA7C,CAAP;AAAyD,SAA/F;AACAuD,QAAAA,+BAA+B,CAACxD,OAAhC,GAA0CnC,OAA1C,CAAkD,UAAUmE,cAAV,EAA0B+B,CAA1B,EAA6B;AAC3E,cAAIzB,QAAQ,GAAGtJ,UAAU,CAACuJ,4BAAX,CAAwCP,cAAxC,CAAf;;AACA,cAAIgC,YAAY,GAAGvC,6BAA6B,CAACzB,OAA9B,GAAwCiC,IAAxC,CAA6C,UAAUhC,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAACxF,KAAF,OAAcuH,cAAc,CAAChJ,UAAU,CAAC8K,uBAAZ,CAAnC;AAA0E,WAAtI,CAAnB;AACA,cAAI9C,UAAU,GAAG,CAAC,CAACgD,YAAF,GAAiBvC,6BAA6B,CAACzB,OAA9B,GAAwCiE,OAAxC,CAAgDD,YAAhD,CAAjB,GAAiFvC,6BAA6B,CAACzB,OAA9B,GAAwCE,MAA1I;;AACAlH,UAAAA,UAAU,CAACwJ,gBAAX,CAA4BnJ,KAAK,CAACF,gBAAN,CAAuBgC,SAAvB,EAA5B,EAAgEsG,6BAAhE,EAA+FT,UAA/F,EAA2GsB,QAA3G;AACH,SALD;AAMH,OAbc,CAAf;AAcAnK,MAAAA,EAAE,CAAC2K,SAAH,CAAapB,OAAb;AACA7J,MAAAA,oBAAoB,CAACkL,kCAArB,CAAwDU,QAAxD;AACAtL,MAAAA,EAAE,CAAC6K,mBAAH,CAAuBtB,OAAvB,EAAgC;AAAEuB,QAAAA,QAAQ,EAAE;AAAZ,OAAhC,EAAqFQ,QAArF;AACA,UAAIS,qBAAqB,GAAGT,QAAQ,CAACN,YAAT,CAAsBvE,SAAtB,CAAgC,UAAUwE,OAAV,EAAmB;AAC3E,YAAI,CAACA,OAAL,EAAc;AACVc,UAAAA,qBAAqB,CAACnG,OAAtB;AACA0F,UAAAA,QAAQ,CAAC1F,OAAT;AACAyF,UAAAA,+BAA+B,CAACzF,OAAhC;AACH;AACJ,OAN2B,CAA5B;AAOA0F,MAAAA,QAAQ,CAACN,YAAT,CAAsB,IAAtB;AACH;AACJ,GAjCD;;AAkCAzL,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCwJ,sBAApC,GAA6D,YAAY;AACrE,QAAI6D,MAAM,GAAGtL,qBAAqB,CAACuL,+BAAtB,CAAsD,KAAKrJ,eAA3D,EAA4E,KAAKE,oBAAjF,EAAuG,CAAC,KAAKoJ,kBAA7G,EAAiI,KAAjI,EAAwI;AAAEhK,MAAAA,oBAAoB,EAAE,KAAxB;AAA+BD,MAAAA,mBAAmB,EAAE,KAApD;AAA2DE,MAAAA,oBAAoB,EAAE,KAAjF;AAAwFgK,MAAAA,sBAAsB,EAAE,KAAhH;AAAuH/J,MAAAA,0BAA0B,EAAE;AAAnJ,KAAxI,EAAoS;AAAEyE,MAAAA,GAAG,EAAE7G,EAAE,CAAC8G,eAAH;AAAP,KAApS,EAAmU,EAAnU,EAAuU,KAAKzB,kBAA5U,EAAgW,KAAKrE,gBAAL,CAAsBuE,eAAtX,CAAb;;AACA,SAAK6G,0BAAL,CAAgC,iBAAhC,EAAmDJ,MAAnD;;AACA,WAAOA,MAAP;AACH,GAJD;;AAKAzM,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCgE,cAApC,GAAqD,UAAUD,IAAV,EAAgB;AACjE,YAAQA,IAAI,CAAC5B,IAAb;AACI,WAAK,8BAAL;AACA,WAAK,iBAAL;AACA,WAAK,gBAAL;AACI,eAAO,IAAP;;AACJ;AACI,eAAO,IAAP;AANR;AAQH,GATD;;AAUAvB,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC8I,sBAApC,GAA6D,UAAUV,iBAAV,EAA6BsF,iBAA7B,EAAgD;AACzG,QAAIL,MAAM,GAAGtL,qBAAqB,CAACuL,+BAAtB,CAAsD,KAAKrJ,eAA3D,EAA4E,KAAKE,oBAAjF,EAAuG,CAAC,KAAKoJ,kBAA7G,EAAiI,KAAK3K,eAAL,CAAqB2D,GAArB,CAAyB,8BAAzB,KAA4D,KAAK3D,eAAL,CAAqB+K,iBAArB,GAAyC,4BAAzC,CAA7L,EAAqQ,KAAK/K,eAAL,CAAqB2D,GAArB,CAAyB,gBAAzB,CAArQ,EAAiT6B,iBAAjT,EAAoUsF,iBAApU,EAAuV,KAAKhH,kBAA5V,EAAgX,KAAKrE,gBAAL,CAAsBuE,eAAtY,CAAb;;AACA,SAAK6G,0BAAL,CAAgC,kBAAhC,EAAoDJ,MAApD;;AACA,WAAOA,MAAP;AACH,GAJD;;AAKAzM,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC4N,+BAApC,GAAsE,YAAY;AAC9E,QAAIP,MAAM,GAAGrL,+BAA+B,CAAC6L,8BAAhC,CAA+D,KAAK5J,eAApE,CAAb;;AACA,SAAKwJ,0BAAL,CAAgC,0BAAhC,EAA4DJ,MAA5D;;AACA,WAAOA,MAAP;AACH,GAJD;;AAKAzM,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCyN,0BAApC,GAAiE,UAAUK,iBAAV,EAA6BT,MAA7B,EAAqC;AAClG,SAAKzK,eAAL,CAAqBmL,UAArB,CAAgC,2BAAhC,EAA6D;AAAEC,MAAAA,IAAI,EAAEF,iBAAR;AAA2BT,MAAAA,MAAM,EAAEA;AAAnC,KAA7D;AACH,GAFD;;AAGAzM,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCiO,kCAApC,GAAyE,UAAUpE,OAAV,EAAmBC,YAAnB,EAAiC;AACtG,WAAO,IAAI/H,qBAAqB,CAACmM,iCAA1B,CAA4DrE,OAA5D,EAAqEC,YAArE,CAAP;AACH,GAFD;;AAGAlJ,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoC+I,2BAApC,GAAkE,UAAUsE,MAAV,EAAkB5F,QAAlB,EAA4B;AAC1F,QAAIlF,KAAK,GAAG,IAAZ;;AACA,QAAI4L,YAAY,GAAG,IAAIpM,qBAAqB,CAACqM,8BAA1B,EAAnB;AACAf,IAAAA,MAAM,CAAC3J,UAAP,CAAkByK,YAAlB,EAAgC,UAAUtE,OAAV,EAAmBC,YAAnB,EAAiC;AAAE,aAAOvH,KAAK,CAAC0L,kCAAN,CAAyCpE,OAAzC,EAAkDC,YAAlD,CAAP;AAAyE,KAA5I;;AACAuD,IAAAA,MAAM,CAAC,iBAAD,CAAN,GAA4B,UAAUhF,KAAV,EAAiB;AACzC,UAAIgG,QAAQ,GAAGhG,KAAK,CAACoB,mBAArB;AACA,UAAI6E,SAAS,GAAGjG,KAAK,CAACkG,oBAAtB;AACA,UAAIC,SAAS,GAAGnG,KAAK,CAACoG,oBAAtB;AACA,UAAIC,eAAe,GAAGrG,KAAK,CAACsG,0BAA5B;;AACA,UAAIN,QAAQ,IAAIhG,KAAK,CAACuG,uBAAN,KAAkC,KAAlD,EAAyD;AACrD,YAAIC,eAAe,GAAGnN,WAAW,CAACoN,SAAZ,CAAsBC,iBAAtB,CAAwC;AAAE,uBAAa;AAAf,SAAxC,EAA0E,IAAI/N,iBAAiB,CAACmF,eAAtB,EAA1E,CAAtB;;AACA,YAAI6I,iBAAiB,GAAG/N,kBAAkB,CAACgJ,8BAAnB,CAAkDoE,QAAlD,CAAxB;;AACAQ,QAAAA,eAAe,CAACI,UAAhB,CAA2B9M,IAA3B,CAAgC6M,iBAAiB,CAACE,aAAlB,CAAgCD,UAAhC,CAA2C9M,IAA3C,EAAhC;AACA0M,QAAAA,eAAe,CAACI,UAAhB,CAA2BE,aAA3B,CAAyC,IAAzC;AACAH,QAAAA,iBAAiB,CAACE,aAAlB,CAAgChG,OAAhC,GAA0CnC,OAA1C,CAAkD,UAAUoD,KAAV,EAAiB;AAC/D0E,UAAAA,eAAe,CAAC3F,OAAhB,CAAwBtD,IAAxB,CAA6BuE,KAA7B;AACA0E,UAAAA,eAAe,CAAC1M,IAAhB,CAAqB0M,eAAe,CAAC3F,OAAhB,GAA0B,CAA1B,EAA6B/G,IAA7B,EAArB;AACH,SAHD;AAIAsF,QAAAA,QAAQ,CAACgD,OAAT,CAAiBoE,eAAjB;AACA,eAAOpN,iBAAiB,CAACiG,oBAAlB,GAAyC+C,OAAzC,GAAmDxB,OAAnD,EAAP;AACH,OAXD,MAYK,IAAIqF,SAAS,IAAIjG,KAAK,CAACuG,uBAAN,KAAkC,MAAnD,EAA2D;AAC5D,YAAIQ,cAAc,GAAG1N,WAAW,CAACoN,SAAZ,CAAsBC,iBAAtB,CAAwC;AAAE,uBAAa;AAAf,SAAxC,EAA2E,IAAI/N,iBAAiB,CAACmF,eAAtB,EAA3E,CAArB;;AACAiJ,QAAAA,cAAc,CAACC,cAAf,CAA8Bf,SAAS,CAACe,cAAxC;AACAD,QAAAA,cAAc,CAACjN,IAAf,CAAoBX,UAAU,CAACyD,mBAAX,CAA+B,6CAA/B,CAApB;AACAwC,QAAAA,QAAQ,CAACgD,OAAT,CAAiB2E,cAAjB;AACA,eAAO3N,iBAAiB,CAACiG,oBAAlB,GAAyC+C,OAAzC,GAAmDxB,OAAnD,EAAP;AACH,OANI,MAOA,IAAIuF,SAAS,IAAInG,KAAK,CAACuG,uBAAN,KAAkC,MAAnD,EAA2D;AAC5D,YAAIU,cAAc,GAAG7N,iBAAiB,CAACiG,oBAAlB,EAArB;;AACA,YAAI6H,6BAA6B,GAAG9N,iBAAiB,CAACiG,oBAAlB,EAApC;;AACA,YAAI8H,qBAAqB,GAAGvO,kBAAkB,CAACwO,+BAAnB,CAAmDjB,SAAnD,CAA5B;;AACA,YAAIA,SAAS,CAACkB,iBAAd,EAAiC;AAC7B,cAAIC,UAAU,GAAGH,qBAAqB,CAACI,MAAvC;AACA,cAAIC,cAAc,GAAGlG,IAAI,CAACC,SAAL,CAAe+F,UAAU,CAACrJ,SAAX,CAAqB,IAArB,CAAf,CAArB;AACA,cAAIwJ,aAAa,GAAGnG,IAAI,CAACC,SAAL,CAAe;AAC/ByF,YAAAA,cAAc,EAAEb,SAAS,CAACkB,iBADK;AAE/BK,YAAAA,UAAU,EAAEJ,UAAU,CAACnH,IAAX,EAFmB;AAG/BwH,YAAAA,iBAAiB,EAAEH;AAHY,WAAf,CAApB;;AAKAtN,UAAAA,KAAK,CAAC0B,eAAN,CACKgM,WADL,CACiB,gBADjB,EACmCC,kBAAkB,CAACJ,aAAD,CADrD,EAEKpK,IAFL,CAEU,YAAY;AAClB8J,YAAAA,qBAAqB,CAACH,cAAtB,CAAqCb,SAAS,CAACkB,iBAA/C;AACAF,YAAAA,qBAAqB,CAACI,MAAtB,GAA+B,IAA/B;AACAL,YAAAA,6BAA6B,CAAC9E,OAA9B,CAAsC+E,qBAAtC;AACH,WAND,EAOK3K,IAPL,CAOU,YAAY;AAAE,mBAAO0K,6BAA6B,CAACvH,MAA9B,EAAP;AAAgD,WAPxE;AAQH,SAhBD,MAiBK;AACDuH,UAAAA,6BAA6B,CAAC9E,OAA9B,CAAsC+E,qBAAtC;AACH;;AACDD,QAAAA,6BAA6B,CACxB7J,IADL,CACU,UAAUyK,aAAV,EAAyB;AAC/B,cAAIjK,UAAU,GAAG,IAAIlF,iBAAiB,CAACmF,eAAtB,EAAjB;AACA,cAAIiK,2BAA2B,GAAGlK,UAAU,CAACI,SAAX,CAAqB6J,aAArB,CAAlC;AACA,cAAIxK,UAAU,GAAG,IAAIhE,kBAAkB,CAAC0O,cAAvB,CAAsCD,2BAAtC,CAAjB;AACAzK,UAAAA,UAAU,CAACxD,IAAX,CAAgBX,UAAU,CAACyD,mBAAX,CAA+B,6CAA/B,CAAhB;AACAwC,UAAAA,QAAQ,CAACgD,OAAT,CAAiB9E,UAAjB;AACA2J,UAAAA,cAAc,CAAC7E,OAAf;AACH,SARD,EASK5F,IATL,CASU,YAAY;AAClB4C,UAAAA,QAAQ,CAACO,MAAT;AACAsH,UAAAA,cAAc,CAACtH,MAAf;AACH,SAZD;AAaA,eAAOsH,cAAc,CAACrG,OAAf,EAAP;AACH,OAtCI,MAuCA,IAAIyF,eAAe,IAAIrG,KAAK,CAACuG,uBAAN,KAAkC,YAAzD,EAAuE;AACxEnH,QAAAA,QAAQ,CAACgD,OAAT,CAAiBvI,UAAU,CAACoO,6BAAX,CAAyC5B,eAAzC,EAA0DrB,MAAM,CAAC/K,OAAP,CAAekD,WAAzE,CAAjB;AACA,eAAO/D,iBAAiB,CAACiG,oBAAlB,GAAyC+C,OAAzC,GAAmDxB,OAAnD,EAAP;AACH,OAHI,MAIA;AACDxB,QAAAA,QAAQ,CAACO,MAAT;AACA,cAAMqB,KAAK,CAAC7H,UAAU,CAACyD,mBAAX,CAA+B,6DAA/B,CAAD,CAAX;AACH;AACJ,KAvED;AAwEH,GA5ED;;AA6EArE,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCuQ,6BAApC,GAAoE,UAAUC,cAAV,EAA0B;AAC1F,QAAItK,UAAU,GAAG,IAAIlF,iBAAiB,CAACmF,eAAtB,EAAjB;AACA,QAAIsK,2BAA2B,GAAGvK,UAAU,CAACI,SAAX,CAAqBkK,cAArB,CAAlC;;AACA,QAAIE,wBAAwB,GAAG,KAAK9C,+BAAL,EAA/B;;AACA8C,IAAAA,wBAAwB,CAAChN,UAAzB,CAAoC;AAChC+K,MAAAA,oBAAoB,EAAE;AAClBkC,QAAAA,UAAU,EAAEhH,IAAI,CAACC,SAAL,CAAe6G,2BAA2B,CAACG,MAA3C,CADM;AAElBC,QAAAA,WAAW,EAAEL,cAAc,CAACK,WAAf;AAFK;AADU,KAApC,EAKG,UAAUhH,OAAV,EAAmBC,YAAnB,EAAiC;AAAE,aAAO,IAAI9H,+BAA+B,CAAC8O,gCAApC,CAAqEjH,OAArE,EAA8EC,YAA9E,CAAP;AAAqG,KAL3I;;AAMA4G,IAAAA,wBAAwB,CAAC,iBAAD,CAAxB,GAA8C,UAAUrI,KAAV,EAAiB;AAC3D,UAAImG,SAAS,GAAGnG,KAAK,CAACoG,oBAAtB;;AACA,UAAID,SAAJ,EAAe;AACX,YAAIuC,yBAAyB,GAAG9P,kBAAkB,CAACwO,+BAAnB,CAAmDjB,SAAnD,CAAhC;;AACAgC,QAAAA,cAAc,CAACQ,MAAf,CAAsBD,yBAAyB,CAACC,MAAhD;AACAR,QAAAA,cAAc,CAACK,WAAf,CAA2BE,yBAAyB,CAACF,WAA1B,EAA3B;AACH;;AACD,aAAOpP,iBAAiB,CAACiG,oBAAlB,GAAyC+C,OAAzC,GAAmDxB,OAAnD,EAAP;AACH,KARD;;AASA,SAAKD,qBAAL,CAA2B0H,wBAA3B;AACH,GApBD;;AAqBA9P,EAAAA,yBAAyB,CAACZ,SAA1B,CAAoCgJ,qBAApC,GAA4D,UAAUiI,WAAV,EAAuB;AAC/E,QAAIrG,OAAO,GAAG,KAAKjI,cAAL,EAAd;;AACA,QAAIiI,OAAJ,EAAa;AACTvJ,MAAAA,EAAE,CAAC2K,SAAH,CAAapB,OAAb;AACA,UAAIsG,SAAS,GAAG;AACZD,QAAAA,WAAW,EAAEA,WADD;AAEZE,QAAAA,oBAAoB,EAAE,IAAIrP,2BAA2B,CAACsP,sBAAhC,CAAuD,KAAKjN,oBAAL,EAAvD,CAFV;AAGZkN,QAAAA,aAAa,EAAE;AACXC,UAAAA,QAAQ,EAAE,YAAY,CAAG,CADd;AAEXC,UAAAA,OAAO,EAAE,YAAY,CAAG,CAFb;AAGXC,UAAAA,QAAQ,EAAEzQ,oBAAoB,CAAC0Q,eAArB,CAAqCC;AAHpC;AAHH,OAAhB;AASA3Q,MAAAA,oBAAoB,CAACkL,kCAArB,CAAwDiF,SAAxD;AACA7P,MAAAA,EAAE,CAAC6K,mBAAH,CAAuBtB,OAAvB,EAAgC;AAAEuB,QAAAA,QAAQ,EAAE;AAAZ,OAAhC,EAAyF+E,SAAzF;AACAD,MAAAA,WAAW,CAACU,SAAZ,CAAsB7J,SAAtB,CAAgC,UAAUwE,OAAV,EAAmB;AAC/C,YAAI,CAACA,OAAL,EAAc;AACV2E,UAAAA,WAAW,CAAChK,OAAZ;AACA5F,UAAAA,EAAE,CAAC2K,SAAH,CAAapB,OAAb;AACH;AACJ,OALD;AAMH;;AACDqG,IAAAA,WAAW,CAACtK,KAAZ;AACH,GAvBD;;AAwBA,SAAO/F,yBAAP;AACH,CAnZgC,EAAjC;;AAoZAH,OAAO,CAACG,yBAAR,GAAoCA,yBAApC;;AACA,IAAID,mCAAmC,GAAI,UAAUiR,MAAV,EAAkB;AACzDrS,EAAAA,SAAS,CAACoB,mCAAD,EAAsCiR,MAAtC,CAAT;;AACA,WAASjR,mCAAT,CAA6C0B,gBAA7C,EAA+DC,OAA/D,EAAwE;AACpE,WAAOsP,MAAM,CAAC1R,IAAP,CAAY,IAAZ,EAAkBmC,gBAAlB,EAAoCC,OAApC,KAAgD,IAAvD;AACH;;AACD3B,EAAAA,mCAAmC,CAACX,SAApC,CAA8CiO,kCAA9C,GAAmF,UAAUpE,OAAV,EAAmBC,YAAnB,EAAiC;AAChH,WAAO,IAAI7H,iCAAiC,CAAC4P,iCAAtC,CAAwEhI,OAAxE,EAAiFC,YAAjF,CAAP;AACH,GAFD;;AAGAnJ,EAAAA,mCAAmC,CAACX,SAApC,CAA8C8I,sBAA9C,GAAuE,UAAUV,iBAAV,EAA6BsF,iBAA7B,EAAgD;AACnH,QAAIL,MAAM,GAAGpL,iCAAiC,CAAC6P,+BAAlC,CAAkE,KAAK7N,eAAvE,EAAwF,KAAKE,oBAA7F,EAAmH,CAAC,KAAKoJ,kBAAzH,EAA6I,KAAK3K,eAAL,CAAqB2D,GAArB,CAAyB,8BAAzB,KAA4D,KAAK3D,eAAL,CAAqB+K,iBAArB,GAAyC,4BAAzC,CAAzM,EAAiR,KAAK/K,eAAL,CAAqB2D,GAArB,CAAyB,gBAAzB,CAAjR,EAA6T6B,iBAA7T,EAAgVsF,iBAAhV,EAAmW,KAAKhH,kBAAxW,EAA4X,KAAKrE,gBAAL,CAAsBuE,eAAlZ,CAAb;;AACA,SAAK6G,0BAAL,CAAgC,4BAAhC,EAA8DJ,MAA9D;;AACA,WAAOA,MAAP;AACH,GAJD;;AAKA,SAAO1M,mCAAP;AACH,CAd0C,CAczCC,yBAdyC,CAA3C;;AAeAH,OAAO,CAACE,mCAAR,GAA8CA,mCAA9C;;AACAW,iBAAiB,CAACyQ,kBAAlB,CAAqC5P,IAArC,IAA6C,UAAUE,gBAAV,EAA4BC,OAA5B,EAAqC;AAAE,SAAO,IAAI1B,yBAAJ,CAA8ByB,gBAA9B,EAAgDC,OAAhD,CAAP;AAAkE,CAAtJ;;AACAhB,iBAAiB,CAAC0Q,gBAAlB,CAAmC7P,IAAnC,IAA2CC,SAA3C;AACAf,EAAE,CAAC4Q,eAAH,CAAmBC,eAAnB,CAAmC,uCAAnC,IAA8E,IAA9E;AACA7Q,EAAE,CAAC8Q,eAAH,CAAmB,uCAAnB,IAA8D;AAC1DC,EAAAA,IAAI,EAAE,UAAUxH,OAAV,EAAmByH,aAAnB,EAAkCC,CAAlC,EAAqCjS,EAArC,EAAyCkS,cAAzC,EAAyD;AAC3D,QAAIC,MAAM,GAAGnR,EAAE,CAACoR,MAAH,CAAUJ,aAAa,EAAvB,CAAb;AACAG,IAAAA,MAAM,CAAC5H,OAAP,CAAeA,OAAf;AACA,WAAO;AAAE8H,MAAAA,0BAA0B,EAAE;AAA9B,KAAP;AACH;AALyD,CAA9D","sourcesContent":["/**\r\n* DevExpress Dashboard (data-source-wizard-extension.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiQueryDataSourceWizardExtension = exports.DataSourceWizardExtension = void 0;\nvar analytics_data_1 = require(\"@devexpress/analytics-core/analytics-data\");\nvar analytics_internal_1 = require(\"@devexpress/analytics-core/analytics-internal\");\nvar analytics_utils_1 = require(\"@devexpress/analytics-core/analytics-utils\");\nvar analytics_wizard_1 = require(\"@devexpress/analytics-core/analytics-wizard\");\nvar analytics_wizard_internal_1 = require(\"@devexpress/analytics-core/analytics-wizard-internal\");\nvar queryBuilder_widgets_internal_1 = require(\"@devexpress/analytics-core/queryBuilder-widgets-internal\");\nvar string_1 = require(\"devextreme/core/utils/string\");\nvar ko = require(\"knockout\");\nvar control_options_1 = require(\"../../common/control-options\");\nvar _options_manager_1 = require(\"../../common/internal/_options-manager\");\nvar _default_1 = require(\"../../data/localization/_default\");\nvar _jquery_helpers_1 = require(\"../../data/_jquery-helpers\");\nvar dashboard_1 = require(\"../../model/dashboard\");\nvar json_data_source_1 = require(\"../../model/data-sources/json-data-source\");\nvar _obsolete_helper_1 = require(\"../../model/internal/_obsolete-helper\");\nvar _data_source_wizard_model_1 = require(\"./models/_data-source-wizard-model\");\nvar _parameters_item_provider_1 = require(\"./pages/_parameters-item-provider\");\nvar _data_source_wizard_1 = require(\"./wizards/_data-source-wizard\");\nvar _edit_json_data_source_wizard_1 = require(\"./wizards/_edit-json-data-source-wizard\");\nvar _multi_query_data_source_wizard_1 = require(\"./wizards/_multi-query-data-source-wizard\");\nvar _helpers_1 = require(\"./_helpers\");\nvar name = 'data-source-wizard';\nvar nameAlias = 'dataSourceWizard';\nvar DataSourceWizardExtension = (function () {\n    function DataSourceWizardExtension(dashboardControl, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this.dashboardControl = dashboardControl;\n        this._subscriptions = [];\n        this._loadingPanelVisible = ko.observable(false);\n        this._wizardElement = ko.observable();\n        this._optionsManager = new _options_manager_1.OptionsManager();\n        this._customTemplate = {\n            name: 'dx-dashboard-data-source-wizard',\n            data: {\n                loadingPanelVisible: this._loadingPanelVisible,\n                wizardElement: this._wizardElement\n            }\n        };\n        this.name = name;\n        var defaultOptions = {\n            enableCustomSql: false,\n            allowCreateNewJsonConnection: false,\n            wizardSettings: {\n                enableSqlDataSource: true,\n                enableOlapDataSource: true,\n                enableJsonDataSource: true,\n                enableFederationDataSource: true\n            }\n        };\n        this._optionsManager.initialize({\n            alias: nameAlias,\n            dashboardControl: dashboardControl,\n            defaultOptions: defaultOptions,\n            eventsHolder: this,\n            initOptions: options,\n            optionChanged: function (args) { return _this._optionChanged(args); }\n        });\n        this._requestWrapper = new _data_source_wizard_model_1.DashboardRequestWrapper(dashboardControl);\n        this._dashboardParameters = ko.computed(function () { return dashboardControl.dashboard() && dashboardControl.dashboard().parameters() || []; });\n        this._getConnectionStringsCallback = function () {\n            return _this.dashboardControl.remoteService.getFromServer(dashboardControl._endpointCollection.dataSourceWizardUrls.GetConnectionStringsAction)\n                .fail(function (request) {\n                _this.dashboardControl.notificationController.showError(_default_1.getLocalizationById('DashboardWebStringId.Notification.AttemptToConnectionStrings'), request);\n            });\n        };\n        _obsolete_helper_1.defineObsoleteMethod({\n            target: this,\n            memberName: 'createDataSource',\n            oldMemberDisplayName: 'DataSourceWizardExtension.createDataSource',\n            newMemberDisplayName: 'DataSourceWizardExtension.showDataSourceCreatingDialog',\n            action: function (dataSources) {\n                _this.showDataSourceCreatingDialog().done(function (dataSource) {\n                    dataSources.push(dataSource);\n                });\n            }\n        });\n        _obsolete_helper_1.defineObsoleteMethod({\n            target: this,\n            memberName: 'editSqlQuery',\n            oldMemberDisplayName: 'DataSourceWizardExtension.editSqlQuery',\n            newMemberDisplayName: 'DataSourceWizardExtension.showSqlQueryEditingDialog',\n            action: function (dashboardSqlDataSource, queryName) {\n                _this.showSqlQueryEditingDialog(dashboardSqlDataSource, queryName);\n            }\n        });\n    }\n    DataSourceWizardExtension._convertDataSource = function (dashboardSqlDataSource, requestWrapper) {\n        var serializer = new analytics_utils_1.ModelSerializer({ useRefs: false });\n        return dashboardSqlDataSource ?\n            new analytics_data_1.SqlDataSource(serializer.serialize(dashboardSqlDataSource), serializer, requestWrapper) :\n            new analytics_data_1.SqlDataSource({}, serializer, requestWrapper);\n    };\n    Object.defineProperty(DataSourceWizardExtension.prototype, \"isCustomSqlEnabled\", {\n        get: function () { return this._optionsManager.get('enableCustomSql'); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataSourceWizardExtension.prototype, \"_dataSourceBrowser\", {\n        get: function () { return this.dashboardControl._dataSourceBrowser; },\n        enumerable: false,\n        configurable: true\n    });\n    DataSourceWizardExtension.prototype.start = function () {\n        this.dashboardControl.customTemplates.push(this._customTemplate);\n    };\n    DataSourceWizardExtension.prototype.stop = function () {\n        this.dashboardControl.customTemplates.remove(this._customTemplate);\n        this._subscriptions.forEach(function (s) { return s.dispose(); });\n        this._subscriptions = [];\n    };\n    DataSourceWizardExtension.prototype.showDataSourceCreatingDialog = function () {\n        return this._showDataSourceCreatingDialog(this._getFederationDataProviders());\n    };\n    DataSourceWizardExtension.prototype._getDashboardDataSources = function () {\n        return this.dashboardControl.dashboard() && this.dashboardControl.dashboard().dataSources() || [];\n    };\n    DataSourceWizardExtension.prototype._getFederationDataProviders = function () {\n        return this._getDashboardDataSources().filter(function (ds) { return ds._isFederationDataProvider; });\n    };\n    DataSourceWizardExtension.prototype._showDataSourceCreatingDialog = function (federationDataProviders) {\n        var _this = this;\n        var deferred = _jquery_helpers_1.createJQueryDeferred();\n        var loadingConnectionsStrings = true;\n        this._loadingPanelVisible(true);\n        var stopLoading = function () {\n            loadingPanelSubscription.dispose();\n            loadingConnectionsStrings = false;\n        };\n        var loadingPanelSubscription = this._loadingPanelVisible.subscribe(function (newValue) {\n            if (!newValue && loadingConnectionsStrings) {\n                stopLoading();\n                deferred.reject();\n            }\n        });\n        var dashboardConnectionStrings = {\n            sql: ko.observableArray()\n        };\n        this._getConnectionStringsCallback()\n            .done(function (connectionStrings) {\n            stopLoading();\n            if (deferred.state() !== 'rejected') {\n                dashboardConnectionStrings = {\n                    sql: ko.observableArray(connectionStrings.filter(function (c) { return c.connectionType === 'Sql'; })),\n                    json: ko.observableArray(connectionStrings.filter(function (c) { return c.connectionType === 'Json'; })),\n                    olap: connectionStrings.filter(function (c) { return c.connectionType === 'Olap'; }),\n                };\n            }\n        })\n            .always(function () {\n            stopLoading();\n            if (deferred.state() !== 'rejected') {\n                var wizardFederationSources = _helpers_1.createDataSourceInfos(federationDataProviders);\n                var dataSourceWizard = _this.createDataSourceWizard(dashboardConnectionStrings, wizardFederationSources);\n                _this._initializeDataSourceWizard(dataSourceWizard, deferred);\n                _this._renderAndStartWizard(dataSourceWizard);\n                _this._loadingPanelVisible(false);\n            }\n        });\n        return deferred.promise();\n    };\n    DataSourceWizardExtension.prototype.showSqlQueryEditingDialog = function (dashboardSqlDataSource, queryName) {\n        var _this = this;\n        if (queryName && dashboardSqlDataSource.queries().filter(function (q) { return q.name() === queryName; }).length === 0)\n            throw new Error(string_1.format(_default_1.getLocalizationById('DashboardWebStringId.Notification.QueryDoesNotExist'), queryName));\n        var dataSource = DataSourceWizardExtension._convertDataSource(dashboardSqlDataSource, this._requestWrapper);\n        var singleDataSourceWizard = this._createEditQueryWizard();\n        singleDataSourceWizard.initialize({\n            sqlDataSourceWizard: {\n                sqlDataSourceJSON: JSON.stringify(new analytics_utils_1.ModelSerializer().serialize(dataSource)),\n                queryName: queryName\n            }\n        }, function (factory, stateManager) { return new _data_source_wizard_1.EditQueryWizardIterator(factory, stateManager); });\n        singleDataSourceWizard['_finishCallback'] = function (state) {\n            var model = analytics_wizard_1._restoreSqlDataSourceFromState(state.sqlDataSourceWizard);\n            var queryIndex = model['_queryIndex'];\n            var query = model.sqlQuery;\n            if (queryIndex === dashboardSqlDataSource.queries().length) {\n                dashboardSqlDataSource.queries.push(query);\n            }\n            else {\n                var oldQuery = dashboardSqlDataSource.queries()[queryIndex];\n                dashboardSqlDataSource.queries.splice(queryIndex, 1, query);\n                if (oldQuery.name() !== query.name()) {\n                    _helpers_1.renameDataMember(_this.dashboardControl.dashboard(), dashboardSqlDataSource, oldQuery.name(), query.name());\n                }\n            }\n            var def = _jquery_helpers_1.createJQueryDeferred();\n            def.resolve();\n            return def.promise();\n        };\n        this._renderAndStartWizard(singleDataSourceWizard);\n    };\n    DataSourceWizardExtension.prototype.showFederationQueryEditingDialog = function (dashboardFederationDataSource, queryName) {\n        var _this = this;\n        var element = this._wizardElement();\n        if (element) {\n            var queryIndex_1 = dashboardFederationDataSource.queries().findIndex(function (q) { return q.alias() === queryName; });\n            if (queryIndex_1 === -1)\n                throw new Error(string_1.format(_default_1.getLocalizationById('DashboardWebStringId.Notification.QueryDoesNotExist'), queryName));\n            var query = dashboardFederationDataSource.queries()[queryIndex_1];\n            var federationDataProviders = this._getFederationDataProviders();\n            var dataSourceInfos_1 = _helpers_1.createDataSourceInfos(federationDataProviders);\n            var analyticsDataSource = _helpers_1.toAnalyticsFederationDataSource(dashboardFederationDataSource, dataSourceInfos_1, this._dataSourceBrowser);\n            var analyticsQuery = analyticsDataSource.queries().find(function (q) { return q.alias && q.alias() === queryName; });\n            var setQuery = function (analyticsQuery) {\n                analyticsQuery.sources()\n                    .forEach(function (analyticsSource) { return _helpers_1.addSourceIfNotExists(analyticsSource, dashboardFederationDataSource, dataSourceInfos_1); });\n                var newQuery = _helpers_1.toSameSourcesFederationQuery(analyticsQuery);\n                _helpers_1.addOrUpdateQuery(_this.dashboardControl.dashboard(), dashboardFederationDataSource, queryIndex_1, newQuery);\n            };\n            var popup_1;\n            switch (query.queryType) {\n                case 'SelectNode':\n                    popup_1 = new analytics_wizard_internal_1.FederationSelectQueryBuilderPopup(setQuery, analyticsDataSource);\n                    break;\n                case 'UnionNode':\n                    popup_1 = new analytics_wizard_internal_1.FederationUnionQueryBuilderPopup(setQuery, analyticsDataSource);\n                    break;\n                case 'TransformationNode':\n                    popup_1 = new analytics_wizard_internal_1.FederationTransformQueryBuilderPopup(setQuery, analyticsDataSource);\n                    break;\n                default:\n                    throw new Error(\"The query of '\" + query.queryType + \"' type cannot be edited. \");\n            }\n            ko.cleanNode(element);\n            analytics_internal_1.appendStaticContextToRootViewModel(popup_1);\n            ko.applyBindingsToNode(element, { template: 'dxrd-querybuilder-federation-popup' }, popup_1);\n            var visibleSubscription_1 = popup_1.popupVisible.subscribe(function (visible) {\n                if (!visible) {\n                    visibleSubscription_1.dispose();\n                    popup_1.dispose();\n                    ko.cleanNode(element);\n                }\n            });\n            popup_1.show(analyticsQuery);\n        }\n    };\n    DataSourceWizardExtension.prototype.showManageFederationQueriesDialog = function (dashboardFederationDataSource) {\n        var _this = this;\n        var element = this._wizardElement();\n        if (element) {\n            var federationDataProviders = this._getFederationDataProviders();\n            var federationDataProvidersInfos_1 = _helpers_1.createDataSourceInfos(federationDataProviders);\n            var analyticsFederationDataSource_1 = _helpers_1.toAnalyticsFederationDataSource(dashboardFederationDataSource, federationDataProvidersInfos_1, this._dataSourceBrowser);\n            var editor_1 = new queryBuilder_widgets_internal_1.ManageFederatedQueriesEditor(analyticsFederationDataSource_1, function () {\n                analyticsFederationDataSource_1.sources()\n                    .forEach(function (analyticsSource) { return _helpers_1.addSourceIfNotExists(analyticsSource, dashboardFederationDataSource, federationDataProvidersInfos_1); });\n                var removedQueries = dashboardFederationDataSource.queries().filter(function (dashboardQuery) {\n                    return !analyticsFederationDataSource_1.queries().some(function (analyticsQuery) { return analyticsQuery[_helpers_1.initialQueryAliasSymbol] === dashboardQuery.alias(); });\n                });\n                removedQueries.forEach(function (q) { return dashboardFederationDataSource.queries.remove(q); });\n                analyticsFederationDataSource_1.queries().forEach(function (analyticsQuery, i) {\n                    var newQuery = _helpers_1.toSameSourcesFederationQuery(analyticsQuery);\n                    var initialQuery = dashboardFederationDataSource.queries().find(function (q) { return q.alias() === analyticsQuery[_helpers_1.initialQueryAliasSymbol]; });\n                    var queryIndex = !!initialQuery ? dashboardFederationDataSource.queries().indexOf(initialQuery) : dashboardFederationDataSource.queries().length;\n                    _helpers_1.addOrUpdateQuery(_this.dashboardControl.dashboard(), dashboardFederationDataSource, queryIndex, newQuery);\n                });\n            });\n            ko.cleanNode(element);\n            analytics_internal_1.appendStaticContextToRootViewModel(editor_1);\n            ko.applyBindingsToNode(element, { template: 'dxrd-federated-manageQueries-editor' }, editor_1);\n            var visibleSubscription_2 = editor_1.popupVisible.subscribe(function (visible) {\n                if (!visible) {\n                    visibleSubscription_2.dispose();\n                    editor_1.dispose();\n                    analyticsFederationDataSource_1.dispose();\n                }\n            });\n            editor_1.popupVisible(true);\n        }\n    };\n    DataSourceWizardExtension.prototype._createEditQueryWizard = function () {\n        var wizard = _data_source_wizard_1.createDashboardDataSourceWizard(this._requestWrapper, this._dashboardParameters, !this.isCustomSqlEnabled, false, { enableOlapDataSource: false, enableSqlDataSource: false, enableJsonDataSource: false, enableObjectDataSource: false, enableFederationDataSource: false }, { sql: ko.observableArray() }, [], this._dataSourceBrowser, this.dashboardControl.customTemplates);\n        this._customizeDataSourceWizard('EditQueryWizard', wizard);\n        return wizard;\n    };\n    DataSourceWizardExtension.prototype._optionChanged = function (args) {\n        switch (args.name) {\n            case 'allowCreateNewJsonConnection':\n            case 'enableCustomSql':\n            case 'wizardSettings':\n                return null;\n            default:\n                return null;\n        }\n    };\n    DataSourceWizardExtension.prototype.createDataSourceWizard = function (connectionStrings, federationSources) {\n        var wizard = _data_source_wizard_1.createDashboardDataSourceWizard(this._requestWrapper, this._dashboardParameters, !this.isCustomSqlEnabled, this._optionsManager.get('allowCreateNewJsonConnection') || this._optionsManager.getInitialOptions()['canCreateNewJsonDataSource'], this._optionsManager.get('wizardSettings'), connectionStrings, federationSources, this._dataSourceBrowser, this.dashboardControl.customTemplates);\n        this._customizeDataSourceWizard('DataSourceWizard', wizard);\n        return wizard;\n    };\n    DataSourceWizardExtension.prototype._createEditJsonDataSourceWizard = function () {\n        var wizard = _edit_json_data_source_wizard_1.createEditJsonDataSourceWizard(this._requestWrapper);\n        this._customizeDataSourceWizard('EditJsonDataSourceWizard', wizard);\n        return wizard;\n    };\n    DataSourceWizardExtension.prototype._customizeDataSourceWizard = function (customizationType, wizard) {\n        this._optionsManager.raiseEvent('customizeDataSourceWizard', { type: customizationType, wizard: wizard });\n    };\n    DataSourceWizardExtension.prototype._createNewDataSourceWizardIterator = function (factory, stateManager) {\n        return new _data_source_wizard_1.CreateNewDataSourceWizardIterator(factory, stateManager);\n    };\n    DataSourceWizardExtension.prototype._initializeDataSourceWizard = function (wizard, deferred) {\n        var _this = this;\n        var initialState = new _data_source_wizard_1.DashboardDataSourceWizardState();\n        wizard.initialize(initialState, function (factory, stateManager) { return _this._createNewDataSourceWizardIterator(factory, stateManager); });\n        wizard['_finishCallback'] = function (state) {\n            var sqlModel = state.sqlDataSourceWizard;\n            var olapModel = state.olapDataSourceWizard;\n            var jsonModel = state.jsonDataSourceWizard;\n            var federationModel = state.federationDataSourceWizard;\n            if (sqlModel && state.dashboardDataSourceType === 'Sql') {\n                var sqlDataSource_1 = dashboard_1.Dashboard._createDataSource({ '@ItemType': 'SqlDataSource' }, new analytics_utils_1.ModelSerializer());\n                var dataSourceWrapper = analytics_wizard_1._restoreSqlDataSourceFromState(sqlModel);\n                sqlDataSource_1.connection.name(dataSourceWrapper.sqlDataSource.connection.name());\n                sqlDataSource_1.connection.fromAppConfig(true);\n                dataSourceWrapper.sqlDataSource.queries().forEach(function (query) {\n                    sqlDataSource_1.queries.push(query);\n                    sqlDataSource_1.name(sqlDataSource_1.queries()[0].name());\n                });\n                deferred.resolve(sqlDataSource_1);\n                return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n            }\n            else if (olapModel && state.dashboardDataSourceType === 'Olap') {\n                var olapDataSource = dashboard_1.Dashboard._createDataSource({ '@ItemType': 'OLAPDataSource' }, new analytics_utils_1.ModelSerializer());\n                olapDataSource.connectionName(olapModel.connectionName);\n                olapDataSource.name(_default_1.getLocalizationById('DashboardStringId.DefaultOlapDataSourceName'));\n                deferred.resolve(olapDataSource);\n                return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n            }\n            else if (jsonModel && state.dashboardDataSourceType === 'Json') {\n                var jsonDeferred_1 = _jquery_helpers_1.createJQueryDeferred();\n                var analyticsDataSourceDeferred_1 = _jquery_helpers_1.createJQueryDeferred();\n                var analyticsDataSource_1 = analytics_wizard_1._restoreJsonDataSourceFromState(jsonModel);\n                if (jsonModel.newConnectionName) {\n                    var jsonSource = analyticsDataSource_1.source;\n                    var jsonSourceJSON = JSON.stringify(jsonSource.serialize(true));\n                    var requestString = JSON.stringify({\n                        connectionName: jsonModel.newConnectionName,\n                        customJson: jsonSource.json(),\n                        uriJsonSourceJSON: jsonSourceJSON\n                    });\n                    _this._requestWrapper\n                        .sendRequest('saveJsonSource', encodeURIComponent(requestString))\n                        .done(function () {\n                        analyticsDataSource_1.connectionName(jsonModel.newConnectionName);\n                        analyticsDataSource_1.source = null;\n                        analyticsDataSourceDeferred_1.resolve(analyticsDataSource_1);\n                    })\n                        .fail(function () { return analyticsDataSourceDeferred_1.reject(); });\n                }\n                else {\n                    analyticsDataSourceDeferred_1.resolve(analyticsDataSource_1);\n                }\n                analyticsDataSourceDeferred_1\n                    .done(function (repDataSource) {\n                    var serializer = new analytics_utils_1.ModelSerializer();\n                    var analyticsJsonDataSourceJson = serializer.serialize(repDataSource);\n                    var dataSource = new json_data_source_1.JsonDataSource(analyticsJsonDataSourceJson);\n                    dataSource.name(_default_1.getLocalizationById('DashboardStringId.DefaultJsonDataSourceName'));\n                    deferred.resolve(dataSource);\n                    jsonDeferred_1.resolve();\n                })\n                    .fail(function () {\n                    deferred.reject();\n                    jsonDeferred_1.reject();\n                });\n                return jsonDeferred_1.promise();\n            }\n            else if (federationModel && state.dashboardDataSourceType === 'Federation') {\n                deferred.resolve(_helpers_1.createNewFederationDataSource(federationModel, wizard.options.dataSources));\n                return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n            }\n            else {\n                deferred.reject();\n                throw Error(_default_1.getLocalizationById('DashboardWebStringId.Notification.UnsupportedDataSourceType'));\n            }\n        };\n    };\n    DataSourceWizardExtension.prototype._showEditJsonDataSourceDialog = function (jsonDataSource) {\n        var serializer = new analytics_utils_1.ModelSerializer();\n        var dashboardJsonDataSourceJson = serializer.serialize(jsonDataSource);\n        var editJsonDataSourceWizard = this._createEditJsonDataSourceWizard();\n        editJsonDataSourceWizard.initialize({\n            jsonDataSourceWizard: {\n                jsonScheme: JSON.stringify(dashboardJsonDataSourceJson.Schema),\n                rootElement: jsonDataSource.rootElement()\n            }\n        }, function (factory, stateManager) { return new _edit_json_data_source_wizard_1.EditJsonDataSourceWizardIterator(factory, stateManager); });\n        editJsonDataSourceWizard['_finishCallback'] = function (state) {\n            var jsonModel = state.jsonDataSourceWizard;\n            if (jsonModel) {\n                var modifiedReportsDataSource = analytics_wizard_1._restoreJsonDataSourceFromState(jsonModel);\n                jsonDataSource.schema(modifiedReportsDataSource.schema);\n                jsonDataSource.rootElement(modifiedReportsDataSource.rootElement());\n            }\n            return _jquery_helpers_1.createJQueryDeferred().resolve().promise();\n        };\n        this._renderAndStartWizard(editJsonDataSourceWizard);\n    };\n    DataSourceWizardExtension.prototype._renderAndStartWizard = function (wizardModel) {\n        var element = this._wizardElement();\n        if (element) {\n            ko.cleanNode(element);\n            var viewModel = {\n                wizardModel: wizardModel,\n                dataBindingsProvider: new _parameters_item_provider_1.ParametersItemProvider(this._dashboardParameters()),\n                resizeHandler: {\n                    starting: function () { },\n                    stopped: function () { },\n                    disabled: analytics_internal_1.DragDropHandler.started\n                }\n            };\n            analytics_internal_1.appendStaticContextToRootViewModel(viewModel);\n            ko.applyBindingsToNode(element, { template: 'dx-dashboard-data-source-wizard-binding' }, viewModel);\n            wizardModel.isVisible.subscribe(function (visible) {\n                if (!visible) {\n                    wizardModel.dispose();\n                    ko.cleanNode(element);\n                }\n            });\n        }\n        wizardModel.start();\n    };\n    return DataSourceWizardExtension;\n}());\nexports.DataSourceWizardExtension = DataSourceWizardExtension;\nvar MultiQueryDataSourceWizardExtension = (function (_super) {\n    __extends(MultiQueryDataSourceWizardExtension, _super);\n    function MultiQueryDataSourceWizardExtension(dashboardControl, options) {\n        return _super.call(this, dashboardControl, options) || this;\n    }\n    MultiQueryDataSourceWizardExtension.prototype._createNewDataSourceWizardIterator = function (factory, stateManager) {\n        return new _multi_query_data_source_wizard_1.DashboardMultiQueryWizardIterator(factory, stateManager);\n    };\n    MultiQueryDataSourceWizardExtension.prototype.createDataSourceWizard = function (connectionStrings, federationSources) {\n        var wizard = _multi_query_data_source_wizard_1.createDashboardMultiQueryWizard(this._requestWrapper, this._dashboardParameters, !this.isCustomSqlEnabled, this._optionsManager.get('allowCreateNewJsonConnection') || this._optionsManager.getInitialOptions()['canCreateNewJsonDataSource'], this._optionsManager.get('wizardSettings'), connectionStrings, federationSources, this._dataSourceBrowser, this.dashboardControl.customTemplates);\n        this._customizeDataSourceWizard('MultiQueryDataSourceWizard', wizard);\n        return wizard;\n    };\n    return MultiQueryDataSourceWizardExtension;\n}(DataSourceWizardExtension));\nexports.MultiQueryDataSourceWizardExtension = MultiQueryDataSourceWizardExtension;\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) { return new DataSourceWizardExtension(dashboardControl, options); };\ncontrol_options_1.extensionNameMap[name] = nameAlias;\nko.virtualElements.allowedBindings['dx-dashboard-element-accessor-binding'] = true;\nko.bindingHandlers['dx-dashboard-element-accessor-binding'] = {\n    init: function (element, valueAccessor, _, __, bindingContext) {\n        var params = ko.unwrap(valueAccessor());\n        params.element(element);\n        return { controlsDescendantBindings: true };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}