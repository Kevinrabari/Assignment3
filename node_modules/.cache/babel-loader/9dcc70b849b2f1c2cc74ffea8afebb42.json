{"ast":null,"code":"/**\r\n * DevExtreme (esm/file_management/remote_provider.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport ajax from \"../core/utils/ajax\";\nimport { ensureDefined, noop } from \"../core/utils/common\";\nimport Guid from \"../core/guid\";\nimport { getWindow } from \"../core/utils/window\";\nimport { each } from \"../core/utils/iterator\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport FileSystemProviderBase from \"./provider_base\";\nimport { compileGetter } from \"../core/utils/data\";\nimport { isDefined, isEmptyObject, isFunction } from \"../core/utils/type\";\nvar window = getWindow();\nvar FILE_CHUNK_BLOB_NAME = \"chunk\";\nvar FILE_SYSTEM_COMMNAD = {\n  GET_DIR_CONTENTS: \"GetDirContents\",\n  CREATE_DIR: \"CreateDir\",\n  RENAME: \"Rename\",\n  MOVE: \"Move\",\n  COPY: \"Copy\",\n  REMOVE: \"Remove\",\n  UPLOAD_CHUNK: \"UploadChunk\",\n  ABORT_UPLOAD: \"AbortUpload\",\n  DOWLOAD: \"Download\"\n};\nvar REQUEST_METHOD = {\n  GET: \"GET\",\n  POST: \"POST\"\n};\n\nclass RemoteFileSystemProvider extends FileSystemProviderBase {\n  constructor(options) {\n    options = ensureDefined(options, {});\n    super(options);\n    this._endpointUrl = options.endpointUrl;\n    this._beforeAjaxSend = options.beforeAjaxSend;\n    this._beforeSubmit = options.beforeSubmit;\n    this._requestHeaders = options.requestHeaders;\n    this._hasSubDirsGetter = compileGetter(options.hasSubDirectoriesExpr || \"hasSubDirectories\");\n  }\n\n  getItems(parentDir) {\n    var pathInfo = parentDir.getFullPathInfo();\n    return this._executeRequest(FILE_SYSTEM_COMMNAD.GET_DIR_CONTENTS, {\n      pathInfo: pathInfo\n    }).then(result => this._convertDataObjectsToFileItems(result.result, pathInfo));\n  }\n\n  renameItem(item, name) {\n    return this._executeRequest(FILE_SYSTEM_COMMNAD.RENAME, {\n      pathInfo: item.getFullPathInfo(),\n      isDirectory: item.isDirectory,\n      name: name\n    });\n  }\n\n  createDirectory(parentDir, name) {\n    return this._executeRequest(FILE_SYSTEM_COMMNAD.CREATE_DIR, {\n      pathInfo: parentDir.getFullPathInfo(),\n      name: name\n    });\n  }\n\n  deleteItems(items) {\n    return items.map(item => this._executeRequest(FILE_SYSTEM_COMMNAD.REMOVE, {\n      pathInfo: item.getFullPathInfo(),\n      isDirectory: item.isDirectory\n    }));\n  }\n\n  moveItems(items, destinationDirectory) {\n    return items.map(item => this._executeRequest(FILE_SYSTEM_COMMNAD.MOVE, {\n      sourcePathInfo: item.getFullPathInfo(),\n      sourceIsDirectory: item.isDirectory,\n      destinationPathInfo: destinationDirectory.getFullPathInfo()\n    }));\n  }\n\n  copyItems(items, destinationFolder) {\n    return items.map(item => this._executeRequest(FILE_SYSTEM_COMMNAD.COPY, {\n      sourcePathInfo: item.getFullPathInfo(),\n      sourceIsDirectory: item.isDirectory,\n      destinationPathInfo: destinationFolder.getFullPathInfo()\n    }));\n  }\n\n  uploadFileChunk(fileData, chunksInfo, destinationDirectory) {\n    if (0 === chunksInfo.chunkIndex) {\n      chunksInfo.customData.uploadId = new Guid();\n    }\n\n    var args = {\n      destinationPathInfo: destinationDirectory.getFullPathInfo(),\n      chunkMetadata: JSON.stringify({\n        UploadId: chunksInfo.customData.uploadId,\n        FileName: fileData.name,\n        Index: chunksInfo.chunkIndex,\n        TotalCount: chunksInfo.chunkCount,\n        FileSize: fileData.size\n      })\n    };\n    var ajaxSettings = {\n      url: this._endpointUrl,\n      headers: this._requestHeaders || {},\n      method: REQUEST_METHOD.POST,\n      dataType: \"json\",\n      data: {\n        [FILE_CHUNK_BLOB_NAME]: chunksInfo.chunkBlob,\n        arguments: JSON.stringify(args),\n        command: FILE_SYSTEM_COMMNAD.UPLOAD_CHUNK\n      },\n      upload: {\n        onprogress: noop,\n        onloadstart: noop,\n        onabort: noop\n      },\n      xhrFields: {},\n      cache: false\n    };\n    var deferred = new Deferred();\n\n    this._beforeSendInternal(ajaxSettings);\n\n    ajax.sendRequest(ajaxSettings).done(result => {\n      !result.success && deferred.reject(result) || deferred.resolve();\n    }).fail(deferred.reject);\n    return deferred.promise();\n  }\n\n  abortFileUpload(fileData, chunksInfo, destinationDirectory) {\n    return this._executeRequest(FILE_SYSTEM_COMMNAD.ABORT_UPLOAD, {\n      uploadId: chunksInfo.customData.uploadId\n    });\n  }\n\n  downloadItems(items) {\n    var args = this._getDownloadArgs(items);\n\n    var $form = $(\"<form>\").css({\n      display: \"none\"\n    }).attr({\n      method: REQUEST_METHOD.POST,\n      action: args.url\n    });\n    var formDataEntries = {\n      command: args.command,\n      arguments: args.arguments\n    };\n\n    this._beforeSubmitInternal(formDataEntries);\n\n    this._appendFormDataInputsToForm(formDataEntries, $form);\n\n    $form.appendTo(\"body\");\n    eventsEngine.trigger($form, \"submit\");\n    setTimeout(() => $form.remove());\n  }\n\n  getItemsContent(items) {\n    var args = this._getDownloadArgs(items);\n\n    var ajaxSettings = {\n      url: args.url,\n      headers: this._requestHeaders || {},\n      method: REQUEST_METHOD.POST,\n      responseType: \"arraybuffer\",\n      data: {\n        command: args.command,\n        arguments: args.arguments\n      },\n      upload: {\n        onprogress: noop,\n        onloadstart: noop,\n        onabort: noop\n      },\n      xhrFields: {},\n      cache: false\n    };\n\n    this._beforeSendInternal(ajaxSettings);\n\n    return ajax.sendRequest(ajaxSettings);\n  }\n\n  _getDownloadArgs(items) {\n    var pathInfoList = items.map(item => item.getFullPathInfo());\n    var args = {\n      pathInfoList: pathInfoList\n    };\n    var argsStr = JSON.stringify(args);\n    return {\n      url: this._endpointUrl,\n      arguments: argsStr,\n      command: FILE_SYSTEM_COMMNAD.DOWLOAD\n    };\n  }\n\n  _getItemsIds(items) {\n    return items.map(it => it.relativeName);\n  }\n\n  _executeRequest(command, args) {\n    var method = command === FILE_SYSTEM_COMMNAD.GET_DIR_CONTENTS ? REQUEST_METHOD.GET : REQUEST_METHOD.POST;\n    var deferred = new Deferred();\n    var ajaxSettings = {\n      url: this._getEndpointUrl(command, args),\n      headers: this._requestHeaders || {},\n      method: method,\n      dataType: \"json\",\n      data: {},\n      xhrFields: {},\n      cache: false\n    };\n\n    this._beforeSendInternal(ajaxSettings);\n\n    ajax.sendRequest(ajaxSettings).then(result => {\n      !result.success && deferred.reject(result) || deferred.resolve(result);\n    }, e => deferred.reject(e));\n    return deferred.promise();\n  }\n\n  _beforeSubmitInternal(formDataEntries) {\n    if (isFunction(this._beforeSubmit)) {\n      this._beforeSubmit({\n        formData: formDataEntries\n      });\n    }\n  }\n\n  _beforeSendInternal(ajaxSettings) {\n    if (isFunction(this._beforeAjaxSend)) {\n      var ajaxArguments = {\n        headers: ajaxSettings.headers,\n        formData: ajaxSettings.data,\n        xhrFields: ajaxSettings.xhrFields\n      };\n\n      this._beforeAjaxSend(ajaxArguments);\n\n      ajaxSettings.headers = ajaxArguments.headers;\n      ajaxSettings.data = ajaxArguments.formData;\n      ajaxSettings.xhrFields = ajaxArguments.xhrFields;\n    }\n\n    if (isEmptyObject(ajaxSettings.data)) {\n      delete ajaxSettings.data;\n    } else if (ajaxSettings.responseType || ajaxSettings.upload) {\n      ajaxSettings.data = this._createFormData(ajaxSettings.data);\n    }\n  }\n\n  _createFormData(formDataEntries) {\n    var formData = new window.FormData();\n\n    for (var entryName in formDataEntries) {\n      if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\n        formData.append(entryName, formDataEntries[entryName]);\n      }\n    }\n\n    return formData;\n  }\n\n  _appendFormDataInputsToForm(formDataEntries, formElement) {\n    for (var entryName in formDataEntries) {\n      if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\n        $(\"<input>\").attr({\n          type: \"hidden\",\n          name: entryName,\n          value: formDataEntries[entryName]\n        }).appendTo(formElement);\n      }\n    }\n  }\n\n  _getEndpointUrl(command, args) {\n    var queryString = this._getQueryString({\n      command: command,\n      arguments: JSON.stringify(args)\n    });\n\n    var separator = this._endpointUrl && this._endpointUrl.indexOf(\"?\") > 0 ? \"&\" : \"?\";\n    return this._endpointUrl + separator + queryString;\n  }\n\n  _getQueryString(params) {\n    var pairs = [];\n    var keys = Object.keys(params);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = params[key];\n\n      if (void 0 === value) {\n        continue;\n      }\n\n      if (null === value) {\n        value = \"\";\n      }\n\n      if (Array.isArray(value)) {\n        this._processQueryStringArrayParam(key, value, pairs);\n      } else {\n        var pair = this._getQueryStringPair(key, value);\n\n        pairs.push(pair);\n      }\n    }\n\n    return pairs.join(\"&\");\n  }\n\n  _processQueryStringArrayParam(key, array, pairs) {\n    each(array, (_, item) => {\n      var pair = this._getQueryStringPair(key, item);\n\n      pairs.push(pair);\n    });\n  }\n\n  _getQueryStringPair(key, value) {\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  }\n\n  _hasSubDirs(dataObj) {\n    var hasSubDirs = this._hasSubDirsGetter(dataObj);\n\n    return \"boolean\" === typeof hasSubDirs ? hasSubDirs : true;\n  }\n\n  _getKeyExpr(options) {\n    return options.keyExpr || \"key\";\n  }\n\n}\n\nexport default RemoteFileSystemProvider;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/file_management/remote_provider.js"],"names":["$","ajax","ensureDefined","noop","Guid","getWindow","each","Deferred","eventsEngine","FileSystemProviderBase","compileGetter","isDefined","isEmptyObject","isFunction","window","FILE_CHUNK_BLOB_NAME","FILE_SYSTEM_COMMNAD","GET_DIR_CONTENTS","CREATE_DIR","RENAME","MOVE","COPY","REMOVE","UPLOAD_CHUNK","ABORT_UPLOAD","DOWLOAD","REQUEST_METHOD","GET","POST","RemoteFileSystemProvider","constructor","options","_endpointUrl","endpointUrl","_beforeAjaxSend","beforeAjaxSend","_beforeSubmit","beforeSubmit","_requestHeaders","requestHeaders","_hasSubDirsGetter","hasSubDirectoriesExpr","getItems","parentDir","pathInfo","getFullPathInfo","_executeRequest","then","result","_convertDataObjectsToFileItems","renameItem","item","name","isDirectory","createDirectory","deleteItems","items","map","moveItems","destinationDirectory","sourcePathInfo","sourceIsDirectory","destinationPathInfo","copyItems","destinationFolder","uploadFileChunk","fileData","chunksInfo","chunkIndex","customData","uploadId","args","chunkMetadata","JSON","stringify","UploadId","FileName","Index","TotalCount","chunkCount","FileSize","size","ajaxSettings","url","headers","method","dataType","data","chunkBlob","arguments","command","upload","onprogress","onloadstart","onabort","xhrFields","cache","deferred","_beforeSendInternal","sendRequest","done","success","reject","resolve","fail","promise","abortFileUpload","downloadItems","_getDownloadArgs","$form","css","display","attr","action","formDataEntries","_beforeSubmitInternal","_appendFormDataInputsToForm","appendTo","trigger","setTimeout","remove","getItemsContent","responseType","pathInfoList","argsStr","_getItemsIds","it","relativeName","_getEndpointUrl","e","formData","ajaxArguments","_createFormData","FormData","entryName","Object","prototype","hasOwnProperty","call","append","formElement","type","value","queryString","_getQueryString","separator","indexOf","params","pairs","keys","i","length","key","Array","isArray","_processQueryStringArrayParam","pair","_getQueryStringPair","push","join","array","_","encodeURIComponent","_hasSubDirs","dataObj","hasSubDirs","_getKeyExpr","keyExpr"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/file_management/remote_provider.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport ajax from \"../core/utils/ajax\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport FileSystemProviderBase from \"./provider_base\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nvar window = getWindow();\r\nvar FILE_CHUNK_BLOB_NAME = \"chunk\";\r\nvar FILE_SYSTEM_COMMNAD = {\r\n    GET_DIR_CONTENTS: \"GetDirContents\",\r\n    CREATE_DIR: \"CreateDir\",\r\n    RENAME: \"Rename\",\r\n    MOVE: \"Move\",\r\n    COPY: \"Copy\",\r\n    REMOVE: \"Remove\",\r\n    UPLOAD_CHUNK: \"UploadChunk\",\r\n    ABORT_UPLOAD: \"AbortUpload\",\r\n    DOWLOAD: \"Download\"\r\n};\r\nvar REQUEST_METHOD = {\r\n    GET: \"GET\",\r\n    POST: \"POST\"\r\n};\r\nclass RemoteFileSystemProvider extends FileSystemProviderBase {\r\n    constructor(options) {\r\n        options = ensureDefined(options, {});\r\n        super(options);\r\n        this._endpointUrl = options.endpointUrl;\r\n        this._beforeAjaxSend = options.beforeAjaxSend;\r\n        this._beforeSubmit = options.beforeSubmit;\r\n        this._requestHeaders = options.requestHeaders;\r\n        this._hasSubDirsGetter = compileGetter(options.hasSubDirectoriesExpr || \"hasSubDirectories\")\r\n    }\r\n    getItems(parentDir) {\r\n        var pathInfo = parentDir.getFullPathInfo();\r\n        return this._executeRequest(FILE_SYSTEM_COMMNAD.GET_DIR_CONTENTS, {\r\n            pathInfo: pathInfo\r\n        }).then(result => this._convertDataObjectsToFileItems(result.result, pathInfo))\r\n    }\r\n    renameItem(item, name) {\r\n        return this._executeRequest(FILE_SYSTEM_COMMNAD.RENAME, {\r\n            pathInfo: item.getFullPathInfo(),\r\n            isDirectory: item.isDirectory,\r\n            name: name\r\n        })\r\n    }\r\n    createDirectory(parentDir, name) {\r\n        return this._executeRequest(FILE_SYSTEM_COMMNAD.CREATE_DIR, {\r\n            pathInfo: parentDir.getFullPathInfo(),\r\n            name: name\r\n        })\r\n    }\r\n    deleteItems(items) {\r\n        return items.map(item => this._executeRequest(FILE_SYSTEM_COMMNAD.REMOVE, {\r\n            pathInfo: item.getFullPathInfo(),\r\n            isDirectory: item.isDirectory\r\n        }))\r\n    }\r\n    moveItems(items, destinationDirectory) {\r\n        return items.map(item => this._executeRequest(FILE_SYSTEM_COMMNAD.MOVE, {\r\n            sourcePathInfo: item.getFullPathInfo(),\r\n            sourceIsDirectory: item.isDirectory,\r\n            destinationPathInfo: destinationDirectory.getFullPathInfo()\r\n        }))\r\n    }\r\n    copyItems(items, destinationFolder) {\r\n        return items.map(item => this._executeRequest(FILE_SYSTEM_COMMNAD.COPY, {\r\n            sourcePathInfo: item.getFullPathInfo(),\r\n            sourceIsDirectory: item.isDirectory,\r\n            destinationPathInfo: destinationFolder.getFullPathInfo()\r\n        }))\r\n    }\r\n    uploadFileChunk(fileData, chunksInfo, destinationDirectory) {\r\n        if (0 === chunksInfo.chunkIndex) {\r\n            chunksInfo.customData.uploadId = new Guid\r\n        }\r\n        var args = {\r\n            destinationPathInfo: destinationDirectory.getFullPathInfo(),\r\n            chunkMetadata: JSON.stringify({\r\n                UploadId: chunksInfo.customData.uploadId,\r\n                FileName: fileData.name,\r\n                Index: chunksInfo.chunkIndex,\r\n                TotalCount: chunksInfo.chunkCount,\r\n                FileSize: fileData.size\r\n            })\r\n        };\r\n        var ajaxSettings = {\r\n            url: this._endpointUrl,\r\n            headers: this._requestHeaders || {},\r\n            method: REQUEST_METHOD.POST,\r\n            dataType: \"json\",\r\n            data: {\r\n                [FILE_CHUNK_BLOB_NAME]: chunksInfo.chunkBlob,\r\n                arguments: JSON.stringify(args),\r\n                command: FILE_SYSTEM_COMMNAD.UPLOAD_CHUNK\r\n            },\r\n            upload: {\r\n                onprogress: noop,\r\n                onloadstart: noop,\r\n                onabort: noop\r\n            },\r\n            xhrFields: {},\r\n            cache: false\r\n        };\r\n        var deferred = new Deferred;\r\n        this._beforeSendInternal(ajaxSettings);\r\n        ajax.sendRequest(ajaxSettings).done(result => {\r\n            !result.success && deferred.reject(result) || deferred.resolve()\r\n        }).fail(deferred.reject);\r\n        return deferred.promise()\r\n    }\r\n    abortFileUpload(fileData, chunksInfo, destinationDirectory) {\r\n        return this._executeRequest(FILE_SYSTEM_COMMNAD.ABORT_UPLOAD, {\r\n            uploadId: chunksInfo.customData.uploadId\r\n        })\r\n    }\r\n    downloadItems(items) {\r\n        var args = this._getDownloadArgs(items);\r\n        var $form = $(\"<form>\").css({\r\n            display: \"none\"\r\n        }).attr({\r\n            method: REQUEST_METHOD.POST,\r\n            action: args.url\r\n        });\r\n        var formDataEntries = {\r\n            command: args.command,\r\n            arguments: args.arguments\r\n        };\r\n        this._beforeSubmitInternal(formDataEntries);\r\n        this._appendFormDataInputsToForm(formDataEntries, $form);\r\n        $form.appendTo(\"body\");\r\n        eventsEngine.trigger($form, \"submit\");\r\n        setTimeout(() => $form.remove())\r\n    }\r\n    getItemsContent(items) {\r\n        var args = this._getDownloadArgs(items);\r\n        var ajaxSettings = {\r\n            url: args.url,\r\n            headers: this._requestHeaders || {},\r\n            method: REQUEST_METHOD.POST,\r\n            responseType: \"arraybuffer\",\r\n            data: {\r\n                command: args.command,\r\n                arguments: args.arguments\r\n            },\r\n            upload: {\r\n                onprogress: noop,\r\n                onloadstart: noop,\r\n                onabort: noop\r\n            },\r\n            xhrFields: {},\r\n            cache: false\r\n        };\r\n        this._beforeSendInternal(ajaxSettings);\r\n        return ajax.sendRequest(ajaxSettings)\r\n    }\r\n    _getDownloadArgs(items) {\r\n        var pathInfoList = items.map(item => item.getFullPathInfo());\r\n        var args = {\r\n            pathInfoList: pathInfoList\r\n        };\r\n        var argsStr = JSON.stringify(args);\r\n        return {\r\n            url: this._endpointUrl,\r\n            arguments: argsStr,\r\n            command: FILE_SYSTEM_COMMNAD.DOWLOAD\r\n        }\r\n    }\r\n    _getItemsIds(items) {\r\n        return items.map(it => it.relativeName)\r\n    }\r\n    _executeRequest(command, args) {\r\n        var method = command === FILE_SYSTEM_COMMNAD.GET_DIR_CONTENTS ? REQUEST_METHOD.GET : REQUEST_METHOD.POST;\r\n        var deferred = new Deferred;\r\n        var ajaxSettings = {\r\n            url: this._getEndpointUrl(command, args),\r\n            headers: this._requestHeaders || {},\r\n            method: method,\r\n            dataType: \"json\",\r\n            data: {},\r\n            xhrFields: {},\r\n            cache: false\r\n        };\r\n        this._beforeSendInternal(ajaxSettings);\r\n        ajax.sendRequest(ajaxSettings).then(result => {\r\n            !result.success && deferred.reject(result) || deferred.resolve(result)\r\n        }, e => deferred.reject(e));\r\n        return deferred.promise()\r\n    }\r\n    _beforeSubmitInternal(formDataEntries) {\r\n        if (isFunction(this._beforeSubmit)) {\r\n            this._beforeSubmit({\r\n                formData: formDataEntries\r\n            })\r\n        }\r\n    }\r\n    _beforeSendInternal(ajaxSettings) {\r\n        if (isFunction(this._beforeAjaxSend)) {\r\n            var ajaxArguments = {\r\n                headers: ajaxSettings.headers,\r\n                formData: ajaxSettings.data,\r\n                xhrFields: ajaxSettings.xhrFields\r\n            };\r\n            this._beforeAjaxSend(ajaxArguments);\r\n            ajaxSettings.headers = ajaxArguments.headers;\r\n            ajaxSettings.data = ajaxArguments.formData;\r\n            ajaxSettings.xhrFields = ajaxArguments.xhrFields\r\n        }\r\n        if (isEmptyObject(ajaxSettings.data)) {\r\n            delete ajaxSettings.data\r\n        } else if (ajaxSettings.responseType || ajaxSettings.upload) {\r\n            ajaxSettings.data = this._createFormData(ajaxSettings.data)\r\n        }\r\n    }\r\n    _createFormData(formDataEntries) {\r\n        var formData = new window.FormData;\r\n        for (var entryName in formDataEntries) {\r\n            if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\r\n                formData.append(entryName, formDataEntries[entryName])\r\n            }\r\n        }\r\n        return formData\r\n    }\r\n    _appendFormDataInputsToForm(formDataEntries, formElement) {\r\n        for (var entryName in formDataEntries) {\r\n            if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\r\n                $(\"<input>\").attr({\r\n                    type: \"hidden\",\r\n                    name: entryName,\r\n                    value: formDataEntries[entryName]\r\n                }).appendTo(formElement)\r\n            }\r\n        }\r\n    }\r\n    _getEndpointUrl(command, args) {\r\n        var queryString = this._getQueryString({\r\n            command: command,\r\n            arguments: JSON.stringify(args)\r\n        });\r\n        var separator = this._endpointUrl && this._endpointUrl.indexOf(\"?\") > 0 ? \"&\" : \"?\";\r\n        return this._endpointUrl + separator + queryString\r\n    }\r\n    _getQueryString(params) {\r\n        var pairs = [];\r\n        var keys = Object.keys(params);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var key = keys[i];\r\n            var value = params[key];\r\n            if (void 0 === value) {\r\n                continue\r\n            }\r\n            if (null === value) {\r\n                value = \"\"\r\n            }\r\n            if (Array.isArray(value)) {\r\n                this._processQueryStringArrayParam(key, value, pairs)\r\n            } else {\r\n                var pair = this._getQueryStringPair(key, value);\r\n                pairs.push(pair)\r\n            }\r\n        }\r\n        return pairs.join(\"&\")\r\n    }\r\n    _processQueryStringArrayParam(key, array, pairs) {\r\n        each(array, (_, item) => {\r\n            var pair = this._getQueryStringPair(key, item);\r\n            pairs.push(pair)\r\n        })\r\n    }\r\n    _getQueryStringPair(key, value) {\r\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(value)\r\n    }\r\n    _hasSubDirs(dataObj) {\r\n        var hasSubDirs = this._hasSubDirsGetter(dataObj);\r\n        return \"boolean\" === typeof hasSubDirs ? hasSubDirs : true\r\n    }\r\n    _getKeyExpr(options) {\r\n        return options.keyExpr || \"key\"\r\n    }\r\n}\r\nexport default RemoteFileSystemProvider;\r\n"]},"metadata":{},"sourceType":"module"}