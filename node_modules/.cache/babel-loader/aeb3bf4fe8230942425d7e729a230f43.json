{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/diagram/diagram.options_update.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport DiagramBar from \"./diagram.bar\";\nimport { getDiagram } from \"./diagram.importer\";\n\nclass DiagramOptionsUpdateBar extends DiagramBar {\n  constructor(owner) {\n    super(owner);\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n    this.commandOptions = {};\n    this.commandOptions[DiagramCommand.Fullscreen] = \"fullScreen\";\n\n    this.commandOptions[DiagramCommand.ZoomLevel] = function (value) {\n      if (\"object\" === typeof this._getOption(\"zoomLevel\")) {\n        this._setOption(\"zoomLevel.value\", value);\n      } else {\n        this._setOption(\"zoomLevel\", value);\n      }\n    };\n\n    this.commandOptions[DiagramCommand.SwitchAutoZoom] = function (value) {\n      var {\n        AutoZoomMode: AutoZoomMode\n      } = getDiagram();\n\n      switch (value) {\n        case AutoZoomMode.FitContent:\n          this._setOption(\"autoZoomMode\", \"fitContent\");\n\n          break;\n\n        case AutoZoomMode.FitToWidth:\n          this._setOption(\"autoZoomMode\", \"fitWidth\");\n\n          break;\n\n        case AutoZoomMode.Disabled:\n          this._setOption(\"autoZoomMode\", \"disabled\");\n\n      }\n    };\n\n    this.commandOptions[DiagramCommand.ToggleSimpleView] = \"simpleView\";\n    this.commandOptions[DiagramCommand.ShowGrid] = \"showGrid\";\n    this.commandOptions[DiagramCommand.SnapToGrid] = \"snapToGrid\";\n\n    this.commandOptions[DiagramCommand.GridSize] = function (value) {\n      if (\"object\" === typeof this._getOption(\"gridSize\")) {\n        this._setOption(\"gridSize.value\", value);\n      } else {\n        this._setOption(\"gridSize\", value);\n      }\n    };\n\n    this.commandOptions[DiagramCommand.ViewUnits] = \"viewUnits\";\n\n    this.commandOptions[DiagramCommand.PageSize] = function (value) {\n      var pageSize = this._getOption(\"pageSize\");\n\n      if (void 0 === pageSize || pageSize.width !== value.width || pageSize.height !== value.height) {\n        this._setOption(\"pageSize\", value);\n      }\n    };\n\n    this.commandOptions[DiagramCommand.PageLandscape] = function (value) {\n      this._setOption(\"pageOrientation\", value ? \"landscape\" : \"portrait\");\n    };\n\n    this.commandOptions[DiagramCommand.ViewUnits] = function (value) {\n      var {\n        DiagramUnit: DiagramUnit\n      } = getDiagram();\n\n      switch (value) {\n        case DiagramUnit.In:\n          this._setOption(\"viewUnits\", \"in\");\n\n          break;\n\n        case DiagramUnit.Cm:\n          this._setOption(\"viewUnits\", \"cm\");\n\n          break;\n\n        case DiagramUnit.Px:\n          this._setOption(\"viewUnits\", \"px\");\n\n      }\n    };\n\n    this.commandOptions[DiagramCommand.PageColor] = \"pageColor\";\n    this._updateLock = 0;\n  }\n\n  getCommandKeys() {\n    return Object.keys(this.commandOptions).map(function (key) {\n      return parseInt(key);\n    });\n  }\n\n  setItemValue(key, value) {\n    if (this.isUpdateLocked()) {\n      return;\n    }\n\n    this.beginUpdate();\n\n    try {\n      if (\"function\" === typeof this.commandOptions[key]) {\n        this.commandOptions[key].call(this, value);\n      } else {\n        this._setOption(this.commandOptions[key], value);\n      }\n    } finally {\n      this.endUpdate();\n    }\n  }\n\n  beginUpdate() {\n    this._updateLock++;\n  }\n\n  endUpdate() {\n    this._updateLock--;\n  }\n\n  isUpdateLocked() {\n    return this._updateLock > 0;\n  }\n\n  _getOption(name) {\n    return this._owner.option(name);\n  }\n\n  _setOption(name, value) {\n    this._owner.option(name, value);\n  }\n\n}\n\nexport default DiagramOptionsUpdateBar;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/diagram/diagram.options_update.js"],"names":["DiagramBar","getDiagram","DiagramOptionsUpdateBar","constructor","owner","DiagramCommand","commandOptions","Fullscreen","ZoomLevel","value","_getOption","_setOption","SwitchAutoZoom","AutoZoomMode","FitContent","FitToWidth","Disabled","ToggleSimpleView","ShowGrid","SnapToGrid","GridSize","ViewUnits","PageSize","pageSize","width","height","PageLandscape","DiagramUnit","In","Cm","Px","PageColor","_updateLock","getCommandKeys","Object","keys","map","key","parseInt","setItemValue","isUpdateLocked","beginUpdate","call","endUpdate","name","_owner","option"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/diagram.options_update.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DiagramBar from \"./diagram.bar\";\r\nimport {\r\n    getDiagram\r\n} from \"./diagram.importer\";\r\nclass DiagramOptionsUpdateBar extends DiagramBar {\r\n    constructor(owner) {\r\n        super(owner);\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this.commandOptions = {};\r\n        this.commandOptions[DiagramCommand.Fullscreen] = \"fullScreen\";\r\n        this.commandOptions[DiagramCommand.ZoomLevel] = function(value) {\r\n            if (\"object\" === typeof this._getOption(\"zoomLevel\")) {\r\n                this._setOption(\"zoomLevel.value\", value)\r\n            } else {\r\n                this._setOption(\"zoomLevel\", value)\r\n            }\r\n        };\r\n        this.commandOptions[DiagramCommand.SwitchAutoZoom] = function(value) {\r\n            var {\r\n                AutoZoomMode: AutoZoomMode\r\n            } = getDiagram();\r\n            switch (value) {\r\n                case AutoZoomMode.FitContent:\r\n                    this._setOption(\"autoZoomMode\", \"fitContent\");\r\n                    break;\r\n                case AutoZoomMode.FitToWidth:\r\n                    this._setOption(\"autoZoomMode\", \"fitWidth\");\r\n                    break;\r\n                case AutoZoomMode.Disabled:\r\n                    this._setOption(\"autoZoomMode\", \"disabled\")\r\n            }\r\n        };\r\n        this.commandOptions[DiagramCommand.ToggleSimpleView] = \"simpleView\";\r\n        this.commandOptions[DiagramCommand.ShowGrid] = \"showGrid\";\r\n        this.commandOptions[DiagramCommand.SnapToGrid] = \"snapToGrid\";\r\n        this.commandOptions[DiagramCommand.GridSize] = function(value) {\r\n            if (\"object\" === typeof this._getOption(\"gridSize\")) {\r\n                this._setOption(\"gridSize.value\", value)\r\n            } else {\r\n                this._setOption(\"gridSize\", value)\r\n            }\r\n        };\r\n        this.commandOptions[DiagramCommand.ViewUnits] = \"viewUnits\";\r\n        this.commandOptions[DiagramCommand.PageSize] = function(value) {\r\n            var pageSize = this._getOption(\"pageSize\");\r\n            if (void 0 === pageSize || pageSize.width !== value.width || pageSize.height !== value.height) {\r\n                this._setOption(\"pageSize\", value)\r\n            }\r\n        };\r\n        this.commandOptions[DiagramCommand.PageLandscape] = function(value) {\r\n            this._setOption(\"pageOrientation\", value ? \"landscape\" : \"portrait\")\r\n        };\r\n        this.commandOptions[DiagramCommand.ViewUnits] = function(value) {\r\n            var {\r\n                DiagramUnit: DiagramUnit\r\n            } = getDiagram();\r\n            switch (value) {\r\n                case DiagramUnit.In:\r\n                    this._setOption(\"viewUnits\", \"in\");\r\n                    break;\r\n                case DiagramUnit.Cm:\r\n                    this._setOption(\"viewUnits\", \"cm\");\r\n                    break;\r\n                case DiagramUnit.Px:\r\n                    this._setOption(\"viewUnits\", \"px\")\r\n            }\r\n        };\r\n        this.commandOptions[DiagramCommand.PageColor] = \"pageColor\";\r\n        this._updateLock = 0\r\n    }\r\n    getCommandKeys() {\r\n        return Object.keys(this.commandOptions).map((function(key) {\r\n            return parseInt(key)\r\n        }))\r\n    }\r\n    setItemValue(key, value) {\r\n        if (this.isUpdateLocked()) {\r\n            return\r\n        }\r\n        this.beginUpdate();\r\n        try {\r\n            if (\"function\" === typeof this.commandOptions[key]) {\r\n                this.commandOptions[key].call(this, value)\r\n            } else {\r\n                this._setOption(this.commandOptions[key], value)\r\n            }\r\n        } finally {\r\n            this.endUpdate()\r\n        }\r\n    }\r\n    beginUpdate() {\r\n        this._updateLock++\r\n    }\r\n    endUpdate() {\r\n        this._updateLock--\r\n    }\r\n    isUpdateLocked() {\r\n        return this._updateLock > 0\r\n    }\r\n    _getOption(name) {\r\n        return this._owner.option(name)\r\n    }\r\n    _setOption(name, value) {\r\n        this._owner.option(name, value)\r\n    }\r\n}\r\nexport default DiagramOptionsUpdateBar;\r\n"]},"metadata":{},"sourceType":"module"}