{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_data-inspector-view-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataInspectorViewModel = exports.DataInspectorViewModelOptions = void 0;\n\nvar string_1 = require(\"devextreme/core/utils/string\");\n\nvar themes_1 = require(\"devextreme/ui/themes\");\n\nvar ko = require(\"knockout\");\n\nvar _default_1 = require(\"../../../data/localization/_default\");\n\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\n\nvar model_1 = require(\"../../../model\");\n\nvar _dashboard_layout_mode_helper_1 = require(\"../../../viewer-parts/_dashboard-layout-mode-helper\");\n\nvar _aggregated_data_source_1 = require(\"./_aggregated-data-source\");\n\nvar _underlying_data_source_1 = require(\"./_underlying-data-source\");\n\nvar DataInspectorViewModelOptions = function () {\n  function DataInspectorViewModelOptions() {}\n\n  return DataInspectorViewModelOptions;\n}();\n\nexports.DataInspectorViewModelOptions = DataInspectorViewModelOptions;\n\nvar DataInspectorViewModel = function () {\n  function DataInspectorViewModel(options) {\n    var _this = this;\n\n    this.options = options;\n    this._dashboardItem = ko.observable();\n    this.avaliableInspectedDataType = [{\n      value: 'Aggregated',\n      text: _default_1.getLocalizationById('DashboardStringId.AggregatedDataType')\n    }, {\n      value: 'Raw',\n      text: _default_1.getLocalizationById('DashboardStringId.RawDataType')\n    }];\n    this.allowSwitchInspectedDataType = ko.observable(false);\n    this.inspectedDataType = ko.observable();\n    this.title = ko.computed(function () {\n      return (_this._dashboardItem() && _this._dashboardItem().name() || '') + (!_this.allowSwitchInspectedDataType() ? ' ' + string_1.format(_default_1.getLocalizationById('DashboardStringId.InspectedTypeFormatString'), _this.inspectedDataType()) : '');\n    });\n    this.visible = ko.observable(false);\n    this.gridDataSource = ko.observable(null);\n    this.gridOptions = ko.computed(function () {\n      var gridDataSource = _this.gridDataSource();\n\n      if (!gridDataSource) {\n        return null;\n      }\n\n      var dataSource = gridDataSource.data || null;\n      var columns = gridDataSource.columns || null;\n      var options = {\n        customizeColumns: gridDataSource.customizeColumns,\n        onContentReady: _this.options.onGridContentReady,\n        onInitialized: _this.options.onGridInitialized,\n        showBorders: true,\n        scrolling: {\n          mode: 'virtual'\n        },\n        loadPanel: {\n          text: _default_1.getLocalizationById('DashboardWebStringId.Loading')\n        },\n        filterRow: {\n          visible: true,\n          applyFilterText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.ApplyFilter'),\n          betweenEndText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.BetweenEnd'),\n          betweenStartText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.BetweenStart'),\n          resetOperationText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.ResetOperation'),\n          operationDescriptions: {\n            between: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Between'),\n            contains: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Contains'),\n            endsWith: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.EndsWith'),\n            equal: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Equals'),\n            greaterThan: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Greater'),\n            greaterThanOrEqual: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.GreaterOrEqual'),\n            lessThan: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Less'),\n            lessThanOrEqual: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.LessOrEqual'),\n            notContains: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.DoesNotContain'),\n            notEqual: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.DoesNotEqual'),\n            startsWith: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.StartsWith')\n          }\n        },\n        onCellPrepared: function (e) {\n          if (e.rowType === 'data') {\n            var cellData = e.data[e.column.dataField];\n            if (cellData && cellData.displayValue) _jquery_helpers_1.$unwrap(e.cellElement).innerText = cellData.displayValue;\n          }\n        },\n        columnHidingEnabled: _this.isMobile,\n        rowAlternationEnabled: true,\n        noDataText: _default_1.getLocalizationById('DashboardStringId.MessageGridHasNoData'),\n        dataSource: dataSource,\n        columns: columns\n      };\n      if (themes_1.default.isMaterial(themes_1.default.current())) options.showColumnLines = true;\n      return options;\n    });\n    this.closeButtonStylingMode = themes_1.default.isMaterial(themes_1.default.current()) ? 'contained' : undefined;\n    this.closeButtonType = themes_1.default.isMaterial(themes_1.default.current()) ? 'normal' : undefined;\n    this.visible.subscribe(function (visible) {\n      if (!visible) {\n        _this._clearDataSource();\n      }\n    });\n\n    this._dashboardItem.subscribe(function (_) {\n      _this._clearDataSource();\n    });\n\n    this.inspectedDataType.subscribe(function () {\n      if (_this.visible()) {\n        _this._bindGrid();\n      }\n    });\n  }\n\n  DataInspectorViewModel.prototype.setUnderlyingDataProvider = function (underlyingDataProvider) {\n    this.underlyingDataProvider = underlyingDataProvider;\n  };\n\n  DataInspectorViewModel.prototype._bindGrid = function () {\n    var dashboardItem = this._dashboardItem();\n\n    var inspectedDataType = this.inspectedDataType();\n    var dataSource = inspectedDataType === 'Raw' ? this._getRawDataSource(dashboardItem) : this._getAggregatedDataSource(dashboardItem);\n\n    if (dataSource !== this.gridDataSource()) {\n      this.gridDataSource(dataSource);\n    }\n  };\n\n  DataInspectorViewModel.prototype._clearDataSource = function () {\n    this._rawDataSource = null;\n    this._aggregatedDataSource = null;\n  };\n\n  DataInspectorViewModel.prototype._getInitialMode = function (allowInspectAggregatedData, allowInspectRawData, initialMode, prevMode) {\n    if (initialMode) {\n      return initialMode;\n    } else if (prevMode && allowInspectAggregatedData && allowInspectRawData) {\n      return prevMode;\n    } else if (allowInspectAggregatedData) {\n      return 'Aggregated';\n    } else if (allowInspectRawData) {\n      return 'Raw';\n    } else return 'Aggregated';\n  };\n\n  DataInspectorViewModel.prototype._getRawDataSource = function (dashbordItem) {\n    if (!this._rawDataSource) {\n      this._rawDataSource = _underlying_data_source_1.generateUnderlyingDataSource(this.underlyingDataProvider, dashbordItem);\n    }\n\n    return this._rawDataSource;\n  };\n\n  DataInspectorViewModel.prototype._getAggregatedDataSource = function (dashbordItem) {\n    if (!this._aggregatedDataSource) {\n      this._aggregatedDataSource = _aggregated_data_source_1.generateAggregatedSource(dashbordItem._getItemData(), this._getAggregatedDataSourceArgs(dashbordItem));\n    }\n\n    return this._aggregatedDataSource;\n  };\n\n  DataInspectorViewModel.prototype._getAggregatedDataSourceArgs = function (dashboardItem) {\n    if (dashboardItem instanceof model_1.CardItem) {\n      if (dashboardItem.sparklineArgument()) {\n        return {\n          addSparklineTotal: true,\n          sparklineMeasures: dashboardItem.cards().map(function (card) {\n            return card.actualValue().uniqueName();\n          })\n        };\n      }\n    } else if (dashboardItem instanceof model_1.GridItem) {\n      return {\n        addSparklineTotal: false,\n        sparklineMeasures: dashboardItem.columns().filter(function (column) {\n          return column instanceof model_1.GridSparklineColumn;\n        }).map(function (column) {\n          return column.measure().uniqueName();\n        })\n      };\n    }\n\n    return {\n      addSparklineTotal: false,\n      sparklineMeasures: []\n    };\n  };\n\n  Object.defineProperty(DataInspectorViewModel.prototype, \"isMobile\", {\n    get: function () {\n      return _dashboard_layout_mode_helper_1.DashboardLayoutModeHelper.isMobile;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DataInspectorViewModel.prototype.show = function (dashboardItem, allowInspectAggregatedData, allowInspectRawData, initialMode) {\n    this.allowSwitchInspectedDataType(allowInspectAggregatedData && allowInspectRawData);\n    this.inspectedDataType(this._getInitialMode(allowInspectAggregatedData, allowInspectRawData, initialMode, this.inspectedDataType()));\n\n    this._dashboardItem(dashboardItem);\n\n    this.visible(true);\n\n    this._bindGrid();\n  };\n\n  return DataInspectorViewModel;\n}();\n\nexports.DataInspectorViewModel = DataInspectorViewModel;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/common/extensions/data-inspector-extension/_data-inspector-view-model.js"],"names":["Object","defineProperty","exports","value","DataInspectorViewModel","DataInspectorViewModelOptions","string_1","require","themes_1","ko","_default_1","_jquery_helpers_1","model_1","_dashboard_layout_mode_helper_1","_aggregated_data_source_1","_underlying_data_source_1","options","_this","_dashboardItem","observable","avaliableInspectedDataType","text","getLocalizationById","allowSwitchInspectedDataType","inspectedDataType","title","computed","name","format","visible","gridDataSource","gridOptions","dataSource","data","columns","customizeColumns","onContentReady","onGridContentReady","onInitialized","onGridInitialized","showBorders","scrolling","mode","loadPanel","filterRow","applyFilterText","betweenEndText","betweenStartText","resetOperationText","operationDescriptions","between","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notContains","notEqual","startsWith","onCellPrepared","e","rowType","cellData","column","dataField","displayValue","$unwrap","cellElement","innerText","columnHidingEnabled","isMobile","rowAlternationEnabled","noDataText","default","isMaterial","current","showColumnLines","closeButtonStylingMode","undefined","closeButtonType","subscribe","_clearDataSource","_","_bindGrid","prototype","setUnderlyingDataProvider","underlyingDataProvider","dashboardItem","_getRawDataSource","_getAggregatedDataSource","_rawDataSource","_aggregatedDataSource","_getInitialMode","allowInspectAggregatedData","allowInspectRawData","initialMode","prevMode","dashbordItem","generateUnderlyingDataSource","generateAggregatedSource","_getItemData","_getAggregatedDataSourceArgs","CardItem","sparklineArgument","addSparklineTotal","sparklineMeasures","cards","map","card","actualValue","uniqueName","GridItem","filter","GridSparklineColumn","measure","get","DashboardLayoutModeHelper","enumerable","configurable","show"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_data-inspector-view-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataInspectorViewModel = exports.DataInspectorViewModelOptions = void 0;\nvar string_1 = require(\"devextreme/core/utils/string\");\nvar themes_1 = require(\"devextreme/ui/themes\");\nvar ko = require(\"knockout\");\nvar _default_1 = require(\"../../../data/localization/_default\");\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\nvar model_1 = require(\"../../../model\");\nvar _dashboard_layout_mode_helper_1 = require(\"../../../viewer-parts/_dashboard-layout-mode-helper\");\nvar _aggregated_data_source_1 = require(\"./_aggregated-data-source\");\nvar _underlying_data_source_1 = require(\"./_underlying-data-source\");\nvar DataInspectorViewModelOptions = (function () {\n    function DataInspectorViewModelOptions() {\n    }\n    return DataInspectorViewModelOptions;\n}());\nexports.DataInspectorViewModelOptions = DataInspectorViewModelOptions;\nvar DataInspectorViewModel = (function () {\n    function DataInspectorViewModel(options) {\n        var _this = this;\n        this.options = options;\n        this._dashboardItem = ko.observable();\n        this.avaliableInspectedDataType = [{\n                value: 'Aggregated',\n                text: _default_1.getLocalizationById('DashboardStringId.AggregatedDataType')\n            }, {\n                value: 'Raw',\n                text: _default_1.getLocalizationById('DashboardStringId.RawDataType')\n            }];\n        this.allowSwitchInspectedDataType = ko.observable(false);\n        this.inspectedDataType = ko.observable();\n        this.title = ko.computed(function () {\n            return (_this._dashboardItem() && _this._dashboardItem().name() || '') + (!_this.allowSwitchInspectedDataType() ?\n                ' ' + string_1.format(_default_1.getLocalizationById('DashboardStringId.InspectedTypeFormatString'), _this.inspectedDataType()) :\n                '');\n        });\n        this.visible = ko.observable(false);\n        this.gridDataSource = ko.observable(null);\n        this.gridOptions = ko.computed(function () {\n            var gridDataSource = _this.gridDataSource();\n            if (!gridDataSource) {\n                return null;\n            }\n            var dataSource = gridDataSource.data || null;\n            var columns = gridDataSource.columns || null;\n            var options = {\n                customizeColumns: gridDataSource.customizeColumns,\n                onContentReady: _this.options.onGridContentReady,\n                onInitialized: _this.options.onGridInitialized,\n                showBorders: true,\n                scrolling: {\n                    mode: 'virtual'\n                },\n                loadPanel: {\n                    text: _default_1.getLocalizationById('DashboardWebStringId.Loading')\n                },\n                filterRow: {\n                    visible: true,\n                    applyFilterText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.ApplyFilter'),\n                    betweenEndText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.BetweenEnd'),\n                    betweenStartText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.BetweenStart'),\n                    resetOperationText: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.ResetOperation'),\n                    operationDescriptions: {\n                        between: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Between'),\n                        contains: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Contains'),\n                        endsWith: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.EndsWith'),\n                        equal: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Equals'),\n                        greaterThan: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Greater'),\n                        greaterThanOrEqual: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.GreaterOrEqual'),\n                        lessThan: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.Less'),\n                        lessThanOrEqual: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.LessOrEqual'),\n                        notContains: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.DoesNotContain'),\n                        notEqual: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.DoesNotEqual'),\n                        startsWith: _default_1.getLocalizationById('DashboardWebStringId.Grid.FilterClause.StartsWith'),\n                    }\n                },\n                onCellPrepared: function (e) {\n                    if (e.rowType === 'data') {\n                        var cellData = e.data[e.column.dataField];\n                        if (cellData && cellData.displayValue)\n                            _jquery_helpers_1.$unwrap(e.cellElement).innerText = cellData.displayValue;\n                    }\n                },\n                columnHidingEnabled: _this.isMobile,\n                rowAlternationEnabled: true,\n                noDataText: _default_1.getLocalizationById('DashboardStringId.MessageGridHasNoData'),\n                dataSource: dataSource,\n                columns: columns,\n            };\n            if (themes_1.default.isMaterial(themes_1.default.current()))\n                options.showColumnLines = true;\n            return options;\n        });\n        this.closeButtonStylingMode = themes_1.default.isMaterial(themes_1.default.current()) ? 'contained' : undefined;\n        this.closeButtonType = themes_1.default.isMaterial(themes_1.default.current()) ? 'normal' : undefined;\n        this.visible.subscribe(function (visible) {\n            if (!visible) {\n                _this._clearDataSource();\n            }\n        });\n        this._dashboardItem.subscribe(function (_) { _this._clearDataSource(); });\n        this.inspectedDataType.subscribe(function () {\n            if (_this.visible()) {\n                _this._bindGrid();\n            }\n        });\n    }\n    DataInspectorViewModel.prototype.setUnderlyingDataProvider = function (underlyingDataProvider) {\n        this.underlyingDataProvider = underlyingDataProvider;\n    };\n    DataInspectorViewModel.prototype._bindGrid = function () {\n        var dashboardItem = this._dashboardItem();\n        var inspectedDataType = this.inspectedDataType();\n        var dataSource = inspectedDataType === 'Raw' ? this._getRawDataSource(dashboardItem) : this._getAggregatedDataSource(dashboardItem);\n        if (dataSource !== this.gridDataSource()) {\n            this.gridDataSource(dataSource);\n        }\n    };\n    DataInspectorViewModel.prototype._clearDataSource = function () {\n        this._rawDataSource = null;\n        this._aggregatedDataSource = null;\n    };\n    DataInspectorViewModel.prototype._getInitialMode = function (allowInspectAggregatedData, allowInspectRawData, initialMode, prevMode) {\n        if (initialMode) {\n            return initialMode;\n        }\n        else if (prevMode && allowInspectAggregatedData && allowInspectRawData) {\n            return prevMode;\n        }\n        else if (allowInspectAggregatedData) {\n            return 'Aggregated';\n        }\n        else if (allowInspectRawData) {\n            return 'Raw';\n        }\n        else\n            return 'Aggregated';\n    };\n    DataInspectorViewModel.prototype._getRawDataSource = function (dashbordItem) {\n        if (!this._rawDataSource) {\n            this._rawDataSource = _underlying_data_source_1.generateUnderlyingDataSource(this.underlyingDataProvider, dashbordItem);\n        }\n        return this._rawDataSource;\n    };\n    DataInspectorViewModel.prototype._getAggregatedDataSource = function (dashbordItem) {\n        if (!this._aggregatedDataSource) {\n            this._aggregatedDataSource = _aggregated_data_source_1.generateAggregatedSource(dashbordItem._getItemData(), this._getAggregatedDataSourceArgs(dashbordItem));\n        }\n        return this._aggregatedDataSource;\n    };\n    DataInspectorViewModel.prototype._getAggregatedDataSourceArgs = function (dashboardItem) {\n        if (dashboardItem instanceof model_1.CardItem) {\n            if (dashboardItem.sparklineArgument()) {\n                return {\n                    addSparklineTotal: true,\n                    sparklineMeasures: dashboardItem\n                        .cards()\n                        .map(function (card) { return card.actualValue().uniqueName(); })\n                };\n            }\n        }\n        else if (dashboardItem instanceof model_1.GridItem) {\n            return {\n                addSparklineTotal: false,\n                sparklineMeasures: dashboardItem\n                    .columns()\n                    .filter(function (column) { return column instanceof model_1.GridSparklineColumn; })\n                    .map(function (column) { return column.measure().uniqueName(); })\n            };\n        }\n        return {\n            addSparklineTotal: false, sparklineMeasures: []\n        };\n    };\n    Object.defineProperty(DataInspectorViewModel.prototype, \"isMobile\", {\n        get: function () {\n            return _dashboard_layout_mode_helper_1.DashboardLayoutModeHelper.isMobile;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DataInspectorViewModel.prototype.show = function (dashboardItem, allowInspectAggregatedData, allowInspectRawData, initialMode) {\n        this.allowSwitchInspectedDataType(allowInspectAggregatedData && allowInspectRawData);\n        this.inspectedDataType(this._getInitialMode(allowInspectAggregatedData, allowInspectRawData, initialMode, this.inspectedDataType()));\n        this._dashboardItem(dashboardItem);\n        this.visible(true);\n        this._bindGrid();\n    };\n    return DataInspectorViewModel;\n}());\nexports.DataInspectorViewModel = DataInspectorViewModel;\n"]},"metadata":{},"sourceType":"script"}