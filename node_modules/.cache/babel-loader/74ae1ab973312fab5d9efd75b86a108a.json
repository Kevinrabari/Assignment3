{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_data-grid-item.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dataGridItem = void 0;\n\nvar string_1 = require(\"devextreme/core/utils/string\");\n\nvar data_grid_1 = require(\"devextreme/ui/data_grid\");\n\nvar _default_1 = require(\"../../../data/localization/_default\");\n\nvar _common_1 = require(\"../../../data/_common\");\n\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\n\nvar _localization_ids_1 = require(\"../../../data/_localization-ids\");\n\nvar _localizer_1 = require(\"../../../data/_localizer\");\n\nvar _utils_1 = require(\"../../../data/_utils\");\n\nvar _style_settings_provider_1 = require(\"../../conditional-formatting/_style-settings-provider\");\n\nvar legacy_settings_1 = require(\"../../legacy-settings\");\n\nvar _base_item_1 = require(\"../_base-item\");\n\nvar _column_width_calculator_1 = require(\"./_column-width-calculator\");\n\nvar _grid_column_painter_1 = require(\"./_grid-column-painter\");\n\nvar _grid_filter_parser_1 = require(\"./_grid-filter-parser\");\n\nvar _grid_filter_patcher_1 = require(\"./_grid-filter-patcher\");\n\nvar MAX_CELL_COUNT = 2000,\n    HEIGHT_DELTA_INDICATOR = 12,\n    DATAGRID_CONTEXT_MENU_ICON = 'dashboard-datagriditem-resetcolumnwidths';\n\nvar dataGridItem = function (_super) {\n  __extends(dataGridItem, _super);\n\n  function dataGridItem(container, options) {\n    var _this = _super.call(this, container, options) || this;\n\n    _this._updateLocked = false;\n    _this._digits_string = '0123456789';\n    _this.clientFilterChanged = _jquery_helpers_1.createJQueryCallbacks();\n    _this.clientFilterStateChanged = _jquery_helpers_1.createJQueryCallbacks();\n    _this.TextAlignment = {\n      Left: 'left',\n      Right: 'right',\n      Center: 'center'\n    };\n    _this.DisplayMode = {\n      Value: 'Value',\n      Delta: 'Delta',\n      Bar: 'Bar',\n      Sparkline: 'Sparkline',\n      Image: 'Image',\n      Hyperlink: 'Hyperlink'\n    };\n    _this.SummaryType = {\n      Count: 'Count',\n      Min: 'Min',\n      Max: 'Max',\n      Avg: 'Avg',\n      Sum: 'Sum'\n    };\n    _this.CssClasses = {\n      wordWrap: 'dx-dashboard-word-wrap',\n      gridAdaptiveCellValue: 'dx-adaptive-item-text'\n    };\n    _this._bestFitProvider = {\n      getBestFit: function (index) {\n        var bestFit = 0;\n        var columnViewModel = _this.options.ViewModel.Columns[index];\n\n        if (columnViewModel.DisplayMode === _this.DisplayMode.Sparkline) {\n          var columnName = _this.options.Name + columnViewModel.DataId;\n\n          var startValues = _jquery_helpers_1.$unwrap(_this._dataGrid.element()).querySelectorAll('.' + columnName + '_startValue');\n\n          var endValues = _jquery_helpers_1.$unwrap(_this._dataGrid.element()).querySelectorAll('.' + columnName + '_endValue');\n\n          var maxStartWidth = _grid_column_painter_1.GridColumnPainter.calcMaxWidth(startValues);\n\n          var maxEndWidth = _grid_column_painter_1.GridColumnPainter.calcMaxWidth(endValues);\n\n          bestFit = Math.round(_this._getDefaultBestCharacterCount(index) * _this.charWidth) + maxStartWidth + maxEndWidth;\n        } else if (columnViewModel.DisplayMode === _this.DisplayMode.Bar) {\n          bestFit = Math.round(_this._getDefaultBestCharacterCount(index) * _this.charWidth);\n        } else {\n          bestFit = _this._dataGrid.columnOption(index, 'bestFitWidth');\n        }\n\n        return bestFit;\n      }\n    };\n    _this._clientStateUpdateDebounced = _utils_1.debounce(function (widthOptions) {\n      _this.gridWidthOptionsChanged && _this.gridWidthOptionsChanged({\n        widthOptions: widthOptions\n      });\n    }, 300);\n\n    _this._customizeViewOptions = function (opts) {\n      opts.columnAutoWidth = true;\n    };\n\n    _this.isSummaryFilterCollecting = false;\n    _this.canRaiseFilterChanged = true;\n    _this._calculator = new _column_width_calculator_1.ColumnWidthCalculator();\n    _this._styleSettingsProvider = new _style_settings_provider_1.styleSettingsProvider();\n\n    _this._styleSettingsProvider.initialize(_this.options.ConditionalFormattingModel, _this.options.ViewModel ? _this.options.ViewModel.WordWrap : false);\n\n    return _this;\n  }\n\n  Object.defineProperty(dataGridItem.prototype, \"_captionToolbarSeparatorRequired\", {\n    get: function () {\n      return !this.hasParentContainer() || this.hasParentContainer() && this.visualMode === 'caption';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(dataGridItem.prototype, \"dataController\", {\n    get: function () {\n      return this._dataController;\n    },\n    set: function (dataController) {\n      this._dataController = dataController;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  dataGridItem.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this._dataGrid && this._dataGrid.dispose();\n\n    this._styleSettingsProvider.dispose();\n  };\n\n  dataGridItem.prototype._clearSelectionUnsafe = function () {\n    this._dataGrid.clearSelection();\n  };\n\n  dataGridItem.prototype._setSelectionUnsafe = function (values) {\n    _super.prototype._setSelectionUnsafe.call(this, values);\n\n    this.clearSelection();\n    if (values) this._setGridSelection(values);\n  };\n\n  dataGridItem.prototype._selectTuplesCore = function (tuples, updateTupleDelegate, state) {\n    var that = this,\n        currentSelection = that._dataGrid.getSelectedRowKeys(),\n        values = [],\n        processKeys = function (keys) {\n      keys.forEach(function (key) {\n        if (state) {\n          currentSelection.push(key);\n        } else {\n          currentSelection.splice(currentSelection.indexOf(key), 1);\n        }\n      });\n      return currentSelection;\n    };\n\n    tuples.forEach(function (tuple) {\n      var res = updateTupleDelegate(tuple);\n\n      if (res != null && res[0] != null) {\n        values.push(res[0].value);\n      }\n    });\n\n    that._setGridSelection(values, processKeys);\n  };\n\n  dataGridItem.prototype.renderPartialContentUnsafe = function () {\n    this._dataGrid.refresh(true);\n  };\n\n  dataGridItem.prototype.renderContentUnsafe = function (element, changeExisting, afterRenderCallback) {\n    if (!this.options) return false;\n\n    var opts = this._getViewOptions();\n\n    if (this.options.ViewModel && this.options.ViewModel.WordWrap) {\n      element.classList.add(this.CssClasses.wordWrap);\n    } else {\n      element.classList.remove(this.CssClasses.wordWrap);\n    }\n\n    if (changeExisting && this._dataGrid) {\n      if (this.resetClientStateOnUpdate) {\n        this._resetColumnWidths();\n      }\n\n      _jquery_helpers_1.deepExtend(opts, this._getCommonOptions());\n\n      this._raiseItemWidgetOptionsPrepared(opts);\n\n      this.canRaiseFilterChanged = false;\n\n      this._dataGrid.option('filterSyncEnabled', false);\n\n      this._dataGrid.option(opts);\n\n      this.canRaiseFilterChanged = true;\n    } else {\n      var options = __assign(__assign(__assign({}, opts), this._getCommonOptions()), {\n        scrolling: {\n          mode: 'virtual'\n        }\n      });\n\n      this._raiseItemWidgetOptionsPrepared(options);\n\n      this._dataGrid = new data_grid_1.default(element, options);\n\n      this._updateCharWidth();\n    }\n\n    return false;\n  };\n\n  dataGridItem.prototype.getInfoUnsafe = function () {\n    var that = this,\n        gridScroll = this._dataGrid.getScrollable(),\n        isVScrollbarVisible = that._dataGrid.isScrollbarVisible(),\n        isHScrollbarVisible = gridScroll.scrollWidth() > gridScroll.clientWidth(),\n        scrollRowData = that._dataGrid.getTopVisibleRowData(),\n        combinedFilter = that._dataGrid.getCombinedFilter(),\n        visibleColumns = that._dataGrid.getVisibleColumns(),\n        topPath = [],\n        leftPath = [];\n\n    if (scrollRowData) {\n      that.options.ViewModel.RowIdentificatorDataMembers.forEach(function (dataMember) {\n        var value = scrollRowData[dataMember];\n        topPath.push(value);\n      });\n      leftPath.push(this._calculator.getLeftPrintingColumnIndex(gridScroll.scrollLeft()));\n    }\n\n    return _jquery_helpers_1.deepExtend(_super.prototype.getInfoUnsafe.call(this), {\n      scroll: {\n        horizontal: isHScrollbarVisible,\n        vertical: isVScrollbarVisible,\n        topPath: topPath,\n        leftPath: leftPath\n      },\n      sortInfo: that._getSortInfo(),\n      combinedFilter: combinedFilter !== undefined ? _grid_filter_parser_1.parseFilter(combinedFilter, visibleColumns, undefined, this.dateToString) : '',\n      widthOptions: that._calculator.getClientWidthOptions()\n    });\n  };\n\n  dataGridItem.prototype._getSortInfo = function () {\n    var that = this,\n        sortInfo = [];\n\n    that._dataGrid.getVisibleColumns().forEach(function (info) {\n      if (info.sortIndex != undefined && info.sortOrder != undefined) {\n        sortInfo.push({\n          dataField: info.dataField,\n          sortIndex: info.sortIndex,\n          sortOrder: info.sortOrder\n        });\n      }\n    });\n\n    sortInfo.sort(function (a, b) {\n      return a.sortIndex - b.sortIndex;\n    });\n    return sortInfo;\n  };\n\n  dataGridItem.prototype._initializeData = function (newOptions) {\n    _super.prototype._initializeData.call(this, newOptions);\n\n    this.options.GridClientFilterState = newOptions.GridClientFilterState;\n    var isResetColumnWidthsRequired = !!this.options && !!this.options.ViewModel && !!newOptions.ViewModel && this.options.ViewModel.ColumnWidthMode !== newOptions.ViewModel.ColumnWidthMode;\n\n    if (isResetColumnWidthsRequired) {\n      this._resetColumnWidths();\n    }\n\n    if (this._styleSettingsProvider) {\n      this._styleSettingsProvider.initialize(this.options.ConditionalFormattingModel, this.options.ViewModel ? this.options.ViewModel.WordWrap : false);\n    }\n  };\n\n  dataGridItem.prototype.getValueItem = function (columnName, index) {\n    return this._dataController.getValueItem(columnName, index);\n  };\n\n  dataGridItem.prototype._resetColumnWidths = function () {\n    this._calculator.reset(this.options.ViewModel, this._getColumnWidthMode());\n\n    var columnsWidth = this._calculator.calcColumnsWidth(this._bestFitProvider, _jquery_helpers_1.$wrap(this._dataGrid.element()).width() - this._dataGrid.getScrollbarWidth(), this.charWidth);\n\n    this._updateColumnsWidth(columnsWidth);\n\n    this._applySelection();\n  };\n\n  dataGridItem.prototype._updateColumnsWidth = function (columnWidths) {\n    var _this = this;\n\n    this._beginResize();\n\n    columnWidths.forEach(function (width, i) {\n      _this._dataGrid.columnOption(i, _this._getColumnWidthProperty(), width);\n    });\n\n    this._endResize();\n  };\n\n  dataGridItem.prototype._getColumnWidthProperty = function () {\n    return 'visibleWidth';\n  };\n\n  dataGridItem.prototype._getColumnWidthMode = function () {\n    return this.options.ViewModel.ColumnWidthMode;\n  };\n\n  dataGridItem.prototype._getDefaultBestCharacterCount = function (index) {\n    return this.options.ViewModel.Columns[index].DefaultBestCharacterCount;\n  };\n\n  dataGridItem.prototype._beginResize = function () {\n    this._updateLocked = true;\n\n    this._dataGrid.beginUpdate();\n  };\n\n  dataGridItem.prototype._endResize = function () {\n    this._dataGrid.endUpdate();\n\n    this._updateLocked = false;\n  };\n\n  dataGridItem.prototype._updateCharWidth = function () {\n    var span = document.createElement('span');\n    span.classList.add('dx-widget');\n    span.style.display = 'inline-block';\n    span.innerText = this._digits_string;\n    document.body.appendChild(span);\n    this.charWidth = _jquery_helpers_1.getWidth(span) / 10;\n    document.body.removeChild(span);\n  };\n\n  dataGridItem.prototype._onColumnsChanging = function (e) {\n    var grid = e.component,\n        columnResized = e.optionNames.width,\n        gridResized = e.optionNames.visibleWidth && grid.columnOption(0, 'visibleWidth') !== undefined,\n        viewModel = this.options.ViewModel;\n\n    if (this._updateLocked || !viewModel || !viewModel.Columns || viewModel.Columns.length == 0 || grid.columnCount() !== viewModel.Columns.length) {\n      return;\n    }\n\n    if (grid.getController('data').isLoaded() && gridResized && !columnResized) {\n      this._calculator.onDataLoaded(viewModel, this._getColumnWidthMode());\n    }\n\n    if (columnResized) {\n      var leftColumnIndex = grid.getController('columnsResizer')._resizingInfo.currentColumnIndex;\n\n      var leftColumnWidth = this._dataGrid.columnOption(leftColumnIndex, 'width');\n\n      var rightColumnWidth = this._dataGrid.columnOption(leftColumnIndex + 1, 'width');\n\n      var columnWidths = this._calculator.onColumnResized(leftColumnIndex, leftColumnWidth, rightColumnWidth);\n\n      this._updateColumnsWidth(columnWidths);\n\n      this._clientStateUpdateDebounced(this._calculator.widthOptions);\n    } else if (gridResized) {\n      var columnsWidth = this._calculator.calcColumnsWidth(this._bestFitProvider, _jquery_helpers_1.$wrap(this._dataGrid.element()).width() - this._dataGrid.getScrollbarWidth(), this.charWidth);\n\n      this._updateColumnsWidth(columnsWidth);\n    }\n  };\n\n  dataGridItem.prototype._getViewOptions = function () {\n    var _this = this;\n\n    var viewModel = this.options.ViewModel;\n    if (!viewModel) return null;\n\n    var dataSource = this._dataController.getDataSource();\n\n    var columns = this._getColumns();\n\n    var hasSlowColumns = columns.some(function (c) {\n      return c.displayMode == _this.DisplayMode.Bar || c.displayMode == _this.DisplayMode.Sparkline || c.displayMode == _this.DisplayMode.Image;\n    });\n    var viewOptions = {\n      filterValue: !this.options.GridClientFilterState ? null : this.options.GridClientFilterState,\n      dataSource: dataSource,\n      keyExpr: 'index',\n      columns: columns,\n      summary: {\n        totalItems: this._getTotals(),\n        calculateCustomSummary: function (options) {\n          if (options.summaryProcess == 'finalize') {\n            options.totalValue = _this._dataController.getTotalValue(options.name);\n          }\n        }\n      },\n      filterRow: {\n        visible: viewModel.ShowFilterRow\n      },\n      rowAlternationEnabled: viewModel.EnableBandedRows,\n      showRowLines: viewModel.ShowHorizontalLines,\n      showColumnLines: viewModel.ShowVerticalLines,\n      wordWrapEnabled: viewModel.WordWrap,\n      showColumnHeaders: viewModel.ShowColumnHeaders,\n      allowColumnResizing: this._getColumnWidthMode() !== 'AutoFitToContents'\n    };\n\n    this._customizeViewOptions(viewOptions);\n\n    return viewOptions;\n  };\n\n  dataGridItem.prototype._getCommonOptions = function () {\n    var _this = this;\n\n    var that = this,\n        commonOptions = {};\n    commonOptions.paging = {\n      enabled: false\n    };\n    commonOptions.sorting = {\n      mode: 'multiple',\n      ascendingText: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridSortAscending),\n      descendingText: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridSortDescending),\n      clearText: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridClearSorting)\n    };\n\n    if (this.manualyResetClientState) {\n      commonOptions.onContextMenuPreparing = function (options) {\n        if (options.target === 'content' && _this._calculator.columnsResized) {\n          options.items = [{\n            text: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridResetColumnWidths),\n            icon: DATAGRID_CONTEXT_MENU_ICON,\n            onItemClick: function () {\n              _this._resetColumnWidths();\n            }\n          }];\n        }\n      };\n    }\n\n    commonOptions.onContentReady = function () {\n      that._styleSettingsProvider.draw();\n\n      _this._changeGridSparklineColumnsWidth(_this.options && _this.options.ViewModel && _this.options.ViewModel.Columns);\n    };\n\n    commonOptions.noDataText = _localizer_1.localizer.getString(_localization_ids_1.localizationId.MessageGridHasNoData);\n\n    commonOptions.onCellClick = function (data) {\n      var columnType = data.column && data.column.type || null;\n      if (data.rowType === 'data' && columnType !== 'adaptive') that._raiseItemClick(data);\n    };\n\n    commonOptions.onCellHoverChanged = function (args) {\n      that._raiseItemHover(args, args.eventType == 'mouseover');\n    };\n\n    commonOptions['onColumnsChanging'] = function (e) {\n      return _this._onColumnsChanging(e);\n    };\n\n    commonOptions.width = '100%';\n    commonOptions.cellHintEnabled = true;\n    commonOptions.loadPanel = {\n      enabled: false\n    };\n    commonOptions.searchPanel = {\n      visible: false\n    };\n    commonOptions.keyboardNavigation = {\n      enabled: false\n    };\n    commonOptions.filterSyncEnabled = true;\n\n    commonOptions.onOptionChanged = function (e) {\n      if (e.name == 'filterValue') {\n        _this._raiseClientFilterChanged(e);\n\n        _this.clientFilterStateChanged.fire(e.value);\n      }\n    };\n\n    commonOptions.onEditorPreparing = function (e) {\n      if (e.parentType === 'filterRow') e.editorOptions.valueChangeEvent = 'change';\n    };\n\n    return commonOptions;\n  };\n\n  dataGridItem.prototype._getRowsValues = function (data) {\n    var that = this,\n        selectionMembers = that.options.ViewModel.SelectionDataMembers,\n        visibleValues = [],\n        value;\n    selectionMembers.forEach(function (member) {\n      value = that.getValueItem(member, data.index).getUniqueValue();\n\n      if (value !== undefined) {\n        visibleValues.push(value);\n      }\n    });\n    return that._dataController.getSelectionValues(visibleValues);\n  };\n\n  dataGridItem.prototype._getSelectedRowIndices = function () {\n    var selectedValues = this._getSelectedValues();\n\n    return selectedValues ? this._dataController.getSelectedRowKeys(selectedValues) : [];\n  };\n\n  dataGridItem.prototype._getTotalCaptionTemplate = function (totalType) {\n    if (totalType == 'Auto') {\n      return _default_1.getLocalizationById('DashboardStringId.GridTotalAutoTemplate');\n    } else {\n      var id = void 0;\n\n      switch (totalType) {\n        case 'Min':\n          id = 'DashboardStringId.GridTotalTypeMin';\n          break;\n\n        case 'Max':\n          id = 'DashboardStringId.GridTotalTypeMax';\n          break;\n\n        case 'Avg':\n          id = 'DashboardStringId.GridTotalTypeAvg';\n          break;\n\n        case 'Sum':\n          id = 'DashboardStringId.GridTotalTypeSum';\n          break;\n\n        default:\n          id = 'DashboardStringId.GridTotalTypeCount';\n          break;\n      }\n\n      return string_1.format(_default_1.getLocalizationById('DashboardStringId.GridTotalTemplate'), _default_1.getLocalizationById(id), _default_1.getLocalizationById('DashboardStringId.GridTotalValueTemplate'));\n    }\n  };\n\n  dataGridItem.prototype._getTotals = function () {\n    var _this = this;\n\n    var that = this,\n        res = [],\n        columns = that.options.ViewModel.Columns || [];\n    columns.forEach(function (column) {\n      var columnName = column.DataId,\n          totalsViewModel = column.Totals || [];\n      totalsViewModel.forEach(function (totalModel) {\n        res.push({\n          name: totalModel.DataId,\n          showInColumn: columnName,\n          summaryType: 'custom',\n          displayFormat: _this._getTotalCaptionTemplate(totalModel.TotalType)\n        });\n      });\n    });\n    return res;\n  };\n\n  dataGridItem.prototype._calculateCustomSummary = function (options) {\n    options.totalValue = 0;\n  };\n\n  dataGridItem.prototype._getColumnName = function (columnViewModel) {\n    var gridName = this.options.Name;\n    var fieldName = columnViewModel.DataId;\n    return gridName + fieldName;\n  };\n\n  dataGridItem.prototype.calculateFilterExpressionHandler = function (column) {\n    var _this = this;\n\n    return function (filterValue, selectedFilterOperation) {\n      var gridColumn = _this._dataGrid.getVisibleColumns().filter(function (c) {\n        return c.dataField === column.dataField;\n      })[0];\n\n      var canPatchFilter = !_this.isSummaryFilterCollecting && gridColumn.dataType === 'string' && _grid_filter_patcher_1.allowedStringOperations.some(function (x) {\n        return x === selectedFilterOperation;\n      });\n\n      if (canPatchFilter) {\n        return function (values) {\n          var cellValue = values[gridColumn.dataField.toString()];\n          return _grid_filter_patcher_1.getCaseSensitiveFilterExpression(cellValue, filterValue, selectedFilterOperation);\n        };\n      }\n\n      return gridColumn.defaultCalculateFilterExpression.call(gridColumn, filterValue, selectedFilterOperation);\n    };\n  };\n\n  dataGridItem.prototype._getColumns = function () {\n    var _this = this;\n\n    var that = this,\n        res = [],\n        columns = that.options.ViewModel.Columns || [],\n        popupContainer = this.options.controlContainer;\n    columns.forEach(function (column, columnIndex) {\n      var fieldName = column.DataId,\n          columnName = _this._getColumnName(column),\n          gridColumn = {\n        allowEditing: false,\n        dataField: fieldName,\n        encodeHtml: that._isEncodeHtml(),\n        caption: column.Caption,\n        alignment: column.HorzAlignment === 'Right' ? that.TextAlignment.Right : that.TextAlignment.Left,\n        allowFiltering: column.SupportClientFilter\n      };\n\n      if (legacy_settings_1.DashboardPrivateSettings.gridColumnFilterMode === 'CaseSensitive') gridColumn.calculateFilterExpression = _this.calculateFilterExpressionHandler(gridColumn).bind(_this);\n      gridColumn[_common_1.DashboardDataIdField] = column.DataId;\n      gridColumn.headerAlignment = that.TextAlignment.Left;\n      gridColumn.displayMode = column.DisplayMode;\n\n      switch (column.DisplayMode) {\n        case that.DisplayMode.Value:\n          gridColumn.cellTemplate = function (containerElement, options) {\n            var container = _jquery_helpers_1.$unwrap(containerElement);\n\n            var valueItem = that.getValueItem(fieldName, options.data.index);\n\n            _grid_column_painter_1.GridColumnPainter.renderValue(container, valueItem.getData().displayText, that._isEncodeHtml());\n\n            var isDetail = that._isDetail(options.rowType);\n\n            var colummPrefix = isDetail ? columnName + '_detail' : columnName;\n\n            that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), false, colummPrefix, isDetail);\n\n            if (isDetail) container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n          };\n\n          gridColumn.resized = function () {\n            var visibleWidthReset = that._dataGrid && that._dataGrid.columnOption(columnIndex, 'visibleWidth') === undefined;\n\n            if (!visibleWidthReset) {\n              that._styleSettingsProvider.updateBarWidth(columnName);\n\n              that._styleSettingsProvider.updateBarWidth(columnName + '_detail');\n            }\n          };\n\n          break;\n\n        case that.DisplayMode.Delta:\n          gridColumn.cellTemplate = function (containerElement, options) {\n            var container = _jquery_helpers_1.$unwrap(containerElement);\n\n            var valueItem = that.getValueItem(fieldName, options.data.index);\n\n            var isDetail = that._isDetail(options.rowType);\n\n            _grid_column_painter_1.GridColumnPainter.renderDelta(container, valueItem.getData(), isDetail);\n\n            that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n\n            if (isDetail) container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n          };\n\n          break;\n\n        case that.DisplayMode.Hyperlink:\n          gridColumn.cellTemplate = function (containerElement, options) {\n            var container = _jquery_helpers_1.$unwrap(containerElement);\n\n            var valueItem = that.getValueItem(fieldName, options.data.index),\n                uri = fieldName ? string_1.format(!!column.UriPattern ? column.UriPattern : '{0}', valueItem.getUriValue()) : undefined;\n\n            _grid_column_painter_1.GridColumnPainter.renderHyperlink(container, uri, valueItem.getData().displayText, that._isEncodeHtml());\n\n            that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), false, columnName);\n\n            if (that._isDetail(options.rowType)) container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n          };\n\n          break;\n\n        case that.DisplayMode.Sparkline:\n          gridColumn.alignment = that.TextAlignment.Left;\n          gridColumn.cssClass = 'dx-dashboard-datagrid-column-visible-cell-content';\n\n          gridColumn.cellTemplate = function (containerElement, options) {\n            var container = _jquery_helpers_1.$unwrap(containerElement);\n\n            var valueItem = that.getValueItem(fieldName, options.data.index);\n\n            _grid_column_painter_1.GridColumnPainter.renderSparkline(columnName, column.ShowStartEndValues, container, valueItem.getData());\n\n            that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n\n            if (that._isDetail(options.rowType)) container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n          };\n\n          gridColumn.resized = function () {\n            return that._changeGridSparklineColumnsWidth([column]);\n          };\n\n          break;\n\n        case that.DisplayMode.Bar:\n          gridColumn.alignment = that.TextAlignment.Left;\n          gridColumn.cssClass = 'dx-dashboard-datagrid-column-visible-cell-content';\n\n          gridColumn.cellTemplate = function (containerElement, options) {\n            var container = _jquery_helpers_1.$unwrap(containerElement);\n\n            var valueItem = that.getValueItem(fieldName, options.data.index);\n            var barData = valueItem.getData();\n\n            _grid_column_painter_1.GridColumnPainter.renderBar(columnName, container, barData.text, barData.normalizedValue, barData.zeroValue);\n\n            that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n\n            if (that._isDetail(options.rowType)) container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n          };\n\n          gridColumn.resized = function () {\n            var gridRootElement = that._dataGrid ? _jquery_helpers_1.$unwrap(that._dataGrid.element()) : undefined;\n\n            if (gridRootElement) {\n              _grid_column_painter_1.GridColumnPainter.changeGridBarColumnsWidth(gridRootElement, columnName);\n            }\n          };\n\n          break;\n\n        case that.DisplayMode.Image:\n          gridColumn.cellTemplate = function (containerElement, options) {\n            var container = _jquery_helpers_1.$unwrap(containerElement);\n\n            var valueItem = that.getValueItem(fieldName, options.data.index);\n\n            _grid_column_painter_1.GridColumnPainter.renderImage(container, valueItem.getData());\n\n            that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n\n            if (that._isDetail(options.rowType)) container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n          };\n\n          break;\n      }\n\n      res.push(gridColumn);\n    });\n    return res;\n  };\n\n  dataGridItem.prototype._changeGridSparklineColumnsWidth = function (columnViewModels) {\n    var _this = this;\n\n    if (columnViewModels) {\n      var gridRootElement_1 = this._dataGrid ? _jquery_helpers_1.$unwrap(this._dataGrid.element()) : undefined;\n\n      if (gridRootElement_1) {\n        var sparklineViewModels = columnViewModels.filter(function (columnViewModel) {\n          return columnViewModel.DisplayMode === _this.DisplayMode.Sparkline;\n        });\n        sparklineViewModels.forEach(function (columnViewModel) {\n          _grid_column_painter_1.GridColumnPainter.changeGridSparklineColumnsWidth(gridRootElement_1, _this._getColumnName(columnViewModel));\n        });\n      }\n    }\n  };\n\n  dataGridItem.prototype._isDetail = function (rowType) {\n    return rowType === 'detailAdaptive';\n  };\n\n  dataGridItem.prototype._applySelectionUnsafe = function () {\n    this.setSelection(this.options.SelectedValues);\n  };\n\n  dataGridItem.prototype._resizeUnsafe = function () {\n    _super.prototype._resizeUnsafe.call(this);\n\n    this._dataGrid.resize();\n  };\n\n  dataGridItem.prototype._getDataPoint = function (element) {\n    var that = this;\n    return {\n      getValues: function (name) {\n        return name === 'Default' ? that._dataController.getDimensionValues(element.data.index) : null;\n      },\n      getDeltaIds: function () {\n        return that._getColumnDataIdsByColumnType('Delta');\n      },\n      getMeasureIds: function () {\n        return that._getColumnDataIdsByColumnType('Measure');\n      },\n      getSelectionValues: function (name) {\n        return that._getRowsValues(element.data);\n      }\n    };\n  };\n\n  dataGridItem.prototype._getColumnsByColumnType = function (columnType) {\n    var columns = this.options.ViewModel.Columns,\n        foundColumns = [];\n    columns.forEach(function (column) {\n      if (column.ColumnType === columnType) foundColumns.push(column);\n    });\n    return foundColumns;\n  };\n\n  dataGridItem.prototype._getColumnDataIdsByColumnType = function (columnType) {\n    var that = this,\n        columns = that._getColumnsByColumnType(columnType),\n        ids = [];\n\n    columns.forEach(function (column) {\n      ids.push(column.DataId);\n    });\n    return ids;\n  };\n\n  dataGridItem.prototype._getElementInteractionValue = function (element, viewModel) {\n    return this._getRowsValues(element.data);\n  };\n\n  dataGridItem.prototype._getWidget = function () {\n    return this._dataGrid;\n  };\n\n  dataGridItem.prototype._setGridSelection = function (values, keyProcessingDelegate) {\n    if (values && values.length > 0) {\n      var that = this,\n          selectionKeys = that._dataController.getSelectedRowKeys(values);\n\n      that._selectRows(keyProcessingDelegate ? keyProcessingDelegate(selectionKeys) : selectionKeys);\n    }\n  };\n\n  dataGridItem.prototype._selectRows = function (data) {\n    if (this._dataGrid) {\n      this._dataGrid.selectRows(data);\n    }\n  };\n\n  dataGridItem.prototype._isMultiDataSupported = function () {\n    return true;\n  };\n\n  dataGridItem.prototype._raiseClientFilterChanged = function (e) {\n    if (this.canRaiseFilterChanged) {\n      var visibleColumns = this._dataGrid.getVisibleColumns();\n\n      this.isSummaryFilterCollecting = true;\n\n      var combinedFilter = this._dataGrid.getCombinedFilter();\n\n      this.isSummaryFilterCollecting = false;\n      var filter = combinedFilter !== undefined ? _grid_filter_parser_1.parseFilter(combinedFilter, visibleColumns, undefined, this.dateToString) : '';\n      this.clientFilterChanged.fire(filter);\n    }\n  };\n\n  return dataGridItem;\n}(_base_item_1.baseItem);\n\nexports.dataGridItem = dataGridItem;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/viewer-items/data-grid-item/_data-grid-item.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","dataGridItem","string_1","require","data_grid_1","_default_1","_common_1","_jquery_helpers_1","_localization_ids_1","_localizer_1","_utils_1","_style_settings_provider_1","legacy_settings_1","_base_item_1","_column_width_calculator_1","_grid_column_painter_1","_grid_filter_parser_1","_grid_filter_patcher_1","MAX_CELL_COUNT","HEIGHT_DELTA_INDICATOR","DATAGRID_CONTEXT_MENU_ICON","_super","container","options","_this","_updateLocked","_digits_string","clientFilterChanged","createJQueryCallbacks","clientFilterStateChanged","TextAlignment","Left","Right","Center","DisplayMode","Value","Delta","Bar","Sparkline","Image","Hyperlink","SummaryType","Count","Min","Max","Avg","Sum","CssClasses","wordWrap","gridAdaptiveCellValue","_bestFitProvider","getBestFit","index","bestFit","columnViewModel","ViewModel","Columns","columnName","Name","DataId","startValues","$unwrap","_dataGrid","element","querySelectorAll","endValues","maxStartWidth","GridColumnPainter","calcMaxWidth","maxEndWidth","Math","round","_getDefaultBestCharacterCount","charWidth","columnOption","_clientStateUpdateDebounced","debounce","widthOptions","gridWidthOptionsChanged","_customizeViewOptions","opts","columnAutoWidth","isSummaryFilterCollecting","canRaiseFilterChanged","_calculator","ColumnWidthCalculator","_styleSettingsProvider","styleSettingsProvider","initialize","ConditionalFormattingModel","WordWrap","get","hasParentContainer","visualMode","enumerable","configurable","_dataController","set","dataController","dispose","_clearSelectionUnsafe","clearSelection","_setSelectionUnsafe","values","_setGridSelection","_selectTuplesCore","tuples","updateTupleDelegate","state","that","currentSelection","getSelectedRowKeys","processKeys","keys","forEach","key","push","splice","indexOf","tuple","res","renderPartialContentUnsafe","refresh","renderContentUnsafe","changeExisting","afterRenderCallback","_getViewOptions","classList","add","remove","resetClientStateOnUpdate","_resetColumnWidths","deepExtend","_getCommonOptions","_raiseItemWidgetOptionsPrepared","option","scrolling","mode","default","_updateCharWidth","getInfoUnsafe","gridScroll","getScrollable","isVScrollbarVisible","isScrollbarVisible","isHScrollbarVisible","scrollWidth","clientWidth","scrollRowData","getTopVisibleRowData","combinedFilter","getCombinedFilter","visibleColumns","getVisibleColumns","topPath","leftPath","RowIdentificatorDataMembers","dataMember","getLeftPrintingColumnIndex","scrollLeft","scroll","horizontal","vertical","sortInfo","_getSortInfo","undefined","parseFilter","dateToString","getClientWidthOptions","info","sortIndex","sortOrder","dataField","sort","a","_initializeData","newOptions","GridClientFilterState","isResetColumnWidthsRequired","ColumnWidthMode","getValueItem","reset","_getColumnWidthMode","columnsWidth","calcColumnsWidth","$wrap","width","getScrollbarWidth","_updateColumnsWidth","_applySelection","columnWidths","_beginResize","_getColumnWidthProperty","_endResize","DefaultBestCharacterCount","beginUpdate","endUpdate","span","document","createElement","style","display","innerText","body","appendChild","getWidth","removeChild","_onColumnsChanging","e","grid","component","columnResized","optionNames","gridResized","visibleWidth","viewModel","columnCount","getController","isLoaded","onDataLoaded","leftColumnIndex","_resizingInfo","currentColumnIndex","leftColumnWidth","rightColumnWidth","onColumnResized","dataSource","getDataSource","columns","_getColumns","hasSlowColumns","some","c","displayMode","viewOptions","filterValue","keyExpr","summary","totalItems","_getTotals","calculateCustomSummary","summaryProcess","totalValue","getTotalValue","name","filterRow","visible","ShowFilterRow","rowAlternationEnabled","EnableBandedRows","showRowLines","ShowHorizontalLines","showColumnLines","ShowVerticalLines","wordWrapEnabled","showColumnHeaders","ShowColumnHeaders","allowColumnResizing","commonOptions","paging","enabled","sorting","ascendingText","localizer","getString","localizationId","buttonNames","GridSortAscending","descendingText","GridSortDescending","clearText","GridClearSorting","manualyResetClientState","onContextMenuPreparing","target","columnsResized","items","text","GridResetColumnWidths","icon","onItemClick","onContentReady","draw","_changeGridSparklineColumnsWidth","noDataText","MessageGridHasNoData","onCellClick","data","columnType","column","type","rowType","_raiseItemClick","onCellHoverChanged","args","_raiseItemHover","eventType","cellHintEnabled","loadPanel","searchPanel","keyboardNavigation","filterSyncEnabled","onOptionChanged","_raiseClientFilterChanged","fire","onEditorPreparing","parentType","editorOptions","valueChangeEvent","_getRowsValues","selectionMembers","SelectionDataMembers","visibleValues","member","getUniqueValue","getSelectionValues","_getSelectedRowIndices","selectedValues","_getSelectedValues","_getTotalCaptionTemplate","totalType","getLocalizationById","id","format","totalsViewModel","Totals","totalModel","showInColumn","summaryType","displayFormat","TotalType","_calculateCustomSummary","_getColumnName","gridName","fieldName","calculateFilterExpressionHandler","selectedFilterOperation","gridColumn","filter","canPatchFilter","dataType","allowedStringOperations","x","cellValue","toString","getCaseSensitiveFilterExpression","defaultCalculateFilterExpression","popupContainer","controlContainer","columnIndex","allowEditing","encodeHtml","_isEncodeHtml","caption","Caption","alignment","HorzAlignment","allowFiltering","SupportClientFilter","DashboardPrivateSettings","gridColumnFilterMode","calculateFilterExpression","bind","DashboardDataIdField","headerAlignment","cellTemplate","containerElement","valueItem","renderValue","getData","displayText","isDetail","_isDetail","colummPrefix","applyStyleSettings","getStyleSettingsInfo","resized","visibleWidthReset","updateBarWidth","renderDelta","uri","UriPattern","getUriValue","renderHyperlink","cssClass","renderSparkline","ShowStartEndValues","barData","renderBar","normalizedValue","zeroValue","gridRootElement","changeGridBarColumnsWidth","renderImage","columnViewModels","gridRootElement_1","sparklineViewModels","changeGridSparklineColumnsWidth","_applySelectionUnsafe","setSelection","SelectedValues","_resizeUnsafe","resize","_getDataPoint","getValues","getDimensionValues","getDeltaIds","_getColumnDataIdsByColumnType","getMeasureIds","_getColumnsByColumnType","foundColumns","ColumnType","ids","_getElementInteractionValue","_getWidget","keyProcessingDelegate","selectionKeys","_selectRows","selectRows","_isMultiDataSupported","baseItem"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_data-grid-item.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dataGridItem = void 0;\nvar string_1 = require(\"devextreme/core/utils/string\");\nvar data_grid_1 = require(\"devextreme/ui/data_grid\");\nvar _default_1 = require(\"../../../data/localization/_default\");\nvar _common_1 = require(\"../../../data/_common\");\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\nvar _localization_ids_1 = require(\"../../../data/_localization-ids\");\nvar _localizer_1 = require(\"../../../data/_localizer\");\nvar _utils_1 = require(\"../../../data/_utils\");\nvar _style_settings_provider_1 = require(\"../../conditional-formatting/_style-settings-provider\");\nvar legacy_settings_1 = require(\"../../legacy-settings\");\nvar _base_item_1 = require(\"../_base-item\");\nvar _column_width_calculator_1 = require(\"./_column-width-calculator\");\nvar _grid_column_painter_1 = require(\"./_grid-column-painter\");\nvar _grid_filter_parser_1 = require(\"./_grid-filter-parser\");\nvar _grid_filter_patcher_1 = require(\"./_grid-filter-patcher\");\nvar MAX_CELL_COUNT = 2000, HEIGHT_DELTA_INDICATOR = 12, DATAGRID_CONTEXT_MENU_ICON = 'dashboard-datagriditem-resetcolumnwidths';\nvar dataGridItem = (function (_super) {\n    __extends(dataGridItem, _super);\n    function dataGridItem(container, options) {\n        var _this = _super.call(this, container, options) || this;\n        _this._updateLocked = false;\n        _this._digits_string = '0123456789';\n        _this.clientFilterChanged = _jquery_helpers_1.createJQueryCallbacks();\n        _this.clientFilterStateChanged = _jquery_helpers_1.createJQueryCallbacks();\n        _this.TextAlignment = {\n            Left: 'left',\n            Right: 'right',\n            Center: 'center'\n        };\n        _this.DisplayMode = {\n            Value: 'Value',\n            Delta: 'Delta',\n            Bar: 'Bar',\n            Sparkline: 'Sparkline',\n            Image: 'Image',\n            Hyperlink: 'Hyperlink'\n        };\n        _this.SummaryType = {\n            Count: 'Count',\n            Min: 'Min',\n            Max: 'Max',\n            Avg: 'Avg',\n            Sum: 'Sum'\n        };\n        _this.CssClasses = {\n            wordWrap: 'dx-dashboard-word-wrap',\n            gridAdaptiveCellValue: 'dx-adaptive-item-text'\n        };\n        _this._bestFitProvider = {\n            getBestFit: function (index) {\n                var bestFit = 0;\n                var columnViewModel = _this.options.ViewModel.Columns[index];\n                if (columnViewModel.DisplayMode === _this.DisplayMode.Sparkline) {\n                    var columnName = _this.options.Name + columnViewModel.DataId;\n                    var startValues = _jquery_helpers_1.$unwrap(_this._dataGrid.element()).querySelectorAll('.' + columnName + '_startValue');\n                    var endValues = _jquery_helpers_1.$unwrap(_this._dataGrid.element()).querySelectorAll('.' + columnName + '_endValue');\n                    var maxStartWidth = _grid_column_painter_1.GridColumnPainter.calcMaxWidth(startValues);\n                    var maxEndWidth = _grid_column_painter_1.GridColumnPainter.calcMaxWidth(endValues);\n                    bestFit = Math.round(_this._getDefaultBestCharacterCount(index) * _this.charWidth) + maxStartWidth + maxEndWidth;\n                }\n                else if (columnViewModel.DisplayMode === _this.DisplayMode.Bar) {\n                    bestFit = Math.round(_this._getDefaultBestCharacterCount(index) * _this.charWidth);\n                }\n                else {\n                    bestFit = _this._dataGrid.columnOption(index, 'bestFitWidth');\n                }\n                return bestFit;\n            }\n        };\n        _this._clientStateUpdateDebounced = _utils_1.debounce(function (widthOptions) {\n            _this.gridWidthOptionsChanged && _this.gridWidthOptionsChanged({\n                widthOptions: widthOptions\n            });\n        }, 300);\n        _this._customizeViewOptions = function (opts) {\n            opts.columnAutoWidth = true;\n        };\n        _this.isSummaryFilterCollecting = false;\n        _this.canRaiseFilterChanged = true;\n        _this._calculator = new _column_width_calculator_1.ColumnWidthCalculator();\n        _this._styleSettingsProvider = new _style_settings_provider_1.styleSettingsProvider();\n        _this._styleSettingsProvider.initialize(_this.options.ConditionalFormattingModel, _this.options.ViewModel ? _this.options.ViewModel.WordWrap : false);\n        return _this;\n    }\n    Object.defineProperty(dataGridItem.prototype, \"_captionToolbarSeparatorRequired\", {\n        get: function () {\n            return !this.hasParentContainer() || (this.hasParentContainer() && this.visualMode === 'caption');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(dataGridItem.prototype, \"dataController\", {\n        get: function () { return this._dataController; },\n        set: function (dataController) { this._dataController = dataController; },\n        enumerable: false,\n        configurable: true\n    });\n    dataGridItem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._dataGrid && this._dataGrid.dispose();\n        this._styleSettingsProvider.dispose();\n    };\n    dataGridItem.prototype._clearSelectionUnsafe = function () {\n        this._dataGrid.clearSelection();\n    };\n    dataGridItem.prototype._setSelectionUnsafe = function (values) {\n        _super.prototype._setSelectionUnsafe.call(this, values);\n        this.clearSelection();\n        if (values)\n            this._setGridSelection(values);\n    };\n    dataGridItem.prototype._selectTuplesCore = function (tuples, updateTupleDelegate, state) {\n        var that = this, currentSelection = that._dataGrid.getSelectedRowKeys(), values = [], processKeys = function (keys) {\n            keys.forEach(function (key) {\n                if (state) {\n                    currentSelection.push(key);\n                }\n                else {\n                    currentSelection.splice(currentSelection.indexOf(key), 1);\n                }\n            });\n            return currentSelection;\n        };\n        tuples.forEach(function (tuple) {\n            var res = updateTupleDelegate(tuple);\n            if (res != null && res[0] != null) {\n                values.push(res[0].value);\n            }\n        });\n        that._setGridSelection(values, processKeys);\n    };\n    dataGridItem.prototype.renderPartialContentUnsafe = function () {\n        this._dataGrid.refresh(true);\n    };\n    dataGridItem.prototype.renderContentUnsafe = function (element, changeExisting, afterRenderCallback) {\n        if (!this.options)\n            return false;\n        var opts = this._getViewOptions();\n        if (this.options.ViewModel && this.options.ViewModel.WordWrap) {\n            element.classList.add(this.CssClasses.wordWrap);\n        }\n        else {\n            element.classList.remove(this.CssClasses.wordWrap);\n        }\n        if (changeExisting && this._dataGrid) {\n            if (this.resetClientStateOnUpdate) {\n                this._resetColumnWidths();\n            }\n            _jquery_helpers_1.deepExtend(opts, this._getCommonOptions());\n            this._raiseItemWidgetOptionsPrepared(opts);\n            this.canRaiseFilterChanged = false;\n            this._dataGrid.option('filterSyncEnabled', false);\n            this._dataGrid.option(opts);\n            this.canRaiseFilterChanged = true;\n        }\n        else {\n            var options = __assign(__assign(__assign({}, opts), this._getCommonOptions()), { scrolling: { mode: 'virtual' } });\n            this._raiseItemWidgetOptionsPrepared(options);\n            this._dataGrid = new data_grid_1.default(element, options);\n            this._updateCharWidth();\n        }\n        return false;\n    };\n    dataGridItem.prototype.getInfoUnsafe = function () {\n        var that = this, gridScroll = this._dataGrid.getScrollable(), isVScrollbarVisible = that._dataGrid.isScrollbarVisible(), isHScrollbarVisible = gridScroll.scrollWidth() > gridScroll.clientWidth(), scrollRowData = that._dataGrid.getTopVisibleRowData(), combinedFilter = that._dataGrid.getCombinedFilter(), visibleColumns = that._dataGrid.getVisibleColumns(), topPath = [], leftPath = [];\n        if (scrollRowData) {\n            that.options.ViewModel.RowIdentificatorDataMembers.forEach(function (dataMember) {\n                var value = scrollRowData[dataMember];\n                topPath.push(value);\n            });\n            leftPath.push(this._calculator.getLeftPrintingColumnIndex(gridScroll.scrollLeft()));\n        }\n        return _jquery_helpers_1.deepExtend(_super.prototype.getInfoUnsafe.call(this), {\n            scroll: {\n                horizontal: isHScrollbarVisible,\n                vertical: isVScrollbarVisible,\n                topPath: topPath,\n                leftPath: leftPath\n            },\n            sortInfo: that._getSortInfo(),\n            combinedFilter: combinedFilter !== undefined ? _grid_filter_parser_1.parseFilter(combinedFilter, visibleColumns, undefined, this.dateToString) : '',\n            widthOptions: that._calculator.getClientWidthOptions()\n        });\n    };\n    dataGridItem.prototype._getSortInfo = function () {\n        var that = this, sortInfo = [];\n        that._dataGrid.getVisibleColumns().forEach(function (info) {\n            if (info.sortIndex != undefined && info.sortOrder != undefined) {\n                sortInfo.push({\n                    dataField: info.dataField,\n                    sortIndex: info.sortIndex,\n                    sortOrder: info.sortOrder\n                });\n            }\n        });\n        sortInfo.sort(function (a, b) {\n            return a.sortIndex - b.sortIndex;\n        });\n        return sortInfo;\n    };\n    dataGridItem.prototype._initializeData = function (newOptions) {\n        _super.prototype._initializeData.call(this, newOptions);\n        this.options.GridClientFilterState = newOptions.GridClientFilterState;\n        var isResetColumnWidthsRequired = !!this.options && !!this.options.ViewModel && !!newOptions.ViewModel && this.options.ViewModel.ColumnWidthMode !== newOptions.ViewModel.ColumnWidthMode;\n        if (isResetColumnWidthsRequired) {\n            this._resetColumnWidths();\n        }\n        if (this._styleSettingsProvider) {\n            this._styleSettingsProvider.initialize(this.options.ConditionalFormattingModel, this.options.ViewModel ? this.options.ViewModel.WordWrap : false);\n        }\n    };\n    dataGridItem.prototype.getValueItem = function (columnName, index) {\n        return this._dataController.getValueItem(columnName, index);\n    };\n    dataGridItem.prototype._resetColumnWidths = function () {\n        this._calculator.reset(this.options.ViewModel, this._getColumnWidthMode());\n        var columnsWidth = this._calculator.calcColumnsWidth(this._bestFitProvider, (_jquery_helpers_1.$wrap(this._dataGrid.element())).width() - this._dataGrid.getScrollbarWidth(), this.charWidth);\n        this._updateColumnsWidth(columnsWidth);\n        this._applySelection();\n    };\n    dataGridItem.prototype._updateColumnsWidth = function (columnWidths) {\n        var _this = this;\n        this._beginResize();\n        columnWidths.forEach(function (width, i) {\n            _this._dataGrid.columnOption(i, _this._getColumnWidthProperty(), width);\n        });\n        this._endResize();\n    };\n    dataGridItem.prototype._getColumnWidthProperty = function () {\n        return 'visibleWidth';\n    };\n    dataGridItem.prototype._getColumnWidthMode = function () {\n        return this.options.ViewModel.ColumnWidthMode;\n    };\n    dataGridItem.prototype._getDefaultBestCharacterCount = function (index) {\n        return this.options.ViewModel.Columns[index].DefaultBestCharacterCount;\n    };\n    dataGridItem.prototype._beginResize = function () {\n        this._updateLocked = true;\n        this._dataGrid.beginUpdate();\n    };\n    dataGridItem.prototype._endResize = function () {\n        this._dataGrid.endUpdate();\n        this._updateLocked = false;\n    };\n    dataGridItem.prototype._updateCharWidth = function () {\n        var span = document.createElement('span');\n        span.classList.add('dx-widget');\n        span.style.display = 'inline-block';\n        span.innerText = this._digits_string;\n        document.body.appendChild(span);\n        this.charWidth = _jquery_helpers_1.getWidth(span) / 10;\n        document.body.removeChild(span);\n    };\n    dataGridItem.prototype._onColumnsChanging = function (e) {\n        var grid = e.component, columnResized = e.optionNames.width, gridResized = e.optionNames.visibleWidth && grid.columnOption(0, 'visibleWidth') !== undefined, viewModel = this.options.ViewModel;\n        if (this._updateLocked || !viewModel || !viewModel.Columns ||\n            viewModel.Columns.length == 0 || grid.columnCount() !== viewModel.Columns.length) {\n            return;\n        }\n        if (grid.getController('data').isLoaded() && gridResized && !columnResized) {\n            this._calculator.onDataLoaded(viewModel, this._getColumnWidthMode());\n        }\n        if (columnResized) {\n            var leftColumnIndex = grid.getController('columnsResizer')._resizingInfo.currentColumnIndex;\n            var leftColumnWidth = this._dataGrid.columnOption(leftColumnIndex, 'width');\n            var rightColumnWidth = this._dataGrid.columnOption(leftColumnIndex + 1, 'width');\n            var columnWidths = this._calculator.onColumnResized(leftColumnIndex, leftColumnWidth, rightColumnWidth);\n            this._updateColumnsWidth(columnWidths);\n            this._clientStateUpdateDebounced(this._calculator.widthOptions);\n        }\n        else if (gridResized) {\n            var columnsWidth = this._calculator.calcColumnsWidth(this._bestFitProvider, _jquery_helpers_1.$wrap(this._dataGrid.element()).width() - this._dataGrid.getScrollbarWidth(), this.charWidth);\n            this._updateColumnsWidth(columnsWidth);\n        }\n    };\n    dataGridItem.prototype._getViewOptions = function () {\n        var _this = this;\n        var viewModel = this.options.ViewModel;\n        if (!viewModel)\n            return null;\n        var dataSource = this._dataController.getDataSource();\n        var columns = this._getColumns();\n        var hasSlowColumns = columns.some(function (c) { return c.displayMode == _this.DisplayMode.Bar || c.displayMode == _this.DisplayMode.Sparkline || c.displayMode == _this.DisplayMode.Image; });\n        var viewOptions = {\n            filterValue: !this.options.GridClientFilterState ? null : this.options.GridClientFilterState,\n            dataSource: dataSource,\n            keyExpr: 'index',\n            columns: columns,\n            summary: {\n                totalItems: this._getTotals(),\n                calculateCustomSummary: function (options) {\n                    if (options.summaryProcess == 'finalize') {\n                        options.totalValue = _this._dataController.getTotalValue(options.name);\n                    }\n                },\n            },\n            filterRow: { visible: viewModel.ShowFilterRow },\n            rowAlternationEnabled: viewModel.EnableBandedRows,\n            showRowLines: viewModel.ShowHorizontalLines,\n            showColumnLines: viewModel.ShowVerticalLines,\n            wordWrapEnabled: viewModel.WordWrap,\n            showColumnHeaders: viewModel.ShowColumnHeaders,\n            allowColumnResizing: this._getColumnWidthMode() !== 'AutoFitToContents',\n        };\n        this._customizeViewOptions(viewOptions);\n        return viewOptions;\n    };\n    dataGridItem.prototype._getCommonOptions = function () {\n        var _this = this;\n        var that = this, commonOptions = {};\n        commonOptions.paging = { enabled: false };\n        commonOptions.sorting = {\n            mode: 'multiple',\n            ascendingText: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridSortAscending),\n            descendingText: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridSortDescending),\n            clearText: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridClearSorting)\n        };\n        if (this.manualyResetClientState) {\n            commonOptions.onContextMenuPreparing = function (options) {\n                if (options.target === 'content' && _this._calculator.columnsResized) {\n                    options.items = [{\n                            text: _localizer_1.localizer.getString(_localization_ids_1.localizationId.buttonNames.GridResetColumnWidths),\n                            icon: DATAGRID_CONTEXT_MENU_ICON,\n                            onItemClick: function () {\n                                _this._resetColumnWidths();\n                            }\n                        }];\n                }\n            };\n        }\n        commonOptions.onContentReady = function () {\n            that._styleSettingsProvider.draw();\n            _this._changeGridSparklineColumnsWidth(_this.options && _this.options.ViewModel && _this.options.ViewModel.Columns);\n        };\n        commonOptions.noDataText = _localizer_1.localizer.getString(_localization_ids_1.localizationId.MessageGridHasNoData);\n        commonOptions.onCellClick = function (data) {\n            var columnType = data.column && data.column.type || null;\n            if (data.rowType === 'data' && columnType !== 'adaptive')\n                that._raiseItemClick(data);\n        };\n        commonOptions.onCellHoverChanged = function (args) {\n            that._raiseItemHover(args, args.eventType == 'mouseover');\n        };\n        commonOptions['onColumnsChanging'] = function (e) { return _this._onColumnsChanging(e); };\n        commonOptions.width = '100%';\n        commonOptions.cellHintEnabled = true;\n        commonOptions.loadPanel = { enabled: false };\n        commonOptions.searchPanel = { visible: false };\n        commonOptions.keyboardNavigation = { enabled: false };\n        commonOptions.filterSyncEnabled = true;\n        commonOptions.onOptionChanged = function (e) {\n            if (e.name == 'filterValue') {\n                _this._raiseClientFilterChanged(e);\n                _this.clientFilterStateChanged.fire(e.value);\n            }\n        };\n        commonOptions.onEditorPreparing = function (e) {\n            if (e.parentType === 'filterRow')\n                e.editorOptions.valueChangeEvent = 'change';\n        };\n        return commonOptions;\n    };\n    dataGridItem.prototype._getRowsValues = function (data) {\n        var that = this, selectionMembers = that.options.ViewModel.SelectionDataMembers, visibleValues = [], value;\n        selectionMembers.forEach(function (member) {\n            value = that.getValueItem(member, data.index).getUniqueValue();\n            if (value !== undefined) {\n                visibleValues.push(value);\n            }\n        });\n        return that._dataController.getSelectionValues(visibleValues);\n    };\n    dataGridItem.prototype._getSelectedRowIndices = function () {\n        var selectedValues = this._getSelectedValues();\n        return selectedValues ? this._dataController.getSelectedRowKeys(selectedValues) : [];\n    };\n    dataGridItem.prototype._getTotalCaptionTemplate = function (totalType) {\n        if (totalType == 'Auto') {\n            return _default_1.getLocalizationById('DashboardStringId.GridTotalAutoTemplate');\n        }\n        else {\n            var id = void 0;\n            switch (totalType) {\n                case 'Min':\n                    id = 'DashboardStringId.GridTotalTypeMin';\n                    break;\n                case 'Max':\n                    id = 'DashboardStringId.GridTotalTypeMax';\n                    break;\n                case 'Avg':\n                    id = 'DashboardStringId.GridTotalTypeAvg';\n                    break;\n                case 'Sum':\n                    id = 'DashboardStringId.GridTotalTypeSum';\n                    break;\n                default:\n                    id = 'DashboardStringId.GridTotalTypeCount';\n                    break;\n            }\n            return string_1.format(_default_1.getLocalizationById('DashboardStringId.GridTotalTemplate'), _default_1.getLocalizationById(id), _default_1.getLocalizationById('DashboardStringId.GridTotalValueTemplate'));\n        }\n    };\n    dataGridItem.prototype._getTotals = function () {\n        var _this = this;\n        var that = this, res = [], columns = that.options.ViewModel.Columns || [];\n        columns.forEach(function (column) {\n            var columnName = column.DataId, totalsViewModel = column.Totals || [];\n            totalsViewModel.forEach(function (totalModel) {\n                res.push({\n                    name: totalModel.DataId,\n                    showInColumn: columnName,\n                    summaryType: 'custom',\n                    displayFormat: _this._getTotalCaptionTemplate(totalModel.TotalType),\n                });\n            });\n        });\n        return res;\n    };\n    dataGridItem.prototype._calculateCustomSummary = function (options) {\n        options.totalValue = 0;\n    };\n    dataGridItem.prototype._getColumnName = function (columnViewModel) {\n        var gridName = this.options.Name;\n        var fieldName = columnViewModel.DataId;\n        return gridName + fieldName;\n    };\n    dataGridItem.prototype.calculateFilterExpressionHandler = function (column) {\n        var _this = this;\n        return function (filterValue, selectedFilterOperation) {\n            var gridColumn = _this._dataGrid.getVisibleColumns().filter(function (c) { return c.dataField === column.dataField; })[0];\n            var canPatchFilter = !_this.isSummaryFilterCollecting && gridColumn.dataType === 'string' && _grid_filter_patcher_1.allowedStringOperations.some(function (x) { return x === selectedFilterOperation; });\n            if (canPatchFilter) {\n                return function (values) {\n                    var cellValue = values[gridColumn.dataField.toString()];\n                    return _grid_filter_patcher_1.getCaseSensitiveFilterExpression(cellValue, filterValue, selectedFilterOperation);\n                };\n            }\n            return gridColumn.defaultCalculateFilterExpression.call(gridColumn, filterValue, selectedFilterOperation);\n        };\n    };\n    dataGridItem.prototype._getColumns = function () {\n        var _this = this;\n        var that = this, res = [], columns = that.options.ViewModel.Columns || [], popupContainer = this.options.controlContainer;\n        columns.forEach(function (column, columnIndex) {\n            var fieldName = column.DataId, columnName = _this._getColumnName(column), gridColumn = {\n                allowEditing: false,\n                dataField: fieldName,\n                encodeHtml: that._isEncodeHtml(),\n                caption: column.Caption,\n                alignment: column.HorzAlignment === 'Right' ? that.TextAlignment.Right : that.TextAlignment.Left,\n                allowFiltering: column.SupportClientFilter\n            };\n            if (legacy_settings_1.DashboardPrivateSettings.gridColumnFilterMode === 'CaseSensitive')\n                gridColumn.calculateFilterExpression = _this.calculateFilterExpressionHandler(gridColumn).bind(_this);\n            gridColumn[_common_1.DashboardDataIdField] = column.DataId;\n            gridColumn.headerAlignment = that.TextAlignment.Left;\n            gridColumn.displayMode = column.DisplayMode;\n            switch (column.DisplayMode) {\n                case that.DisplayMode.Value:\n                    gridColumn.cellTemplate = function (containerElement, options) {\n                        var container = _jquery_helpers_1.$unwrap(containerElement);\n                        var valueItem = that.getValueItem(fieldName, options.data.index);\n                        _grid_column_painter_1.GridColumnPainter.renderValue(container, valueItem.getData().displayText, that._isEncodeHtml());\n                        var isDetail = that._isDetail(options.rowType);\n                        var colummPrefix = isDetail ? columnName + '_detail' : columnName;\n                        that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), false, colummPrefix, isDetail);\n                        if (isDetail)\n                            container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n                    };\n                    gridColumn.resized = function () {\n                        var visibleWidthReset = that._dataGrid && (that._dataGrid.columnOption(columnIndex, 'visibleWidth') === undefined);\n                        if (!visibleWidthReset) {\n                            that._styleSettingsProvider.updateBarWidth(columnName);\n                            that._styleSettingsProvider.updateBarWidth(columnName + '_detail');\n                        }\n                    };\n                    break;\n                case that.DisplayMode.Delta:\n                    gridColumn.cellTemplate = function (containerElement, options) {\n                        var container = _jquery_helpers_1.$unwrap(containerElement);\n                        var valueItem = that.getValueItem(fieldName, options.data.index);\n                        var isDetail = that._isDetail(options.rowType);\n                        _grid_column_painter_1.GridColumnPainter.renderDelta(container, valueItem.getData(), isDetail);\n                        that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n                        if (isDetail)\n                            container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n                    };\n                    break;\n                case that.DisplayMode.Hyperlink:\n                    gridColumn.cellTemplate = function (containerElement, options) {\n                        var container = _jquery_helpers_1.$unwrap(containerElement);\n                        var valueItem = that.getValueItem(fieldName, options.data.index), uri = fieldName ? string_1.format(!!column.UriPattern ? column.UriPattern : '{0}', valueItem.getUriValue()) : undefined;\n                        _grid_column_painter_1.GridColumnPainter.renderHyperlink(container, uri, valueItem.getData().displayText, that._isEncodeHtml());\n                        that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), false, columnName);\n                        if (that._isDetail(options.rowType))\n                            container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n                    };\n                    break;\n                case that.DisplayMode.Sparkline:\n                    gridColumn.alignment = that.TextAlignment.Left;\n                    gridColumn.cssClass = 'dx-dashboard-datagrid-column-visible-cell-content';\n                    gridColumn.cellTemplate = function (containerElement, options) {\n                        var container = _jquery_helpers_1.$unwrap(containerElement);\n                        var valueItem = that.getValueItem(fieldName, options.data.index);\n                        _grid_column_painter_1.GridColumnPainter.renderSparkline(columnName, column.ShowStartEndValues, container, valueItem.getData());\n                        that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n                        if (that._isDetail(options.rowType))\n                            container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n                    };\n                    gridColumn.resized = function () { return that._changeGridSparklineColumnsWidth([column]); };\n                    break;\n                case that.DisplayMode.Bar:\n                    gridColumn.alignment = that.TextAlignment.Left;\n                    gridColumn.cssClass = 'dx-dashboard-datagrid-column-visible-cell-content';\n                    gridColumn.cellTemplate = function (containerElement, options) {\n                        var container = _jquery_helpers_1.$unwrap(containerElement);\n                        var valueItem = that.getValueItem(fieldName, options.data.index);\n                        var barData = valueItem.getData();\n                        _grid_column_painter_1.GridColumnPainter.renderBar(columnName, container, barData.text, barData.normalizedValue, barData.zeroValue);\n                        that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n                        if (that._isDetail(options.rowType))\n                            container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n                    };\n                    gridColumn.resized = function () {\n                        var gridRootElement = that._dataGrid ? _jquery_helpers_1.$unwrap(that._dataGrid.element()) : undefined;\n                        if (gridRootElement) {\n                            _grid_column_painter_1.GridColumnPainter.changeGridBarColumnsWidth(gridRootElement, columnName);\n                        }\n                    };\n                    break;\n                case that.DisplayMode.Image:\n                    gridColumn.cellTemplate = function (containerElement, options) {\n                        var container = _jquery_helpers_1.$unwrap(containerElement);\n                        var valueItem = that.getValueItem(fieldName, options.data.index);\n                        _grid_column_painter_1.GridColumnPainter.renderImage(container, valueItem.getData());\n                        that._styleSettingsProvider.applyStyleSettings(container, popupContainer, valueItem.getStyleSettingsInfo(), true);\n                        if (that._isDetail(options.rowType))\n                            container.classList.add(that.CssClasses.gridAdaptiveCellValue);\n                    };\n                    break;\n            }\n            res.push(gridColumn);\n        });\n        return res;\n    };\n    dataGridItem.prototype._changeGridSparklineColumnsWidth = function (columnViewModels) {\n        var _this = this;\n        if (columnViewModels) {\n            var gridRootElement_1 = this._dataGrid ? _jquery_helpers_1.$unwrap(this._dataGrid.element()) : undefined;\n            if (gridRootElement_1) {\n                var sparklineViewModels = columnViewModels.filter(function (columnViewModel) { return columnViewModel.DisplayMode === _this.DisplayMode.Sparkline; });\n                sparklineViewModels.forEach(function (columnViewModel) {\n                    _grid_column_painter_1.GridColumnPainter.changeGridSparklineColumnsWidth(gridRootElement_1, _this._getColumnName(columnViewModel));\n                });\n            }\n        }\n    };\n    dataGridItem.prototype._isDetail = function (rowType) {\n        return rowType === 'detailAdaptive';\n    };\n    dataGridItem.prototype._applySelectionUnsafe = function () {\n        this.setSelection(this.options.SelectedValues);\n    };\n    dataGridItem.prototype._resizeUnsafe = function () {\n        _super.prototype._resizeUnsafe.call(this);\n        this._dataGrid.resize();\n    };\n    dataGridItem.prototype._getDataPoint = function (element) {\n        var that = this;\n        return {\n            getValues: function (name) {\n                return (name === 'Default') ? that._dataController.getDimensionValues(element.data.index) : null;\n            },\n            getDeltaIds: function () {\n                return that._getColumnDataIdsByColumnType('Delta');\n            },\n            getMeasureIds: function () {\n                return that._getColumnDataIdsByColumnType('Measure');\n            },\n            getSelectionValues: function (name) {\n                return that._getRowsValues(element.data);\n            }\n        };\n    };\n    dataGridItem.prototype._getColumnsByColumnType = function (columnType) {\n        var columns = this.options.ViewModel.Columns, foundColumns = [];\n        columns.forEach(function (column) {\n            if (column.ColumnType === columnType)\n                foundColumns.push(column);\n        });\n        return foundColumns;\n    };\n    dataGridItem.prototype._getColumnDataIdsByColumnType = function (columnType) {\n        var that = this, columns = that._getColumnsByColumnType(columnType), ids = [];\n        columns.forEach(function (column) {\n            ids.push(column.DataId);\n        });\n        return ids;\n    };\n    dataGridItem.prototype._getElementInteractionValue = function (element, viewModel) {\n        return this._getRowsValues(element.data);\n    };\n    dataGridItem.prototype._getWidget = function () {\n        return this._dataGrid;\n    };\n    dataGridItem.prototype._setGridSelection = function (values, keyProcessingDelegate) {\n        if (values && values.length > 0) {\n            var that = this, selectionKeys = that._dataController.getSelectedRowKeys(values);\n            that._selectRows(keyProcessingDelegate ? keyProcessingDelegate(selectionKeys) : selectionKeys);\n        }\n    };\n    dataGridItem.prototype._selectRows = function (data) {\n        if (this._dataGrid) {\n            this._dataGrid.selectRows(data);\n        }\n    };\n    dataGridItem.prototype._isMultiDataSupported = function () {\n        return true;\n    };\n    dataGridItem.prototype._raiseClientFilterChanged = function (e) {\n        if (this.canRaiseFilterChanged) {\n            var visibleColumns = this._dataGrid.getVisibleColumns();\n            this.isSummaryFilterCollecting = true;\n            var combinedFilter = this._dataGrid.getCombinedFilter();\n            this.isSummaryFilterCollecting = false;\n            var filter = combinedFilter !== undefined ? _grid_filter_parser_1.parseFilter(combinedFilter, visibleColumns, undefined, this.dateToString) : '';\n            this.clientFilterChanged.fire(filter);\n        }\n    };\n    return dataGridItem;\n}(_base_item_1.baseItem));\nexports.dataGridItem = dataGridItem;\n"]},"metadata":{},"sourceType":"script"}