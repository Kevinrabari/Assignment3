{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_style-settings-editor.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StyleSettingsEditor = void 0;\n\nvar ko = require(\"knockout\");\n\nvar appearance_settings_1 = require(\"../../model/format-rules/style-settings/appearance-settings\");\n\nvar icon_settings_1 = require(\"../../model/format-rules/style-settings/icon-settings\");\n\nvar _icon_settings_1 = require(\"../../model/format-rules/style-settings/metadata/_icon-settings\");\n\nvar _style_settings_base_1 = require(\"../../model/format-rules/style-settings/metadata/_style-settings-base\");\n\nvar _conditional_formatting_custom_color_storage_1 = require(\"./custom-style-settings/_conditional-formatting-custom-color-storage\");\n\nvar _style_settings_adapters_1 = require(\"./_style-settings-adapters\");\n\nvar _style_settings_palette_1 = require(\"./_style-settings-palette\");\n\nvar StyleSettingsEditor = function () {\n  function StyleSettingsEditor(target, params) {\n    this.customColorsSupported = false;\n    this.allowChangeViewMode = false;\n    this.isGradient = false;\n    this.isEmptyAllowed = false;\n    this.restrictToColor = false;\n    this.numberOfCustomStyleItems = 8;\n    this.value = target;\n    this.isEmptyAllowed = params.isEmptyAllowed;\n    this.isGradient = params.appearanceMode === 'GradientColors';\n    this.allowChangeViewMode = (this.value() instanceof appearance_settings_1.AppearanceSettings || this.value() instanceof icon_settings_1.IconSettings) && params.allowChangeViewMode;\n    this.viewMode = ko.observable(this.value() instanceof icon_settings_1.IconSettings ? 'Icon' : 'Appearance');\n    this.customColorsSupported = params.enableCustomStyles;\n    this.restrictToColor = true;\n    this.selectedChanged = params.selectedChanged;\n\n    this.closeEditCell = params.closeEditCell || function () {};\n\n    var _a = this._createDataSources(params.appearanceMode, this.isEmptyAllowed, this.customColorsSupported, this.restrictToColor, this.value, _conditional_formatting_custom_color_storage_1.conditionalFormattingEditor),\n        predefinedStyles = _a.predefinedStyles,\n        predefinedIcons = _a.predefinedIcons,\n        customStyles = _a.customStyles;\n\n    this.list = predefinedStyles;\n    this.iconList = predefinedIcons;\n    this.customStyleItems = customStyles;\n  }\n\n  StyleSettingsEditor.prototype._setStyleType = function (styleSettingsModel, saveCustomStyle) {\n    var oldSelectedStyle = this.value();\n    this.value(styleSettingsModel);\n\n    if (this.selectedChanged) {\n      this.selectedChanged(oldSelectedStyle, styleSettingsModel);\n    }\n\n    this.closeEditCell();\n\n    switch (saveCustomStyle) {\n      case 'SaveColor':\n        var customColors = this.customStyleItems.map(function (viewModel) {\n          return viewModel.item;\n        }).filter(function (model) {\n          return !!model;\n        }).map(function (model) {\n          return _style_settings_adapters_1.styleSettingsAdapter(model).getCustomColor();\n        });\n\n        _conditional_formatting_custom_color_storage_1.conditionalFormattingEditor.customColorStorage.setValue(customColors);\n\n        break;\n\n      case 'SaveAppearance':\n        var customAppearances = this.customStyleItems.map(function (viewModel) {\n          return viewModel.item;\n        }).filter(function (model) {\n          return !!model;\n        }).map(function (model) {\n          return _style_settings_adapters_1.styleSettingsAdapter(model).getCustomAppearance();\n        });\n\n        _conditional_formatting_custom_color_storage_1.conditionalFormattingEditor.customAppearanceStorage.setValue(customAppearances);\n\n        break;\n\n      case 'None':\n      default:\n        break;\n    }\n  };\n\n  StyleSettingsEditor.prototype._createDataSources = function (mode, isEmptyAllowed, isCustomStyleEnabled, isCustomColorsOnly, selectedValue, customStylesProvider) {\n    var predefinedAppearanceItems = [];\n    var predefinedIconItems = [];\n    var customStyleItems = null;\n    var specificCustomItemType = undefined;\n\n    switch (mode) {\n      case 'Appearance':\n        predefinedAppearanceItems = _style_settings_palette_1.Palette.standard;\n        predefinedIconItems = Object.keys(_icon_settings_1.iconType.values).slice(1);\n        specificCustomItemType = appearance_settings_1.AppearanceSettings;\n        break;\n\n      case 'AllColors':\n        predefinedAppearanceItems = _style_settings_palette_1.Palette.allColors;\n        break;\n\n      case 'RichColors':\n        predefinedAppearanceItems = _style_settings_palette_1.Palette.richColors;\n        break;\n\n      case 'GradientColors':\n        predefinedAppearanceItems = _style_settings_palette_1.Palette.gradient;\n        break;\n    }\n\n    if (isEmptyAllowed) {\n      predefinedAppearanceItems = [_style_settings_base_1.emptyStyleType].concat(predefinedAppearanceItems);\n      predefinedIconItems = predefinedIconItems.length ? [_style_settings_base_1.emptyStyleType].concat(predefinedIconItems) : [];\n    }\n\n    if (isCustomStyleEnabled) {\n      var selectedItemAdapter = _style_settings_adapters_1.styleSettingsAdapter(selectedValue());\n\n      if (isCustomColorsOnly) {\n        customStyleItems = this._getCustomStyles(customStylesProvider.customColorStorage, selectedItemAdapter.hasCustomStyle() && selectedItemAdapter.getCustomColor()).map(this.createItemViewModel(this.createCustomColorStyleSettingsModel(selectedValue(), specificCustomItemType), selectedValue));\n      } else {\n        customStyleItems = this._getCustomStyles(customStylesProvider.customAppearanceStorage, selectedItemAdapter.hasCustomStyle() && selectedItemAdapter.getCustomAppearance()).map(this.createItemViewModel(this.createCustomAppearanceStyleSettingsModel(selectedValue(), specificCustomItemType), selectedValue));\n      }\n    }\n\n    return {\n      predefinedStyles: predefinedAppearanceItems.map(this.createItemViewModel(this.createStyleSettingsModel(selectedValue(), specificCustomItemType), selectedValue)),\n      predefinedIcons: predefinedIconItems.map(this.createItemViewModel(this.createStyleSettingsModel(selectedValue(), icon_settings_1.IconSettings), selectedValue)),\n      customStyles: customStyleItems\n    };\n  };\n\n  StyleSettingsEditor.prototype._getCustomStyles = function (storage, selectedStyle) {\n    var savedStyles = storage && storage.getValue() || [];\n    var styles = savedStyles.concat(Array.apply(null, Array(Math.max(this.numberOfCustomStyleItems - savedStyles.length, 0))));\n\n    if (!!selectedStyle && styles.indexOf(selectedStyle) === -1) {\n      var i = 0;\n\n      for (; i < styles.length; i++) {\n        if (!styles[i]) {\n          styles[i] = selectedStyle;\n          break;\n        }\n      }\n\n      if (styles.length === i) {\n        styles[styles.length - 1] = selectedStyle;\n      }\n    }\n\n    return styles;\n  };\n\n  StyleSettingsEditor.prototype.createStyleSettingsModel = function (selectedValue, stylesModelType) {\n    return function (item) {\n      var model = _style_settings_adapters_1.styleSettingsAdapter(selectedValue, stylesModelType).itemFactory();\n\n      _style_settings_adapters_1.styleSettingsAdapter(model).setPredefinedStyle(item);\n\n      return model;\n    };\n  };\n\n  StyleSettingsEditor.prototype.createCustomColorStyleSettingsModel = function (selectedValue, stylesModelType) {\n    var _this = this;\n\n    return function (color) {\n      var model = _this.createStyleSettingsModel(selectedValue, stylesModelType)('Custom');\n\n      color && _style_settings_adapters_1.styleSettingsAdapter(model).setCustomColor(color);\n      return model;\n    };\n  };\n\n  StyleSettingsEditor.prototype.createCustomAppearanceStyleSettingsModel = function (selectedValue, stylesModelType) {\n    var _this = this;\n\n    return function (appearance) {\n      var model = _this.createStyleSettingsModel(selectedValue, stylesModelType)('Custom');\n\n      appearance && _style_settings_adapters_1.styleSettingsAdapter(model).setCustomAppearance(appearance);\n      return model;\n    };\n  };\n\n  StyleSettingsEditor.prototype.createItemViewModel = function (modelFactory, selectedValue) {\n    var _this = this;\n\n    return function (item) {\n      var itemModel = modelFactory(item);\n      return {\n        item: itemModel,\n        clickHandler: function (saveCustomStyle) {\n          return _this._setStyleType(itemModel, saveCustomStyle);\n        },\n        isSelected: ko.computed(function () {\n          return !!itemModel.equals(selectedValue());\n        }),\n        isEmptyAllowed: _this.isEmptyAllowed,\n        isRange: false,\n        isGradient: _this.isGradient,\n        restrictToColor: _this.restrictToColor\n      };\n    };\n  };\n\n  return StyleSettingsEditor;\n}();\n\nexports.StyleSettingsEditor = StyleSettingsEditor;\nko.components.register('dx-dashboard-style-settings-editor', {\n  viewModel: {\n    createViewModel: function (params) {\n      return new StyleSettingsEditor(ko.unwrap(params).target, ko.unwrap(params).options);\n    }\n  },\n  template: {\n    element: 'dx-dashboard-style-settings-editor'\n  }\n});","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/conditional-formatting/_style-settings-editor.js"],"names":["Object","defineProperty","exports","value","StyleSettingsEditor","ko","require","appearance_settings_1","icon_settings_1","_icon_settings_1","_style_settings_base_1","_conditional_formatting_custom_color_storage_1","_style_settings_adapters_1","_style_settings_palette_1","target","params","customColorsSupported","allowChangeViewMode","isGradient","isEmptyAllowed","restrictToColor","numberOfCustomStyleItems","appearanceMode","AppearanceSettings","IconSettings","viewMode","observable","enableCustomStyles","selectedChanged","closeEditCell","_a","_createDataSources","conditionalFormattingEditor","predefinedStyles","predefinedIcons","customStyles","list","iconList","customStyleItems","prototype","_setStyleType","styleSettingsModel","saveCustomStyle","oldSelectedStyle","customColors","map","viewModel","item","filter","model","styleSettingsAdapter","getCustomColor","customColorStorage","setValue","customAppearances","getCustomAppearance","customAppearanceStorage","mode","isCustomStyleEnabled","isCustomColorsOnly","selectedValue","customStylesProvider","predefinedAppearanceItems","predefinedIconItems","specificCustomItemType","undefined","Palette","standard","keys","iconType","values","slice","allColors","richColors","gradient","emptyStyleType","concat","length","selectedItemAdapter","_getCustomStyles","hasCustomStyle","createItemViewModel","createCustomColorStyleSettingsModel","createCustomAppearanceStyleSettingsModel","createStyleSettingsModel","storage","selectedStyle","savedStyles","getValue","styles","Array","apply","Math","max","indexOf","i","stylesModelType","itemFactory","setPredefinedStyle","_this","color","setCustomColor","appearance","setCustomAppearance","modelFactory","itemModel","clickHandler","isSelected","computed","equals","isRange","components","register","createViewModel","unwrap","options","template","element"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_style-settings-editor.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleSettingsEditor = void 0;\nvar ko = require(\"knockout\");\nvar appearance_settings_1 = require(\"../../model/format-rules/style-settings/appearance-settings\");\nvar icon_settings_1 = require(\"../../model/format-rules/style-settings/icon-settings\");\nvar _icon_settings_1 = require(\"../../model/format-rules/style-settings/metadata/_icon-settings\");\nvar _style_settings_base_1 = require(\"../../model/format-rules/style-settings/metadata/_style-settings-base\");\nvar _conditional_formatting_custom_color_storage_1 = require(\"./custom-style-settings/_conditional-formatting-custom-color-storage\");\nvar _style_settings_adapters_1 = require(\"./_style-settings-adapters\");\nvar _style_settings_palette_1 = require(\"./_style-settings-palette\");\nvar StyleSettingsEditor = (function () {\n    function StyleSettingsEditor(target, params) {\n        this.customColorsSupported = false;\n        this.allowChangeViewMode = false;\n        this.isGradient = false;\n        this.isEmptyAllowed = false;\n        this.restrictToColor = false;\n        this.numberOfCustomStyleItems = 8;\n        this.value = target;\n        this.isEmptyAllowed = params.isEmptyAllowed;\n        this.isGradient = params.appearanceMode === 'GradientColors';\n        this.allowChangeViewMode = (this.value() instanceof appearance_settings_1.AppearanceSettings || this.value() instanceof icon_settings_1.IconSettings) && params.allowChangeViewMode;\n        this.viewMode = ko.observable(this.value() instanceof icon_settings_1.IconSettings ? 'Icon' : 'Appearance');\n        this.customColorsSupported = params.enableCustomStyles;\n        this.restrictToColor = true;\n        this.selectedChanged = params.selectedChanged;\n        this.closeEditCell = params.closeEditCell || (function () { });\n        var _a = this._createDataSources(params.appearanceMode, this.isEmptyAllowed, this.customColorsSupported, this.restrictToColor, this.value, _conditional_formatting_custom_color_storage_1.conditionalFormattingEditor), predefinedStyles = _a.predefinedStyles, predefinedIcons = _a.predefinedIcons, customStyles = _a.customStyles;\n        this.list = predefinedStyles;\n        this.iconList = predefinedIcons;\n        this.customStyleItems = customStyles;\n    }\n    StyleSettingsEditor.prototype._setStyleType = function (styleSettingsModel, saveCustomStyle) {\n        var oldSelectedStyle = this.value();\n        this.value(styleSettingsModel);\n        if (this.selectedChanged) {\n            this.selectedChanged(oldSelectedStyle, styleSettingsModel);\n        }\n        this.closeEditCell();\n        switch (saveCustomStyle) {\n            case 'SaveColor':\n                var customColors = this.customStyleItems\n                    .map(function (viewModel) { return viewModel.item; })\n                    .filter(function (model) { return !!model; })\n                    .map(function (model) { return _style_settings_adapters_1.styleSettingsAdapter(model).getCustomColor(); });\n                _conditional_formatting_custom_color_storage_1.conditionalFormattingEditor.customColorStorage.setValue(customColors);\n                break;\n            case 'SaveAppearance':\n                var customAppearances = this.customStyleItems\n                    .map(function (viewModel) { return viewModel.item; })\n                    .filter(function (model) { return !!model; })\n                    .map(function (model) { return _style_settings_adapters_1.styleSettingsAdapter(model).getCustomAppearance(); });\n                _conditional_formatting_custom_color_storage_1.conditionalFormattingEditor.customAppearanceStorage.setValue(customAppearances);\n                break;\n            case 'None':\n            default:\n                break;\n        }\n    };\n    StyleSettingsEditor.prototype._createDataSources = function (mode, isEmptyAllowed, isCustomStyleEnabled, isCustomColorsOnly, selectedValue, customStylesProvider) {\n        var predefinedAppearanceItems = [];\n        var predefinedIconItems = [];\n        var customStyleItems = null;\n        var specificCustomItemType = undefined;\n        switch (mode) {\n            case 'Appearance':\n                predefinedAppearanceItems = _style_settings_palette_1.Palette.standard;\n                predefinedIconItems = Object.keys(_icon_settings_1.iconType.values).slice(1);\n                specificCustomItemType = appearance_settings_1.AppearanceSettings;\n                break;\n            case 'AllColors':\n                predefinedAppearanceItems = _style_settings_palette_1.Palette.allColors;\n                break;\n            case 'RichColors':\n                predefinedAppearanceItems = _style_settings_palette_1.Palette.richColors;\n                break;\n            case 'GradientColors':\n                predefinedAppearanceItems = _style_settings_palette_1.Palette.gradient;\n                break;\n        }\n        if (isEmptyAllowed) {\n            predefinedAppearanceItems = [_style_settings_base_1.emptyStyleType].concat(predefinedAppearanceItems);\n            predefinedIconItems = predefinedIconItems.length ? [_style_settings_base_1.emptyStyleType].concat(predefinedIconItems) : [];\n        }\n        if (isCustomStyleEnabled) {\n            var selectedItemAdapter = _style_settings_adapters_1.styleSettingsAdapter(selectedValue());\n            if (isCustomColorsOnly) {\n                customStyleItems = this._getCustomStyles(customStylesProvider.customColorStorage, selectedItemAdapter.hasCustomStyle() && selectedItemAdapter.getCustomColor())\n                    .map(this.createItemViewModel(this.createCustomColorStyleSettingsModel(selectedValue(), specificCustomItemType), selectedValue));\n            }\n            else {\n                customStyleItems = this._getCustomStyles(customStylesProvider.customAppearanceStorage, selectedItemAdapter.hasCustomStyle() && selectedItemAdapter.getCustomAppearance())\n                    .map(this.createItemViewModel(this.createCustomAppearanceStyleSettingsModel(selectedValue(), specificCustomItemType), selectedValue));\n            }\n        }\n        return {\n            predefinedStyles: predefinedAppearanceItems.map(this.createItemViewModel(this.createStyleSettingsModel(selectedValue(), specificCustomItemType), selectedValue)),\n            predefinedIcons: predefinedIconItems.map(this.createItemViewModel(this.createStyleSettingsModel(selectedValue(), icon_settings_1.IconSettings), selectedValue)),\n            customStyles: customStyleItems\n        };\n    };\n    StyleSettingsEditor.prototype._getCustomStyles = function (storage, selectedStyle) {\n        var savedStyles = (storage && storage.getValue() || []);\n        var styles = savedStyles.concat(Array.apply(null, Array(Math.max(this.numberOfCustomStyleItems - savedStyles.length, 0))));\n        if (!!selectedStyle && styles.indexOf(selectedStyle) === -1) {\n            var i = 0;\n            for (; i < styles.length; i++) {\n                if (!styles[i]) {\n                    styles[i] = selectedStyle;\n                    break;\n                }\n            }\n            if (styles.length === i) {\n                styles[styles.length - 1] = selectedStyle;\n            }\n        }\n        return styles;\n    };\n    StyleSettingsEditor.prototype.createStyleSettingsModel = function (selectedValue, stylesModelType) {\n        return function (item) {\n            var model = _style_settings_adapters_1.styleSettingsAdapter(selectedValue, stylesModelType).itemFactory();\n            _style_settings_adapters_1.styleSettingsAdapter(model).setPredefinedStyle(item);\n            return model;\n        };\n    };\n    StyleSettingsEditor.prototype.createCustomColorStyleSettingsModel = function (selectedValue, stylesModelType) {\n        var _this = this;\n        return function (color) {\n            var model = _this.createStyleSettingsModel(selectedValue, stylesModelType)('Custom');\n            color && _style_settings_adapters_1.styleSettingsAdapter(model).setCustomColor(color);\n            return model;\n        };\n    };\n    StyleSettingsEditor.prototype.createCustomAppearanceStyleSettingsModel = function (selectedValue, stylesModelType) {\n        var _this = this;\n        return function (appearance) {\n            var model = _this.createStyleSettingsModel(selectedValue, stylesModelType)('Custom');\n            appearance && _style_settings_adapters_1.styleSettingsAdapter(model).setCustomAppearance(appearance);\n            return model;\n        };\n    };\n    StyleSettingsEditor.prototype.createItemViewModel = function (modelFactory, selectedValue) {\n        var _this = this;\n        return function (item) {\n            var itemModel = modelFactory(item);\n            return {\n                item: itemModel,\n                clickHandler: function (saveCustomStyle) { return _this._setStyleType(itemModel, saveCustomStyle); },\n                isSelected: ko.computed(function () { return !!itemModel.equals(selectedValue()); }),\n                isEmptyAllowed: _this.isEmptyAllowed,\n                isRange: false,\n                isGradient: _this.isGradient,\n                restrictToColor: _this.restrictToColor\n            };\n        };\n    };\n    return StyleSettingsEditor;\n}());\nexports.StyleSettingsEditor = StyleSettingsEditor;\nko.components.register('dx-dashboard-style-settings-editor', {\n    viewModel: {\n        createViewModel: function (params) {\n            return new StyleSettingsEditor(ko.unwrap(params).target, ko.unwrap(params).options);\n        }\n    },\n    template: { element: 'dx-dashboard-style-settings-editor' }\n});\n"]},"metadata":{},"sourceType":"script"}