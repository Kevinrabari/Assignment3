{"ast":null,"code":"/**\r\n* DevExpress Dashboard (interactivity-panel.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InteractivityPanelExtension = void 0;\n\nvar ko = require(\"knockout\");\n\nvar control_options_1 = require(\"../../common/control-options\");\n\nvar _dashboard_item_menu_1 = require(\"../items/_dashboard-item-menu\");\n\nvar _interactivity_properties_composer_1 = require(\"../items/_interactivity-properties-composer\");\n\nvar name = 'item-interactivity-panel';\nvar nameAlias = 'itemInteractivityPanel';\n\nvar InteractivityPanelExtension = function () {\n  function InteractivityPanelExtension(dashboardControl) {\n    this.dashboardControl = dashboardControl;\n    this.name = name;\n    this._subscriptions = [];\n  }\n\n  InteractivityPanelExtension.prototype._contextMenuSubscriber = function (itemContextMenu) {\n    if (!!itemContextMenu) {\n      var item = this.dashboardControl._actualLayoutController().selectedDashboardItem();\n\n      this._updateContextMenu(itemContextMenu, item);\n    }\n  };\n\n  InteractivityPanelExtension.prototype._updateContextMenu = function (menu, item) {\n    if (item._isInteractivityAllowed()) {\n      if (menu instanceof _dashboard_item_menu_1.DashboardItemMenu) {\n        menu.contextMenuItems.push({\n          menuItemId: this.name,\n          icon: 'dx-dashboard-interactivity',\n          title: 'DashboardWebStringId.Interactivity',\n          panelWidth: _dashboard_item_menu_1.DashboardItemMenuSizes.OptionsPanelWidth,\n          templateName: 'dx-dashboard-options',\n          detailVisible: ko.observable(false),\n          showMenu: function () {\n            var composer = new _interactivity_properties_composer_1.InteractivityPropertiesComposer(menu.propertiesController);\n            var tabs = composer.composeTabs(item);\n            menu.propertiesController.mainModel({\n              data: {\n                model: item,\n                propertiesTabs: ko.observableArray(tabs)\n              }\n            });\n          },\n          customData: {\n            propertiesController: menu.propertiesController\n          },\n          index: 200\n        });\n      }\n    }\n  };\n\n  InteractivityPanelExtension.prototype.start = function () {\n    var contextMenuExtension = this.dashboardControl.findExtension('item-menu');\n\n    if (contextMenuExtension) {\n      this._subscriptions.push(contextMenuExtension._itemContextMenu.subscribe(this._contextMenuSubscriber, this));\n\n      this._contextMenuSubscriber(contextMenuExtension._itemContextMenu());\n    }\n  };\n\n  InteractivityPanelExtension.prototype.stop = function () {\n    this._subscriptions.forEach(function (s) {\n      return s.dispose();\n    });\n\n    this._subscriptions = [];\n  };\n\n  return InteractivityPanelExtension;\n}();\n\nexports.InteractivityPanelExtension = InteractivityPanelExtension;\n\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) {\n  return new InteractivityPanelExtension(dashboardControl);\n};\n\ncontrol_options_1.extensionNameMap[name] = nameAlias;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/extensions/interactivity-panel.js"],"names":["Object","defineProperty","exports","value","InteractivityPanelExtension","ko","require","control_options_1","_dashboard_item_menu_1","_interactivity_properties_composer_1","name","nameAlias","dashboardControl","_subscriptions","prototype","_contextMenuSubscriber","itemContextMenu","item","_actualLayoutController","selectedDashboardItem","_updateContextMenu","menu","_isInteractivityAllowed","DashboardItemMenu","contextMenuItems","push","menuItemId","icon","title","panelWidth","DashboardItemMenuSizes","OptionsPanelWidth","templateName","detailVisible","observable","showMenu","composer","InteractivityPropertiesComposer","propertiesController","tabs","composeTabs","mainModel","data","model","propertiesTabs","observableArray","customData","index","start","contextMenuExtension","findExtension","_itemContextMenu","subscribe","stop","forEach","s","dispose","designerExtensions","options","extensionNameMap"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (interactivity-panel.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractivityPanelExtension = void 0;\nvar ko = require(\"knockout\");\nvar control_options_1 = require(\"../../common/control-options\");\nvar _dashboard_item_menu_1 = require(\"../items/_dashboard-item-menu\");\nvar _interactivity_properties_composer_1 = require(\"../items/_interactivity-properties-composer\");\nvar name = 'item-interactivity-panel';\nvar nameAlias = 'itemInteractivityPanel';\nvar InteractivityPanelExtension = (function () {\n    function InteractivityPanelExtension(dashboardControl) {\n        this.dashboardControl = dashboardControl;\n        this.name = name;\n        this._subscriptions = [];\n    }\n    InteractivityPanelExtension.prototype._contextMenuSubscriber = function (itemContextMenu) {\n        if (!!itemContextMenu) {\n            var item = this.dashboardControl._actualLayoutController().selectedDashboardItem();\n            this._updateContextMenu(itemContextMenu, item);\n        }\n    };\n    InteractivityPanelExtension.prototype._updateContextMenu = function (menu, item) {\n        if (item._isInteractivityAllowed()) {\n            if (menu instanceof _dashboard_item_menu_1.DashboardItemMenu) {\n                menu.contextMenuItems.push({\n                    menuItemId: this.name,\n                    icon: 'dx-dashboard-interactivity',\n                    title: 'DashboardWebStringId.Interactivity',\n                    panelWidth: _dashboard_item_menu_1.DashboardItemMenuSizes.OptionsPanelWidth,\n                    templateName: 'dx-dashboard-options',\n                    detailVisible: ko.observable(false),\n                    showMenu: function () {\n                        var composer = new _interactivity_properties_composer_1.InteractivityPropertiesComposer(menu.propertiesController);\n                        var tabs = composer.composeTabs(item);\n                        menu.propertiesController.mainModel({\n                            data: {\n                                model: item,\n                                propertiesTabs: ko.observableArray(tabs),\n                            }\n                        });\n                    },\n                    customData: {\n                        propertiesController: menu.propertiesController,\n                    },\n                    index: 200\n                });\n            }\n        }\n    };\n    InteractivityPanelExtension.prototype.start = function () {\n        var contextMenuExtension = this.dashboardControl.findExtension('item-menu');\n        if (contextMenuExtension) {\n            this._subscriptions.push(contextMenuExtension._itemContextMenu.subscribe(this._contextMenuSubscriber, this));\n            this._contextMenuSubscriber(contextMenuExtension._itemContextMenu());\n        }\n    };\n    InteractivityPanelExtension.prototype.stop = function () {\n        this._subscriptions.forEach(function (s) { return s.dispose(); });\n        this._subscriptions = [];\n    };\n    return InteractivityPanelExtension;\n}());\nexports.InteractivityPanelExtension = InteractivityPanelExtension;\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) { return new InteractivityPanelExtension(dashboardControl); };\ncontrol_options_1.extensionNameMap[name] = nameAlias;\n"]},"metadata":{},"sourceType":"script"}