{"ast":null,"code":"/**\r\n * DevExtreme (esm/integration/knockout/event_registrator.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport ko from \"knockout\";\nimport { isPlainObject } from \"../../core/utils/type\";\nimport eventRegistratorCallbacks from \"../../events/core/event_registrator_callbacks\";\nimport { addNamespace } from \"../../events/utils/index\";\n\nif (ko) {\n  eventRegistratorCallbacks.add(function (name) {\n    var koBindingEventName = addNamespace(name, name + \"Binding\");\n    ko.bindingHandlers[name] = {\n      update: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var $element = $(element);\n        var unwrappedValue = ko.utils.unwrapObservable(valueAccessor());\n        var eventSource = unwrappedValue.execute ? unwrappedValue.execute : unwrappedValue;\n        eventsEngine.off($element, koBindingEventName);\n        eventsEngine.on($element, koBindingEventName, isPlainObject(unwrappedValue) ? unwrappedValue : {}, function (e) {\n          eventSource.call(viewModel, viewModel, e);\n        });\n      }\n    };\n  });\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/integration/knockout/event_registrator.js"],"names":["$","eventsEngine","ko","isPlainObject","eventRegistratorCallbacks","addNamespace","add","name","koBindingEventName","bindingHandlers","update","element","valueAccessor","allBindingsAccessor","viewModel","$element","unwrappedValue","utils","unwrapObservable","eventSource","execute","off","on","e","call"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,CAAP,MAAc,qBAAd;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SACIC,aADJ,QAEO,uBAFP;AAGA,OAAOC,yBAAP,MAAsC,+CAAtC;AACA,SACIC,YADJ,QAEO,0BAFP;;AAGA,IAAIH,EAAJ,EAAQ;AACJE,EAAAA,yBAAyB,CAACE,GAA1B,CAA+B,UAASC,IAAT,EAAe;AAC1C,QAAIC,kBAAkB,GAAGH,YAAY,CAACE,IAAD,EAAOA,IAAI,GAAG,SAAd,CAArC;AACAL,IAAAA,EAAE,CAACO,eAAH,CAAmBF,IAAnB,IAA2B;AACvBG,MAAAA,MAAM,EAAE,UAASC,OAAT,EAAkBC,aAAlB,EAAiCC,mBAAjC,EAAsDC,SAAtD,EAAiE;AACrE,YAAIC,QAAQ,GAAGf,CAAC,CAACW,OAAD,CAAhB;AACA,YAAIK,cAAc,GAAGd,EAAE,CAACe,KAAH,CAASC,gBAAT,CAA0BN,aAAa,EAAvC,CAArB;AACA,YAAIO,WAAW,GAAGH,cAAc,CAACI,OAAf,GAAyBJ,cAAc,CAACI,OAAxC,GAAkDJ,cAApE;AACAf,QAAAA,YAAY,CAACoB,GAAb,CAAiBN,QAAjB,EAA2BP,kBAA3B;AACAP,QAAAA,YAAY,CAACqB,EAAb,CAAgBP,QAAhB,EAA0BP,kBAA1B,EAA8CL,aAAa,CAACa,cAAD,CAAb,GAAgCA,cAAhC,GAAiD,EAA/F,EAAoG,UAASO,CAAT,EAAY;AAC5GJ,UAAAA,WAAW,CAACK,IAAZ,CAAiBV,SAAjB,EAA4BA,SAA5B,EAAuCS,CAAvC;AACH,SAFD;AAGH;AATsB,KAA3B;AAWH,GAbD;AAcH","sourcesContent":["/**\r\n * DevExtreme (esm/integration/knockout/event_registrator.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport ko from \"knockout\";\r\nimport {\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport eventRegistratorCallbacks from \"../../events/core/event_registrator_callbacks\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nif (ko) {\r\n    eventRegistratorCallbacks.add((function(name) {\r\n        var koBindingEventName = addNamespace(name, name + \"Binding\");\r\n        ko.bindingHandlers[name] = {\r\n            update: function(element, valueAccessor, allBindingsAccessor, viewModel) {\r\n                var $element = $(element);\r\n                var unwrappedValue = ko.utils.unwrapObservable(valueAccessor());\r\n                var eventSource = unwrappedValue.execute ? unwrappedValue.execute : unwrappedValue;\r\n                eventsEngine.off($element, koBindingEventName);\r\n                eventsEngine.on($element, koBindingEventName, isPlainObject(unwrappedValue) ? unwrappedValue : {}, (function(e) {\r\n                    eventSource.call(viewModel, viewModel, e)\r\n                }))\r\n            }\r\n        }\r\n    }))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}