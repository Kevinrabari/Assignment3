{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\elements\\relationModel.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RelationViewModel = void 0;\n\nvar ko = require(\"knockout\");\n\nvar queryElementModel_1 = require(\"./queryElementModel\");\n\nvar utils_1 = require(\"../../serializer/utils\");\n\nvar joinConditionModel_1 = require(\"./joinConditionModel\");\n\nvar relationModelMeta_1 = require(\"./relationModelMeta\");\n\nvar _utils_1 = require(\"../../serializer/_utils\");\n\nvar RelationViewModel = function (_super) {\n  __extends(RelationViewModel, _super);\n\n  function RelationViewModel(model, query, serializer) {\n    var _this = _super.call(this, _utils_1.extend(model, {\n      '@ControlType': 'Relation',\n      '@ItemType': 'Relation'\n    }), query, serializer) || this;\n\n    _this.parentTable = ko.observable(query.getTable(_this.parentTableName.peek()));\n    _this.nestedTable = ko.observable(query.getTable(_this.nestedTableName.peek()));\n    _this.parentTableName = ko.pureComputed(function () {\n      return _this.parentTable().actualName();\n    });\n    _this.nestedTableName = ko.pureComputed(function () {\n      return _this.nestedTable().actualName();\n    });\n    _this.conditions = utils_1.deserializeArray(model['KeyColumns'], function (item) {\n      return new joinConditionModel_1.JoinConditionViewModel(item, _this, serializer);\n    });\n    return _this;\n  }\n\n  RelationViewModel.prototype._getConditionNumber = function () {\n    var result = this.conditions().length + 1;\n    var existingNumbers = this.conditions().map(function (_c) {\n      return _c.seriesNumber();\n    });\n\n    for (var index = 0; index < this.conditions().length; index++) {\n      if (existingNumbers.indexOf(index + 1) !== -1) continue;\n      result = index + 1;\n      break;\n    }\n\n    return result;\n  };\n\n  RelationViewModel.prototype.getInfo = function () {\n    return relationModelMeta_1.relationSerializationInfo;\n  };\n\n  RelationViewModel.prototype.addChild = function (control) {\n    var condition = control;\n\n    if (this.conditions && this.conditions.indexOf(condition) === -1) {\n      condition.seriesNumber(this._getConditionNumber());\n      condition.parentModel(this);\n      this.conditions.push(condition);\n    }\n  };\n\n  RelationViewModel.prototype.removeChild = function (control) {\n    var index = this.conditions().indexOf(control);\n    if (index > -1) this.conditions.splice(index, 1);\n    if (this.conditions().length === 0) this.parentModel().removeChild(this);\n  };\n\n  return RelationViewModel;\n}(queryElementModel_1.QueryElementBaseViewModel);\n\nexports.RelationViewModel = RelationViewModel;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/elements/relationModel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","RelationViewModel","ko","require","queryElementModel_1","utils_1","joinConditionModel_1","relationModelMeta_1","_utils_1","_super","model","query","serializer","_this","extend","parentTable","observable","getTable","parentTableName","peek","nestedTable","nestedTableName","pureComputed","actualName","conditions","deserializeArray","item","JoinConditionViewModel","_getConditionNumber","result","length","existingNumbers","map","_c","seriesNumber","index","indexOf","getInfo","relationSerializationInfo","addChild","control","condition","parentModel","push","removeChild","splice","QueryElementBaseViewModel"],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;;AAeAV,MAAM,CAACa,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,wBAAD,CAArB;;AACA,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,sBAAD,CAAlC;;AACA,IAAII,mBAAmB,GAAGJ,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,yBAAD,CAAtB;;AACA,IAAIF,iBAAiB,GAAI,UAAUQ,MAAV,EAAkB;AACvC5B,EAAAA,SAAS,CAACoB,iBAAD,EAAoBQ,MAApB,CAAT;;AACA,WAASR,iBAAT,CAA2BS,KAA3B,EAAkCC,KAAlC,EAAyCC,UAAzC,EAAqD;AACjD,QAAIC,KAAK,GAAGJ,MAAM,CAACjB,IAAP,CAAY,IAAZ,EAAkBgB,QAAQ,CAACM,MAAT,CAAgBJ,KAAhB,EAAuB;AAAE,sBAAgB,UAAlB;AAA8B,mBAAa;AAA3C,KAAvB,CAAlB,EAAmGC,KAAnG,EAA0GC,UAA1G,KAAyH,IAArI;;AACAC,IAAAA,KAAK,CAACE,WAAN,GAAoBb,EAAE,CAACc,UAAH,CAAcL,KAAK,CAACM,QAAN,CAAeJ,KAAK,CAACK,eAAN,CAAsBC,IAAtB,EAAf,CAAd,CAApB;AACAN,IAAAA,KAAK,CAACO,WAAN,GAAoBlB,EAAE,CAACc,UAAH,CAAcL,KAAK,CAACM,QAAN,CAAeJ,KAAK,CAACQ,eAAN,CAAsBF,IAAtB,EAAf,CAAd,CAApB;AACAN,IAAAA,KAAK,CAACK,eAAN,GAAwBhB,EAAE,CAACoB,YAAH,CAAgB,YAAY;AAAE,aAAOT,KAAK,CAACE,WAAN,GAAoBQ,UAApB,EAAP;AAA0C,KAAxE,CAAxB;AACAV,IAAAA,KAAK,CAACQ,eAAN,GAAwBnB,EAAE,CAACoB,YAAH,CAAgB,YAAY;AAAE,aAAOT,KAAK,CAACO,WAAN,GAAoBG,UAApB,EAAP;AAA0C,KAAxE,CAAxB;AACAV,IAAAA,KAAK,CAACW,UAAN,GAAmBnB,OAAO,CAACoB,gBAAR,CAAyBf,KAAK,CAAC,YAAD,CAA9B,EAA8C,UAAUgB,IAAV,EAAgB;AAC7E,aAAO,IAAIpB,oBAAoB,CAACqB,sBAAzB,CAAgDD,IAAhD,EAAsDb,KAAtD,EAA6DD,UAA7D,CAAP;AACH,KAFkB,CAAnB;AAGA,WAAOC,KAAP;AACH;;AACDZ,EAAAA,iBAAiB,CAACX,SAAlB,CAA4BsC,mBAA5B,GAAkD,YAAY;AAC1D,QAAIC,MAAM,GAAG,KAAKL,UAAL,GAAkBM,MAAlB,GAA2B,CAAxC;AACA,QAAIC,eAAe,GAAG,KAAKP,UAAL,GAAkBQ,GAAlB,CAAsB,UAAUC,EAAV,EAAc;AAAE,aAAOA,EAAE,CAACC,YAAH,EAAP;AAA2B,KAAjE,CAAtB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKX,UAAL,GAAkBM,MAA9C,EAAsDK,KAAK,EAA3D,EAA+D;AAC3D,UAAIJ,eAAe,CAACK,OAAhB,CAAwBD,KAAK,GAAG,CAAhC,MAAuC,CAAC,CAA5C,EACI;AACJN,MAAAA,MAAM,GAAGM,KAAK,GAAG,CAAjB;AACA;AACH;;AACD,WAAON,MAAP;AACH,GAVD;;AAWA5B,EAAAA,iBAAiB,CAACX,SAAlB,CAA4B+C,OAA5B,GAAsC,YAAY;AAC9C,WAAO9B,mBAAmB,CAAC+B,yBAA3B;AACH,GAFD;;AAGArC,EAAAA,iBAAiB,CAACX,SAAlB,CAA4BiD,QAA5B,GAAuC,UAAUC,OAAV,EAAmB;AACtD,QAAIC,SAAS,GAAGD,OAAhB;;AACA,QAAI,KAAKhB,UAAL,IAAmB,KAAKA,UAAL,CAAgBY,OAAhB,CAAwBK,SAAxB,MAAuC,CAAC,CAA/D,EAAkE;AAC9DA,MAAAA,SAAS,CAACP,YAAV,CAAuB,KAAKN,mBAAL,EAAvB;AACAa,MAAAA,SAAS,CAACC,WAAV,CAAsB,IAAtB;AACA,WAAKlB,UAAL,CAAgBmB,IAAhB,CAAqBF,SAArB;AACH;AACJ,GAPD;;AAQAxC,EAAAA,iBAAiB,CAACX,SAAlB,CAA4BsD,WAA5B,GAA0C,UAAUJ,OAAV,EAAmB;AACzD,QAAIL,KAAK,GAAG,KAAKX,UAAL,GAAkBY,OAAlB,CAA0BI,OAA1B,CAAZ;AACA,QAAIL,KAAK,GAAG,CAAC,CAAb,EACI,KAAKX,UAAL,CAAgBqB,MAAhB,CAAuBV,KAAvB,EAA8B,CAA9B;AACJ,QAAI,KAAKX,UAAL,GAAkBM,MAAlB,KAA6B,CAAjC,EACI,KAAKY,WAAL,GAAmBE,WAAnB,CAA+B,IAA/B;AACP,GAND;;AAOA,SAAO3C,iBAAP;AACH,CA3CwB,CA2CvBG,mBAAmB,CAAC0C,yBA3CG,CAAzB;;AA4CA/C,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\elements\\relationModel.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelationViewModel = void 0;\nvar ko = require(\"knockout\");\nvar queryElementModel_1 = require(\"./queryElementModel\");\nvar utils_1 = require(\"../../serializer/utils\");\nvar joinConditionModel_1 = require(\"./joinConditionModel\");\nvar relationModelMeta_1 = require(\"./relationModelMeta\");\nvar _utils_1 = require(\"../../serializer/_utils\");\nvar RelationViewModel = (function (_super) {\n    __extends(RelationViewModel, _super);\n    function RelationViewModel(model, query, serializer) {\n        var _this = _super.call(this, _utils_1.extend(model, { '@ControlType': 'Relation', '@ItemType': 'Relation' }), query, serializer) || this;\n        _this.parentTable = ko.observable(query.getTable(_this.parentTableName.peek()));\n        _this.nestedTable = ko.observable(query.getTable(_this.nestedTableName.peek()));\n        _this.parentTableName = ko.pureComputed(function () { return _this.parentTable().actualName(); });\n        _this.nestedTableName = ko.pureComputed(function () { return _this.nestedTable().actualName(); });\n        _this.conditions = utils_1.deserializeArray(model['KeyColumns'], function (item) {\n            return new joinConditionModel_1.JoinConditionViewModel(item, _this, serializer);\n        });\n        return _this;\n    }\n    RelationViewModel.prototype._getConditionNumber = function () {\n        var result = this.conditions().length + 1;\n        var existingNumbers = this.conditions().map(function (_c) { return _c.seriesNumber(); });\n        for (var index = 0; index < this.conditions().length; index++) {\n            if (existingNumbers.indexOf(index + 1) !== -1)\n                continue;\n            result = index + 1;\n            break;\n        }\n        return result;\n    };\n    RelationViewModel.prototype.getInfo = function () {\n        return relationModelMeta_1.relationSerializationInfo;\n    };\n    RelationViewModel.prototype.addChild = function (control) {\n        var condition = control;\n        if (this.conditions && this.conditions.indexOf(condition) === -1) {\n            condition.seriesNumber(this._getConditionNumber());\n            condition.parentModel(this);\n            this.conditions.push(condition);\n        }\n    };\n    RelationViewModel.prototype.removeChild = function (control) {\n        var index = this.conditions().indexOf(control);\n        if (index > -1)\n            this.conditions.splice(index, 1);\n        if (this.conditions().length === 0)\n            this.parentModel().removeChild(this);\n    };\n    return RelationViewModel;\n}(queryElementModel_1.QueryElementBaseViewModel));\nexports.RelationViewModel = RelationViewModel;\n"]},"metadata":{},"sourceType":"script"}