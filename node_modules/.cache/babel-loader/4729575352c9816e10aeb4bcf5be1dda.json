{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_pivot-data-controller.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pivotDataController = void 0;\n\nvar _pivot_grid_item_helper_1 = require(\"../../viewer-parts/viewer-items/pivot-grid-item/_pivot-grid-item-helper\");\n\nvar item_data_axis_names_1 = require(\"../item-data/item-data-axis-names\");\n\nvar _utils_1 = require(\"../_utils\");\n\nvar _data_controller_base_1 = require(\"./_data-controller-base\");\n\nvar GT_UNIQUE_PATH = 'GT';\n\nvar pivotDataController = function (_super) {\n  __extends(pivotDataController, _super);\n\n  function pivotDataController(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this._measureIds = _this._getMeasureIds();\n    _this._collapseStateCache = {};\n    _this._conditionalFormattingInfoCache = [];\n    return _this;\n  }\n\n  pivotDataController.prototype.getStyleSettingsInfo = function (cellItem, collapseStateCache, conditionalFormattingInfoCache, pointsCache) {\n    if (this.cfModel && this.cfModel.RuleModels.length !== 0) {\n      var cellInfo = this._getCellInfo(cellItem, pointsCache),\n          rules = this._getFormatRules(cellItem, cellInfo);\n\n      this._collapseStateCache = collapseStateCache;\n      this._conditionalFormattingInfoCache = conditionalFormattingInfoCache;\n      return this._getStyleSettingsInfoCore(cellInfo, rules, item_data_axis_names_1.itemDataAxisNames.pivotColumnAxis, item_data_axis_names_1.itemDataAxisNames.pivotRowAxis);\n    }\n  };\n\n  pivotDataController.prototype._getMeasureIds = function () {\n    var measureIds = [];\n\n    for (var i = 0; i < this.viewModel.Values.length; i++) measureIds.push(this.viewModel.Values[i].DataId);\n\n    return measureIds;\n  };\n\n  pivotDataController.prototype._getColumnAxis = function () {\n    return _pivot_grid_item_helper_1.pivotHelper.getColumnAxis(this.multiData);\n  };\n\n  pivotDataController.prototype._getRowAxis = function () {\n    return _pivot_grid_item_helper_1.pivotHelper.getRowAxis(this.multiData);\n  };\n\n  pivotDataController.prototype._getCellInfo = function (cellItem, pointsCache) {\n    var columnAxisPoint;\n    var rowAxisPoint;\n    if (cellItem.area === _utils_1.pivotArea.column || cellItem.area === _utils_1.pivotArea.data) columnAxisPoint = this._getAxisPointByPath(pointsCache.columns, cellItem.columnPath, cellItem.columnType, false);\n    if (cellItem.area === _utils_1.pivotArea.row || cellItem.area === _utils_1.pivotArea.data) rowAxisPoint = this._getAxisPointByPath(pointsCache.rows, cellItem.rowPath, cellItem.rowType, true);\n    return {\n      columnAxisPoint: columnAxisPoint,\n      rowAxisPoint: rowAxisPoint\n    };\n  };\n\n  pivotDataController.prototype._getStyleIndexes = function (rule, cellInfo, points) {\n    var that = this,\n        currentStyleIndexes,\n        styleIndexes = [];\n\n    if (rule.ApplyToRow) {\n      currentStyleIndexes = that._findStyleSettingsOnAxis(cellInfo.rowAxisPoint, cellInfo.columnAxisPoint, rule.FormatConditionMeasureId, true);\n      if (currentStyleIndexes.length > 0) styleIndexes = styleIndexes.concat(currentStyleIndexes);\n    }\n\n    if (rule.ApplyToColumn) {\n      currentStyleIndexes = that._findStyleSettingsOnAxis(cellInfo.rowAxisPoint, cellInfo.columnAxisPoint, rule.FormatConditionMeasureId, false);\n      if (currentStyleIndexes.length > 0) styleIndexes = styleIndexes.concat(currentStyleIndexes);\n    }\n\n    if (!rule.ApplyToRow && !rule.ApplyToColumn) {\n      if (cellInfo.columnAxisPoint) points.push(cellInfo.columnAxisPoint);\n      if (cellInfo.rowAxisPoint) points.push(cellInfo.rowAxisPoint);\n      currentStyleIndexes = that._getMeasureValueByAxisPoints(points, rule.FormatConditionMeasureId);\n      if (currentStyleIndexes) styleIndexes = styleIndexes.concat(currentStyleIndexes);\n    }\n\n    return styleIndexes;\n  };\n\n  pivotDataController.prototype._findStyleSettingsOnAxis = function (rowAxisPoint, columnAxisPoint, measureId, isRowAxis) {\n    var that = this,\n        styleIndexes = [],\n        rowPoint = rowAxisPoint ? rowAxisPoint : this._getRowAxis().getRootPoint(),\n        columnPoint = columnAxisPoint ? columnAxisPoint : this._getColumnAxis().getRootPoint(),\n        slicePoint = isRowAxis ? rowPoint : columnPoint,\n        intersectingRootPoint,\n        slice,\n        intersectingPoints = [],\n        cfAxisPoint,\n        conditionalFormattingInfo = {\n      slicePoint: slicePoint,\n      measureId: measureId,\n      styleIndexes: [],\n      toString: function () {\n        return this.slicePoint.getUniquePath() + this.measureId;\n      }\n    },\n        iteratePoints = function (intersectingPoints, point) {\n      var children = point.getChildren(),\n          child,\n          collapseStateKey = point.getUniquePath().concat(isRowAxis ? 'column' : 'row'),\n          wasCollapsed = that._collapseStateCache[collapseStateKey];\n\n      if (wasCollapsed === undefined) {\n        intersectingPoints.push(point);\n\n        if (children && children.length > 0) {\n          for (var i = 0; i < children.length; i++) {\n            child = children[i];\n            iteratePoints(intersectingPoints, child);\n          }\n        }\n      }\n    };\n\n    cfAxisPoint = this._conditionalFormattingInfoCache[conditionalFormattingInfo];\n    if (cfAxisPoint) return cfAxisPoint.styleIndexes;\n    slice = this.multiData.getSlice(slicePoint);\n    intersectingRootPoint = isRowAxis ? this._getColumnAxis().getRootPoint() : this._getRowAxis().getRootPoint();\n    iteratePoints(intersectingPoints, intersectingRootPoint);\n\n    for (var index = 0; index < intersectingPoints.length; index++) {\n      var intersectingPoint = intersectingPoints[index],\n          finalSlice = slice.getSlice(intersectingPoint),\n          currentStyleIndexes = finalSlice.getConditionalFormattingMeasureValue(measureId);\n\n      if (currentStyleIndexes) {\n        styleIndexes = currentStyleIndexes;\n        break;\n      }\n    }\n\n    conditionalFormattingInfo.styleIndexes = styleIndexes;\n    this._conditionalFormattingInfoCache[conditionalFormattingInfo] = conditionalFormattingInfo;\n    return styleIndexes;\n  };\n\n  pivotDataController.prototype._getFormatRules = function (cellItem, cellInfo) {\n    var that = this,\n        dataId,\n        rules = [];\n\n    switch (cellItem.area) {\n      case _utils_1.pivotArea.column:\n        dataId = that._getPointId(cellInfo.columnAxisPoint);\n        rules = rules.concat(that._getFormatRulesByDataId(dataId));\n        break;\n\n      case _utils_1.pivotArea.row:\n        dataId = that._getPointId(cellInfo.rowAxisPoint);\n        rules = rules.concat(that._getFormatRulesByDataId(dataId));\n        break;\n\n      default:\n        {\n          dataId = that._measureIds[cellItem.cellIndex];\n          rules = that.cfModel.RuleModels.filter(function (rule) {\n            return rule.ApplyToRow || that._isRowValuePosition() && rule.ApplyToColumn || rule.ApplyToDataId === dataId;\n          });\n          break;\n        }\n    }\n\n    return rules;\n  };\n\n  pivotDataController.prototype._isRowValuePosition = function () {\n    return this.viewModel.ValuesPosition === 'Rows';\n  };\n\n  pivotDataController.prototype._getAxisPointByPath = function (pointsCache, path, type, isRowAxisPoint) {\n    var correctedPath = path,\n        axisPoint;\n    if (type === GT_UNIQUE_PATH) correctedPath = GT_UNIQUE_PATH;\n    axisPoint = pointsCache[correctedPath];\n\n    if (!axisPoint) {\n      var axis = isRowAxisPoint ? this._getRowAxis() : this._getColumnAxis();\n      axisPoint = axis.getPointByUniqueValues(path);\n    }\n\n    return axisPoint;\n  };\n\n  pivotDataController.prototype._getFormatRulesByDataId = function (dataId) {\n    var that = this,\n        formatRules = [];\n\n    if (that.cfModel) {\n      that.cfModel.RuleModels.forEach(function (rule) {\n        if (rule.ApplyToDataId === dataId) {\n          formatRules.push(rule);\n        }\n      });\n    }\n\n    return formatRules;\n  };\n\n  pivotDataController.prototype._getPointId = function (point) {\n    var dimension, columnPointId;\n\n    if (point) {\n      dimension = point.getDimension();\n      columnPointId = dimension ? dimension.id : undefined;\n    }\n\n    return columnPointId;\n  };\n\n  return pivotDataController;\n}(_data_controller_base_1.dataControllerBase);\n\nexports.pivotDataController = pivotDataController;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/data/data-controllers/_pivot-data-controller.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","pivotDataController","_pivot_grid_item_helper_1","require","item_data_axis_names_1","_utils_1","_data_controller_base_1","GT_UNIQUE_PATH","_super","options","_this","_measureIds","_getMeasureIds","_collapseStateCache","_conditionalFormattingInfoCache","getStyleSettingsInfo","cellItem","collapseStateCache","conditionalFormattingInfoCache","pointsCache","cfModel","RuleModels","length","cellInfo","_getCellInfo","rules","_getFormatRules","_getStyleSettingsInfoCore","itemDataAxisNames","pivotColumnAxis","pivotRowAxis","measureIds","i","viewModel","Values","push","DataId","_getColumnAxis","pivotHelper","getColumnAxis","multiData","_getRowAxis","getRowAxis","columnAxisPoint","rowAxisPoint","area","pivotArea","column","data","_getAxisPointByPath","columns","columnPath","columnType","row","rows","rowPath","rowType","_getStyleIndexes","rule","points","that","currentStyleIndexes","styleIndexes","ApplyToRow","_findStyleSettingsOnAxis","FormatConditionMeasureId","concat","ApplyToColumn","_getMeasureValueByAxisPoints","measureId","isRowAxis","rowPoint","getRootPoint","columnPoint","slicePoint","intersectingRootPoint","slice","intersectingPoints","cfAxisPoint","conditionalFormattingInfo","toString","getUniquePath","iteratePoints","point","children","getChildren","child","collapseStateKey","wasCollapsed","undefined","getSlice","index","intersectingPoint","finalSlice","getConditionalFormattingMeasureValue","dataId","_getPointId","_getFormatRulesByDataId","cellIndex","filter","_isRowValuePosition","ApplyToDataId","ValuesPosition","path","type","isRowAxisPoint","correctedPath","axisPoint","axis","getPointByUniqueValues","formatRules","forEach","dimension","columnPointId","getDimension","id","dataControllerBase"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_pivot-data-controller.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pivotDataController = void 0;\nvar _pivot_grid_item_helper_1 = require(\"../../viewer-parts/viewer-items/pivot-grid-item/_pivot-grid-item-helper\");\nvar item_data_axis_names_1 = require(\"../item-data/item-data-axis-names\");\nvar _utils_1 = require(\"../_utils\");\nvar _data_controller_base_1 = require(\"./_data-controller-base\");\nvar GT_UNIQUE_PATH = 'GT';\nvar pivotDataController = (function (_super) {\n    __extends(pivotDataController, _super);\n    function pivotDataController(options) {\n        var _this = _super.call(this, options) || this;\n        _this._measureIds = _this._getMeasureIds();\n        _this._collapseStateCache = {};\n        _this._conditionalFormattingInfoCache = [];\n        return _this;\n    }\n    pivotDataController.prototype.getStyleSettingsInfo = function (cellItem, collapseStateCache, conditionalFormattingInfoCache, pointsCache) {\n        if (this.cfModel && this.cfModel.RuleModels.length !== 0) {\n            var cellInfo = this._getCellInfo(cellItem, pointsCache), rules = this._getFormatRules(cellItem, cellInfo);\n            this._collapseStateCache = collapseStateCache;\n            this._conditionalFormattingInfoCache = conditionalFormattingInfoCache;\n            return this._getStyleSettingsInfoCore(cellInfo, rules, item_data_axis_names_1.itemDataAxisNames.pivotColumnAxis, item_data_axis_names_1.itemDataAxisNames.pivotRowAxis);\n        }\n    };\n    pivotDataController.prototype._getMeasureIds = function () {\n        var measureIds = [];\n        for (var i = 0; i < this.viewModel.Values.length; i++)\n            measureIds.push(this.viewModel.Values[i].DataId);\n        return measureIds;\n    };\n    pivotDataController.prototype._getColumnAxis = function () {\n        return _pivot_grid_item_helper_1.pivotHelper.getColumnAxis(this.multiData);\n    };\n    pivotDataController.prototype._getRowAxis = function () {\n        return _pivot_grid_item_helper_1.pivotHelper.getRowAxis(this.multiData);\n    };\n    pivotDataController.prototype._getCellInfo = function (cellItem, pointsCache) {\n        var columnAxisPoint;\n        var rowAxisPoint;\n        if (cellItem.area === _utils_1.pivotArea.column || cellItem.area === _utils_1.pivotArea.data)\n            columnAxisPoint = this._getAxisPointByPath(pointsCache.columns, cellItem.columnPath, cellItem.columnType, false);\n        if (cellItem.area === _utils_1.pivotArea.row || cellItem.area === _utils_1.pivotArea.data)\n            rowAxisPoint = this._getAxisPointByPath(pointsCache.rows, cellItem.rowPath, cellItem.rowType, true);\n        return {\n            columnAxisPoint: columnAxisPoint,\n            rowAxisPoint: rowAxisPoint\n        };\n    };\n    pivotDataController.prototype._getStyleIndexes = function (rule, cellInfo, points) {\n        var that = this, currentStyleIndexes, styleIndexes = [];\n        if (rule.ApplyToRow) {\n            currentStyleIndexes = that._findStyleSettingsOnAxis(cellInfo.rowAxisPoint, cellInfo.columnAxisPoint, rule.FormatConditionMeasureId, true);\n            if (currentStyleIndexes.length > 0)\n                styleIndexes = styleIndexes.concat(currentStyleIndexes);\n        }\n        if (rule.ApplyToColumn) {\n            currentStyleIndexes = that._findStyleSettingsOnAxis(cellInfo.rowAxisPoint, cellInfo.columnAxisPoint, rule.FormatConditionMeasureId, false);\n            if (currentStyleIndexes.length > 0)\n                styleIndexes = styleIndexes.concat(currentStyleIndexes);\n        }\n        if (!rule.ApplyToRow && !rule.ApplyToColumn) {\n            if (cellInfo.columnAxisPoint)\n                points.push(cellInfo.columnAxisPoint);\n            if (cellInfo.rowAxisPoint)\n                points.push(cellInfo.rowAxisPoint);\n            currentStyleIndexes = that._getMeasureValueByAxisPoints(points, rule.FormatConditionMeasureId);\n            if (currentStyleIndexes)\n                styleIndexes = styleIndexes.concat(currentStyleIndexes);\n        }\n        return styleIndexes;\n    };\n    pivotDataController.prototype._findStyleSettingsOnAxis = function (rowAxisPoint, columnAxisPoint, measureId, isRowAxis) {\n        var that = this, styleIndexes = [], rowPoint = rowAxisPoint ? rowAxisPoint : this._getRowAxis().getRootPoint(), columnPoint = columnAxisPoint ? columnAxisPoint : this._getColumnAxis().getRootPoint(), slicePoint = isRowAxis ? rowPoint : columnPoint, intersectingRootPoint, slice, intersectingPoints = [], cfAxisPoint, conditionalFormattingInfo = {\n            slicePoint: slicePoint,\n            measureId: measureId,\n            styleIndexes: [],\n            toString: function () {\n                return this.slicePoint.getUniquePath() + this.measureId;\n            }\n        }, iteratePoints = function (intersectingPoints, point) {\n            var children = point.getChildren(), child, collapseStateKey = point.getUniquePath().concat(isRowAxis ? 'column' : 'row'), wasCollapsed = that._collapseStateCache[collapseStateKey];\n            if (wasCollapsed === undefined) {\n                intersectingPoints.push(point);\n                if (children && children.length > 0) {\n                    for (var i = 0; i < children.length; i++) {\n                        child = children[i];\n                        iteratePoints(intersectingPoints, child);\n                    }\n                }\n            }\n        };\n        cfAxisPoint = this._conditionalFormattingInfoCache[conditionalFormattingInfo];\n        if (cfAxisPoint)\n            return cfAxisPoint.styleIndexes;\n        slice = this.multiData.getSlice(slicePoint);\n        intersectingRootPoint = isRowAxis ? this._getColumnAxis().getRootPoint() : this._getRowAxis().getRootPoint();\n        iteratePoints(intersectingPoints, intersectingRootPoint);\n        for (var index = 0; index < intersectingPoints.length; index++) {\n            var intersectingPoint = intersectingPoints[index], finalSlice = slice.getSlice(intersectingPoint), currentStyleIndexes = finalSlice.getConditionalFormattingMeasureValue(measureId);\n            if (currentStyleIndexes) {\n                styleIndexes = currentStyleIndexes;\n                break;\n            }\n        }\n        conditionalFormattingInfo.styleIndexes = styleIndexes;\n        this._conditionalFormattingInfoCache[conditionalFormattingInfo] = conditionalFormattingInfo;\n        return styleIndexes;\n    };\n    pivotDataController.prototype._getFormatRules = function (cellItem, cellInfo) {\n        var that = this, dataId, rules = [];\n        switch (cellItem.area) {\n            case _utils_1.pivotArea.column:\n                dataId = that._getPointId(cellInfo.columnAxisPoint);\n                rules = rules.concat(that._getFormatRulesByDataId(dataId));\n                break;\n            case _utils_1.pivotArea.row:\n                dataId = that._getPointId(cellInfo.rowAxisPoint);\n                rules = rules.concat(that._getFormatRulesByDataId(dataId));\n                break;\n            default: {\n                dataId = that._measureIds[cellItem.cellIndex];\n                rules = that.cfModel.RuleModels.filter(function (rule) {\n                    return rule.ApplyToRow || (that._isRowValuePosition() && rule.ApplyToColumn) || rule.ApplyToDataId === dataId;\n                });\n                break;\n            }\n        }\n        return rules;\n    };\n    pivotDataController.prototype._isRowValuePosition = function () {\n        return this.viewModel.ValuesPosition === 'Rows';\n    };\n    pivotDataController.prototype._getAxisPointByPath = function (pointsCache, path, type, isRowAxisPoint) {\n        var correctedPath = path, axisPoint;\n        if (type === GT_UNIQUE_PATH)\n            correctedPath = GT_UNIQUE_PATH;\n        axisPoint = pointsCache[correctedPath];\n        if (!axisPoint) {\n            var axis = isRowAxisPoint ? this._getRowAxis() : this._getColumnAxis();\n            axisPoint = axis.getPointByUniqueValues(path);\n        }\n        return axisPoint;\n    };\n    pivotDataController.prototype._getFormatRulesByDataId = function (dataId) {\n        var that = this, formatRules = [];\n        if (that.cfModel) {\n            that.cfModel.RuleModels.forEach(function (rule) {\n                if (rule.ApplyToDataId === dataId) {\n                    formatRules.push(rule);\n                }\n            });\n        }\n        return formatRules;\n    };\n    pivotDataController.prototype._getPointId = function (point) {\n        var dimension, columnPointId;\n        if (point) {\n            dimension = point.getDimension();\n            columnPointId = dimension ? dimension.id : undefined;\n        }\n        return columnPointId;\n    };\n    return pivotDataController;\n}(_data_controller_base_1.dataControllerBase));\nexports.pivotDataController = pivotDataController;\n"]},"metadata":{},"sourceType":"script"}