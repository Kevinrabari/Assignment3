{"ast":null,"code":"/**\r\n * DevExtreme (esm/file_management/file_system_item.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isString } from \"../core/utils/type\";\nimport { pathCombine, getFileExtension, getPathParts, getName, getEscapedFileName, PATH_SEPARATOR } from \"./utils\";\n\nclass FileSystemItem {\n  constructor() {\n    var ctor = isString(arguments[0]) ? this._publicCtor : this._internalCtor;\n    ctor.apply(this, arguments);\n  }\n\n  _internalCtor(pathInfo, name, isDirectory, key) {\n    this.name = name || \"\";\n    this.pathInfo = pathInfo && [...pathInfo] || [];\n    this.parentPath = this._getPathByPathInfo(this.pathInfo);\n    this.relativeName = pathCombine(this.parentPath, name);\n    this.key = key || this._getPathByPathInfo(this.getFullPathInfo(), true);\n    this.path = pathCombine(this.parentPath, name);\n    this.pathKeys = this.pathInfo.map(_ref => {\n      var {\n        key: key\n      } = _ref;\n      return key;\n    });\n\n    if (!this.isRoot()) {\n      this.pathKeys.push(this.key);\n    }\n\n    this._initialize(isDirectory);\n  }\n\n  _publicCtor(path, isDirectory, pathKeys) {\n    this.path = path || \"\";\n    this.pathKeys = pathKeys || [];\n    var pathInfo = [];\n    var parts = getPathParts(path, true);\n\n    for (var i = 0; i < parts.length - 1; i++) {\n      var part = parts[i];\n      var pathInfoPart = {\n        key: this.pathKeys[i] || part,\n        name: getName(part)\n      };\n      pathInfo.push(pathInfoPart);\n    }\n\n    this.pathInfo = pathInfo;\n    this.relativeName = path;\n    this.name = getName(path);\n    this.key = this.pathKeys.length ? this.pathKeys[this.pathKeys.length - 1] : path;\n    this.parentPath = parts.length > 1 ? parts[parts.length - 2] : \"\";\n\n    this._initialize(isDirectory);\n  }\n\n  _initialize(isDirectory) {\n    this.isDirectory = !!isDirectory;\n    this.size = 0;\n    this.dateModified = new Date();\n    this.thumbnail = \"\";\n    this.tooltipText = \"\";\n  }\n\n  getFullPathInfo() {\n    var pathInfo = [...this.pathInfo];\n\n    if (!this.isRoot()) {\n      pathInfo.push({\n        key: this.key,\n        name: this.name\n      });\n    }\n\n    return pathInfo;\n  }\n\n  isRoot() {\n    return \"\" === this.path;\n  }\n\n  getFileExtension() {\n    return this.isDirectory ? \"\" : getFileExtension(this.name);\n  }\n\n  equals(item) {\n    return item && this.key === item.key;\n  }\n\n  createClone() {\n    var result = new FileSystemItem(this.pathInfo, this.name, this.isDirectory, this.key);\n    result.key = this.key;\n    result.size = this.size;\n    result.dateModified = this.dateModified;\n    result.thumbnail = this.thumbnail;\n    result.tooltipText = this.tooltipText;\n    result.hasSubDirectories = this.hasSubDirectories;\n    result.dataItem = this.dataItem;\n    return result;\n  }\n\n  _getPathByPathInfo(pathInfo, escape) {\n    return pathInfo.map(info => escape ? getEscapedFileName(info.name) : info.name).join(PATH_SEPARATOR);\n  }\n\n}\n\nexport default FileSystemItem;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/file_management/file_system_item.js"],"names":["isString","pathCombine","getFileExtension","getPathParts","getName","getEscapedFileName","PATH_SEPARATOR","FileSystemItem","constructor","ctor","arguments","_publicCtor","_internalCtor","apply","pathInfo","name","isDirectory","key","parentPath","_getPathByPathInfo","relativeName","getFullPathInfo","path","pathKeys","map","_ref","isRoot","push","_initialize","parts","i","length","part","pathInfoPart","size","dateModified","Date","thumbnail","tooltipText","equals","item","createClone","result","hasSubDirectories","dataItem","escape","info","join"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/file_management/file_system_item.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isString\r\n} from \"../core/utils/type\";\r\nimport {\r\n    pathCombine,\r\n    getFileExtension,\r\n    getPathParts,\r\n    getName,\r\n    getEscapedFileName,\r\n    PATH_SEPARATOR\r\n} from \"./utils\";\r\nclass FileSystemItem {\r\n    constructor() {\r\n        var ctor = isString(arguments[0]) ? this._publicCtor : this._internalCtor;\r\n        ctor.apply(this, arguments)\r\n    }\r\n    _internalCtor(pathInfo, name, isDirectory, key) {\r\n        this.name = name || \"\";\r\n        this.pathInfo = pathInfo && [...pathInfo] || [];\r\n        this.parentPath = this._getPathByPathInfo(this.pathInfo);\r\n        this.relativeName = pathCombine(this.parentPath, name);\r\n        this.key = key || this._getPathByPathInfo(this.getFullPathInfo(), true);\r\n        this.path = pathCombine(this.parentPath, name);\r\n        this.pathKeys = this.pathInfo.map(_ref => {\r\n            var {\r\n                key: key\r\n            } = _ref;\r\n            return key\r\n        });\r\n        if (!this.isRoot()) {\r\n            this.pathKeys.push(this.key)\r\n        }\r\n        this._initialize(isDirectory)\r\n    }\r\n    _publicCtor(path, isDirectory, pathKeys) {\r\n        this.path = path || \"\";\r\n        this.pathKeys = pathKeys || [];\r\n        var pathInfo = [];\r\n        var parts = getPathParts(path, true);\r\n        for (var i = 0; i < parts.length - 1; i++) {\r\n            var part = parts[i];\r\n            var pathInfoPart = {\r\n                key: this.pathKeys[i] || part,\r\n                name: getName(part)\r\n            };\r\n            pathInfo.push(pathInfoPart)\r\n        }\r\n        this.pathInfo = pathInfo;\r\n        this.relativeName = path;\r\n        this.name = getName(path);\r\n        this.key = this.pathKeys.length ? this.pathKeys[this.pathKeys.length - 1] : path;\r\n        this.parentPath = parts.length > 1 ? parts[parts.length - 2] : \"\";\r\n        this._initialize(isDirectory)\r\n    }\r\n    _initialize(isDirectory) {\r\n        this.isDirectory = !!isDirectory;\r\n        this.size = 0;\r\n        this.dateModified = new Date;\r\n        this.thumbnail = \"\";\r\n        this.tooltipText = \"\"\r\n    }\r\n    getFullPathInfo() {\r\n        var pathInfo = [...this.pathInfo];\r\n        if (!this.isRoot()) {\r\n            pathInfo.push({\r\n                key: this.key,\r\n                name: this.name\r\n            })\r\n        }\r\n        return pathInfo\r\n    }\r\n    isRoot() {\r\n        return \"\" === this.path\r\n    }\r\n    getFileExtension() {\r\n        return this.isDirectory ? \"\" : getFileExtension(this.name)\r\n    }\r\n    equals(item) {\r\n        return item && this.key === item.key\r\n    }\r\n    createClone() {\r\n        var result = new FileSystemItem(this.pathInfo, this.name, this.isDirectory, this.key);\r\n        result.key = this.key;\r\n        result.size = this.size;\r\n        result.dateModified = this.dateModified;\r\n        result.thumbnail = this.thumbnail;\r\n        result.tooltipText = this.tooltipText;\r\n        result.hasSubDirectories = this.hasSubDirectories;\r\n        result.dataItem = this.dataItem;\r\n        return result\r\n    }\r\n    _getPathByPathInfo(pathInfo, escape) {\r\n        return pathInfo.map(info => escape ? getEscapedFileName(info.name) : info.name).join(PATH_SEPARATOR)\r\n    }\r\n}\r\nexport default FileSystemItem;\r\n"]},"metadata":{},"sourceType":"module"}