{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.name_editor.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport TextBox from \"../text_box\";\nimport FileManagerDialogBase from \"./ui.file_manager.dialog\";\nvar FILE_MANAGER_DIALOG_NAME_EDITOR = \"dx-filemanager-dialog-name-editor\";\nvar FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP = \"dx-filemanager-dialog-name-editor-popup\";\n\nclass FileManagerNameEditorDialog extends FileManagerDialogBase {\n  show(name) {\n    name = name || \"\";\n\n    if (this._nameTextBox) {\n      this._nameTextBox.option(\"value\", name);\n    } else {\n      this._initialNameValue = name;\n    }\n\n    super.show();\n  }\n\n  _onPopupShown() {\n    if (!this._nameTextBox) {\n      return;\n    }\n\n    var $textBoxInput = this._nameTextBox._input();\n\n    $textBoxInput.length && $textBoxInput[0].select();\n\n    this._nameTextBox.focus();\n  }\n\n  _getDialogOptions() {\n    return extend(super._getDialogOptions(), {\n      title: this.option(\"title\"),\n      buttonText: this.option(\"buttonText\"),\n      contentCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR,\n      popupCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP\n    });\n  }\n\n  _createContentTemplate(element) {\n    super._createContentTemplate(element);\n\n    this._nameTextBox = this._createComponent($(\"<div>\"), TextBox, {\n      value: this._initialNameValue,\n      onEnterKey: () => this._hasCompositionJustEnded && this._applyDialogChanges(),\n      onKeyDown: e => this._checkCompositionEnded(e)\n    });\n\n    this._$contentElement.append(this._nameTextBox.$element());\n  }\n\n  _checkCompositionEnded(_ref) {\n    var {\n      event: event\n    } = _ref;\n    this._hasCompositionJustEnded = 229 !== event.which;\n  }\n\n  _getDialogResult() {\n    var nameValue = this._nameTextBox.option(\"value\");\n\n    return nameValue ? {\n      name: nameValue\n    } : null;\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      title: \"\",\n      buttonText: \"\"\n    });\n  }\n\n}\n\nexport default FileManagerNameEditorDialog;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.dialog.name_editor.js"],"names":["$","extend","TextBox","FileManagerDialogBase","FILE_MANAGER_DIALOG_NAME_EDITOR","FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP","FileManagerNameEditorDialog","show","name","_nameTextBox","option","_initialNameValue","_onPopupShown","$textBoxInput","_input","length","select","focus","_getDialogOptions","title","buttonText","contentCssClass","popupCssClass","_createContentTemplate","element","_createComponent","value","onEnterKey","_hasCompositionJustEnded","_applyDialogChanges","onKeyDown","e","_checkCompositionEnded","_$contentElement","append","$element","_ref","event","which","_getDialogResult","nameValue","_getDefaultOptions"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,MADJ,QAEO,yBAFP;AAGA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,IAAIC,+BAA+B,GAAG,mCAAtC;AACA,IAAIC,qCAAqC,GAAG,yCAA5C;;AACA,MAAMC,2BAAN,SAA0CH,qBAA1C,CAAgE;AAC5DI,EAAAA,IAAI,CAACC,IAAD,EAAO;AACPA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AACA,QAAI,KAAKC,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkCF,IAAlC;AACH,KAFD,MAEO;AACH,WAAKG,iBAAL,GAAyBH,IAAzB;AACH;;AACD,UAAMD,IAAN;AACH;;AACDK,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKH,YAAV,EAAwB;AACpB;AACH;;AACD,QAAII,aAAa,GAAG,KAAKJ,YAAL,CAAkBK,MAAlB,EAApB;;AACAD,IAAAA,aAAa,CAACE,MAAd,IAAwBF,aAAa,CAAC,CAAD,CAAb,CAAiBG,MAAjB,EAAxB;;AACA,SAAKP,YAAL,CAAkBQ,KAAlB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,WAAOjB,MAAM,CAAC,MAAMiB,iBAAN,EAAD,EAA4B;AACrCC,MAAAA,KAAK,EAAE,KAAKT,MAAL,CAAY,OAAZ,CAD8B;AAErCU,MAAAA,UAAU,EAAE,KAAKV,MAAL,CAAY,YAAZ,CAFyB;AAGrCW,MAAAA,eAAe,EAAEjB,+BAHoB;AAIrCkB,MAAAA,aAAa,EAAEjB;AAJsB,KAA5B,CAAb;AAMH;;AACDkB,EAAAA,sBAAsB,CAACC,OAAD,EAAU;AAC5B,UAAMD,sBAAN,CAA6BC,OAA7B;;AACA,SAAKf,YAAL,GAAoB,KAAKgB,gBAAL,CAAsBzB,CAAC,CAAC,OAAD,CAAvB,EAAkCE,OAAlC,EAA2C;AAC3DwB,MAAAA,KAAK,EAAE,KAAKf,iBAD+C;AAE3DgB,MAAAA,UAAU,EAAE,MAAM,KAAKC,wBAAL,IAAiC,KAAKC,mBAAL,EAFQ;AAG3DC,MAAAA,SAAS,EAAEC,CAAC,IAAI,KAAKC,sBAAL,CAA4BD,CAA5B;AAH2C,KAA3C,CAApB;;AAKA,SAAKE,gBAAL,CAAsBC,MAAtB,CAA6B,KAAKzB,YAAL,CAAkB0B,QAAlB,EAA7B;AACH;;AACDH,EAAAA,sBAAsB,CAACI,IAAD,EAAO;AACzB,QAAI;AACAC,MAAAA,KAAK,EAAEA;AADP,QAEAD,IAFJ;AAGA,SAAKR,wBAAL,GAAgC,QAAQS,KAAK,CAACC,KAA9C;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,QAAIC,SAAS,GAAG,KAAK/B,YAAL,CAAkBC,MAAlB,CAAyB,OAAzB,CAAhB;;AACA,WAAO8B,SAAS,GAAG;AACfhC,MAAAA,IAAI,EAAEgC;AADS,KAAH,GAEZ,IAFJ;AAGH;;AACDC,EAAAA,kBAAkB,GAAG;AACjB,WAAOxC,MAAM,CAAC,MAAMwC,kBAAN,EAAD,EAA6B;AACtCtB,MAAAA,KAAK,EAAE,EAD+B;AAEtCC,MAAAA,UAAU,EAAE;AAF0B,KAA7B,CAAb;AAIH;;AApD2D;;AAsDhE,eAAed,2BAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.name_editor.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport TextBox from \"../text_box\";\r\nimport FileManagerDialogBase from \"./ui.file_manager.dialog\";\r\nvar FILE_MANAGER_DIALOG_NAME_EDITOR = \"dx-filemanager-dialog-name-editor\";\r\nvar FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP = \"dx-filemanager-dialog-name-editor-popup\";\r\nclass FileManagerNameEditorDialog extends FileManagerDialogBase {\r\n    show(name) {\r\n        name = name || \"\";\r\n        if (this._nameTextBox) {\r\n            this._nameTextBox.option(\"value\", name)\r\n        } else {\r\n            this._initialNameValue = name\r\n        }\r\n        super.show()\r\n    }\r\n    _onPopupShown() {\r\n        if (!this._nameTextBox) {\r\n            return\r\n        }\r\n        var $textBoxInput = this._nameTextBox._input();\r\n        $textBoxInput.length && $textBoxInput[0].select();\r\n        this._nameTextBox.focus()\r\n    }\r\n    _getDialogOptions() {\r\n        return extend(super._getDialogOptions(), {\r\n            title: this.option(\"title\"),\r\n            buttonText: this.option(\"buttonText\"),\r\n            contentCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR,\r\n            popupCssClass: FILE_MANAGER_DIALOG_NAME_EDITOR_POPUP\r\n        })\r\n    }\r\n    _createContentTemplate(element) {\r\n        super._createContentTemplate(element);\r\n        this._nameTextBox = this._createComponent($(\"<div>\"), TextBox, {\r\n            value: this._initialNameValue,\r\n            onEnterKey: () => this._hasCompositionJustEnded && this._applyDialogChanges(),\r\n            onKeyDown: e => this._checkCompositionEnded(e)\r\n        });\r\n        this._$contentElement.append(this._nameTextBox.$element())\r\n    }\r\n    _checkCompositionEnded(_ref) {\r\n        var {\r\n            event: event\r\n        } = _ref;\r\n        this._hasCompositionJustEnded = 229 !== event.which\r\n    }\r\n    _getDialogResult() {\r\n        var nameValue = this._nameTextBox.option(\"value\");\r\n        return nameValue ? {\r\n            name: nameValue\r\n        } : null\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            title: \"\",\r\n            buttonText: \"\"\r\n        })\r\n    }\r\n}\r\nexport default FileManagerNameEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}