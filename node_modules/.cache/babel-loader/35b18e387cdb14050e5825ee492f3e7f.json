{"ast":null,"code":"/**\r\n* DevExpress Dashboard (create-dashboard.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateDashboardExtension = void 0;\n\nvar analytics_utils_1 = require(\"@devexpress/analytics-core/analytics-utils\");\n\nvar ko = require(\"knockout\");\n\nvar control_options_1 = require(\"../../common/control-options\");\n\nvar _default_1 = require(\"../../data/localization/_default\");\n\nvar dashboard_1 = require(\"../../model/dashboard\");\n\nvar toolbox_items_1 = require(\"../toolbox-extension/toolbox-items\");\n\nvar name = 'create-dashboard';\nvar nameAlias = 'createDashboard';\n\nvar CreateDashboardExtension = function () {\n  function CreateDashboardExtension(dashboardControl) {\n    var _this = this;\n\n    this.dashboardControl = dashboardControl;\n    this.name = name;\n\n    this.showCreateNewDashboard = function () {\n      var extension = _this.dashboardControl.findExtension('toolbox');\n\n      if (extension) {\n        extension.selectMenuItem(_this._newDashboardMenuItem);\n      }\n    };\n\n    this._createNewDashboard = function (dataSources, dashboardName) {\n      var toolboxExtension = _this.dashboardControl.findExtension('toolbox');\n\n      if (toolboxExtension) {\n        toolboxExtension.menuVisible(false);\n      }\n\n      var createDashboardCallback = function () {\n        var dashboardPropotype = new dashboard_1.Dashboard({});\n        dashboardPropotype.title.text(dashboardName);\n        dataSources.forEach(function (dataSource) {\n          var newDataSource = dashboard_1.Dashboard._createDataSource(new analytics_utils_1.ModelSerializer({\n            useRefs: false\n          }).serialize(dataSource), new analytics_utils_1.ModelSerializer());\n\n          dashboardPropotype.dataSources.push(newDataSource);\n        });\n\n        _this.performCreateDashboard(dashboardName, dashboardPropotype.getJSON());\n      };\n\n      var saveExtension = _this.dashboardControl.findExtension('save-dashboard');\n\n      if (saveExtension) {\n        saveExtension.ensureDashboardSaved(createDashboardCallback);\n      } else {\n        createDashboardCallback();\n      }\n    };\n\n    var accessibleDataSourcesExtension = ko.computed(function () {\n      return _this.dashboardControl.findExtension('available-data-sources');\n    });\n\n    var clickHandler = function () {\n      _this._newDashboardMenuItem.template = 'dx-dashboard-form-new';\n      _this._newDashboardMenuItem.data = new CreateNewDashboardViewModel(accessibleDataSourcesExtension, _this._createNewDashboard);\n    };\n\n    this._newDashboardMenuItem = new toolbox_items_1.DashboardMenuItem(this.name, 'DashboardWebStringId.DashboardMenuNew', 105, 78, function () {\n      return clickHandler();\n    });\n  }\n\n  CreateDashboardExtension.prototype.start = function () {\n    var extension = this.dashboardControl.findExtension('toolbox');\n\n    if (extension) {\n      extension.menuItems.push(this._newDashboardMenuItem);\n    }\n\n    this.dashboardControl._emptyControlTemplates.push({\n      name: 'dx-dashboard-add-new-dashboard',\n      data: {\n        isDesignMode: this.dashboardControl.isDesignMode,\n        showCreateNewDashboard: this.showCreateNewDashboard\n      }\n    });\n  };\n\n  CreateDashboardExtension.prototype.stop = function () {\n    var extension = this.dashboardControl.findExtension('toolbox');\n\n    if (extension) {\n      extension.menuItems.remove(this._newDashboardMenuItem);\n    }\n\n    var template = this.dashboardControl._emptyControlTemplates().filter(function (temlp) {\n      return temlp.name === 'dx-dashboard-add-new-dashboard';\n    })[0];\n\n    if (template) {\n      this.dashboardControl._emptyControlTemplates.remove(template);\n    }\n  };\n\n  CreateDashboardExtension.prototype.performCreateDashboard = function (dashboardName, dashboardJson) {\n    var _this = this;\n\n    this.dashboardControl.notificationController.showState(_default_1.getLocalizationById('DashboardWebStringId.Notification.DashboardLoading'));\n    return this.dashboardControl.remoteService.postToServer(this.dashboardControl._endpointCollection.dashboardUrls.GetDashboardsAction, {\n      name: dashboardName,\n      dashboard: dashboardJson\n    }).then(function (result, status, query) {\n      _this.dashboardControl.initializeDashboard(result['dashboardId'], result['dashboard'].Dashboard);\n    }, function (request) {\n      _this.dashboardControl.notificationController.showError(_default_1.getLocalizationById('DashboardWebStringId.Notification.NewDashboardCannotBeCreated'), request);\n    });\n  };\n\n  return CreateDashboardExtension;\n}();\n\nexports.CreateDashboardExtension = CreateDashboardExtension;\n\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) {\n  return new CreateDashboardExtension(dashboardControl);\n};\n\ncontrol_options_1.extensionNameMap[name] = nameAlias;\n\nvar CreateNewDashboardViewModel = function () {\n  function CreateNewDashboardViewModel(accessibleDataSourcesExtension, _newDashboardCallback) {\n    var _this = this;\n\n    this.accessibleDataSourcesExtension = accessibleDataSourcesExtension;\n    this._newDashboardCallback = _newDashboardCallback;\n    this.dashboardName = ko.observable();\n    this.selectionMode = 'single';\n\n    this.createNewDashboard = function () {\n      _this._newDashboardCallback(_this.accessibleDataSourcesExtension().selectedDataSources(), _this.dashboardName());\n    };\n\n    this.dashboardName(_default_1.getLocalizationById('DashboardWebStringId.NewDashboard'));\n    this.createNewDashboardDisabled = ko.computed(function () {\n      return !_this.dashboardName() || !_this.accessibleDataSourcesExtension() || _this.accessibleDataSourcesExtension().selectedDataSources().length === 0;\n    });\n  }\n\n  return CreateNewDashboardViewModel;\n}();","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/designer/extensions/create-dashboard.js"],"names":["Object","defineProperty","exports","value","CreateDashboardExtension","analytics_utils_1","require","ko","control_options_1","_default_1","dashboard_1","toolbox_items_1","name","nameAlias","dashboardControl","_this","showCreateNewDashboard","extension","findExtension","selectMenuItem","_newDashboardMenuItem","_createNewDashboard","dataSources","dashboardName","toolboxExtension","menuVisible","createDashboardCallback","dashboardPropotype","Dashboard","title","text","forEach","dataSource","newDataSource","_createDataSource","ModelSerializer","useRefs","serialize","push","performCreateDashboard","getJSON","saveExtension","ensureDashboardSaved","accessibleDataSourcesExtension","computed","clickHandler","template","data","CreateNewDashboardViewModel","DashboardMenuItem","prototype","start","menuItems","_emptyControlTemplates","isDesignMode","stop","remove","filter","temlp","dashboardJson","notificationController","showState","getLocalizationById","remoteService","postToServer","_endpointCollection","dashboardUrls","GetDashboardsAction","dashboard","then","result","status","query","initializeDashboard","request","showError","designerExtensions","options","extensionNameMap","_newDashboardCallback","observable","selectionMode","createNewDashboard","selectedDataSources","createNewDashboardDisabled","length"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (create-dashboard.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateDashboardExtension = void 0;\nvar analytics_utils_1 = require(\"@devexpress/analytics-core/analytics-utils\");\nvar ko = require(\"knockout\");\nvar control_options_1 = require(\"../../common/control-options\");\nvar _default_1 = require(\"../../data/localization/_default\");\nvar dashboard_1 = require(\"../../model/dashboard\");\nvar toolbox_items_1 = require(\"../toolbox-extension/toolbox-items\");\nvar name = 'create-dashboard';\nvar nameAlias = 'createDashboard';\nvar CreateDashboardExtension = (function () {\n    function CreateDashboardExtension(dashboardControl) {\n        var _this = this;\n        this.dashboardControl = dashboardControl;\n        this.name = name;\n        this.showCreateNewDashboard = function () {\n            var extension = _this.dashboardControl.findExtension('toolbox');\n            if (extension) {\n                extension.selectMenuItem(_this._newDashboardMenuItem);\n            }\n        };\n        this._createNewDashboard = function (dataSources, dashboardName) {\n            var toolboxExtension = _this.dashboardControl.findExtension('toolbox');\n            if (toolboxExtension) {\n                toolboxExtension.menuVisible(false);\n            }\n            var createDashboardCallback = function () {\n                var dashboardPropotype = new dashboard_1.Dashboard({});\n                dashboardPropotype.title.text(dashboardName);\n                dataSources.forEach(function (dataSource) {\n                    var newDataSource = dashboard_1.Dashboard._createDataSource(new analytics_utils_1.ModelSerializer({ useRefs: false }).serialize(dataSource), new analytics_utils_1.ModelSerializer());\n                    dashboardPropotype.dataSources.push(newDataSource);\n                });\n                _this.performCreateDashboard(dashboardName, dashboardPropotype.getJSON());\n            };\n            var saveExtension = _this.dashboardControl.findExtension('save-dashboard');\n            if (saveExtension) {\n                saveExtension.ensureDashboardSaved(createDashboardCallback);\n            }\n            else {\n                createDashboardCallback();\n            }\n        };\n        var accessibleDataSourcesExtension = ko.computed(function () { return _this.dashboardControl.findExtension('available-data-sources'); });\n        var clickHandler = function () {\n            _this._newDashboardMenuItem.template = 'dx-dashboard-form-new';\n            _this._newDashboardMenuItem.data = new CreateNewDashboardViewModel(accessibleDataSourcesExtension, _this._createNewDashboard);\n        };\n        this._newDashboardMenuItem = new toolbox_items_1.DashboardMenuItem(this.name, 'DashboardWebStringId.DashboardMenuNew', 105, 78, function () { return clickHandler(); });\n    }\n    CreateDashboardExtension.prototype.start = function () {\n        var extension = this.dashboardControl.findExtension('toolbox');\n        if (extension) {\n            extension.menuItems.push(this._newDashboardMenuItem);\n        }\n        this.dashboardControl._emptyControlTemplates.push({\n            name: 'dx-dashboard-add-new-dashboard',\n            data: {\n                isDesignMode: this.dashboardControl.isDesignMode,\n                showCreateNewDashboard: this.showCreateNewDashboard\n            }\n        });\n    };\n    CreateDashboardExtension.prototype.stop = function () {\n        var extension = this.dashboardControl.findExtension('toolbox');\n        if (extension) {\n            extension.menuItems.remove(this._newDashboardMenuItem);\n        }\n        var template = this.dashboardControl._emptyControlTemplates().filter(function (temlp) { return temlp.name === 'dx-dashboard-add-new-dashboard'; })[0];\n        if (template) {\n            this.dashboardControl._emptyControlTemplates.remove(template);\n        }\n    };\n    CreateDashboardExtension.prototype.performCreateDashboard = function (dashboardName, dashboardJson) {\n        var _this = this;\n        this.dashboardControl.notificationController.showState(_default_1.getLocalizationById('DashboardWebStringId.Notification.DashboardLoading'));\n        return this.dashboardControl.remoteService.postToServer(this.dashboardControl._endpointCollection.dashboardUrls.GetDashboardsAction, { name: dashboardName, dashboard: dashboardJson })\n            .then(function (result, status, query) {\n            _this.dashboardControl.initializeDashboard(result['dashboardId'], result['dashboard'].Dashboard);\n        }, function (request) {\n            _this.dashboardControl.notificationController.showError(_default_1.getLocalizationById('DashboardWebStringId.Notification.NewDashboardCannotBeCreated'), request);\n        });\n    };\n    return CreateDashboardExtension;\n}());\nexports.CreateDashboardExtension = CreateDashboardExtension;\ncontrol_options_1.designerExtensions[name] = function (dashboardControl, options) { return new CreateDashboardExtension(dashboardControl); };\ncontrol_options_1.extensionNameMap[name] = nameAlias;\nvar CreateNewDashboardViewModel = (function () {\n    function CreateNewDashboardViewModel(accessibleDataSourcesExtension, _newDashboardCallback) {\n        var _this = this;\n        this.accessibleDataSourcesExtension = accessibleDataSourcesExtension;\n        this._newDashboardCallback = _newDashboardCallback;\n        this.dashboardName = ko.observable();\n        this.selectionMode = 'single';\n        this.createNewDashboard = function () {\n            _this._newDashboardCallback(_this.accessibleDataSourcesExtension().selectedDataSources(), _this.dashboardName());\n        };\n        this.dashboardName(_default_1.getLocalizationById('DashboardWebStringId.NewDashboard'));\n        this.createNewDashboardDisabled = ko.computed(function () {\n            return !_this.dashboardName() || !_this.accessibleDataSourcesExtension() || _this.accessibleDataSourcesExtension().selectedDataSources().length === 0;\n        });\n    }\n    return CreateNewDashboardViewModel;\n}());\n"]},"metadata":{},"sourceType":"script"}