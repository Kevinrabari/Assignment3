{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/slider/ui.slider_handle.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport SliderTooltip from \"./ui.slider_tooltip\";\nimport { extend } from \"../../core/utils/extend\";\nvar SLIDER_HANDLE_CLASS = \"dx-slider-handle\";\nvar SliderHandle = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      hoverStateEnabled: false,\n      value: 0,\n      tooltip: {\n        enabled: false,\n        format: value => value,\n        position: \"top\",\n        showMode: \"onHover\"\n      }\n    });\n  },\n  _initMarkup: function () {\n    this.callBase();\n    this.$element().addClass(SLIDER_HANDLE_CLASS);\n    this.setAria({\n      role: \"slider\",\n      valuenow: this.option(\"value\")\n    });\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderTooltip();\n  },\n  _renderTooltip: function () {\n    var {\n      tooltip: tooltip,\n      value: value\n    } = this.option();\n    var {\n      position: position,\n      format: format,\n      enabled: enabled,\n      showMode: showMode\n    } = tooltip;\n    var $sliderTooltip = $(\"<div>\");\n    this._sliderTooltip = this._createComponent($sliderTooltip, SliderTooltip, {\n      target: this.$element(),\n      container: $sliderTooltip,\n      position: position,\n      visible: enabled,\n      showMode: showMode,\n      format: format,\n      value: value\n    });\n  },\n  _clean: function () {\n    this.callBase();\n    this._sliderTooltip = null;\n  },\n\n  _updateTooltipOptions(args) {\n    var _this$_sliderTooltip;\n\n    var tooltipOptions = Widget.getOptionsFromContainer(args);\n\n    this._setWidgetOption(\"_sliderTooltip\", [tooltipOptions]);\n\n    null === (_this$_sliderTooltip = this._sliderTooltip) || void 0 === _this$_sliderTooltip ? void 0 : _this$_sliderTooltip.option(\"visible\", tooltipOptions.enabled);\n  },\n\n  _optionChanged: function (args) {\n    var {\n      name: name,\n      value: value\n    } = args;\n\n    switch (name) {\n      case \"value\":\n        var _this$_sliderTooltip2;\n\n        null === (_this$_sliderTooltip2 = this._sliderTooltip) || void 0 === _this$_sliderTooltip2 ? void 0 : _this$_sliderTooltip2.option(\"value\", value);\n        this.setAria(\"valuenow\", value);\n        break;\n\n      case \"tooltip\":\n        this._updateTooltipOptions(args);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  updateTooltipPosition: function () {\n    var _this$_sliderTooltip3;\n\n    null === (_this$_sliderTooltip3 = this._sliderTooltip) || void 0 === _this$_sliderTooltip3 ? void 0 : _this$_sliderTooltip3.updatePosition();\n  },\n  repaint: function () {\n    var _this$_sliderTooltip4;\n\n    null === (_this$_sliderTooltip4 = this._sliderTooltip) || void 0 === _this$_sliderTooltip4 ? void 0 : _this$_sliderTooltip4.repaint();\n  }\n});\nexport default SliderHandle;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/slider/ui.slider_handle.js"],"names":["$","Widget","SliderTooltip","extend","SLIDER_HANDLE_CLASS","SliderHandle","inherit","_getDefaultOptions","callBase","hoverStateEnabled","value","tooltip","enabled","format","position","showMode","_initMarkup","$element","addClass","setAria","role","valuenow","option","_render","_renderTooltip","$sliderTooltip","_sliderTooltip","_createComponent","target","container","visible","_clean","_updateTooltipOptions","args","_this$_sliderTooltip","tooltipOptions","getOptionsFromContainer","_setWidgetOption","_optionChanged","name","_this$_sliderTooltip2","updateTooltipPosition","_this$_sliderTooltip3","updatePosition","repaint","_this$_sliderTooltip4"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/slider/ui.slider_handle.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport SliderTooltip from \"./ui.slider_tooltip\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar SLIDER_HANDLE_CLASS = \"dx-slider-handle\";\r\nvar SliderHandle = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: false,\r\n            value: 0,\r\n            tooltip: {\r\n                enabled: false,\r\n                format: value => value,\r\n                position: \"top\",\r\n                showMode: \"onHover\"\r\n            }\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(SLIDER_HANDLE_CLASS);\r\n        this.setAria({\r\n            role: \"slider\",\r\n            valuenow: this.option(\"value\")\r\n        })\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderTooltip()\r\n    },\r\n    _renderTooltip: function() {\r\n        var {\r\n            tooltip: tooltip,\r\n            value: value\r\n        } = this.option();\r\n        var {\r\n            position: position,\r\n            format: format,\r\n            enabled: enabled,\r\n            showMode: showMode\r\n        } = tooltip;\r\n        var $sliderTooltip = $(\"<div>\");\r\n        this._sliderTooltip = this._createComponent($sliderTooltip, SliderTooltip, {\r\n            target: this.$element(),\r\n            container: $sliderTooltip,\r\n            position: position,\r\n            visible: enabled,\r\n            showMode: showMode,\r\n            format: format,\r\n            value: value\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._sliderTooltip = null\r\n    },\r\n    _updateTooltipOptions(args) {\r\n        var _this$_sliderTooltip;\r\n        var tooltipOptions = Widget.getOptionsFromContainer(args);\r\n        this._setWidgetOption(\"_sliderTooltip\", [tooltipOptions]);\r\n        null === (_this$_sliderTooltip = this._sliderTooltip) || void 0 === _this$_sliderTooltip ? void 0 : _this$_sliderTooltip.option(\"visible\", tooltipOptions.enabled)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"value\":\r\n                var _this$_sliderTooltip2;\r\n                null === (_this$_sliderTooltip2 = this._sliderTooltip) || void 0 === _this$_sliderTooltip2 ? void 0 : _this$_sliderTooltip2.option(\"value\", value);\r\n                this.setAria(\"valuenow\", value);\r\n                break;\r\n            case \"tooltip\":\r\n                this._updateTooltipOptions(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    updateTooltipPosition: function() {\r\n        var _this$_sliderTooltip3;\r\n        null === (_this$_sliderTooltip3 = this._sliderTooltip) || void 0 === _this$_sliderTooltip3 ? void 0 : _this$_sliderTooltip3.updatePosition()\r\n    },\r\n    repaint: function() {\r\n        var _this$_sliderTooltip4;\r\n        null === (_this$_sliderTooltip4 = this._sliderTooltip) || void 0 === _this$_sliderTooltip4 ? void 0 : _this$_sliderTooltip4.repaint()\r\n    }\r\n});\r\nexport default SliderHandle;\r\n"]},"metadata":{},"sourceType":"module"}