{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/splitter.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport Widget from \"./widget/ui.widget\";\nimport domAdapter from \"../core/dom_adapter\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport pointerEvents from \"../events/pointer\";\nimport { getWindow } from \"../core/utils/window\";\nimport { addNamespace } from \"../events/utils/index\";\nvar window = getWindow();\nvar SPLITTER_CLASS = \"dx-splitter\";\nvar SPLITTER_WRAPPER_CLASS = \"\".concat(SPLITTER_CLASS, \"-wrapper\");\nvar SPLITTER_INACTIVE_CLASS = \"\".concat(SPLITTER_CLASS, \"-inactive\");\nvar SPLITTER_BORDER_CLASS = \"\".concat(SPLITTER_CLASS, \"-border\");\nvar SPLITTER_INITIAL_STATE_CLASS = \"\".concat(SPLITTER_CLASS, \"-initial\");\nvar STATE_DISABLED_CLASS = \"dx-state-disabled\";\nvar SPLITTER_MODULE_NAMESPACE = \"dxSplitterResizing\";\nvar SPLITTER_POINTER_DOWN_EVENT_NAME = addNamespace(pointerEvents.down, SPLITTER_MODULE_NAMESPACE);\nvar SPLITTER_POINTER_MOVE_EVENT_NAME = addNamespace(pointerEvents.move, SPLITTER_MODULE_NAMESPACE);\nvar SPLITTER_POINTER_UP_EVENT_NAME = addNamespace(pointerEvents.up, SPLITTER_MODULE_NAMESPACE);\nexport default class SplitterControl extends Widget {\n  _initMarkup() {\n    super._initMarkup();\n\n    this._initActions();\n\n    this._$container = this.option(\"container\");\n    this._$leftElement = this.option(\"leftElement\");\n    this._$rightElement = this.option(\"rightElement\");\n    this.$element().addClass(SPLITTER_WRAPPER_CLASS).addClass(SPLITTER_INITIAL_STATE_CLASS);\n    this._$splitterBorder = $(\"<div>\").addClass(SPLITTER_BORDER_CLASS).appendTo(this.$element());\n    this._$splitter = $(\"<div>\").addClass(SPLITTER_CLASS).addClass(SPLITTER_INACTIVE_CLASS).appendTo(this._$splitterBorder);\n  }\n\n  _initActions() {\n    this._actions = {\n      onApplyPanelSize: this._createActionByOption(\"onApplyPanelSize\"),\n      onActiveStateChanged: this._createActionByOption(\"onActiveStateChanged\")\n    };\n  }\n\n  _render() {\n    super._render();\n\n    this._detachEventHandlers();\n\n    this._attachEventHandlers();\n  }\n\n  _clean() {\n    this._detachEventHandlers();\n\n    super._clean();\n  }\n\n  _attachEventHandlers() {\n    var document = domAdapter.getDocument();\n    eventsEngine.on(this._$splitterBorder, SPLITTER_POINTER_DOWN_EVENT_NAME, this._onMouseDownHandler.bind(this));\n    eventsEngine.on(document, SPLITTER_POINTER_MOVE_EVENT_NAME, this._onMouseMoveHandler.bind(this));\n    eventsEngine.on(document, SPLITTER_POINTER_UP_EVENT_NAME, this._onMouseUpHandler.bind(this));\n  }\n\n  _detachEventHandlers() {\n    var document = domAdapter.getDocument();\n    eventsEngine.off(this._$splitterBorder, SPLITTER_POINTER_DOWN_EVENT_NAME);\n    eventsEngine.off(document, SPLITTER_POINTER_MOVE_EVENT_NAME);\n    eventsEngine.off(document, SPLITTER_POINTER_UP_EVENT_NAME);\n  }\n\n  _dimensionChanged(dimension) {\n    if (!dimension || \"height\" !== dimension) {\n      this._containerWidth = this._$container.get(0).clientWidth;\n\n      this._setSplitterPositionLeft({\n        needUpdatePanels: true,\n        usePercentagePanelsWidth: true\n      });\n    }\n  }\n\n  _onMouseDownHandler(e) {\n    e.preventDefault();\n    this._offsetX = e.pageX - this._$splitterBorder.offset().left <= this._getSplitterBorderWidth() ? e.pageX - this._$splitterBorder.offset().left : 0;\n    this._containerWidth = this._$container.get(0).clientWidth;\n    this.$element().removeClass(SPLITTER_INITIAL_STATE_CLASS);\n\n    this._toggleActive(true);\n\n    this._setSplitterPositionLeft({\n      needUpdatePanels: true\n    });\n  }\n\n  _onMouseMoveHandler(e) {\n    if (!this._isSplitterActive) {\n      return;\n    }\n\n    this._setSplitterPositionLeft({\n      splitterPositionLeft: this._getNewSplitterPositionLeft(e),\n      needUpdatePanels: true\n    });\n  }\n\n  _onMouseUpHandler() {\n    if (!this._isSplitterActive) {\n      return;\n    }\n\n    this._leftPanelPercentageWidth = null;\n\n    this._toggleActive(false);\n\n    this._setSplitterPositionLeft({\n      needUpdatePanels: true,\n      usePercentagePanelsWidth: true\n    });\n  }\n\n  _getNewSplitterPositionLeft(e) {\n    var newSplitterPositionLeft = e.pageX - this._getContainerLeftOffset() - this._offsetX;\n\n    newSplitterPositionLeft = Math.max(0 - this._getSplitterOffset(), newSplitterPositionLeft);\n    newSplitterPositionLeft = Math.min(this._containerWidth - this._getSplitterOffset() - this._getSplitterWidth(), newSplitterPositionLeft);\n    return newSplitterPositionLeft;\n  }\n\n  _getContainerLeftOffset() {\n    var offsetLeft = this._$container.offset().left;\n\n    if (window) {\n      var style = window.getComputedStyle(this._$container.get(0));\n      var paddingLeft = parseFloat(style.paddingLeft) || 0;\n      var borderLeft = parseFloat(style.borderLeftWidth) || 0;\n      offsetLeft += paddingLeft + borderLeft;\n    }\n\n    return offsetLeft;\n  }\n\n  _getSplitterOffset() {\n    return (this._getSplitterBorderWidth() - this._getSplitterWidth()) / 2;\n  }\n\n  _getSplitterWidth() {\n    return this._$splitter.get(0).clientWidth;\n  }\n\n  _getSplitterBorderWidth() {\n    return this._$splitterBorder.get(0).clientWidth;\n  }\n\n  _getLeftPanelWidth() {\n    return this._$leftElement.get(0).clientWidth;\n  }\n\n  getSplitterBorderElement() {\n    return this._$splitterBorder;\n  }\n\n  _toggleActive(isActive) {\n    this.$element().toggleClass(SPLITTER_INACTIVE_CLASS, !isActive);\n\n    this._$splitter.toggleClass(SPLITTER_INACTIVE_CLASS, !isActive);\n\n    this._isSplitterActive = isActive;\n\n    this._actions.onActiveStateChanged({\n      isActive: isActive\n    });\n  }\n\n  toggleDisabled(isDisabled) {\n    this.$element().toggleClass(STATE_DISABLED_CLASS, isDisabled);\n\n    this._$splitter.toggleClass(STATE_DISABLED_CLASS, isDisabled);\n  }\n\n  isSplitterMoved() {\n    return !this.$element().hasClass(SPLITTER_INITIAL_STATE_CLASS);\n  }\n\n  disableSplitterCalculation(value) {\n    this._isSplitterCalculationDisabled = value;\n  }\n\n  _setSplitterPositionLeft() {\n    var {\n      splitterPositionLeft = null,\n      needUpdatePanels = false,\n      usePercentagePanelsWidth = false\n    } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n    splitterPositionLeft = splitterPositionLeft || this._getLeftPanelWidth() - this._getSplitterOffset();\n\n    var leftPanelWidth = splitterPositionLeft + this._getSplitterOffset();\n\n    var rightPanelWidth = this._containerWidth - leftPanelWidth;\n\n    if (!this._isSplitterCalculationDisabled) {\n      this.$element().css(\"left\", splitterPositionLeft);\n    }\n\n    this._leftPanelPercentageWidth = this._leftPanelPercentageWidth || this._convertToPercentage(leftPanelWidth);\n\n    var rightPanelPercentageWidth = this._convertToPercentage(this._containerWidth - this._convertToPixels(this._leftPanelPercentageWidth));\n\n    if (!needUpdatePanels) {\n      return;\n    }\n\n    this._actions.onApplyPanelSize({\n      leftPanelWidth: usePercentagePanelsWidth ? \"\".concat(this._leftPanelPercentageWidth, \"%\") : leftPanelWidth,\n      rightPanelWidth: usePercentagePanelsWidth ? \"\".concat(rightPanelPercentageWidth, \"%\") : rightPanelWidth\n    });\n  }\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"initialLeftPanelWidth\":\n        this._leftPanelPercentageWidth = this._convertToPercentage(args.value);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"leftElement\":\n        this.repaint();\n        break;\n\n      case \"onActiveStateChanged\":\n      case \"onApplyPanelSize\":\n        this._actions[args.name] = this._createActionByOption(args.name);\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _convertToPercentage(pixelWidth) {\n    return pixelWidth / this._$container.get(0).clientWidth * 100;\n  }\n\n  _convertToPixels(percentageWidth) {\n    return percentageWidth / 100 * this._$container.get(0).clientWidth;\n  }\n\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/splitter.js"],"names":["$","Widget","domAdapter","eventsEngine","pointerEvents","getWindow","addNamespace","window","SPLITTER_CLASS","SPLITTER_WRAPPER_CLASS","concat","SPLITTER_INACTIVE_CLASS","SPLITTER_BORDER_CLASS","SPLITTER_INITIAL_STATE_CLASS","STATE_DISABLED_CLASS","SPLITTER_MODULE_NAMESPACE","SPLITTER_POINTER_DOWN_EVENT_NAME","down","SPLITTER_POINTER_MOVE_EVENT_NAME","move","SPLITTER_POINTER_UP_EVENT_NAME","up","SplitterControl","_initMarkup","_initActions","_$container","option","_$leftElement","_$rightElement","$element","addClass","_$splitterBorder","appendTo","_$splitter","_actions","onApplyPanelSize","_createActionByOption","onActiveStateChanged","_render","_detachEventHandlers","_attachEventHandlers","_clean","document","getDocument","on","_onMouseDownHandler","bind","_onMouseMoveHandler","_onMouseUpHandler","off","_dimensionChanged","dimension","_containerWidth","get","clientWidth","_setSplitterPositionLeft","needUpdatePanels","usePercentagePanelsWidth","e","preventDefault","_offsetX","pageX","offset","left","_getSplitterBorderWidth","removeClass","_toggleActive","_isSplitterActive","splitterPositionLeft","_getNewSplitterPositionLeft","_leftPanelPercentageWidth","newSplitterPositionLeft","_getContainerLeftOffset","Math","max","_getSplitterOffset","min","_getSplitterWidth","offsetLeft","style","getComputedStyle","paddingLeft","parseFloat","borderLeft","borderLeftWidth","_getLeftPanelWidth","getSplitterBorderElement","isActive","toggleClass","toggleDisabled","isDisabled","isSplitterMoved","hasClass","disableSplitterCalculation","value","_isSplitterCalculationDisabled","arguments","length","leftPanelWidth","rightPanelWidth","css","_convertToPercentage","rightPanelPercentageWidth","_convertToPixels","_optionChanged","args","name","repaint","pixelWidth","percentageWidth"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/splitter.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport pointerEvents from \"../events/pointer\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    addNamespace\r\n} from \"../events/utils/index\";\r\nvar window = getWindow();\r\nvar SPLITTER_CLASS = \"dx-splitter\";\r\nvar SPLITTER_WRAPPER_CLASS = \"\".concat(SPLITTER_CLASS, \"-wrapper\");\r\nvar SPLITTER_INACTIVE_CLASS = \"\".concat(SPLITTER_CLASS, \"-inactive\");\r\nvar SPLITTER_BORDER_CLASS = \"\".concat(SPLITTER_CLASS, \"-border\");\r\nvar SPLITTER_INITIAL_STATE_CLASS = \"\".concat(SPLITTER_CLASS, \"-initial\");\r\nvar STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar SPLITTER_MODULE_NAMESPACE = \"dxSplitterResizing\";\r\nvar SPLITTER_POINTER_DOWN_EVENT_NAME = addNamespace(pointerEvents.down, SPLITTER_MODULE_NAMESPACE);\r\nvar SPLITTER_POINTER_MOVE_EVENT_NAME = addNamespace(pointerEvents.move, SPLITTER_MODULE_NAMESPACE);\r\nvar SPLITTER_POINTER_UP_EVENT_NAME = addNamespace(pointerEvents.up, SPLITTER_MODULE_NAMESPACE);\r\nexport default class SplitterControl extends Widget {\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._initActions();\r\n        this._$container = this.option(\"container\");\r\n        this._$leftElement = this.option(\"leftElement\");\r\n        this._$rightElement = this.option(\"rightElement\");\r\n        this.$element().addClass(SPLITTER_WRAPPER_CLASS).addClass(SPLITTER_INITIAL_STATE_CLASS);\r\n        this._$splitterBorder = $(\"<div>\").addClass(SPLITTER_BORDER_CLASS).appendTo(this.$element());\r\n        this._$splitter = $(\"<div>\").addClass(SPLITTER_CLASS).addClass(SPLITTER_INACTIVE_CLASS).appendTo(this._$splitterBorder)\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onApplyPanelSize: this._createActionByOption(\"onApplyPanelSize\"),\r\n            onActiveStateChanged: this._createActionByOption(\"onActiveStateChanged\")\r\n        }\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._detachEventHandlers();\r\n        this._attachEventHandlers()\r\n    }\r\n    _clean() {\r\n        this._detachEventHandlers();\r\n        super._clean()\r\n    }\r\n    _attachEventHandlers() {\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(this._$splitterBorder, SPLITTER_POINTER_DOWN_EVENT_NAME, this._onMouseDownHandler.bind(this));\r\n        eventsEngine.on(document, SPLITTER_POINTER_MOVE_EVENT_NAME, this._onMouseMoveHandler.bind(this));\r\n        eventsEngine.on(document, SPLITTER_POINTER_UP_EVENT_NAME, this._onMouseUpHandler.bind(this))\r\n    }\r\n    _detachEventHandlers() {\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(this._$splitterBorder, SPLITTER_POINTER_DOWN_EVENT_NAME);\r\n        eventsEngine.off(document, SPLITTER_POINTER_MOVE_EVENT_NAME);\r\n        eventsEngine.off(document, SPLITTER_POINTER_UP_EVENT_NAME)\r\n    }\r\n    _dimensionChanged(dimension) {\r\n        if (!dimension || \"height\" !== dimension) {\r\n            this._containerWidth = this._$container.get(0).clientWidth;\r\n            this._setSplitterPositionLeft({\r\n                needUpdatePanels: true,\r\n                usePercentagePanelsWidth: true\r\n            })\r\n        }\r\n    }\r\n    _onMouseDownHandler(e) {\r\n        e.preventDefault();\r\n        this._offsetX = e.pageX - this._$splitterBorder.offset().left <= this._getSplitterBorderWidth() ? e.pageX - this._$splitterBorder.offset().left : 0;\r\n        this._containerWidth = this._$container.get(0).clientWidth;\r\n        this.$element().removeClass(SPLITTER_INITIAL_STATE_CLASS);\r\n        this._toggleActive(true);\r\n        this._setSplitterPositionLeft({\r\n            needUpdatePanels: true\r\n        })\r\n    }\r\n    _onMouseMoveHandler(e) {\r\n        if (!this._isSplitterActive) {\r\n            return\r\n        }\r\n        this._setSplitterPositionLeft({\r\n            splitterPositionLeft: this._getNewSplitterPositionLeft(e),\r\n            needUpdatePanels: true\r\n        })\r\n    }\r\n    _onMouseUpHandler() {\r\n        if (!this._isSplitterActive) {\r\n            return\r\n        }\r\n        this._leftPanelPercentageWidth = null;\r\n        this._toggleActive(false);\r\n        this._setSplitterPositionLeft({\r\n            needUpdatePanels: true,\r\n            usePercentagePanelsWidth: true\r\n        })\r\n    }\r\n    _getNewSplitterPositionLeft(e) {\r\n        var newSplitterPositionLeft = e.pageX - this._getContainerLeftOffset() - this._offsetX;\r\n        newSplitterPositionLeft = Math.max(0 - this._getSplitterOffset(), newSplitterPositionLeft);\r\n        newSplitterPositionLeft = Math.min(this._containerWidth - this._getSplitterOffset() - this._getSplitterWidth(), newSplitterPositionLeft);\r\n        return newSplitterPositionLeft\r\n    }\r\n    _getContainerLeftOffset() {\r\n        var offsetLeft = this._$container.offset().left;\r\n        if (window) {\r\n            var style = window.getComputedStyle(this._$container.get(0));\r\n            var paddingLeft = parseFloat(style.paddingLeft) || 0;\r\n            var borderLeft = parseFloat(style.borderLeftWidth) || 0;\r\n            offsetLeft += paddingLeft + borderLeft\r\n        }\r\n        return offsetLeft\r\n    }\r\n    _getSplitterOffset() {\r\n        return (this._getSplitterBorderWidth() - this._getSplitterWidth()) / 2\r\n    }\r\n    _getSplitterWidth() {\r\n        return this._$splitter.get(0).clientWidth\r\n    }\r\n    _getSplitterBorderWidth() {\r\n        return this._$splitterBorder.get(0).clientWidth\r\n    }\r\n    _getLeftPanelWidth() {\r\n        return this._$leftElement.get(0).clientWidth\r\n    }\r\n    getSplitterBorderElement() {\r\n        return this._$splitterBorder\r\n    }\r\n    _toggleActive(isActive) {\r\n        this.$element().toggleClass(SPLITTER_INACTIVE_CLASS, !isActive);\r\n        this._$splitter.toggleClass(SPLITTER_INACTIVE_CLASS, !isActive);\r\n        this._isSplitterActive = isActive;\r\n        this._actions.onActiveStateChanged({\r\n            isActive: isActive\r\n        })\r\n    }\r\n    toggleDisabled(isDisabled) {\r\n        this.$element().toggleClass(STATE_DISABLED_CLASS, isDisabled);\r\n        this._$splitter.toggleClass(STATE_DISABLED_CLASS, isDisabled)\r\n    }\r\n    isSplitterMoved() {\r\n        return !this.$element().hasClass(SPLITTER_INITIAL_STATE_CLASS)\r\n    }\r\n    disableSplitterCalculation(value) {\r\n        this._isSplitterCalculationDisabled = value\r\n    }\r\n    _setSplitterPositionLeft() {\r\n        var {\r\n            splitterPositionLeft: splitterPositionLeft = null,\r\n            needUpdatePanels: needUpdatePanels = false,\r\n            usePercentagePanelsWidth: usePercentagePanelsWidth = false\r\n        } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\r\n        splitterPositionLeft = splitterPositionLeft || this._getLeftPanelWidth() - this._getSplitterOffset();\r\n        var leftPanelWidth = splitterPositionLeft + this._getSplitterOffset();\r\n        var rightPanelWidth = this._containerWidth - leftPanelWidth;\r\n        if (!this._isSplitterCalculationDisabled) {\r\n            this.$element().css(\"left\", splitterPositionLeft)\r\n        }\r\n        this._leftPanelPercentageWidth = this._leftPanelPercentageWidth || this._convertToPercentage(leftPanelWidth);\r\n        var rightPanelPercentageWidth = this._convertToPercentage(this._containerWidth - this._convertToPixels(this._leftPanelPercentageWidth));\r\n        if (!needUpdatePanels) {\r\n            return\r\n        }\r\n        this._actions.onApplyPanelSize({\r\n            leftPanelWidth: usePercentagePanelsWidth ? \"\".concat(this._leftPanelPercentageWidth, \"%\") : leftPanelWidth,\r\n            rightPanelWidth: usePercentagePanelsWidth ? \"\".concat(rightPanelPercentageWidth, \"%\") : rightPanelWidth\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"initialLeftPanelWidth\":\r\n                this._leftPanelPercentageWidth = this._convertToPercentage(args.value);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"leftElement\":\r\n                this.repaint();\r\n                break;\r\n            case \"onActiveStateChanged\":\r\n            case \"onApplyPanelSize\":\r\n                this._actions[args.name] = this._createActionByOption(args.name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _convertToPercentage(pixelWidth) {\r\n        return pixelWidth / this._$container.get(0).clientWidth * 100\r\n    }\r\n    _convertToPixels(percentageWidth) {\r\n        return percentageWidth / 100 * this._$container.get(0).clientWidth\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}