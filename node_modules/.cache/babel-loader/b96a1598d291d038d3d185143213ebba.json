{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.task.area.container.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dxScrollView from \"../scroll_view\";\nexport class TaskAreaContainer {\n  constructor(element, ganttViewWidget) {\n    this._element = element;\n    this._scrollView = ganttViewWidget._createComponent(this._element, dxScrollView, {\n      scrollByContent: false,\n      scrollByThumb: true,\n      showScrollbar: \"onHover\",\n      direction: \"both\",\n      onScroll: () => {\n        ganttViewWidget.updateView();\n      }\n    });\n  }\n\n  get scrollTop() {\n    return this._scrollView.scrollTop();\n  }\n\n  set scrollTop(value) {\n    var diff = value - this._scrollView.scrollTop();\n\n    if (0 !== diff) {\n      this._scrollView.scrollBy({\n        left: 0,\n        top: diff\n      });\n    }\n  }\n\n  get scrollLeft() {\n    return this._scrollView.scrollLeft();\n  }\n\n  set scrollLeft(value) {\n    var diff = value - this._scrollView.scrollLeft();\n\n    if (0 !== diff) {\n      this._scrollView.scrollBy({\n        left: diff,\n        top: 0\n      });\n    }\n  }\n\n  get scrollWidth() {\n    return this._scrollView.scrollWidth();\n  }\n\n  get scrollHeight() {\n    return this._scrollView.scrollHeight();\n  }\n\n  get isExternal() {\n    return true;\n  }\n\n  getWidth() {\n    return this._element.offsetWidth;\n  }\n\n  getHeight() {\n    return this._element.offsetHeight;\n  }\n\n  getElement() {\n    return this._element;\n  }\n\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/gantt/ui.gantt.task.area.container.js"],"names":["dxScrollView","TaskAreaContainer","constructor","element","ganttViewWidget","_element","_scrollView","_createComponent","scrollByContent","scrollByThumb","showScrollbar","direction","onScroll","updateView","scrollTop","value","diff","scrollBy","left","top","scrollLeft","scrollWidth","scrollHeight","isExternal","getWidth","offsetWidth","getHeight","offsetHeight","getElement"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAO,MAAMC,iBAAN,CAAwB;AAC3BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,eAAV,EAA2B;AAClC,SAAKC,QAAL,GAAgBF,OAAhB;AACA,SAAKG,WAAL,GAAmBF,eAAe,CAACG,gBAAhB,CAAiC,KAAKF,QAAtC,EAAgDL,YAAhD,EAA8D;AAC7EQ,MAAAA,eAAe,EAAE,KAD4D;AAE7EC,MAAAA,aAAa,EAAE,IAF8D;AAG7EC,MAAAA,aAAa,EAAE,SAH8D;AAI7EC,MAAAA,SAAS,EAAE,MAJkE;AAK7EC,MAAAA,QAAQ,EAAE,MAAM;AACZR,QAAAA,eAAe,CAACS,UAAhB;AACH;AAP4E,KAA9D,CAAnB;AASH;;AACD,MAAIC,SAAJ,GAAgB;AACZ,WAAO,KAAKR,WAAL,CAAiBQ,SAAjB,EAAP;AACH;;AACD,MAAIA,SAAJ,CAAcC,KAAd,EAAqB;AACjB,QAAIC,IAAI,GAAGD,KAAK,GAAG,KAAKT,WAAL,CAAiBQ,SAAjB,EAAnB;;AACA,QAAI,MAAME,IAAV,EAAgB;AACZ,WAAKV,WAAL,CAAiBW,QAAjB,CAA0B;AACtBC,QAAAA,IAAI,EAAE,CADgB;AAEtBC,QAAAA,GAAG,EAAEH;AAFiB,OAA1B;AAIH;AACJ;;AACD,MAAII,UAAJ,GAAiB;AACb,WAAO,KAAKd,WAAL,CAAiBc,UAAjB,EAAP;AACH;;AACD,MAAIA,UAAJ,CAAeL,KAAf,EAAsB;AAClB,QAAIC,IAAI,GAAGD,KAAK,GAAG,KAAKT,WAAL,CAAiBc,UAAjB,EAAnB;;AACA,QAAI,MAAMJ,IAAV,EAAgB;AACZ,WAAKV,WAAL,CAAiBW,QAAjB,CAA0B;AACtBC,QAAAA,IAAI,EAAEF,IADgB;AAEtBG,QAAAA,GAAG,EAAE;AAFiB,OAA1B;AAIH;AACJ;;AACD,MAAIE,WAAJ,GAAkB;AACd,WAAO,KAAKf,WAAL,CAAiBe,WAAjB,EAAP;AACH;;AACD,MAAIC,YAAJ,GAAmB;AACf,WAAO,KAAKhB,WAAL,CAAiBgB,YAAjB,EAAP;AACH;;AACD,MAAIC,UAAJ,GAAiB;AACb,WAAO,IAAP;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKnB,QAAL,CAAcoB,WAArB;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKrB,QAAL,CAAcsB,YAArB;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKvB,QAAZ;AACH;;AAtD0B","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.task.area.container.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dxScrollView from \"../scroll_view\";\r\nexport class TaskAreaContainer {\r\n    constructor(element, ganttViewWidget) {\r\n        this._element = element;\r\n        this._scrollView = ganttViewWidget._createComponent(this._element, dxScrollView, {\r\n            scrollByContent: false,\r\n            scrollByThumb: true,\r\n            showScrollbar: \"onHover\",\r\n            direction: \"both\",\r\n            onScroll: () => {\r\n                ganttViewWidget.updateView()\r\n            }\r\n        })\r\n    }\r\n    get scrollTop() {\r\n        return this._scrollView.scrollTop()\r\n    }\r\n    set scrollTop(value) {\r\n        var diff = value - this._scrollView.scrollTop();\r\n        if (0 !== diff) {\r\n            this._scrollView.scrollBy({\r\n                left: 0,\r\n                top: diff\r\n            })\r\n        }\r\n    }\r\n    get scrollLeft() {\r\n        return this._scrollView.scrollLeft()\r\n    }\r\n    set scrollLeft(value) {\r\n        var diff = value - this._scrollView.scrollLeft();\r\n        if (0 !== diff) {\r\n            this._scrollView.scrollBy({\r\n                left: diff,\r\n                top: 0\r\n            })\r\n        }\r\n    }\r\n    get scrollWidth() {\r\n        return this._scrollView.scrollWidth()\r\n    }\r\n    get scrollHeight() {\r\n        return this._scrollView.scrollHeight()\r\n    }\r\n    get isExternal() {\r\n        return true\r\n    }\r\n    getWidth() {\r\n        return this._element.offsetWidth\r\n    }\r\n    getHeight() {\r\n        return this._element.offsetHeight\r\n    }\r\n    getElement() {\r\n        return this._element\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}