{"ast":null,"code":"/**\n* DevExpress Analytics (core\\elements\\size.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Size = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _metadata_1 = require(\"../_metadata\");\n\nvar Size = function () {\n  function Size(width, height) {\n    this.isPropertyDisabled = function (name) {\n      return void 0;\n    };\n\n    this.height = ko.observable(height).extend({\n      'dxdnum': {\n        min: 2\n      }\n    });\n    this.width = ko.observable(width).extend({\n      'dxdnum': {\n        min: 2\n      }\n    });\n  }\n\n  Size.prototype.getInfo = function () {\n    return _metadata_1.sizeFake;\n  };\n\n  Size.fromString = function (value) {\n    if (value === void 0) {\n      value = '0, 0';\n    }\n\n    var components = value.split(',');\n    return new Size(parseFloat(components[0]), parseFloat(components[1]));\n  };\n\n  Size.prototype.toString = function () {\n    return this.width() + ', ' + this.height();\n  };\n\n  Size.unitProperties = ['width', 'height'];\n  return Size;\n}();\n\nexports.Size = Size;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/core/elements/size.js"],"names":["Object","defineProperty","exports","value","Size","ko","require","_metadata_1","width","height","isPropertyDisabled","name","observable","extend","min","prototype","getInfo","sizeFake","fromString","components","split","parseFloat","toString","unitProperties"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,IAAR,GAAe,KAAK,CAApB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIF,IAAI,GAAI,YAAY;AACpB,WAASA,IAAT,CAAcI,KAAd,EAAqBC,MAArB,EAA6B;AACzB,SAAKC,kBAAL,GAA0B,UAAUC,IAAV,EAAgB;AAAE,aAAO,KAAK,CAAZ;AAAgB,KAA5D;;AACA,SAAKF,MAAL,GAAcJ,EAAE,CAACO,UAAH,CAAcH,MAAd,EAAsBI,MAAtB,CAA6B;AAAE,gBAAU;AAAEC,QAAAA,GAAG,EAAE;AAAP;AAAZ,KAA7B,CAAd;AACA,SAAKN,KAAL,GAAaH,EAAE,CAACO,UAAH,CAAcJ,KAAd,EAAqBK,MAArB,CAA4B;AAAE,gBAAU;AAAEC,QAAAA,GAAG,EAAE;AAAP;AAAZ,KAA5B,CAAb;AACH;;AACDV,EAAAA,IAAI,CAACW,SAAL,CAAeC,OAAf,GAAyB,YAAY;AACjC,WAAOT,WAAW,CAACU,QAAnB;AACH,GAFD;;AAGAb,EAAAA,IAAI,CAACc,UAAL,GAAkB,UAAUf,KAAV,EAAiB;AAC/B,QAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,MAAR;AAAiB;;AACzC,QAAIgB,UAAU,GAAGhB,KAAK,CAACiB,KAAN,CAAY,GAAZ,CAAjB;AACA,WAAO,IAAIhB,IAAJ,CAASiB,UAAU,CAACF,UAAU,CAAC,CAAD,CAAX,CAAnB,EAAoCE,UAAU,CAACF,UAAU,CAAC,CAAD,CAAX,CAA9C,CAAP;AACH,GAJD;;AAKAf,EAAAA,IAAI,CAACW,SAAL,CAAeO,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKd,KAAL,KAAe,IAAf,GAAsB,KAAKC,MAAL,EAA7B;AACH,GAFD;;AAGAL,EAAAA,IAAI,CAACmB,cAAL,GAAsB,CAAC,OAAD,EAAU,QAAV,CAAtB;AACA,SAAOnB,IAAP;AACH,CAnBW,EAAZ;;AAoBAF,OAAO,CAACE,IAAR,GAAeA,IAAf","sourcesContent":["/**\n* DevExpress Analytics (core\\elements\\size.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Size = void 0;\nvar ko = require(\"knockout\");\nvar _metadata_1 = require(\"../_metadata\");\nvar Size = (function () {\n    function Size(width, height) {\n        this.isPropertyDisabled = function (name) { return void 0; };\n        this.height = ko.observable(height).extend({ 'dxdnum': { min: 2 } });\n        this.width = ko.observable(width).extend({ 'dxdnum': { min: 2 } });\n    }\n    Size.prototype.getInfo = function () {\n        return _metadata_1.sizeFake;\n    };\n    Size.fromString = function (value) {\n        if (value === void 0) { value = '0, 0'; }\n        var components = value.split(',');\n        return new Size(parseFloat(components[0]), parseFloat(components[1]));\n    };\n    Size.prototype.toString = function () {\n        return this.width() + ', ' + this.height();\n    };\n    Size.unitProperties = ['width', 'height'];\n    return Size;\n}());\nexports.Size = Size;\n"]},"metadata":{},"sourceType":"script"}