{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.view.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport { getGanttViewCore } from \"./gantt_importer\";\nimport { TaskAreaContainer } from \"./ui.gantt.task.area.container\";\nimport dateLocalization from \"../../localization/date\";\nimport { isDefined } from \"../../core/utils/type\";\nimport messageLocalization from \"../../localization/message\";\nimport { format } from \"../../core/utils/string\";\nexport class GanttView extends Widget {\n  _init() {\n    super._init();\n\n    this._onSelectionChanged = this._createActionByOption(\"onSelectionChanged\");\n    this._onScroll = this._createActionByOption(\"onScroll\");\n    this._onDialogShowing = this._createActionByOption(\"onDialogShowing\");\n    this._onPopupMenuShowing = this._createActionByOption(\"onPopupMenuShowing\");\n    this._onPopupMenuHiding = this._createActionByOption(\"onPopupMenuHiding\");\n    this._expandAll = this._createActionByOption(\"onExpandAll\");\n    this._collapseAll = this._createActionByOption(\"onCollapseAll\");\n    this._taskClick = this._createActionByOption(\"onTaskClick\");\n    this._taskDblClick = this._createActionByOption(\"onTaskDblClick\");\n    this._onAdjustControl = this._createActionByOption(\"onAdjustControl\");\n  }\n\n  _initMarkup() {\n    var GanttView = getGanttViewCore();\n    this._ganttViewCore = new GanttView(this.$element().get(0), this, {\n      showResources: this.option(\"showResources\"),\n      showDependencies: this.option(\"showDependencies\"),\n      taskTitlePosition: this._getTaskTitlePosition(this.option(\"taskTitlePosition\")),\n      firstDayOfWeek: this._getFirstDayOfWeek(this.option(\"firstDayOfWeek\")),\n      allowSelectTask: this.option(\"allowSelection\"),\n      startDateRange: this.option(\"startDateRange\"),\n      endDateRange: this.option(\"endDateRange\"),\n      editing: this._parseEditingSettings(this.option(\"editing\")),\n      validation: this.option(\"validation\"),\n      stripLines: {\n        stripLines: this.option(\"stripLines\")\n      },\n      areHorizontalBordersEnabled: this.option(\"showRowLines\"),\n      areAlternateRowsEnabled: false,\n      viewType: this._getViewTypeByScaleType(this.option(\"scaleType\")),\n      viewTypeRange: this._parseViewTypeRangeSettings(this.option(\"scaleTypeRange\")),\n      cultureInfo: this._getCultureInfo(),\n      taskTooltipContentTemplate: this.option(\"taskTooltipContentTemplate\"),\n      taskProgressTooltipContentTemplate: this.option(\"taskProgressTooltipContentTemplate\"),\n      taskTimeTooltipContentTemplate: this.option(\"taskTimeTooltipContentTemplate\"),\n      taskContentTemplate: this.option(\"taskContentTemplate\"),\n      sieve: this.option(\"sieve\")\n    });\n\n    this._selectTask(this.option(\"selectedRowKey\"));\n\n    this.updateBarItemsState();\n  }\n\n  _getFirstDayOfWeek(value) {\n    return isDefined(value) ? value : dateLocalization.firstDayOfWeekIndex();\n  }\n\n  getTaskAreaContainer() {\n    return this._ganttViewCore.getTaskAreaContainer();\n  }\n\n  getBarManager() {\n    return this._ganttViewCore.barManager;\n  }\n\n  executeCoreCommand(id) {\n    var command = this._ganttViewCore.getCommandByKey(id);\n\n    if (command) {\n      command.execute();\n    }\n  }\n\n  changeTaskExpanded(id, value) {\n    this._ganttViewCore.changeTaskExpanded(id, value);\n  }\n\n  updateView() {\n    var _this$_ganttViewCore;\n\n    null === (_this$_ganttViewCore = this._ganttViewCore) || void 0 === _this$_ganttViewCore ? void 0 : _this$_ganttViewCore.updateView();\n  }\n\n  updateBarItemsState() {\n    this._ganttViewCore.barManager.updateItemsState([]);\n  }\n\n  setWidth(value) {\n    this._ganttViewCore.setWidth(value);\n  }\n\n  _onDimensionChanged() {\n    this._ganttViewCore.onBrowserWindowResize();\n  }\n\n  _selectTask(id) {\n    this._ganttViewCore.selectTaskById(id);\n  }\n\n  _update(keepExpandState) {\n    var _this$_ganttViewCore2;\n\n    null === (_this$_ganttViewCore2 = this._ganttViewCore) || void 0 === _this$_ganttViewCore2 ? void 0 : _this$_ganttViewCore2.updateWithDataReload(keepExpandState);\n  }\n\n  _getCultureInfo() {\n    return {\n      monthNames: dateLocalization.getMonthNames(\"wide\"),\n      dayNames: dateLocalization.getDayNames(\"wide\"),\n      abbrMonthNames: dateLocalization.getMonthNames(\"abbreviated\"),\n      abbrDayNames: dateLocalization.getDayNames(\"abbreviated\"),\n      quarterNames: this._getQuarterNames(),\n      amText: dateLocalization.getPeriodNames()[0],\n      pmText: dateLocalization.getPeriodNames()[1]\n    };\n  }\n\n  _getQuarterNames() {\n    var quarterFormat = messageLocalization.format(\"dxGantt-quarter\");\n\n    if (!quarterFormat) {\n      return dateLocalization.getQuarterNames();\n    }\n\n    return [format(quarterFormat, 1), format(quarterFormat, 2), format(quarterFormat, 3), format(quarterFormat, 4)];\n  }\n\n  _getTaskTitlePosition(value) {\n    switch (value) {\n      case \"outside\":\n        return 1;\n\n      case \"none\":\n        return 2;\n\n      default:\n        return 0;\n    }\n  }\n\n  _getViewTypeByScaleType(scaleType) {\n    switch (scaleType) {\n      case \"minutes\":\n        return 0;\n\n      case \"hours\":\n        return 1;\n\n      case \"sixHours\":\n        return 2;\n\n      case \"days\":\n        return 3;\n\n      case \"weeks\":\n        return 4;\n\n      case \"months\":\n        return 5;\n\n      case \"quarters\":\n        return 6;\n\n      case \"years\":\n        return 7;\n\n      default:\n        return;\n    }\n  }\n\n  _parseEditingSettings(value) {\n    return {\n      enabled: value.enabled,\n      allowDependencyDelete: value.allowDependencyDeleting,\n      allowDependencyInsert: value.allowDependencyAdding,\n      allowTaskDelete: value.allowTaskDeleting,\n      allowTaskInsert: value.allowTaskAdding,\n      allowTaskUpdate: value.allowTaskUpdating,\n      allowResourceDelete: value.allowResourceDeleting,\n      allowResourceInsert: value.allowResourceAdding,\n      allowResourceUpdate: value.allowResourceUpdating,\n      allowTaskResourceUpdate: value.allowTaskResourceUpdating\n    };\n  }\n\n  _parseViewTypeRangeSettings(value) {\n    return {\n      min: this._getViewTypeByScaleType(value.min),\n      max: this._getViewTypeByScaleType(value.max)\n    };\n  }\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"width\":\n        super._optionChanged(args);\n\n        this._ganttViewCore.setWidth(args.value);\n\n        break;\n\n      case \"height\":\n        this._ganttViewCore.setHeight(args.value);\n\n        break;\n\n      case \"tasks\":\n      case \"dependencies\":\n      case \"resources\":\n      case \"resourceAssignments\":\n        this._sieveOptions = void 0;\n\n        this._update(true);\n\n        break;\n\n      case \"showResources\":\n        this._ganttViewCore.setShowResources(args.value);\n\n        break;\n\n      case \"showDependencies\":\n        this._ganttViewCore.setShowDependencies(args.value);\n\n        break;\n\n      case \"taskTitlePosition\":\n        this._ganttViewCore.setTaskTitlePosition(this._getTaskTitlePosition(args.value));\n\n        break;\n\n      case \"firstDayOfWeek\":\n        this._ganttViewCore.setFirstDayOfWeek(this._getFirstDayOfWeek(args.value));\n\n        break;\n\n      case \"startDateRange\":\n        this._ganttViewCore.setStartDateRange(args.value);\n\n        break;\n\n      case \"endDateRange\":\n        this._ganttViewCore.setEndDateRange(args.value);\n\n        break;\n\n      case \"allowSelection\":\n        this._ganttViewCore.setAllowSelection(args.value);\n\n        break;\n\n      case \"selectedRowKey\":\n        this._selectTask(args.value);\n\n        break;\n\n      case \"editing\":\n        this._ganttViewCore.setEditingSettings(this._parseEditingSettings(args.value));\n\n        break;\n\n      case \"validation\":\n        this._ganttViewCore.setValidationSettings(args.value);\n\n        this._update(true);\n\n        break;\n\n      case \"showRowLines\":\n        this._ganttViewCore.setRowLinesVisible(args.value);\n\n        break;\n\n      case \"scaleType\":\n        this._ganttViewCore.setViewType(this._getViewTypeByScaleType(args.value));\n\n        break;\n\n      case \"scaleTypeRange\":\n        this._ganttViewCore.setViewTypeRange(this._getViewTypeByScaleType(args.value.min), this._getViewTypeByScaleType(args.value.max));\n\n        break;\n\n      case \"stripLines\":\n        this._ganttViewCore.setStripLines({\n          stripLines: args.value\n        });\n\n        break;\n\n      case \"taskTooltipContentTemplate\":\n        this._ganttViewCore.setTaskTooltipContentTemplate(args.value);\n\n        break;\n\n      case \"taskProgressTooltipContentTemplate\":\n        this._ganttViewCore.setTaskProgressTooltipContentTemplate(args.value);\n\n        break;\n\n      case \"taskTimeTooltipContentTemplate\":\n        this._ganttViewCore.setTaskTimeTooltipContentTemplate(args.value);\n\n        break;\n\n      case \"taskContentTemplate\":\n        this._ganttViewCore.setTaskContentTemplate(args.value);\n\n        break;\n\n      case \"sieve\":\n        this._sortAndFilter(args.value);\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  get bars() {\n    return this.option(\"bars\");\n  }\n\n  getRowHeight() {\n    return this.option(\"rowHeight\");\n  }\n\n  getHeaderHeight() {\n    return this.option(\"headerHeight\");\n  }\n\n  getGanttTasksData() {\n    var tasks = this.option(\"tasks\");\n    var sieveOptions = this.getSieveOptions();\n\n    if (null !== sieveOptions && void 0 !== sieveOptions && sieveOptions.sievedItems && null !== sieveOptions && void 0 !== sieveOptions && sieveOptions.sieveColumn) {\n      return sieveOptions.sievedItems;\n    }\n\n    return tasks;\n  }\n\n  _sortAndFilter(args) {\n    this._sieveOptions = args;\n\n    this._update(true);\n\n    var selectedRowKey = this.option(\"selectedRowKey\");\n\n    this._selectTask(selectedRowKey);\n  }\n\n  getSieveOptions() {\n    return this._sieveOptions;\n  }\n\n  getGanttDependenciesData() {\n    return this.option(\"dependencies\");\n  }\n\n  getGanttResourcesData() {\n    return this.option(\"resources\");\n  }\n\n  getGanttResourceAssignmentsData() {\n    return this.option(\"resourceAssignments\");\n  }\n\n  getGanttWorkTimeRules() {\n    return null;\n  }\n\n  getExternalTaskAreaContainer(element) {\n    if (!this._taskAreaContainer) {\n      this._taskAreaContainer = new TaskAreaContainer(element, this);\n    }\n\n    return this._taskAreaContainer;\n  }\n\n  prepareExternalTaskAreaContainer(element, info) {\n    if (null !== info && void 0 !== info && info.height) {\n      this._taskAreaContainer._scrollView.option(\"height\", info.height);\n    }\n  }\n\n  changeGanttTaskSelection(id, selected) {\n    this._onSelectionChanged({\n      id: id,\n      selected: selected\n    });\n  }\n\n  onGanttScroll(scrollTop) {\n    this._onScroll({\n      scrollTop: scrollTop\n    });\n  }\n\n  showDialog(name, parameters, callback, afterClosing) {\n    this._onDialogShowing({\n      name: name,\n      parameters: parameters,\n      callback: callback,\n      afterClosing: afterClosing\n    });\n  }\n\n  getModelChangesListener() {\n    return this.option(\"modelChangesListener\");\n  }\n\n  getExportInfo() {\n    return this.option(\"exportInfo\");\n  }\n\n  showPopupMenu(info) {\n    this._onPopupMenuShowing(info);\n  }\n\n  hidePopupMenu(info) {\n    this._onPopupMenuHiding(info);\n  }\n\n  getMainElement() {\n    return this.option(\"mainElement\").get(0);\n  }\n\n  adjustControl() {\n    this._onAdjustControl();\n  }\n\n  getRequireFirstLoadParentAutoCalc() {\n    return this.option(\"validation.autoUpdateParentTasks\");\n  }\n\n  collapseAll() {\n    this._collapseAll();\n  }\n\n  expandAll() {\n    this._expandAll();\n  }\n\n  onTaskClick(key, event) {\n    this._taskClick({\n      key: key,\n      event: event\n    });\n\n    return true;\n  }\n\n  onTaskDblClick(key, event) {\n    return this._taskDblClick({\n      key: key,\n      event: event\n    });\n  }\n\n  onGanttViewContextMenu(event, key, type) {\n    return true;\n  }\n\n  getFormattedDateText(date) {\n    var result = \"\";\n\n    if (date) {\n      var datePart = dateLocalization.format(date, \"shortDate\");\n      var timePart = dateLocalization.format(date, \"hh:mm\");\n      result = datePart + \" \" + timePart;\n    }\n\n    return result;\n  }\n\n  destroyTemplate(container) {\n    $(container).empty();\n  }\n\n  onTaskAreaSizeChanged(info) {\n    var scrollView = this._taskAreaContainer._scrollView;\n\n    if (isDefined(null === info || void 0 === info ? void 0 : info.height)) {\n      var direction = (null === info || void 0 === info ? void 0 : info.height) > this._taskAreaContainer.getHeight() ? \"both\" : \"horizontal\";\n      scrollView.option(\"direction\", direction);\n    }\n  }\n\n  getTreeListTableStyle() {\n    return this.callExportHelperMethod(\"getTreeListTableStyle\");\n  }\n\n  getTreeListColCount() {\n    return this.callExportHelperMethod(\"getTreeListColCount\");\n  }\n\n  getTreeListHeaderInfo(colIndex) {\n    return this.callExportHelperMethod(\"getTreeListHeaderInfo\", colIndex);\n  }\n\n  getTreeListCellInfo(rowIndex, colIndex, key) {\n    return this.callExportHelperMethod(\"getTreeListCellInfo\", key, colIndex);\n  }\n\n  callExportHelperMethod(methodName) {\n    var helper = this.option(\"exportHelper\");\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return helper[methodName](...args);\n  }\n\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/gantt/ui.gantt.view.js"],"names":["$","Widget","getGanttViewCore","TaskAreaContainer","dateLocalization","isDefined","messageLocalization","format","GanttView","_init","_onSelectionChanged","_createActionByOption","_onScroll","_onDialogShowing","_onPopupMenuShowing","_onPopupMenuHiding","_expandAll","_collapseAll","_taskClick","_taskDblClick","_onAdjustControl","_initMarkup","_ganttViewCore","$element","get","showResources","option","showDependencies","taskTitlePosition","_getTaskTitlePosition","firstDayOfWeek","_getFirstDayOfWeek","allowSelectTask","startDateRange","endDateRange","editing","_parseEditingSettings","validation","stripLines","areHorizontalBordersEnabled","areAlternateRowsEnabled","viewType","_getViewTypeByScaleType","viewTypeRange","_parseViewTypeRangeSettings","cultureInfo","_getCultureInfo","taskTooltipContentTemplate","taskProgressTooltipContentTemplate","taskTimeTooltipContentTemplate","taskContentTemplate","sieve","_selectTask","updateBarItemsState","value","firstDayOfWeekIndex","getTaskAreaContainer","getBarManager","barManager","executeCoreCommand","id","command","getCommandByKey","execute","changeTaskExpanded","updateView","_this$_ganttViewCore","updateItemsState","setWidth","_onDimensionChanged","onBrowserWindowResize","selectTaskById","_update","keepExpandState","_this$_ganttViewCore2","updateWithDataReload","monthNames","getMonthNames","dayNames","getDayNames","abbrMonthNames","abbrDayNames","quarterNames","_getQuarterNames","amText","getPeriodNames","pmText","quarterFormat","getQuarterNames","scaleType","enabled","allowDependencyDelete","allowDependencyDeleting","allowDependencyInsert","allowDependencyAdding","allowTaskDelete","allowTaskDeleting","allowTaskInsert","allowTaskAdding","allowTaskUpdate","allowTaskUpdating","allowResourceDelete","allowResourceDeleting","allowResourceInsert","allowResourceAdding","allowResourceUpdate","allowResourceUpdating","allowTaskResourceUpdate","allowTaskResourceUpdating","min","max","_optionChanged","args","name","setHeight","_sieveOptions","setShowResources","setShowDependencies","setTaskTitlePosition","setFirstDayOfWeek","setStartDateRange","setEndDateRange","setAllowSelection","setEditingSettings","setValidationSettings","setRowLinesVisible","setViewType","setViewTypeRange","setStripLines","setTaskTooltipContentTemplate","setTaskProgressTooltipContentTemplate","setTaskTimeTooltipContentTemplate","setTaskContentTemplate","_sortAndFilter","bars","getRowHeight","getHeaderHeight","getGanttTasksData","tasks","sieveOptions","getSieveOptions","sievedItems","sieveColumn","selectedRowKey","getGanttDependenciesData","getGanttResourcesData","getGanttResourceAssignmentsData","getGanttWorkTimeRules","getExternalTaskAreaContainer","element","_taskAreaContainer","prepareExternalTaskAreaContainer","info","height","_scrollView","changeGanttTaskSelection","selected","onGanttScroll","scrollTop","showDialog","parameters","callback","afterClosing","getModelChangesListener","getExportInfo","showPopupMenu","hidePopupMenu","getMainElement","adjustControl","getRequireFirstLoadParentAutoCalc","collapseAll","expandAll","onTaskClick","key","event","onTaskDblClick","onGanttViewContextMenu","type","getFormattedDateText","date","result","datePart","timePart","destroyTemplate","container","empty","onTaskAreaSizeChanged","scrollView","direction","getHeight","getTreeListTableStyle","callExportHelperMethod","getTreeListColCount","getTreeListHeaderInfo","colIndex","getTreeListCellInfo","rowIndex","methodName","helper","_len","arguments","length","Array","_key"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,CAAP,MAAc,qBAAd;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACIC,gBADJ,QAEO,kBAFP;AAGA,SACIC,iBADJ,QAEO,gCAFP;AAGA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACIC,SADJ,QAEO,uBAFP;AAGA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,SACIC,MADJ,QAEO,yBAFP;AAGA,OAAO,MAAMC,SAAN,SAAwBP,MAAxB,CAA+B;AAClCQ,EAAAA,KAAK,GAAG;AACJ,UAAMA,KAAN;;AACA,SAAKC,mBAAL,GAA2B,KAAKC,qBAAL,CAA2B,oBAA3B,CAA3B;AACA,SAAKC,SAAL,GAAiB,KAAKD,qBAAL,CAA2B,UAA3B,CAAjB;AACA,SAAKE,gBAAL,GAAwB,KAAKF,qBAAL,CAA2B,iBAA3B,CAAxB;AACA,SAAKG,mBAAL,GAA2B,KAAKH,qBAAL,CAA2B,oBAA3B,CAA3B;AACA,SAAKI,kBAAL,GAA0B,KAAKJ,qBAAL,CAA2B,mBAA3B,CAA1B;AACA,SAAKK,UAAL,GAAkB,KAAKL,qBAAL,CAA2B,aAA3B,CAAlB;AACA,SAAKM,YAAL,GAAoB,KAAKN,qBAAL,CAA2B,eAA3B,CAApB;AACA,SAAKO,UAAL,GAAkB,KAAKP,qBAAL,CAA2B,aAA3B,CAAlB;AACA,SAAKQ,aAAL,GAAqB,KAAKR,qBAAL,CAA2B,gBAA3B,CAArB;AACA,SAAKS,gBAAL,GAAwB,KAAKT,qBAAL,CAA2B,iBAA3B,CAAxB;AACH;;AACDU,EAAAA,WAAW,GAAG;AACV,QAAIb,SAAS,GAAGN,gBAAgB,EAAhC;AACA,SAAKoB,cAAL,GAAsB,IAAId,SAAJ,CAAc,KAAKe,QAAL,GAAgBC,GAAhB,CAAoB,CAApB,CAAd,EAAsC,IAAtC,EAA4C;AAC9DC,MAAAA,aAAa,EAAE,KAAKC,MAAL,CAAY,eAAZ,CAD+C;AAE9DC,MAAAA,gBAAgB,EAAE,KAAKD,MAAL,CAAY,kBAAZ,CAF4C;AAG9DE,MAAAA,iBAAiB,EAAE,KAAKC,qBAAL,CAA2B,KAAKH,MAAL,CAAY,mBAAZ,CAA3B,CAH2C;AAI9DI,MAAAA,cAAc,EAAE,KAAKC,kBAAL,CAAwB,KAAKL,MAAL,CAAY,gBAAZ,CAAxB,CAJ8C;AAK9DM,MAAAA,eAAe,EAAE,KAAKN,MAAL,CAAY,gBAAZ,CAL6C;AAM9DO,MAAAA,cAAc,EAAE,KAAKP,MAAL,CAAY,gBAAZ,CAN8C;AAO9DQ,MAAAA,YAAY,EAAE,KAAKR,MAAL,CAAY,cAAZ,CAPgD;AAQ9DS,MAAAA,OAAO,EAAE,KAAKC,qBAAL,CAA2B,KAAKV,MAAL,CAAY,SAAZ,CAA3B,CARqD;AAS9DW,MAAAA,UAAU,EAAE,KAAKX,MAAL,CAAY,YAAZ,CATkD;AAU9DY,MAAAA,UAAU,EAAE;AACRA,QAAAA,UAAU,EAAE,KAAKZ,MAAL,CAAY,YAAZ;AADJ,OAVkD;AAa9Da,MAAAA,2BAA2B,EAAE,KAAKb,MAAL,CAAY,cAAZ,CAbiC;AAc9Dc,MAAAA,uBAAuB,EAAE,KAdqC;AAe9DC,MAAAA,QAAQ,EAAE,KAAKC,uBAAL,CAA6B,KAAKhB,MAAL,CAAY,WAAZ,CAA7B,CAfoD;AAgB9DiB,MAAAA,aAAa,EAAE,KAAKC,2BAAL,CAAiC,KAAKlB,MAAL,CAAY,gBAAZ,CAAjC,CAhB+C;AAiB9DmB,MAAAA,WAAW,EAAE,KAAKC,eAAL,EAjBiD;AAkB9DC,MAAAA,0BAA0B,EAAE,KAAKrB,MAAL,CAAY,4BAAZ,CAlBkC;AAmB9DsB,MAAAA,kCAAkC,EAAE,KAAKtB,MAAL,CAAY,oCAAZ,CAnB0B;AAoB9DuB,MAAAA,8BAA8B,EAAE,KAAKvB,MAAL,CAAY,gCAAZ,CApB8B;AAqB9DwB,MAAAA,mBAAmB,EAAE,KAAKxB,MAAL,CAAY,qBAAZ,CArByC;AAsB9DyB,MAAAA,KAAK,EAAE,KAAKzB,MAAL,CAAY,OAAZ;AAtBuD,KAA5C,CAAtB;;AAwBA,SAAK0B,WAAL,CAAiB,KAAK1B,MAAL,CAAY,gBAAZ,CAAjB;;AACA,SAAK2B,mBAAL;AACH;;AACDtB,EAAAA,kBAAkB,CAACuB,KAAD,EAAQ;AACtB,WAAOjD,SAAS,CAACiD,KAAD,CAAT,GAAmBA,KAAnB,GAA2BlD,gBAAgB,CAACmD,mBAAjB,EAAlC;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAKlC,cAAL,CAAoBkC,oBAApB,EAAP;AACH;;AACDC,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKnC,cAAL,CAAoBoC,UAA3B;AACH;;AACDC,EAAAA,kBAAkB,CAACC,EAAD,EAAK;AACnB,QAAIC,OAAO,GAAG,KAAKvC,cAAL,CAAoBwC,eAApB,CAAoCF,EAApC,CAAd;;AACA,QAAIC,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAACE,OAAR;AACH;AACJ;;AACDC,EAAAA,kBAAkB,CAACJ,EAAD,EAAKN,KAAL,EAAY;AAC1B,SAAKhC,cAAL,CAAoB0C,kBAApB,CAAuCJ,EAAvC,EAA2CN,KAA3C;AACH;;AACDW,EAAAA,UAAU,GAAG;AACT,QAAIC,oBAAJ;;AACA,cAAUA,oBAAoB,GAAG,KAAK5C,cAAtC,KAAyD,KAAK,CAAL,KAAW4C,oBAApE,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACD,UAArB,EAApG;AACH;;AACDZ,EAAAA,mBAAmB,GAAG;AAClB,SAAK/B,cAAL,CAAoBoC,UAApB,CAA+BS,gBAA/B,CAAgD,EAAhD;AACH;;AACDC,EAAAA,QAAQ,CAACd,KAAD,EAAQ;AACZ,SAAKhC,cAAL,CAAoB8C,QAApB,CAA6Bd,KAA7B;AACH;;AACDe,EAAAA,mBAAmB,GAAG;AAClB,SAAK/C,cAAL,CAAoBgD,qBAApB;AACH;;AACDlB,EAAAA,WAAW,CAACQ,EAAD,EAAK;AACZ,SAAKtC,cAAL,CAAoBiD,cAApB,CAAmCX,EAAnC;AACH;;AACDY,EAAAA,OAAO,CAACC,eAAD,EAAkB;AACrB,QAAIC,qBAAJ;;AACA,cAAUA,qBAAqB,GAAG,KAAKpD,cAAvC,KAA0D,KAAK,CAAL,KAAWoD,qBAArE,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACC,oBAAtB,CAA2CF,eAA3C,CAAtG;AACH;;AACD3B,EAAAA,eAAe,GAAG;AACd,WAAO;AACH8B,MAAAA,UAAU,EAAExE,gBAAgB,CAACyE,aAAjB,CAA+B,MAA/B,CADT;AAEHC,MAAAA,QAAQ,EAAE1E,gBAAgB,CAAC2E,WAAjB,CAA6B,MAA7B,CAFP;AAGHC,MAAAA,cAAc,EAAE5E,gBAAgB,CAACyE,aAAjB,CAA+B,aAA/B,CAHb;AAIHI,MAAAA,YAAY,EAAE7E,gBAAgB,CAAC2E,WAAjB,CAA6B,aAA7B,CAJX;AAKHG,MAAAA,YAAY,EAAE,KAAKC,gBAAL,EALX;AAMHC,MAAAA,MAAM,EAAEhF,gBAAgB,CAACiF,cAAjB,GAAkC,CAAlC,CANL;AAOHC,MAAAA,MAAM,EAAElF,gBAAgB,CAACiF,cAAjB,GAAkC,CAAlC;AAPL,KAAP;AASH;;AACDF,EAAAA,gBAAgB,GAAG;AACf,QAAII,aAAa,GAAGjF,mBAAmB,CAACC,MAApB,CAA2B,iBAA3B,CAApB;;AACA,QAAI,CAACgF,aAAL,EAAoB;AAChB,aAAOnF,gBAAgB,CAACoF,eAAjB,EAAP;AACH;;AACD,WAAO,CAACjF,MAAM,CAACgF,aAAD,EAAgB,CAAhB,CAAP,EAA2BhF,MAAM,CAACgF,aAAD,EAAgB,CAAhB,CAAjC,EAAqDhF,MAAM,CAACgF,aAAD,EAAgB,CAAhB,CAA3D,EAA+EhF,MAAM,CAACgF,aAAD,EAAgB,CAAhB,CAArF,CAAP;AACH;;AACD1D,EAAAA,qBAAqB,CAACyB,KAAD,EAAQ;AACzB,YAAQA,KAAR;AACI,WAAK,SAAL;AACI,eAAO,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,CAAP;;AACJ;AACI,eAAO,CAAP;AANR;AAQH;;AACDZ,EAAAA,uBAAuB,CAAC+C,SAAD,EAAY;AAC/B,YAAQA,SAAR;AACI,WAAK,SAAL;AACI,eAAO,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,CAAP;;AACJ,WAAK,UAAL;AACI,eAAO,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,UAAL;AACI,eAAO,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,CAAP;;AACJ;AACI;AAlBR;AAoBH;;AACDrD,EAAAA,qBAAqB,CAACkB,KAAD,EAAQ;AACzB,WAAO;AACHoC,MAAAA,OAAO,EAAEpC,KAAK,CAACoC,OADZ;AAEHC,MAAAA,qBAAqB,EAAErC,KAAK,CAACsC,uBAF1B;AAGHC,MAAAA,qBAAqB,EAAEvC,KAAK,CAACwC,qBAH1B;AAIHC,MAAAA,eAAe,EAAEzC,KAAK,CAAC0C,iBAJpB;AAKHC,MAAAA,eAAe,EAAE3C,KAAK,CAAC4C,eALpB;AAMHC,MAAAA,eAAe,EAAE7C,KAAK,CAAC8C,iBANpB;AAOHC,MAAAA,mBAAmB,EAAE/C,KAAK,CAACgD,qBAPxB;AAQHC,MAAAA,mBAAmB,EAAEjD,KAAK,CAACkD,mBARxB;AASHC,MAAAA,mBAAmB,EAAEnD,KAAK,CAACoD,qBATxB;AAUHC,MAAAA,uBAAuB,EAAErD,KAAK,CAACsD;AAV5B,KAAP;AAYH;;AACDhE,EAAAA,2BAA2B,CAACU,KAAD,EAAQ;AAC/B,WAAO;AACHuD,MAAAA,GAAG,EAAE,KAAKnE,uBAAL,CAA6BY,KAAK,CAACuD,GAAnC,CADF;AAEHC,MAAAA,GAAG,EAAE,KAAKpE,uBAAL,CAA6BY,KAAK,CAACwD,GAAnC;AAFF,KAAP;AAIH;;AACDC,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,YAAQA,IAAI,CAACC,IAAb;AACI,WAAK,OAAL;AACI,cAAMF,cAAN,CAAqBC,IAArB;;AACA,aAAK1F,cAAL,CAAoB8C,QAApB,CAA6B4C,IAAI,CAAC1D,KAAlC;;AACA;;AACJ,WAAK,QAAL;AACI,aAAKhC,cAAL,CAAoB4F,SAApB,CAA8BF,IAAI,CAAC1D,KAAnC;;AACA;;AACJ,WAAK,OAAL;AACA,WAAK,cAAL;AACA,WAAK,WAAL;AACA,WAAK,qBAAL;AACI,aAAK6D,aAAL,GAAqB,KAAK,CAA1B;;AACA,aAAK3C,OAAL,CAAa,IAAb;;AACA;;AACJ,WAAK,eAAL;AACI,aAAKlD,cAAL,CAAoB8F,gBAApB,CAAqCJ,IAAI,CAAC1D,KAA1C;;AACA;;AACJ,WAAK,kBAAL;AACI,aAAKhC,cAAL,CAAoB+F,mBAApB,CAAwCL,IAAI,CAAC1D,KAA7C;;AACA;;AACJ,WAAK,mBAAL;AACI,aAAKhC,cAAL,CAAoBgG,oBAApB,CAAyC,KAAKzF,qBAAL,CAA2BmF,IAAI,CAAC1D,KAAhC,CAAzC;;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKhC,cAAL,CAAoBiG,iBAApB,CAAsC,KAAKxF,kBAAL,CAAwBiF,IAAI,CAAC1D,KAA7B,CAAtC;;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKhC,cAAL,CAAoBkG,iBAApB,CAAsCR,IAAI,CAAC1D,KAA3C;;AACA;;AACJ,WAAK,cAAL;AACI,aAAKhC,cAAL,CAAoBmG,eAApB,CAAoCT,IAAI,CAAC1D,KAAzC;;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKhC,cAAL,CAAoBoG,iBAApB,CAAsCV,IAAI,CAAC1D,KAA3C;;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKF,WAAL,CAAiB4D,IAAI,CAAC1D,KAAtB;;AACA;;AACJ,WAAK,SAAL;AACI,aAAKhC,cAAL,CAAoBqG,kBAApB,CAAuC,KAAKvF,qBAAL,CAA2B4E,IAAI,CAAC1D,KAAhC,CAAvC;;AACA;;AACJ,WAAK,YAAL;AACI,aAAKhC,cAAL,CAAoBsG,qBAApB,CAA0CZ,IAAI,CAAC1D,KAA/C;;AACA,aAAKkB,OAAL,CAAa,IAAb;;AACA;;AACJ,WAAK,cAAL;AACI,aAAKlD,cAAL,CAAoBuG,kBAApB,CAAuCb,IAAI,CAAC1D,KAA5C;;AACA;;AACJ,WAAK,WAAL;AACI,aAAKhC,cAAL,CAAoBwG,WAApB,CAAgC,KAAKpF,uBAAL,CAA6BsE,IAAI,CAAC1D,KAAlC,CAAhC;;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKhC,cAAL,CAAoByG,gBAApB,CAAqC,KAAKrF,uBAAL,CAA6BsE,IAAI,CAAC1D,KAAL,CAAWuD,GAAxC,CAArC,EAAmF,KAAKnE,uBAAL,CAA6BsE,IAAI,CAAC1D,KAAL,CAAWwD,GAAxC,CAAnF;;AACA;;AACJ,WAAK,YAAL;AACI,aAAKxF,cAAL,CAAoB0G,aAApB,CAAkC;AAC9B1F,UAAAA,UAAU,EAAE0E,IAAI,CAAC1D;AADa,SAAlC;;AAGA;;AACJ,WAAK,4BAAL;AACI,aAAKhC,cAAL,CAAoB2G,6BAApB,CAAkDjB,IAAI,CAAC1D,KAAvD;;AACA;;AACJ,WAAK,oCAAL;AACI,aAAKhC,cAAL,CAAoB4G,qCAApB,CAA0DlB,IAAI,CAAC1D,KAA/D;;AACA;;AACJ,WAAK,gCAAL;AACI,aAAKhC,cAAL,CAAoB6G,iCAApB,CAAsDnB,IAAI,CAAC1D,KAA3D;;AACA;;AACJ,WAAK,qBAAL;AACI,aAAKhC,cAAL,CAAoB8G,sBAApB,CAA2CpB,IAAI,CAAC1D,KAAhD;;AACA;;AACJ,WAAK,OAAL;AACI,aAAK+E,cAAL,CAAoBrB,IAAI,CAAC1D,KAAzB;;AACA;;AACJ;AACI,cAAMyD,cAAN,CAAqBC,IAArB;;AA5ER;AA8EH;;AACD,MAAIsB,IAAJ,GAAW;AACP,WAAO,KAAK5G,MAAL,CAAY,MAAZ,CAAP;AACH;;AACD6G,EAAAA,YAAY,GAAG;AACX,WAAO,KAAK7G,MAAL,CAAY,WAAZ,CAAP;AACH;;AACD8G,EAAAA,eAAe,GAAG;AACd,WAAO,KAAK9G,MAAL,CAAY,cAAZ,CAAP;AACH;;AACD+G,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKhH,MAAL,CAAY,OAAZ,CAAZ;AACA,QAAIiH,YAAY,GAAG,KAAKC,eAAL,EAAnB;;AACA,QAAI,SAASD,YAAT,IAAyB,KAAK,CAAL,KAAWA,YAApC,IAAoDA,YAAY,CAACE,WAAjE,IAAgF,SAASF,YAAzF,IAAyG,KAAK,CAAL,KAAWA,YAApH,IAAoIA,YAAY,CAACG,WAArJ,EAAkK;AAC9J,aAAOH,YAAY,CAACE,WAApB;AACH;;AACD,WAAOH,KAAP;AACH;;AACDL,EAAAA,cAAc,CAACrB,IAAD,EAAO;AACjB,SAAKG,aAAL,GAAqBH,IAArB;;AACA,SAAKxC,OAAL,CAAa,IAAb;;AACA,QAAIuE,cAAc,GAAG,KAAKrH,MAAL,CAAY,gBAAZ,CAArB;;AACA,SAAK0B,WAAL,CAAiB2F,cAAjB;AACH;;AACDH,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKzB,aAAZ;AACH;;AACD6B,EAAAA,wBAAwB,GAAG;AACvB,WAAO,KAAKtH,MAAL,CAAY,cAAZ,CAAP;AACH;;AACDuH,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKvH,MAAL,CAAY,WAAZ,CAAP;AACH;;AACDwH,EAAAA,+BAA+B,GAAG;AAC9B,WAAO,KAAKxH,MAAL,CAAY,qBAAZ,CAAP;AACH;;AACDyH,EAAAA,qBAAqB,GAAG;AACpB,WAAO,IAAP;AACH;;AACDC,EAAAA,4BAA4B,CAACC,OAAD,EAAU;AAClC,QAAI,CAAC,KAAKC,kBAAV,EAA8B;AAC1B,WAAKA,kBAAL,GAA0B,IAAInJ,iBAAJ,CAAsBkJ,OAAtB,EAA+B,IAA/B,CAA1B;AACH;;AACD,WAAO,KAAKC,kBAAZ;AACH;;AACDC,EAAAA,gCAAgC,CAACF,OAAD,EAAUG,IAAV,EAAgB;AAC5C,QAAI,SAASA,IAAT,IAAiB,KAAK,CAAL,KAAWA,IAA5B,IAAoCA,IAAI,CAACC,MAA7C,EAAqD;AACjD,WAAKH,kBAAL,CAAwBI,WAAxB,CAAoChI,MAApC,CAA2C,QAA3C,EAAqD8H,IAAI,CAACC,MAA1D;AACH;AACJ;;AACDE,EAAAA,wBAAwB,CAAC/F,EAAD,EAAKgG,QAAL,EAAe;AACnC,SAAKlJ,mBAAL,CAAyB;AACrBkD,MAAAA,EAAE,EAAEA,EADiB;AAErBgG,MAAAA,QAAQ,EAAEA;AAFW,KAAzB;AAIH;;AACDC,EAAAA,aAAa,CAACC,SAAD,EAAY;AACrB,SAAKlJ,SAAL,CAAe;AACXkJ,MAAAA,SAAS,EAAEA;AADA,KAAf;AAGH;;AACDC,EAAAA,UAAU,CAAC9C,IAAD,EAAO+C,UAAP,EAAmBC,QAAnB,EAA6BC,YAA7B,EAA2C;AACjD,SAAKrJ,gBAAL,CAAsB;AAClBoG,MAAAA,IAAI,EAAEA,IADY;AAElB+C,MAAAA,UAAU,EAAEA,UAFM;AAGlBC,MAAAA,QAAQ,EAAEA,QAHQ;AAIlBC,MAAAA,YAAY,EAAEA;AAJI,KAAtB;AAMH;;AACDC,EAAAA,uBAAuB,GAAG;AACtB,WAAO,KAAKzI,MAAL,CAAY,sBAAZ,CAAP;AACH;;AACD0I,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAK1I,MAAL,CAAY,YAAZ,CAAP;AACH;;AACD2I,EAAAA,aAAa,CAACb,IAAD,EAAO;AAChB,SAAK1I,mBAAL,CAAyB0I,IAAzB;AACH;;AACDc,EAAAA,aAAa,CAACd,IAAD,EAAO;AAChB,SAAKzI,kBAAL,CAAwByI,IAAxB;AACH;;AACDe,EAAAA,cAAc,GAAG;AACb,WAAO,KAAK7I,MAAL,CAAY,aAAZ,EAA2BF,GAA3B,CAA+B,CAA/B,CAAP;AACH;;AACDgJ,EAAAA,aAAa,GAAG;AACZ,SAAKpJ,gBAAL;AACH;;AACDqJ,EAAAA,iCAAiC,GAAG;AAChC,WAAO,KAAK/I,MAAL,CAAY,kCAAZ,CAAP;AACH;;AACDgJ,EAAAA,WAAW,GAAG;AACV,SAAKzJ,YAAL;AACH;;AACD0J,EAAAA,SAAS,GAAG;AACR,SAAK3J,UAAL;AACH;;AACD4J,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACpB,SAAK5J,UAAL,CAAgB;AACZ2J,MAAAA,GAAG,EAAEA,GADO;AAEZC,MAAAA,KAAK,EAAEA;AAFK,KAAhB;;AAIA,WAAO,IAAP;AACH;;AACDC,EAAAA,cAAc,CAACF,GAAD,EAAMC,KAAN,EAAa;AACvB,WAAO,KAAK3J,aAAL,CAAmB;AACtB0J,MAAAA,GAAG,EAAEA,GADiB;AAEtBC,MAAAA,KAAK,EAAEA;AAFe,KAAnB,CAAP;AAIH;;AACDE,EAAAA,sBAAsB,CAACF,KAAD,EAAQD,GAAR,EAAaI,IAAb,EAAmB;AACrC,WAAO,IAAP;AACH;;AACDC,EAAAA,oBAAoB,CAACC,IAAD,EAAO;AACvB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAID,IAAJ,EAAU;AACN,UAAIE,QAAQ,GAAGjL,gBAAgB,CAACG,MAAjB,CAAwB4K,IAAxB,EAA8B,WAA9B,CAAf;AACA,UAAIG,QAAQ,GAAGlL,gBAAgB,CAACG,MAAjB,CAAwB4K,IAAxB,EAA8B,OAA9B,CAAf;AACAC,MAAAA,MAAM,GAAGC,QAAQ,GAAG,GAAX,GAAiBC,QAA1B;AACH;;AACD,WAAOF,MAAP;AACH;;AACDG,EAAAA,eAAe,CAACC,SAAD,EAAY;AACvBxL,IAAAA,CAAC,CAACwL,SAAD,CAAD,CAAaC,KAAb;AACH;;AACDC,EAAAA,qBAAqB,CAAClC,IAAD,EAAO;AACxB,QAAImC,UAAU,GAAG,KAAKrC,kBAAL,CAAwBI,WAAzC;;AACA,QAAIrJ,SAAS,CAAC,SAASmJ,IAAT,IAAiB,KAAK,CAAL,KAAWA,IAA5B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACC,MAAlD,CAAb,EAAwE;AACpE,UAAImC,SAAS,GAAG,CAAC,SAASpC,IAAT,IAAiB,KAAK,CAAL,KAAWA,IAA5B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACC,MAAlD,IAA4D,KAAKH,kBAAL,CAAwBuC,SAAxB,EAA5D,GAAkG,MAAlG,GAA2G,YAA3H;AACAF,MAAAA,UAAU,CAACjK,MAAX,CAAkB,WAAlB,EAA+BkK,SAA/B;AACH;AACJ;;AACDE,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKC,sBAAL,CAA4B,uBAA5B,CAAP;AACH;;AACDC,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKD,sBAAL,CAA4B,qBAA5B,CAAP;AACH;;AACDE,EAAAA,qBAAqB,CAACC,QAAD,EAAW;AAC5B,WAAO,KAAKH,sBAAL,CAA4B,uBAA5B,EAAqDG,QAArD,CAAP;AACH;;AACDC,EAAAA,mBAAmB,CAACC,QAAD,EAAWF,QAAX,EAAqBrB,GAArB,EAA0B;AACzC,WAAO,KAAKkB,sBAAL,CAA4B,qBAA5B,EAAmDlB,GAAnD,EAAwDqB,QAAxD,CAAP;AACH;;AACDH,EAAAA,sBAAsB,CAACM,UAAD,EAAa;AAC/B,QAAIC,MAAM,GAAG,KAAK5K,MAAL,CAAY,cAAZ,CAAb;;AACA,SAAK,IAAI6K,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BzF,IAAI,GAAG,IAAI0F,KAAJ,CAAUH,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEI,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGJ,IAA9F,EAAoGI,IAAI,EAAxG,EAA4G;AACxG3F,MAAAA,IAAI,CAAC2F,IAAI,GAAG,CAAR,CAAJ,GAAiBH,SAAS,CAACG,IAAD,CAA1B;AACH;;AACD,WAAOL,MAAM,CAACD,UAAD,CAAN,CAAmB,GAAGrF,IAAtB,CAAP;AACH;;AA3XiC","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.view.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    getGanttViewCore\r\n} from \"./gantt_importer\";\r\nimport {\r\n    TaskAreaContainer\r\n} from \"./ui.gantt.task.area.container\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nexport class GanttView extends Widget {\r\n    _init() {\r\n        super._init();\r\n        this._onSelectionChanged = this._createActionByOption(\"onSelectionChanged\");\r\n        this._onScroll = this._createActionByOption(\"onScroll\");\r\n        this._onDialogShowing = this._createActionByOption(\"onDialogShowing\");\r\n        this._onPopupMenuShowing = this._createActionByOption(\"onPopupMenuShowing\");\r\n        this._onPopupMenuHiding = this._createActionByOption(\"onPopupMenuHiding\");\r\n        this._expandAll = this._createActionByOption(\"onExpandAll\");\r\n        this._collapseAll = this._createActionByOption(\"onCollapseAll\");\r\n        this._taskClick = this._createActionByOption(\"onTaskClick\");\r\n        this._taskDblClick = this._createActionByOption(\"onTaskDblClick\");\r\n        this._onAdjustControl = this._createActionByOption(\"onAdjustControl\")\r\n    }\r\n    _initMarkup() {\r\n        var GanttView = getGanttViewCore();\r\n        this._ganttViewCore = new GanttView(this.$element().get(0), this, {\r\n            showResources: this.option(\"showResources\"),\r\n            showDependencies: this.option(\"showDependencies\"),\r\n            taskTitlePosition: this._getTaskTitlePosition(this.option(\"taskTitlePosition\")),\r\n            firstDayOfWeek: this._getFirstDayOfWeek(this.option(\"firstDayOfWeek\")),\r\n            allowSelectTask: this.option(\"allowSelection\"),\r\n            startDateRange: this.option(\"startDateRange\"),\r\n            endDateRange: this.option(\"endDateRange\"),\r\n            editing: this._parseEditingSettings(this.option(\"editing\")),\r\n            validation: this.option(\"validation\"),\r\n            stripLines: {\r\n                stripLines: this.option(\"stripLines\")\r\n            },\r\n            areHorizontalBordersEnabled: this.option(\"showRowLines\"),\r\n            areAlternateRowsEnabled: false,\r\n            viewType: this._getViewTypeByScaleType(this.option(\"scaleType\")),\r\n            viewTypeRange: this._parseViewTypeRangeSettings(this.option(\"scaleTypeRange\")),\r\n            cultureInfo: this._getCultureInfo(),\r\n            taskTooltipContentTemplate: this.option(\"taskTooltipContentTemplate\"),\r\n            taskProgressTooltipContentTemplate: this.option(\"taskProgressTooltipContentTemplate\"),\r\n            taskTimeTooltipContentTemplate: this.option(\"taskTimeTooltipContentTemplate\"),\r\n            taskContentTemplate: this.option(\"taskContentTemplate\"),\r\n            sieve: this.option(\"sieve\")\r\n        });\r\n        this._selectTask(this.option(\"selectedRowKey\"));\r\n        this.updateBarItemsState()\r\n    }\r\n    _getFirstDayOfWeek(value) {\r\n        return isDefined(value) ? value : dateLocalization.firstDayOfWeekIndex()\r\n    }\r\n    getTaskAreaContainer() {\r\n        return this._ganttViewCore.getTaskAreaContainer()\r\n    }\r\n    getBarManager() {\r\n        return this._ganttViewCore.barManager\r\n    }\r\n    executeCoreCommand(id) {\r\n        var command = this._ganttViewCore.getCommandByKey(id);\r\n        if (command) {\r\n            command.execute()\r\n        }\r\n    }\r\n    changeTaskExpanded(id, value) {\r\n        this._ganttViewCore.changeTaskExpanded(id, value)\r\n    }\r\n    updateView() {\r\n        var _this$_ganttViewCore;\r\n        null === (_this$_ganttViewCore = this._ganttViewCore) || void 0 === _this$_ganttViewCore ? void 0 : _this$_ganttViewCore.updateView()\r\n    }\r\n    updateBarItemsState() {\r\n        this._ganttViewCore.barManager.updateItemsState([])\r\n    }\r\n    setWidth(value) {\r\n        this._ganttViewCore.setWidth(value)\r\n    }\r\n    _onDimensionChanged() {\r\n        this._ganttViewCore.onBrowserWindowResize()\r\n    }\r\n    _selectTask(id) {\r\n        this._ganttViewCore.selectTaskById(id)\r\n    }\r\n    _update(keepExpandState) {\r\n        var _this$_ganttViewCore2;\r\n        null === (_this$_ganttViewCore2 = this._ganttViewCore) || void 0 === _this$_ganttViewCore2 ? void 0 : _this$_ganttViewCore2.updateWithDataReload(keepExpandState)\r\n    }\r\n    _getCultureInfo() {\r\n        return {\r\n            monthNames: dateLocalization.getMonthNames(\"wide\"),\r\n            dayNames: dateLocalization.getDayNames(\"wide\"),\r\n            abbrMonthNames: dateLocalization.getMonthNames(\"abbreviated\"),\r\n            abbrDayNames: dateLocalization.getDayNames(\"abbreviated\"),\r\n            quarterNames: this._getQuarterNames(),\r\n            amText: dateLocalization.getPeriodNames()[0],\r\n            pmText: dateLocalization.getPeriodNames()[1]\r\n        }\r\n    }\r\n    _getQuarterNames() {\r\n        var quarterFormat = messageLocalization.format(\"dxGantt-quarter\");\r\n        if (!quarterFormat) {\r\n            return dateLocalization.getQuarterNames()\r\n        }\r\n        return [format(quarterFormat, 1), format(quarterFormat, 2), format(quarterFormat, 3), format(quarterFormat, 4)]\r\n    }\r\n    _getTaskTitlePosition(value) {\r\n        switch (value) {\r\n            case \"outside\":\r\n                return 1;\r\n            case \"none\":\r\n                return 2;\r\n            default:\r\n                return 0\r\n        }\r\n    }\r\n    _getViewTypeByScaleType(scaleType) {\r\n        switch (scaleType) {\r\n            case \"minutes\":\r\n                return 0;\r\n            case \"hours\":\r\n                return 1;\r\n            case \"sixHours\":\r\n                return 2;\r\n            case \"days\":\r\n                return 3;\r\n            case \"weeks\":\r\n                return 4;\r\n            case \"months\":\r\n                return 5;\r\n            case \"quarters\":\r\n                return 6;\r\n            case \"years\":\r\n                return 7;\r\n            default:\r\n                return\r\n        }\r\n    }\r\n    _parseEditingSettings(value) {\r\n        return {\r\n            enabled: value.enabled,\r\n            allowDependencyDelete: value.allowDependencyDeleting,\r\n            allowDependencyInsert: value.allowDependencyAdding,\r\n            allowTaskDelete: value.allowTaskDeleting,\r\n            allowTaskInsert: value.allowTaskAdding,\r\n            allowTaskUpdate: value.allowTaskUpdating,\r\n            allowResourceDelete: value.allowResourceDeleting,\r\n            allowResourceInsert: value.allowResourceAdding,\r\n            allowResourceUpdate: value.allowResourceUpdating,\r\n            allowTaskResourceUpdate: value.allowTaskResourceUpdating\r\n        }\r\n    }\r\n    _parseViewTypeRangeSettings(value) {\r\n        return {\r\n            min: this._getViewTypeByScaleType(value.min),\r\n            max: this._getViewTypeByScaleType(value.max)\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n                super._optionChanged(args);\r\n                this._ganttViewCore.setWidth(args.value);\r\n                break;\r\n            case \"height\":\r\n                this._ganttViewCore.setHeight(args.value);\r\n                break;\r\n            case \"tasks\":\r\n            case \"dependencies\":\r\n            case \"resources\":\r\n            case \"resourceAssignments\":\r\n                this._sieveOptions = void 0;\r\n                this._update(true);\r\n                break;\r\n            case \"showResources\":\r\n                this._ganttViewCore.setShowResources(args.value);\r\n                break;\r\n            case \"showDependencies\":\r\n                this._ganttViewCore.setShowDependencies(args.value);\r\n                break;\r\n            case \"taskTitlePosition\":\r\n                this._ganttViewCore.setTaskTitlePosition(this._getTaskTitlePosition(args.value));\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._ganttViewCore.setFirstDayOfWeek(this._getFirstDayOfWeek(args.value));\r\n                break;\r\n            case \"startDateRange\":\r\n                this._ganttViewCore.setStartDateRange(args.value);\r\n                break;\r\n            case \"endDateRange\":\r\n                this._ganttViewCore.setEndDateRange(args.value);\r\n                break;\r\n            case \"allowSelection\":\r\n                this._ganttViewCore.setAllowSelection(args.value);\r\n                break;\r\n            case \"selectedRowKey\":\r\n                this._selectTask(args.value);\r\n                break;\r\n            case \"editing\":\r\n                this._ganttViewCore.setEditingSettings(this._parseEditingSettings(args.value));\r\n                break;\r\n            case \"validation\":\r\n                this._ganttViewCore.setValidationSettings(args.value);\r\n                this._update(true);\r\n                break;\r\n            case \"showRowLines\":\r\n                this._ganttViewCore.setRowLinesVisible(args.value);\r\n                break;\r\n            case \"scaleType\":\r\n                this._ganttViewCore.setViewType(this._getViewTypeByScaleType(args.value));\r\n                break;\r\n            case \"scaleTypeRange\":\r\n                this._ganttViewCore.setViewTypeRange(this._getViewTypeByScaleType(args.value.min), this._getViewTypeByScaleType(args.value.max));\r\n                break;\r\n            case \"stripLines\":\r\n                this._ganttViewCore.setStripLines({\r\n                    stripLines: args.value\r\n                });\r\n                break;\r\n            case \"taskTooltipContentTemplate\":\r\n                this._ganttViewCore.setTaskTooltipContentTemplate(args.value);\r\n                break;\r\n            case \"taskProgressTooltipContentTemplate\":\r\n                this._ganttViewCore.setTaskProgressTooltipContentTemplate(args.value);\r\n                break;\r\n            case \"taskTimeTooltipContentTemplate\":\r\n                this._ganttViewCore.setTaskTimeTooltipContentTemplate(args.value);\r\n                break;\r\n            case \"taskContentTemplate\":\r\n                this._ganttViewCore.setTaskContentTemplate(args.value);\r\n                break;\r\n            case \"sieve\":\r\n                this._sortAndFilter(args.value);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    get bars() {\r\n        return this.option(\"bars\")\r\n    }\r\n    getRowHeight() {\r\n        return this.option(\"rowHeight\")\r\n    }\r\n    getHeaderHeight() {\r\n        return this.option(\"headerHeight\")\r\n    }\r\n    getGanttTasksData() {\r\n        var tasks = this.option(\"tasks\");\r\n        var sieveOptions = this.getSieveOptions();\r\n        if (null !== sieveOptions && void 0 !== sieveOptions && sieveOptions.sievedItems && null !== sieveOptions && void 0 !== sieveOptions && sieveOptions.sieveColumn) {\r\n            return sieveOptions.sievedItems\r\n        }\r\n        return tasks\r\n    }\r\n    _sortAndFilter(args) {\r\n        this._sieveOptions = args;\r\n        this._update(true);\r\n        var selectedRowKey = this.option(\"selectedRowKey\");\r\n        this._selectTask(selectedRowKey)\r\n    }\r\n    getSieveOptions() {\r\n        return this._sieveOptions\r\n    }\r\n    getGanttDependenciesData() {\r\n        return this.option(\"dependencies\")\r\n    }\r\n    getGanttResourcesData() {\r\n        return this.option(\"resources\")\r\n    }\r\n    getGanttResourceAssignmentsData() {\r\n        return this.option(\"resourceAssignments\")\r\n    }\r\n    getGanttWorkTimeRules() {\r\n        return null\r\n    }\r\n    getExternalTaskAreaContainer(element) {\r\n        if (!this._taskAreaContainer) {\r\n            this._taskAreaContainer = new TaskAreaContainer(element, this)\r\n        }\r\n        return this._taskAreaContainer\r\n    }\r\n    prepareExternalTaskAreaContainer(element, info) {\r\n        if (null !== info && void 0 !== info && info.height) {\r\n            this._taskAreaContainer._scrollView.option(\"height\", info.height)\r\n        }\r\n    }\r\n    changeGanttTaskSelection(id, selected) {\r\n        this._onSelectionChanged({\r\n            id: id,\r\n            selected: selected\r\n        })\r\n    }\r\n    onGanttScroll(scrollTop) {\r\n        this._onScroll({\r\n            scrollTop: scrollTop\r\n        })\r\n    }\r\n    showDialog(name, parameters, callback, afterClosing) {\r\n        this._onDialogShowing({\r\n            name: name,\r\n            parameters: parameters,\r\n            callback: callback,\r\n            afterClosing: afterClosing\r\n        })\r\n    }\r\n    getModelChangesListener() {\r\n        return this.option(\"modelChangesListener\")\r\n    }\r\n    getExportInfo() {\r\n        return this.option(\"exportInfo\")\r\n    }\r\n    showPopupMenu(info) {\r\n        this._onPopupMenuShowing(info)\r\n    }\r\n    hidePopupMenu(info) {\r\n        this._onPopupMenuHiding(info)\r\n    }\r\n    getMainElement() {\r\n        return this.option(\"mainElement\").get(0)\r\n    }\r\n    adjustControl() {\r\n        this._onAdjustControl()\r\n    }\r\n    getRequireFirstLoadParentAutoCalc() {\r\n        return this.option(\"validation.autoUpdateParentTasks\")\r\n    }\r\n    collapseAll() {\r\n        this._collapseAll()\r\n    }\r\n    expandAll() {\r\n        this._expandAll()\r\n    }\r\n    onTaskClick(key, event) {\r\n        this._taskClick({\r\n            key: key,\r\n            event: event\r\n        });\r\n        return true\r\n    }\r\n    onTaskDblClick(key, event) {\r\n        return this._taskDblClick({\r\n            key: key,\r\n            event: event\r\n        })\r\n    }\r\n    onGanttViewContextMenu(event, key, type) {\r\n        return true\r\n    }\r\n    getFormattedDateText(date) {\r\n        var result = \"\";\r\n        if (date) {\r\n            var datePart = dateLocalization.format(date, \"shortDate\");\r\n            var timePart = dateLocalization.format(date, \"hh:mm\");\r\n            result = datePart + \" \" + timePart\r\n        }\r\n        return result\r\n    }\r\n    destroyTemplate(container) {\r\n        $(container).empty()\r\n    }\r\n    onTaskAreaSizeChanged(info) {\r\n        var scrollView = this._taskAreaContainer._scrollView;\r\n        if (isDefined(null === info || void 0 === info ? void 0 : info.height)) {\r\n            var direction = (null === info || void 0 === info ? void 0 : info.height) > this._taskAreaContainer.getHeight() ? \"both\" : \"horizontal\";\r\n            scrollView.option(\"direction\", direction)\r\n        }\r\n    }\r\n    getTreeListTableStyle() {\r\n        return this.callExportHelperMethod(\"getTreeListTableStyle\")\r\n    }\r\n    getTreeListColCount() {\r\n        return this.callExportHelperMethod(\"getTreeListColCount\")\r\n    }\r\n    getTreeListHeaderInfo(colIndex) {\r\n        return this.callExportHelperMethod(\"getTreeListHeaderInfo\", colIndex)\r\n    }\r\n    getTreeListCellInfo(rowIndex, colIndex, key) {\r\n        return this.callExportHelperMethod(\"getTreeListCellInfo\", key, colIndex)\r\n    }\r\n    callExportHelperMethod(methodName) {\r\n        var helper = this.option(\"exportHelper\");\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n            args[_key - 1] = arguments[_key]\r\n        }\r\n        return helper[methodName](...args)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}