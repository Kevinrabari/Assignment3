{"ast":null,"code":"/**\n* DevExpress Analytics (widgets\\internal\\_valueEditorHelper.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValueEditorHelper = void 0;\n\nvar $ = require(\"jquery\");\n\nvar _utils_1 = require(\"../../serializer/_utils\");\n\nvar ValueEditorHelper = function () {\n  function ValueEditorHelper() {}\n\n  ValueEditorHelper._getCharFromKeyCode = function (e) {\n    if (e.ctrlKey === false && e.key.length === 1) return e.key;\n    return null;\n  };\n\n  ValueEditorHelper._getCaretPosition = function (el) {\n    var start = -1,\n        end = -1,\n        normalizedValue,\n        range,\n        textInputRange,\n        len,\n        endRange;\n\n    try {\n      if (typeof el.selectionStart == 'number' && typeof el.selectionEnd == 'number') {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n      } else if (document['selection']) {\n        range = document['selection'].createRange();\n\n        if (range && range.parentElement() == el) {\n          len = el.value.length;\n          normalizedValue = el.value.replace(/\\r\\n/g, '\\n');\n          textInputRange = el.createTextRange();\n          textInputRange.moveToBookmark(range.getBookmark());\n          endRange = el.createTextRange();\n          endRange.collapse(false);\n\n          if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {\n            start = end = len;\n          } else {\n            start = -textInputRange.moveStart('character', -len);\n            start += normalizedValue.slice(0, start).split('\\n').length - 1;\n\n            if (textInputRange.compareEndPoints('EndToEnd', endRange) > -1) {\n              end = len;\n            } else {\n              end = -textInputRange.moveEnd('character', -len);\n              end += normalizedValue.slice(0, end).split('\\n').length - 1;\n            }\n          }\n        }\n      }\n    } catch (e) {}\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  ValueEditorHelper._validate = function (value, minValue, maxValue) {\n    var _a, _b, _c, _d;\n\n    if (!/^(0|(-?(([1-9]\\d*)|(0\\.\\d+)|([1-9]\\d*\\.\\d+)|(\\d*\\.\\d+[eE][+\\-]?\\d+))))$/.test(value)) return false;\n    if (!maxValue) return true;\n    var negative = value[0] === '-';\n    var valModulo = negative ? value.substring(1) : value;\n    if (negative && !minValue) return false;\n    var boundModulo = negative ? minValue.substring(1) : maxValue;\n    var valMantissa, valExp, boundMantissa, boundExp;\n    _a = valModulo.toLowerCase().split('e'), valMantissa = _a[0], valExp = _a[1];\n    _b = boundModulo.toLowerCase().split('e'), boundMantissa = _b[0], boundExp = _b[1];\n    var valIntPart, valFracPart, boundIntPart, boundFracPart;\n    _c = valMantissa.split('.'), valIntPart = _c[0], valFracPart = _c[1];\n    _d = boundMantissa.split('.'), boundIntPart = _d[0], boundFracPart = _d[1];\n    valIntPart = (valIntPart || '').replace(/^0+/, '');\n    boundIntPart = (boundIntPart || '').replace(/^0+/, '');\n    var valOrder = valIntPart.length;\n    if (valExp) valOrder += parseInt(valExp);\n    var boundOrder = boundIntPart.length;\n    if (boundExp) boundOrder += parseInt(boundExp);\n    if (valOrder < boundOrder) return true;\n    if (valOrder > boundOrder) return false;\n    valFracPart = valFracPart || '0';\n    boundFracPart = boundFracPart || '0';\n    if (valIntPart + valFracPart > boundIntPart + boundFracPart) return false;\n    return true;\n  };\n\n  ValueEditorHelper.validateWidgetValue = function (e, validate, defaultVal) {\n    var currentValue = e.component.option('value');\n\n    if (!validate(currentValue)) {\n      e.component.option('value', defaultVal);\n    }\n  };\n\n  ValueEditorHelper.getNumberEditorOptions = function (id, specifics, extendOptions) {\n    if (extendOptions === void 0) {\n      extendOptions = {};\n    }\n\n    var editorOptions = ValueEditorHelper.editors[id] || ValueEditorHelper.editors[specifics];\n    return editorOptions ? ValueEditorHelper.getValueEditorOptions(editorOptions.regExpEditing, function (value) {\n      return ValueEditorHelper._validate(value, editorOptions.minValue, editorOptions.maxValue);\n    }, '', extendOptions) : extendOptions;\n  };\n\n  ValueEditorHelper.getValueEditorOptions = function (regExpEditing, validate, defaultVal, extendOptions) {\n    var _this = this;\n\n    if (extendOptions === void 0) {\n      extendOptions = {};\n    }\n\n    var options = {\n      onFocusIn: function (e) {\n        ValueEditorHelper.validateWidgetValue(e, validate, defaultVal);\n\n        ValueEditorHelper._invokeStandardHandler(extendOptions, 'onFocusIn', e);\n      },\n      onKeyDown: function (e) {\n        var char = ValueEditorHelper._getCharFromKeyCode(e.event);\n\n        if (!char) return;\n        var $input = $(e.element).find('input').eq(0);\n\n        var caretPosition = ValueEditorHelper._getCaretPosition($input.get(0));\n\n        var currentValue = $input.val();\n\n        if (caretPosition.start < 0) {\n          caretPosition = currentValue ? currentValue.length : 0;\n        }\n\n        var result = [currentValue.slice(0, caretPosition.start), char, currentValue.slice(caretPosition.end)].join('');\n        if (!regExpEditing.test(result)) e.event.preventDefault();\n        $input = null;\n\n        ValueEditorHelper._invokeStandardHandler(extendOptions, 'onKeyDown', e);\n      },\n      onPaste: function (e) {\n        var clipboardData = e.event.originalEvent.clipboardData || window['clipboardData'] || {};\n        var pastedData = clipboardData.getData && clipboardData.getData('Text');\n        if (typeof pastedData !== 'string') return;\n        var $input = $(e.element).find('input').eq(0);\n\n        var caretPosition = ValueEditorHelper._getCaretPosition($input.get(0));\n\n        var currentValue = $input.val();\n\n        if (caretPosition.start < 0) {\n          caretPosition.end = caretPosition.start = currentValue ? currentValue.length : 0;\n        }\n\n        var result = [currentValue.slice(0, caretPosition.start), pastedData, currentValue.slice(caretPosition.end)].join('');\n        if (!regExpEditing.test(result)) e.event.preventDefault();\n        $input = null;\n\n        ValueEditorHelper._invokeStandardHandler(extendOptions, 'onPaste', e);\n      },\n      onValueChanged: function (e) {\n        if (e.value !== defaultVal) _this.validateWidgetValue(e, validate, e.previousValue);\n\n        ValueEditorHelper._invokeStandardHandler(extendOptions, 'onValueChanged', e);\n      }\n    };\n    return _utils_1.extend({}, extendOptions, options);\n  };\n\n  ValueEditorHelper.isValid = function (id, specifics, value) {\n    var editorOptions = ValueEditorHelper.editors[id] || ValueEditorHelper.editors[specifics];\n    return editorOptions.regExpEditing.test(value) && ValueEditorHelper._validate(value, editorOptions.minValue, editorOptions.maxValue);\n  };\n\n  ValueEditorHelper._invokeStandardHandler = function (extendOptions, name, e) {\n    if ($.isFunction(extendOptions[name])) extendOptions[name](e);\n  };\n\n  ValueEditorHelper.editors = {\n    'integer': {\n      regExpEditing: /^-?\\d*$/\n    },\n    'float': {\n      regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d+)?$/\n    },\n    'System.Byte': {\n      regExpEditing: /^\\d*$/,\n      minValue: null,\n      maxValue: '255'\n    },\n    'System.SByte': {\n      regExpEditing: /^-?\\d*$/,\n      minValue: '-128',\n      maxValue: '127'\n    },\n    'System.Int16': {\n      regExpEditing: /^-?\\d*$/,\n      minValue: '-32768',\n      maxValue: '32767'\n    },\n    'System.UInt16': {\n      regExpEditing: /^\\d*$/,\n      minValue: null,\n      maxValue: '65535'\n    },\n    'System.Int32': {\n      regExpEditing: /^-?\\d*$/,\n      minValue: '-2147483648',\n      maxValue: '2147483647'\n    },\n    'System.UInt32': {\n      regExpEditing: /^\\d*$/,\n      minValue: null,\n      maxValue: '4294967295'\n    },\n    'System.Int64': {\n      regExpEditing: /^-?\\d*$/,\n      minValue: '-9223372036854775808',\n      maxValue: '9223372036854775807'\n    },\n    'System.UInt64': {\n      regExpEditing: /^\\d*$/,\n      minValue: null,\n      maxValue: '18446744073709551615'\n    },\n    'System.Single': {\n      regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d*)?$/,\n      minValue: '-3.40282347e+38',\n      maxValue: '3.40282347e+38'\n    },\n    'System.Double': {\n      regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d*)?$/,\n      minValue: '-1.7976931348623157e+308',\n      maxValue: '1.7976931348623157e+308'\n    },\n    'System.Decimal': {\n      regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d*)?$/,\n      minValue: '-79228162514264337593543950335',\n      maxValue: '79228162514264337593543950335'\n    }\n  };\n  return ValueEditorHelper;\n}();\n\nexports.ValueEditorHelper = ValueEditorHelper;","map":{"version":3,"sources":["/Users/kevinrabari/Desktop/Georgian College Work/1005_ Mobile Web Application/Assignment3/node_modules/@devexpress/analytics-core/widgets/internal/_valueEditorHelper.js"],"names":["Object","defineProperty","exports","value","ValueEditorHelper","$","require","_utils_1","_getCharFromKeyCode","e","ctrlKey","key","length","_getCaretPosition","el","start","end","normalizedValue","range","textInputRange","len","endRange","selectionStart","selectionEnd","document","createRange","parentElement","replace","createTextRange","moveToBookmark","getBookmark","collapse","compareEndPoints","moveStart","slice","split","moveEnd","_validate","minValue","maxValue","_a","_b","_c","_d","test","negative","valModulo","substring","boundModulo","valMantissa","valExp","boundMantissa","boundExp","toLowerCase","valIntPart","valFracPart","boundIntPart","boundFracPart","valOrder","parseInt","boundOrder","validateWidgetValue","validate","defaultVal","currentValue","component","option","getNumberEditorOptions","id","specifics","extendOptions","editorOptions","editors","getValueEditorOptions","regExpEditing","_this","options","onFocusIn","_invokeStandardHandler","onKeyDown","char","event","$input","element","find","eq","caretPosition","get","val","result","join","preventDefault","onPaste","clipboardData","originalEvent","window","pastedData","getData","onValueChanged","previousValue","extend","isValid","name","isFunction"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (widgets\\internal\\_valueEditorHelper.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueEditorHelper = void 0;\nvar $ = require(\"jquery\");\nvar _utils_1 = require(\"../../serializer/_utils\");\nvar ValueEditorHelper = (function () {\n    function ValueEditorHelper() {\n    }\n    ValueEditorHelper._getCharFromKeyCode = function (e) {\n        if (e.ctrlKey === false && e.key.length === 1)\n            return e.key;\n        return null;\n    };\n    ValueEditorHelper._getCaretPosition = function (el) {\n        var start = -1, end = -1, normalizedValue, range, textInputRange, len, endRange;\n        try {\n            if (typeof el.selectionStart == 'number' && typeof el.selectionEnd == 'number') {\n                start = el.selectionStart;\n                end = el.selectionEnd;\n            }\n            else if (document['selection']) {\n                range = document['selection'].createRange();\n                if (range && range.parentElement() == el) {\n                    len = el.value.length;\n                    normalizedValue = el.value.replace(/\\r\\n/g, '\\n');\n                    textInputRange = el.createTextRange();\n                    textInputRange.moveToBookmark(range.getBookmark());\n                    endRange = el.createTextRange();\n                    endRange.collapse(false);\n                    if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {\n                        start = end = len;\n                    }\n                    else {\n                        start = -textInputRange.moveStart('character', -len);\n                        start += normalizedValue.slice(0, start).split('\\n').length - 1;\n                        if (textInputRange.compareEndPoints('EndToEnd', endRange) > -1) {\n                            end = len;\n                        }\n                        else {\n                            end = -textInputRange.moveEnd('character', -len);\n                            end += normalizedValue.slice(0, end).split('\\n').length - 1;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n        }\n        return {\n            start: start,\n            end: end\n        };\n    };\n    ValueEditorHelper._validate = function (value, minValue, maxValue) {\n        var _a, _b, _c, _d;\n        if (!/^(0|(-?(([1-9]\\d*)|(0\\.\\d+)|([1-9]\\d*\\.\\d+)|(\\d*\\.\\d+[eE][+\\-]?\\d+))))$/.test(value))\n            return false;\n        if (!maxValue)\n            return true;\n        var negative = value[0] === '-';\n        var valModulo = negative ? value.substring(1) : value;\n        if (negative && !minValue)\n            return false;\n        var boundModulo = negative ? minValue.substring(1) : maxValue;\n        var valMantissa, valExp, boundMantissa, boundExp;\n        _a = valModulo.toLowerCase().split('e'), valMantissa = _a[0], valExp = _a[1];\n        _b = boundModulo.toLowerCase().split('e'), boundMantissa = _b[0], boundExp = _b[1];\n        var valIntPart, valFracPart, boundIntPart, boundFracPart;\n        _c = valMantissa.split('.'), valIntPart = _c[0], valFracPart = _c[1];\n        _d = boundMantissa.split('.'), boundIntPart = _d[0], boundFracPart = _d[1];\n        valIntPart = (valIntPart || '').replace(/^0+/, '');\n        boundIntPart = (boundIntPart || '').replace(/^0+/, '');\n        var valOrder = valIntPart.length;\n        if (valExp)\n            valOrder += parseInt(valExp);\n        var boundOrder = boundIntPart.length;\n        if (boundExp)\n            boundOrder += parseInt(boundExp);\n        if (valOrder < boundOrder)\n            return true;\n        if (valOrder > boundOrder)\n            return false;\n        valFracPart = valFracPart || '0';\n        boundFracPart = boundFracPart || '0';\n        if (valIntPart + valFracPart > boundIntPart + boundFracPart)\n            return false;\n        return true;\n    };\n    ValueEditorHelper.validateWidgetValue = function (e, validate, defaultVal) {\n        var currentValue = e.component.option('value');\n        if (!validate(currentValue)) {\n            e.component.option('value', defaultVal);\n        }\n    };\n    ValueEditorHelper.getNumberEditorOptions = function (id, specifics, extendOptions) {\n        if (extendOptions === void 0) { extendOptions = {}; }\n        var editorOptions = ValueEditorHelper.editors[id] || ValueEditorHelper.editors[specifics];\n        return editorOptions ? ValueEditorHelper.getValueEditorOptions(editorOptions.regExpEditing, function (value) {\n            return ValueEditorHelper._validate(value, editorOptions.minValue, editorOptions.maxValue);\n        }, '', extendOptions) : extendOptions;\n    };\n    ValueEditorHelper.getValueEditorOptions = function (regExpEditing, validate, defaultVal, extendOptions) {\n        var _this = this;\n        if (extendOptions === void 0) { extendOptions = {}; }\n        var options = {\n            onFocusIn: function (e) {\n                ValueEditorHelper.validateWidgetValue(e, validate, defaultVal);\n                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onFocusIn', e);\n            },\n            onKeyDown: function (e) {\n                var char = ValueEditorHelper._getCharFromKeyCode(e.event);\n                if (!char)\n                    return;\n                var $input = $(e.element).find('input').eq(0);\n                var caretPosition = ValueEditorHelper._getCaretPosition($input.get(0));\n                var currentValue = $input.val();\n                if (caretPosition.start < 0) {\n                    caretPosition = currentValue ? currentValue.length : 0;\n                }\n                var result = [currentValue.slice(0, caretPosition.start), char, currentValue.slice(caretPosition.end)].join('');\n                if (!regExpEditing.test(result))\n                    e.event.preventDefault();\n                $input = null;\n                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onKeyDown', e);\n            },\n            onPaste: function (e) {\n                var clipboardData = e.event.originalEvent.clipboardData || window['clipboardData'] || {};\n                var pastedData = clipboardData.getData && clipboardData.getData('Text');\n                if (typeof pastedData !== 'string')\n                    return;\n                var $input = $(e.element).find('input').eq(0);\n                var caretPosition = ValueEditorHelper._getCaretPosition($input.get(0));\n                var currentValue = $input.val();\n                if (caretPosition.start < 0) {\n                    caretPosition.end = caretPosition.start = currentValue ? currentValue.length : 0;\n                }\n                var result = [\n                    currentValue.slice(0, caretPosition.start), pastedData, currentValue.slice(caretPosition.end)\n                ].join('');\n                if (!regExpEditing.test(result))\n                    e.event.preventDefault();\n                $input = null;\n                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onPaste', e);\n            },\n            onValueChanged: function (e) {\n                if (e.value !== defaultVal)\n                    _this.validateWidgetValue(e, validate, e.previousValue);\n                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onValueChanged', e);\n            }\n        };\n        return _utils_1.extend({}, extendOptions, options);\n    };\n    ValueEditorHelper.isValid = function (id, specifics, value) {\n        var editorOptions = ValueEditorHelper.editors[id] || ValueEditorHelper.editors[specifics];\n        return editorOptions.regExpEditing.test(value) && ValueEditorHelper._validate(value, editorOptions.minValue, editorOptions.maxValue);\n    };\n    ValueEditorHelper._invokeStandardHandler = function (extendOptions, name, e) {\n        if ($.isFunction(extendOptions[name]))\n            extendOptions[name](e);\n    };\n    ValueEditorHelper.editors = {\n        'integer': {\n            regExpEditing: /^-?\\d*$/\n        },\n        'float': {\n            regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d+)?$/\n        },\n        'System.Byte': {\n            regExpEditing: /^\\d*$/,\n            minValue: null,\n            maxValue: '255'\n        },\n        'System.SByte': {\n            regExpEditing: /^-?\\d*$/,\n            minValue: '-128',\n            maxValue: '127'\n        },\n        'System.Int16': {\n            regExpEditing: /^-?\\d*$/,\n            minValue: '-32768',\n            maxValue: '32767'\n        },\n        'System.UInt16': {\n            regExpEditing: /^\\d*$/,\n            minValue: null,\n            maxValue: '65535'\n        },\n        'System.Int32': {\n            regExpEditing: /^-?\\d*$/,\n            minValue: '-2147483648',\n            maxValue: '2147483647'\n        },\n        'System.UInt32': {\n            regExpEditing: /^\\d*$/,\n            minValue: null,\n            maxValue: '4294967295'\n        },\n        'System.Int64': {\n            regExpEditing: /^-?\\d*$/,\n            minValue: '-9223372036854775808',\n            maxValue: '9223372036854775807'\n        },\n        'System.UInt64': {\n            regExpEditing: /^\\d*$/,\n            minValue: null,\n            maxValue: '18446744073709551615'\n        },\n        'System.Single': {\n            regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d*)?$/,\n            minValue: '-3.40282347e+38',\n            maxValue: '3.40282347e+38'\n        },\n        'System.Double': {\n            regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d*)?$/,\n            minValue: '-1.7976931348623157e+308',\n            maxValue: '1.7976931348623157e+308'\n        },\n        'System.Decimal': {\n            regExpEditing: /^-?(\\d+\\.?\\d*)?([eE][+\\-]?\\d*)?$/,\n            minValue: '-79228162514264337593543950335',\n            maxValue: '79228162514264337593543950335'\n        }\n    };\n    return ValueEditorHelper;\n}());\nexports.ValueEditorHelper = ValueEditorHelper;\n"]},"metadata":{},"sourceType":"script"}