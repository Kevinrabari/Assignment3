{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\elements\\_federationQueryModel.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FederationTableSurface = exports.FederationTableViewModel = exports.FederationQuerySurface = exports.FederationQueryViewModel = exports.federationQuerySerializationsInfo = void 0;\n\nvar ko = require(\"knockout\");\n\nvar _arrayutils_1 = require(\"../../core/utils/_arrayutils\");\n\nvar serializer_1 = require(\"../../serializer/serializer\");\n\nvar utils_1 = require(\"../../serializer/utils\");\n\nvar _utils_1 = require(\"../../serializer/_utils\");\n\nvar sourceQuery_1 = require(\"../dataSource/federation/federatedQueries/sourceQuery\");\n\nvar subNode_1 = require(\"../dataSource/federation/federatedQueries/subNode\");\n\nvar federatedQueryExpression_1 = require(\"../dataSource/federation/federatedQueryExpression\");\n\nvar utils_2 = require(\"../dataSource/utils\");\n\nvar _columnExpressionCollectionHelper_1 = require(\"../utils/_columnExpressionCollectionHelper\");\n\nvar columnExpression_1 = require(\"./columnExpression\");\n\nvar parameterModelMeta_1 = require(\"./parameterModelMeta\");\n\nvar queryModel_1 = require(\"./queryModel\");\n\nvar querySurface_1 = require(\"./querySurface\");\n\nvar tableModel_1 = require(\"./tableModel\");\n\nvar tableSurface_1 = require(\"./tableSurface\");\n\nvar _federationColumnModel_1 = require(\"./_federationColumnModel\");\n\nexports.federationQuerySerializationsInfo = [{\n  propertyName: 'name',\n  modelName: '@Alias'\n}, {\n  propertyName: 'type',\n  modelName: '@Type'\n}, {\n  propertyName: 'itemType',\n  modelName: '@ItemType'\n}, {\n  propertyName: 'queryType',\n  modelName: '@QueryType'\n}, {\n  propertyName: 'rootModel',\n  modelName: 'Root'\n}, {\n  propertyName: 'expressions',\n  modelName: 'Expressions',\n  array: true\n}, {\n  propertyName: 'subNodes',\n  modelName: 'SubNodes',\n  array: true\n}];\n\nvar FederationQueryViewModel = function (_super) {\n  __extends(FederationQueryViewModel, _super);\n\n  function FederationQueryViewModel(querySource, dataSource, _dbSchemaProvider, parametersMode, serializer) {\n    if (parametersMode === void 0) {\n      parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite;\n    }\n\n    var _this = _super.call(this, _utils_1.extend(true, querySource, FederationQueryViewModel.emptyModel, querySource), _dbSchemaProvider, parametersMode, function (data) {\n      return data;\n    }, serializer) || this;\n\n    _this._dbSchemaProvider = _dbSchemaProvider;\n    _this.serializer = serializer;\n    _this.expressions = ko.observableArray();\n    _this.subNodes = ko.observableArray();\n    _this.controlType = 'FQuery';\n    _this.defaultPageHeight = 300;\n    _this.topOffset = 20;\n    _this.dataSource = dataSource;\n    var _relations = [];\n    _this.tables = ko.observableArray();\n\n    if (querySource['Root']) {\n      _this.tables.push(_this._createTableViewModel(querySource['Root']));\n    }\n\n    Object.keys(querySource['SubNodes']).forEach(function (key) {\n      var subNode = new subNode_1.SubNode(querySource['SubNodes'][key], serializer);\n\n      var table = _this._createTableViewModel(querySource['SubNodes'][key]['Query']);\n\n      _this.tables.push(table);\n\n      _relations.push(subNode.createRelationModel(_this));\n    });\n    _this.columns = utils_1.deserializeArray(querySource['Expressions'], function (item) {\n      return new columnExpression_1.ColumnExpression({\n        '@Name': item['@Name'],\n        '@Alias': item['@Alias'],\n        '@Table': item['@NodeAlias'],\n        '#text': item['@ColumnExpression'],\n        '@ItemType': _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.federatedTypeToColumn(item['@ExpressionType'])\n      }, _this, serializer);\n    });\n    _this.relations = ko.observableArray(_relations);\n\n    _this.init();\n\n    return _this;\n  }\n\n  FederationQueryViewModel.prototype._initializeTable = function (table) {\n    this._dbSchemaProvider.getDbTable(table.name(), table.path).done(function (dbTable) {\n      table.createColumns(dbTable);\n    });\n  };\n\n  FederationQueryViewModel.prototype._createTableViewModel = function (model) {\n    var path = this.dataSource.getPathFromQueryName(model['@SourceName']);\n    return new FederationTableViewModel(model, this, path, this.serializer);\n  };\n\n  FederationQueryViewModel.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.dataSource = null;\n  };\n\n  FederationQueryViewModel.prototype.serialize = function (includeRootTag) {\n    var serializer = this.serializer || new serializer_1.ModelSerializer();\n    this.expressions(this.columns().map(function (column) {\n      var model = {\n        '@Alias': column.alias(),\n        '@ColumnExpression': column.expression(),\n        '@Name': column.column(),\n        '@NodeAlias': column.table()\n      };\n      model['@ExpressionType'] = _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.columnTypeToFederated(column.itemType());\n      return new federatedQueryExpression_1.FederatedQueryExpression(model, serializer);\n    }));\n    this.rootModel(this.tables()[0]);\n\n    var _tables = this.tables();\n\n    _tables.shift();\n\n    var _relations = this.relations();\n\n    this.subNodes(_tables.map(function (table) {\n      var relation = _arrayutils_1.findFirstItemMatchesCondition(_relations, function (relation) {\n        return relation.nestedTable() === table;\n      });\n\n      if (!relation) relation = _arrayutils_1.findFirstItemMatchesCondition(_relations, function (relation) {\n        return relation.parentTable() === table;\n      });\n\n      _relations.splice(_relations.indexOf(relation), 1);\n\n      return subNode_1.SubNode.deserializeRelationModel(table, relation);\n    }));\n    return _super.prototype.serialize.call(this, includeRootTag);\n  };\n\n  FederationQueryViewModel.prototype.createChild = function (info, model, path) {\n    return _super.prototype.createChild.call(this, info, info['@ControlType'] === 'FTable' ? new FederationTableViewModel(info, this, path) : undefined);\n  };\n\n  FederationQueryViewModel.prototype.getInfo = function () {\n    return exports.federationQuerySerializationsInfo;\n  };\n\n  FederationQueryViewModel.emptyModel = {\n    '@ItemType': 'Query',\n    'SubNodes': {},\n    'Expressions': {}\n  };\n  return FederationQueryViewModel;\n}(queryModel_1.QueryViewModelBase);\n\nexports.FederationQueryViewModel = FederationQueryViewModel;\n\nvar FederationQuerySurface = function (_super) {\n  __extends(FederationQuerySurface, _super);\n\n  function FederationQuerySurface() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return FederationQuerySurface;\n}(querySurface_1.QuerySurface);\n\nexports.FederationQuerySurface = FederationQuerySurface;\n\nvar FederationTableViewModel = function (_super) {\n  __extends(FederationTableViewModel, _super);\n\n  function FederationTableViewModel(model, parent, path, serializer) {\n    var _this = _super.call(this, model, parent, serializer) || this;\n\n    _this.controlType = 'FTable';\n    if (path && !model['@SourceName']) _this.sourceName(parent.dataSource.getQueryNameFromPath(path));\n\n    if (!_this.name()) {\n      _this.name(_this.sourceName());\n    }\n\n    !_this.alias() && _this.alias(_this.name());\n\n    _this._disposables.push(_this.queryType = ko.pureComputed(function () {\n      return utils_2.FederationQueryType[utils_2.FederationQueryType.SourceNode];\n    }));\n\n    _this.tableOffset(12);\n\n    var pathParts = path.split('.');\n    var dataSource = parent.dataSource.dataSources().filter(function (x) {\n      return x.id === pathParts[0] || x.ref === pathParts[0] || x.name === pathParts[0];\n    })[0];\n    _this.path = (dataSource.id || dataSource.ref) + (pathParts.length > 1 ? '.' + pathParts.slice(1).join('.') : '');\n    _this.displaySourceName = ko.observable(dataSource.name);\n    _this.asterisk = new _federationColumnModel_1.FederationAllColumnsViewModel(_this, _this.serializer);\n    return _this;\n  }\n\n  FederationTableViewModel.prototype.getInfo = function () {\n    return sourceQuery_1.sourceQuerySerializationsInfo;\n  };\n\n  FederationTableViewModel.prototype.getPath = function () {\n    return this.path;\n  };\n\n  FederationTableViewModel.prototype.createChildColumn = function (item) {\n    return new _federationColumnModel_1.FederationColumnViewModel({\n      '@Name': item.name\n    }, item, this, this.serializer);\n  };\n\n  return FederationTableViewModel;\n}(tableModel_1.TableViewModel);\n\nexports.FederationTableViewModel = FederationTableViewModel;\n\nvar FederationTableSurface = function (_super) {\n  __extends(FederationTableSurface, _super);\n\n  function FederationTableSurface() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.titletemplate = 'dxqb-federation-table-title';\n    return _this;\n  }\n\n  return FederationTableSurface;\n}(tableSurface_1.TableSurface);\n\nexports.FederationTableSurface = FederationTableSurface;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/elements/_federationQueryModel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","FederationTableSurface","FederationTableViewModel","FederationQuerySurface","FederationQueryViewModel","federationQuerySerializationsInfo","ko","require","_arrayutils_1","serializer_1","utils_1","_utils_1","sourceQuery_1","subNode_1","federatedQueryExpression_1","utils_2","_columnExpressionCollectionHelper_1","columnExpression_1","parameterModelMeta_1","queryModel_1","querySurface_1","tableModel_1","tableSurface_1","_federationColumnModel_1","propertyName","modelName","array","_super","querySource","dataSource","_dbSchemaProvider","parametersMode","serializer","ParametersMode","ReadWrite","_this","extend","emptyModel","data","expressions","observableArray","subNodes","controlType","defaultPageHeight","topOffset","_relations","tables","push","_createTableViewModel","keys","forEach","key","subNode","SubNode","table","createRelationModel","columns","deserializeArray","item","ColumnExpression","ColumnExpressionCollectionHelper","federatedTypeToColumn","relations","init","_initializeTable","getDbTable","name","path","done","dbTable","createColumns","model","getPathFromQueryName","dispose","serialize","includeRootTag","ModelSerializer","map","column","alias","expression","columnTypeToFederated","itemType","FederatedQueryExpression","rootModel","_tables","shift","relation","findFirstItemMatchesCondition","nestedTable","parentTable","splice","indexOf","deserializeRelationModel","createChild","info","undefined","getInfo","QueryViewModelBase","apply","arguments","QuerySurface","parent","sourceName","getQueryNameFromPath","_disposables","queryType","pureComputed","FederationQueryType","SourceNode","tableOffset","pathParts","split","dataSources","filter","x","id","ref","length","slice","join","displaySourceName","observable","asterisk","FederationAllColumnsViewModel","sourceQuerySerializationsInfo","getPath","createChildColumn","FederationColumnViewModel","TableViewModel","titletemplate","TableSurface"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\elements\\_federationQueryModel.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FederationTableSurface = exports.FederationTableViewModel = exports.FederationQuerySurface = exports.FederationQueryViewModel = exports.federationQuerySerializationsInfo = void 0;\nvar ko = require(\"knockout\");\nvar _arrayutils_1 = require(\"../../core/utils/_arrayutils\");\nvar serializer_1 = require(\"../../serializer/serializer\");\nvar utils_1 = require(\"../../serializer/utils\");\nvar _utils_1 = require(\"../../serializer/_utils\");\nvar sourceQuery_1 = require(\"../dataSource/federation/federatedQueries/sourceQuery\");\nvar subNode_1 = require(\"../dataSource/federation/federatedQueries/subNode\");\nvar federatedQueryExpression_1 = require(\"../dataSource/federation/federatedQueryExpression\");\nvar utils_2 = require(\"../dataSource/utils\");\nvar _columnExpressionCollectionHelper_1 = require(\"../utils/_columnExpressionCollectionHelper\");\nvar columnExpression_1 = require(\"./columnExpression\");\nvar parameterModelMeta_1 = require(\"./parameterModelMeta\");\nvar queryModel_1 = require(\"./queryModel\");\nvar querySurface_1 = require(\"./querySurface\");\nvar tableModel_1 = require(\"./tableModel\");\nvar tableSurface_1 = require(\"./tableSurface\");\nvar _federationColumnModel_1 = require(\"./_federationColumnModel\");\nexports.federationQuerySerializationsInfo = [\n    { propertyName: 'name', modelName: '@Alias' },\n    { propertyName: 'type', modelName: '@Type' },\n    { propertyName: 'itemType', modelName: '@ItemType' },\n    { propertyName: 'queryType', modelName: '@QueryType' },\n    { propertyName: 'rootModel', modelName: 'Root' },\n    { propertyName: 'expressions', modelName: 'Expressions', array: true },\n    { propertyName: 'subNodes', modelName: 'SubNodes', array: true },\n];\nvar FederationQueryViewModel = (function (_super) {\n    __extends(FederationQueryViewModel, _super);\n    function FederationQueryViewModel(querySource, dataSource, _dbSchemaProvider, parametersMode, serializer) {\n        if (parametersMode === void 0) { parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite; }\n        var _this = _super.call(this, _utils_1.extend(true, querySource, FederationQueryViewModel.emptyModel, querySource), _dbSchemaProvider, parametersMode, function (data) { return data; }, serializer) || this;\n        _this._dbSchemaProvider = _dbSchemaProvider;\n        _this.serializer = serializer;\n        _this.expressions = ko.observableArray();\n        _this.subNodes = ko.observableArray();\n        _this.controlType = 'FQuery';\n        _this.defaultPageHeight = 300;\n        _this.topOffset = 20;\n        _this.dataSource = dataSource;\n        var _relations = [];\n        _this.tables = ko.observableArray();\n        if (querySource['Root']) {\n            _this.tables.push(_this._createTableViewModel(querySource['Root']));\n        }\n        Object.keys(querySource['SubNodes']).forEach(function (key) {\n            var subNode = new subNode_1.SubNode(querySource['SubNodes'][key], serializer);\n            var table = _this._createTableViewModel(querySource['SubNodes'][key]['Query']);\n            _this.tables.push(table);\n            _relations.push(subNode.createRelationModel(_this));\n        });\n        _this.columns = utils_1.deserializeArray(querySource['Expressions'], function (item) { return new columnExpression_1.ColumnExpression({ '@Name': item['@Name'], '@Alias': item['@Alias'], '@Table': item['@NodeAlias'], '#text': item['@ColumnExpression'], '@ItemType': _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.federatedTypeToColumn(item['@ExpressionType']) }, _this, serializer); });\n        _this.relations = ko.observableArray(_relations);\n        _this.init();\n        return _this;\n    }\n    FederationQueryViewModel.prototype._initializeTable = function (table) {\n        this._dbSchemaProvider.getDbTable(table.name(), table.path)\n            .done(function (dbTable) {\n            table.createColumns(dbTable);\n        });\n    };\n    FederationQueryViewModel.prototype._createTableViewModel = function (model) {\n        var path = this.dataSource.getPathFromQueryName(model['@SourceName']);\n        return new FederationTableViewModel(model, this, path, this.serializer);\n    };\n    FederationQueryViewModel.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.dataSource = null;\n    };\n    FederationQueryViewModel.prototype.serialize = function (includeRootTag) {\n        var serializer = this.serializer || new serializer_1.ModelSerializer();\n        this.expressions(this.columns().map(function (column) {\n            var model = {\n                '@Alias': column.alias(),\n                '@ColumnExpression': column.expression(),\n                '@Name': column.column(),\n                '@NodeAlias': column.table()\n            };\n            model['@ExpressionType'] = _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.columnTypeToFederated(column.itemType());\n            return new federatedQueryExpression_1.FederatedQueryExpression(model, serializer);\n        }));\n        this.rootModel(this.tables()[0]);\n        var _tables = this.tables();\n        _tables.shift();\n        var _relations = this.relations();\n        this.subNodes(_tables.map(function (table) {\n            var relation = _arrayutils_1.findFirstItemMatchesCondition(_relations, function (relation) { return relation.nestedTable() === table; });\n            if (!relation)\n                relation = _arrayutils_1.findFirstItemMatchesCondition(_relations, function (relation) { return relation.parentTable() === table; });\n            _relations.splice(_relations.indexOf(relation), 1);\n            return subNode_1.SubNode.deserializeRelationModel(table, relation);\n        }));\n        return _super.prototype.serialize.call(this, includeRootTag);\n    };\n    FederationQueryViewModel.prototype.createChild = function (info, model, path) {\n        return _super.prototype.createChild.call(this, info, info['@ControlType'] === 'FTable' ? new FederationTableViewModel(info, this, path) : undefined);\n    };\n    FederationQueryViewModel.prototype.getInfo = function () {\n        return exports.federationQuerySerializationsInfo;\n    };\n    FederationQueryViewModel.emptyModel = { '@ItemType': 'Query', 'SubNodes': {}, 'Expressions': {} };\n    return FederationQueryViewModel;\n}(queryModel_1.QueryViewModelBase));\nexports.FederationQueryViewModel = FederationQueryViewModel;\nvar FederationQuerySurface = (function (_super) {\n    __extends(FederationQuerySurface, _super);\n    function FederationQuerySurface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FederationQuerySurface;\n}(querySurface_1.QuerySurface));\nexports.FederationQuerySurface = FederationQuerySurface;\nvar FederationTableViewModel = (function (_super) {\n    __extends(FederationTableViewModel, _super);\n    function FederationTableViewModel(model, parent, path, serializer) {\n        var _this = _super.call(this, model, parent, serializer) || this;\n        _this.controlType = 'FTable';\n        if (path && !model['@SourceName'])\n            _this.sourceName(parent.dataSource.getQueryNameFromPath(path));\n        if (!_this.name()) {\n            _this.name(_this.sourceName());\n        }\n        !_this.alias() && _this.alias(_this.name());\n        _this._disposables.push(_this.queryType = ko.pureComputed(function () { return utils_2.FederationQueryType[utils_2.FederationQueryType.SourceNode]; }));\n        _this.tableOffset(12);\n        var pathParts = path.split('.');\n        var dataSource = parent.dataSource.dataSources().filter(function (x) {\n            return x.id === pathParts[0] || x.ref === pathParts[0] || x.name === pathParts[0];\n        })[0];\n        _this.path = (dataSource.id || dataSource.ref) + (pathParts.length > 1 ? '.' + pathParts.slice(1).join('.') : '');\n        _this.displaySourceName = ko.observable(dataSource.name);\n        _this.asterisk = new _federationColumnModel_1.FederationAllColumnsViewModel(_this, _this.serializer);\n        return _this;\n    }\n    FederationTableViewModel.prototype.getInfo = function () {\n        return sourceQuery_1.sourceQuerySerializationsInfo;\n    };\n    FederationTableViewModel.prototype.getPath = function () {\n        return this.path;\n    };\n    FederationTableViewModel.prototype.createChildColumn = function (item) {\n        return new _federationColumnModel_1.FederationColumnViewModel({ '@Name': item.name }, item, this, this.serializer);\n    };\n    return FederationTableViewModel;\n}(tableModel_1.TableViewModel));\nexports.FederationTableViewModel = FederationTableViewModel;\nvar FederationTableSurface = (function (_super) {\n    __extends(FederationTableSurface, _super);\n    function FederationTableSurface() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.titletemplate = 'dxqb-federation-table-title';\n        return _this;\n    }\n    return FederationTableSurface;\n}(tableSurface_1.TableSurface));\nexports.FederationTableSurface = FederationTableSurface;\n"]},"metadata":{},"sourceType":"script"}