{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\wizard\\pages\\multiQueryWizard\\multiQueryConfigurePage.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._registerMultiQueryConfigurePage = exports.MultiQueryConfigurePage = void 0;\n\nvar ko = require(\"knockout\");\n\nvar $ = require(\"jquery\");\n\nvar dataSourceWizardState_1 = require(\"../../dataSourceWizardState\");\n\nvar _utils_1 = require(\"../../internal/_utils\");\n\nvar _dbSchemaItemsProvider_1 = require(\"../../internal/_dbSchemaItemsProvider\");\n\nvar tableQuery_1 = require(\"../../../dataSource/sql/tableQuery\");\n\nvar utils_1 = require(\"../../../dataSource/utils\");\n\nvar _selectQuerySqlTextProvider_1 = require(\"../../internal/_selectQuerySqlTextProvider\");\n\nvar _sqlDataSourceWrapper_1 = require(\"../sqlDataSourceWizard/_sqlDataSourceWrapper\");\n\nvar pathRequest_1 = require(\"../../../../widgets/common/pathRequest\");\n\nvar storedProcQuery_1 = require(\"../../../dataSource/sql/storedProcQuery\");\n\nvar dataSourceParameter_1 = require(\"../../../dataSource/dataSourceParameter\");\n\nvar dbColumn_1 = require(\"../../../dataSource/dbColumn\");\n\nvar dataSourceParameterMeta_1 = require(\"../../../dataSource/dataSourceParameterMeta\");\n\nvar _arrayutils_1 = require(\"../../../../core/utils/_arrayutils\");\n\nvar _utils_2 = require(\"../../../dataSource/_utils\");\n\nvar _requestwrapper_1 = require(\"../../../utils/_requestwrapper\");\n\nvar _queryBuilderPopup_1 = require(\"../../internal/_queryBuilderPopup\");\n\nvar popupWizard_1 = require(\"../../popupWizard\");\n\nvar customSqlQuery_1 = require(\"../../../dataSource/sql/customSqlQuery\");\n\nvar serializer_1 = require(\"../../../../serializer/serializer\");\n\nvar _dbSchemaTreeListController_1 = require(\"../../internal/_dbSchemaTreeListController\");\n\nvar localization_utils_1 = require(\"../../../../property-grid/localization/localization_utils\");\n\nvar _options_1 = require(\"../../../widgets/ace/_options\");\n\nvar pageId_1 = require(\"../../pageId\");\n\nvar _ace_available_1 = require(\"../../../../widgets/ace/_ace-available\");\n\nvar wizardPageBase_1 = require(\"../wizardPageBase\");\n\nvar _constants_1 = require(\"../../internal/_constants\");\n\nvar MultiQueryConfigurePage = function (_super) {\n  __extends(MultiQueryConfigurePage, _super);\n\n  function MultiQueryConfigurePage(_options) {\n    var _this = _super.call(this) || this;\n\n    _this._options = _options;\n    _this._selectedPath = ko.observable(null);\n    _this._itemsProvider = ko.observable();\n    _this._customQueries = ko.observableArray([]);\n    _this._checkedQueries = ko.observableArray([]);\n    _this._sqlDataSourceWrapper = new _sqlDataSourceWrapper_1._SqlDataSourceWrapper(undefined, undefined, undefined);\n\n    _this._dataSource = function () {\n      return _this._sqlDataSourceWrapper && _this._sqlDataSourceWrapper.sqlDataSource;\n    };\n\n    _this._dataConnection = function () {\n      return _this._dataSource() && _this._dataSource().connection;\n    };\n\n    _this._showStatementPopup = function (query) {\n      _this._popupSelectStatement.isVisible(true);\n\n      _this._popupSelectStatement.query = query;\n\n      _this._popupSelectStatement.data(query.sqlString());\n    };\n\n    _this._showQbCallBack = function (name, isCustomQuery) {\n      if (name === void 0) {\n        name = null;\n      }\n\n      if (isCustomQuery === void 0) {\n        isCustomQuery = false;\n      }\n\n      if (name !== null) {\n        var query = _arrayutils_1.findFirstItemMatchesCondition(_this._customQueries(), function (item) {\n          return name === (item.name() || item.generateName());\n        });\n\n        _this._queryEditIndex(_this._customQueries().indexOf(query));\n\n        if (query.type() === utils_1.SqlQueryType.customSqlQuery) {\n          _this._showStatementPopup(query);\n        } else {\n          _this._popupQueryBuilder.show(query, _this._dataSource());\n        }\n      } else {\n        _this._queryEditIndex(-1);\n\n        if (isCustomQuery) {\n          _this._showStatementPopup(new customSqlQuery_1.CustomSqlQuery({\n            '@Name': null\n          }, _this._dataSource()));\n        } else {\n          var queryNew = new tableQuery_1.TableQuery({\n            '@Name': null\n          }, _this._dataSource());\n\n          _this._popupQueryBuilder.show(queryNew, _this._dataSource());\n        }\n      }\n    };\n\n    _this._popupSelectStatement = {\n      isVisible: ko.observable(false),\n      title: function () {\n        return localization_utils_1.getLocalization('Custom SQL Editor', 'AnalyticsCoreStringId.SqlDSWizard_CustomSqlEditor');\n      },\n      query: null,\n      data: ko.observable(),\n      okButtonText: function () {\n        return localization_utils_1.getLocalization('OK', 'DataAccessUIStringId.Button_OK');\n      },\n      okButtonHandler: function (e) {\n        _this._popupSelectStatement.query.sqlString(e.model.data());\n\n        _this._setCustomSqlQuery(_this._popupSelectStatement.query);\n\n        e.model.isVisible(false);\n      },\n      aceOptions: _options_1.createDefaultSQLAceOptions(),\n      aceAvailable: _ace_available_1.aceAvailable(),\n      additionalOptions: _options_1.createDefaultSQLAdditionalOptions(function (newVal) {\n        _this._popupSelectStatement.data(newVal);\n      }),\n      languageHelper: _options_1.createDefaultSQLLanguageHelper(),\n      closest: function (element, parentSelector) {\n        return $(element).closest(parentSelector);\n      }\n    };\n    _this._customResetOptions = $.noop;\n    _this._queryEditIndex = ko.observable(-1);\n    _this.disableCustomSql = true;\n    _this._scrollViewHeight = 'calc(100% - 37px)';\n    _this._customizeDBSchemaTreeListActions = null;\n    _this._isDataLoadingInProcess = ko.observable(false);\n    _this._callbacks = _this._options.callbacks;\n    _this._sqlTextProvider = new _selectQuerySqlTextProvider_1.SelectQuerySqlTextProvider(_requestwrapper_1.wrapGetSelectStatement(_this._callbacks.selectStatement), _this._dataConnection);\n    _this._popupQueryBuilder = new _queryBuilderPopup_1.QueryBuilderPopup(function (newQuery, isInProcess) {\n      return _this._setTableQuery(newQuery, isInProcess);\n    }, _options.rtl, _options.callbacks.customizeQBInitData);\n    _this._fieldListModel = ko.observable(null);\n\n    _this._disposables.push(_this._hasParametersToEdit = ko.pureComputed(function () {\n      return _this._itemsProvider().hasParametersToEdit();\n    }));\n\n    _this._disposables.push(_this._isDataLoadingInProcess.subscribe(function (newVal) {\n      if (!newVal) _this._onChange();\n      _this[_constants_1.__loadingStateFunctionName] && _this[_constants_1.__loadingStateFunctionName](newVal);\n    }));\n\n    _this.disableCustomSql = _this._options.disableCustomSql;\n\n    _this._getItemsAfterCheck = function (node) {\n      _this._resetDataSourceResult();\n\n      _this._isDataLoadingInProcess(true);\n\n      if (node.checked.peek() && node.isList) {\n        if (node.name === 'tables' || node.name === 'views') {\n          _this._itemsProvider().getItems(new pathRequest_1.PathRequest(node.name)).done(function () {\n            if (node.isList && node.children.peek().length > 0) {\n              $.when.apply($, node.children.peek().map(function (item) {\n                return _this._getItemsPromise(new pathRequest_1.PathRequest(node.name + '.' + item.name));\n              })).always(function () {\n                return _this._isDataLoadingInProcess(false);\n              });\n            } else {\n              _this._isDataLoadingInProcess(false);\n            }\n          });\n        } else if (node.specifics === 'table' || node.specifics === 'view') {\n          _this['_itemsProvider']().getItems(new pathRequest_1.PathRequest(node.specifics + '.' + node.name)).always(function () {\n            return _this._isDataLoadingInProcess(false);\n          });\n        } else if (node.name === 'procedures') {\n          _this['_itemsProvider']().getItems(new pathRequest_1.PathRequest(node.name)).always(function () {\n            return _this._isDataLoadingInProcess(false);\n          });\n        } else {\n          _this._isDataLoadingInProcess(false);\n        }\n      } else {\n        _this._isDataLoadingInProcess(false);\n      }\n    };\n\n    return _this;\n  }\n\n  MultiQueryConfigurePage.prototype._addQueryAlgorithm = function (elements, specifics, dataSource, customQueries) {\n    if (!elements.unChecked() || specifics === 'queries') {\n      if (elements.children().length === 0) {\n        this._itemsProvider().getItems(new pathRequest_1.PathRequest(specifics));\n      }\n\n      if (specifics === 'tables' || specifics === 'views') {\n        this._addQueryFromTables(elements, dataSource);\n      } else if (specifics === 'procedures') {\n        this._addQueryFromStoredProcedures(elements, dataSource);\n      } else {\n        this._addQueryFromCustomQueries(elements, customQueries, dataSource.queries);\n      }\n    } else {\n      elements.children().forEach(function (node) {\n        MultiQueryConfigurePage._removeQuery(dataSource.queries, node);\n      });\n    }\n  };\n\n  MultiQueryConfigurePage.prototype._addQueryFromTables = function (elements, dataSource) {\n    for (var i = 0; i < elements.children().length; i++) {\n      var table = elements.children()[i];\n\n      if (!table.unChecked()) {\n        var columns = {};\n        var queryJSON = {\n          'Columns': columns,\n          'Tables': {\n            'SelectedTables': {\n              'Item1': {\n                '@Name': table.name,\n                '@ControlType': 'Table',\n                '@ItemType': 'Table'\n              }\n            }\n          }\n        };\n\n        if (table.children().length === 0) {\n          this._itemsProvider().getItems(new pathRequest_1.PathRequest('tables.' + table.name)).done(function () {\n            table.initializeChildren(table.children());\n          });\n        }\n\n        for (var j = 0; j < table.children().length; j++) {\n          var column = table.children()[j];\n\n          if (column.checked()) {\n            columns['Item' + (j + 1)] = {\n              '@Table': table.name,\n              '@Name': column.name,\n              '@ItemType': 'Column'\n            };\n          }\n        }\n\n        MultiQueryConfigurePage._pushQuery(new tableQuery_1.TableQuery(queryJSON, dataSource), table, dataSource.queries);\n      } else {\n        MultiQueryConfigurePage._removeQuery(dataSource.queries, table);\n      }\n    }\n  };\n\n  MultiQueryConfigurePage.prototype._addQueryFromStoredProcedures = function (elements, dataSource) {\n    for (var i = 0; i < elements.children().length; i++) {\n      var procedure = elements.children()[i];\n\n      if (procedure.checked()) {\n        var newQuery = new storedProcQuery_1.StoredProcQuery({\n          '@Name': procedure.name,\n          'ProcName': procedure.name\n        }, dataSource);\n        procedure.arguments.forEach(function (arg) {\n          newQuery.parameters.push(new dataSourceParameter_1.DataSourceParameter({\n            '@Name': arg.name,\n            '@Type': dbColumn_1.DBColumn.GetType(arg.type)\n          }, null, dataSourceParameterMeta_1.storedProcParameterSerializationsInfo(dbColumn_1.DBColumn.GetType(arg.type))));\n        });\n\n        MultiQueryConfigurePage._pushQuery(newQuery, procedure, dataSource.queries);\n      } else {\n        MultiQueryConfigurePage._removeQuery(dataSource.queries, procedure);\n      }\n    }\n  };\n\n  MultiQueryConfigurePage.prototype._addQueryFromCustomQueries = function (elements, queries, allQueries) {\n    for (var i = 0; i < elements.children().length; i++) {\n      var queryNode = elements.children()[i];\n\n      var query = _arrayutils_1.findFirstItemMatchesCondition(queries.peek(), function (item) {\n        return queryNode.name === (item.name() || item.generateName());\n      });\n\n      if (queryNode.checked()) {\n        query.name(_utils_2.generateQueryUniqueName(allQueries.peek(), query));\n\n        this._checkedQueries.push(query);\n      }\n    }\n  };\n\n  MultiQueryConfigurePage.prototype._getItemsPromise = function (pathRequest) {\n    return this._itemsProvider().getItems(pathRequest);\n  };\n\n  MultiQueryConfigurePage.prototype._resetDataSourceResult = function () {\n    this._customResetOptions();\n\n    this._dataSource().relations([]);\n\n    this._dataSource().resultSet = null;\n\n    this._onChange();\n  };\n\n  MultiQueryConfigurePage.prototype._setQueryCore = function (query) {\n    var provider = this._fieldListModel().itemsProvider;\n\n    var queryEditIndex = this._queryEditIndex();\n\n    if (queryEditIndex >= 0) {\n      this._itemsProvider().queries().children()[queryEditIndex].name = query.name();\n      provider.customQueries().splice(queryEditIndex, 1, query);\n    } else {\n      query.name(_utils_2.generateQueryUniqueName(provider.customQueries().peek(), query));\n      provider.customQueries().push(query);\n\n      this._selectedPath('queries.' + query.name());\n\n      var childrens = this._itemsProvider().queries().children();\n\n      var children = childrens[childrens.length - 1];\n      children.setChecked(true);\n      children['_afterCheckToggled'] && children['_afterCheckToggled'](children);\n    }\n\n    this._resetDataSourceResult();\n  };\n\n  MultiQueryConfigurePage._pushQuery = function (newQuery, node, queries) {\n    if (!_arrayutils_1.findFirstItemMatchesCondition(queries.peek(), function (item) {\n      return item.name() === (newQuery.name() || newQuery.generateName());\n    })) {\n      newQuery.name(_utils_2.generateQueryUniqueName(queries.peek(), newQuery));\n      queries.push(newQuery);\n    }\n\n    node.hasQuery = true;\n  };\n\n  MultiQueryConfigurePage._removeQuery = function (queries, node) {\n    if (node.hasQuery) {\n      var queryIndex = -1;\n      var existUncheck = queries.peek().some(function (value, index) {\n        if (value.name() === node.name || value.generateName() === node.name) {\n          queryIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n\n      if (existUncheck) {\n        queries.splice(queryIndex, 1);\n      }\n\n      node.hasQuery = false;\n    }\n  };\n\n  MultiQueryConfigurePage.prototype.canNext = function () {\n    return !this._itemsProvider().nextButtonDisabled() && this.canFinish();\n  };\n\n  MultiQueryConfigurePage.prototype.canFinish = function () {\n    return this._itemsProvider() && this._itemsProvider().hasCheckedItems() && !this._isDataLoadingInProcess();\n  };\n\n  MultiQueryConfigurePage.prototype._AddQueryWithBuilder = function () {};\n\n  MultiQueryConfigurePage.prototype._runQueryBuilder = function () {};\n\n  MultiQueryConfigurePage.prototype._loadPanelViewModel = function (element) {\n    return popupWizard_1.PopupWizard._getLoadPanelViewModel(element, this._isDataLoadingInProcess);\n  };\n\n  MultiQueryConfigurePage.prototype._setTableQuery = function (query, isInProcess) {\n    var _this = this;\n\n    isInProcess && isInProcess(true);\n    return this._sqlTextProvider.getQuerySqlText(query).done(function () {\n      return _this._setQueryCore(query);\n    }).always(function () {\n      isInProcess && isInProcess(false);\n    });\n  };\n\n  MultiQueryConfigurePage.prototype._setCustomSqlQuery = function (query) {\n    this._setQueryCore(query);\n  };\n\n  MultiQueryConfigurePage.prototype._createTreeListFactory = function () {\n    return new _utils_1.MultiQueryTreeListItemFactory();\n  };\n\n  MultiQueryConfigurePage.prototype.commit = function () {\n    var _this = this;\n\n    this._dataSource().queries.removeAll();\n\n    this._checkedQueries.removeAll();\n\n    this._addQueryAlgorithm(this._itemsProvider().tables(), 'tables', this._dataSource());\n\n    this._addQueryAlgorithm(this._itemsProvider().views(), 'views', this._dataSource());\n\n    this._addQueryAlgorithm(this._itemsProvider().procedures(), 'procedures', this._dataSource());\n\n    this._addQueryAlgorithm(this._itemsProvider().queries(), 'queries', this._dataSource(), this._customQueries);\n\n    ko.utils.arrayPushAll(this._dataSource().queries(), this._checkedQueries());\n\n    this._dataSource().queries.valueHasMutated();\n\n    var checkedCustomQueries = this._itemsProvider().queries().children().filter(function (x) {\n      return x.checked();\n    }).map(function (query) {\n      return query.name;\n    });\n\n    var customQueries = this._sqlDataSourceWrapper.sqlDataSource.queries().filter(function (x) {\n      return checkedCustomQueries.some(function (queryName) {\n        return queryName === x.name();\n      }) || x instanceof storedProcQuery_1.StoredProcQuery;\n    });\n\n    customQueries.forEach(function (item) {\n      return _this._sqlDataSourceWrapper.sqlDataSource.queries.remove(item);\n    });\n    var serializer = new serializer_1.ModelSerializer();\n    return $.Deferred().resolve({\n      sqlDataSourceJSON: this._sqlDataSourceWrapper.save(),\n      customQueries: customQueries.map(function (x) {\n        return JSON.stringify(serializer.serialize(x));\n      })\n    }).promise();\n  };\n\n  MultiQueryConfigurePage.prototype.initialize = function (state) {\n    var _this = this;\n\n    this._sqlDataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._options.requestWrapper);\n    var customQueriesPromise = this._callbacks.customQueriesPreset ? this._callbacks.customQueriesPreset(this._dataSource()) : $.Deferred().resolve([]).promise();\n    var deferred = $.Deferred();\n    customQueriesPromise.done(function (queries) {\n      _this._customQueries(queries);\n\n      _this._selectedPath('');\n\n      var itemsProvider = new _dbSchemaItemsProvider_1.DBSchemaItemsProvider(_this._dataSource().dbSchemaProvider, _this._customQueries, _this._showQbCallBack, _this.disableCustomSql, _this._getItemsAfterCheck);\n\n      _this._disposables.push(itemsProvider);\n\n      _this._itemsProvider(itemsProvider);\n\n      _this._getItemsPromise(new pathRequest_1.PathRequest('queries'));\n\n      _this._fieldListModel({\n        factory: _this._createTreeListFactory(),\n        itemsProvider: _this._itemsProvider(),\n        selectedPath: _this._selectedPath,\n        treeListController: new _dbSchemaTreeListController_1.DBSchemaTreeListController(_this._customizeDBSchemaTreeListActions),\n        templateName: 'dxrd-treelist-with-checkbox'\n      });\n\n      _this._popupQueryBuilder.isVisible(false);\n\n      _this._dataSource().dbSchemaProvider.getDbSchema().done(function () {\n        deferred.resolve();\n      }).fail(deferred.reject);\n    }).fail(deferred.reject);\n    return deferred.promise();\n  };\n\n  return MultiQueryConfigurePage;\n}(wizardPageBase_1.WizardPageBase);\n\nexports.MultiQueryConfigurePage = MultiQueryConfigurePage;\n\nfunction _registerMultiQueryConfigurePage(factory, wizardOptions) {\n  factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage, {\n    create: function () {\n      return new MultiQueryConfigurePage(wizardOptions);\n    },\n    setState: function (data, state) {\n      state.sqlDataSourceJSON = data.sqlDataSourceJSON;\n      state.customQueries = data.customQueries;\n    },\n    getState: function (state) {\n      return state.sqlDataSourceWizard;\n    },\n    resetState: function (state, defaultState) {\n      state.sqlDataSourceJSON = defaultState.sqlDataSourceJSON;\n      state.customQueries = defaultState.customQueries;\n    },\n    description: localization_utils_1.getLocalization('Columns selected from specific tables and/or views will be automatically included into a separate query.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureMultiQuery'),\n    template: 'dxrd-wizard-add-queries-page'\n  });\n}\n\nexports._registerMultiQueryConfigurePage = _registerMultiQueryConfigurePage;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/wizard/pages/multiQueryWizard/multiQueryConfigurePage.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","_registerMultiQueryConfigurePage","MultiQueryConfigurePage","ko","require","$","dataSourceWizardState_1","_utils_1","_dbSchemaItemsProvider_1","tableQuery_1","utils_1","_selectQuerySqlTextProvider_1","_sqlDataSourceWrapper_1","pathRequest_1","storedProcQuery_1","dataSourceParameter_1","dbColumn_1","dataSourceParameterMeta_1","_arrayutils_1","_utils_2","_requestwrapper_1","_queryBuilderPopup_1","popupWizard_1","customSqlQuery_1","serializer_1","_dbSchemaTreeListController_1","localization_utils_1","_options_1","pageId_1","_ace_available_1","wizardPageBase_1","_constants_1","_super","_options","_this","_selectedPath","observable","_itemsProvider","_customQueries","observableArray","_checkedQueries","_sqlDataSourceWrapper","_SqlDataSourceWrapper","undefined","_dataSource","sqlDataSource","_dataConnection","connection","_showStatementPopup","query","_popupSelectStatement","isVisible","data","sqlString","_showQbCallBack","name","isCustomQuery","findFirstItemMatchesCondition","item","generateName","_queryEditIndex","indexOf","type","SqlQueryType","customSqlQuery","_popupQueryBuilder","show","CustomSqlQuery","queryNew","TableQuery","title","getLocalization","okButtonText","okButtonHandler","e","model","_setCustomSqlQuery","aceOptions","createDefaultSQLAceOptions","aceAvailable","additionalOptions","createDefaultSQLAdditionalOptions","newVal","languageHelper","createDefaultSQLLanguageHelper","closest","element","parentSelector","_customResetOptions","noop","disableCustomSql","_scrollViewHeight","_customizeDBSchemaTreeListActions","_isDataLoadingInProcess","_callbacks","callbacks","_sqlTextProvider","SelectQuerySqlTextProvider","wrapGetSelectStatement","selectStatement","QueryBuilderPopup","newQuery","isInProcess","_setTableQuery","rtl","customizeQBInitData","_fieldListModel","_disposables","push","_hasParametersToEdit","pureComputed","hasParametersToEdit","subscribe","_onChange","__loadingStateFunctionName","_getItemsAfterCheck","node","_resetDataSourceResult","checked","peek","isList","getItems","PathRequest","done","children","length","when","apply","map","_getItemsPromise","always","specifics","_addQueryAlgorithm","elements","dataSource","customQueries","unChecked","_addQueryFromTables","_addQueryFromStoredProcedures","_addQueryFromCustomQueries","queries","forEach","_removeQuery","i","table","columns","queryJSON","initializeChildren","j","column","_pushQuery","procedure","StoredProcQuery","arguments","arg","parameters","DataSourceParameter","DBColumn","GetType","storedProcParameterSerializationsInfo","allQueries","queryNode","generateQueryUniqueName","pathRequest","relations","resultSet","_setQueryCore","provider","itemsProvider","queryEditIndex","splice","childrens","setChecked","hasQuery","queryIndex","existUncheck","some","index","canNext","nextButtonDisabled","canFinish","hasCheckedItems","_AddQueryWithBuilder","_runQueryBuilder","_loadPanelViewModel","PopupWizard","_getLoadPanelViewModel","getQuerySqlText","_createTreeListFactory","MultiQueryTreeListItemFactory","commit","removeAll","tables","views","procedures","utils","arrayPushAll","valueHasMutated","checkedCustomQueries","filter","x","queryName","remove","serializer","ModelSerializer","Deferred","resolve","sqlDataSourceJSON","save","JSON","stringify","serialize","promise","initialize","state","_restoreSqlDataSourceFromState","requestWrapper","customQueriesPromise","customQueriesPreset","deferred","DBSchemaItemsProvider","dbSchemaProvider","factory","selectedPath","treeListController","DBSchemaTreeListController","templateName","getDbSchema","fail","reject","WizardPageBase","wizardOptions","registerMetadata","SqlDataSourceWizardPageId","setState","getState","sqlDataSourceWizard","resetState","defaultState","description","template"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\wizard\\pages\\multiQueryWizard\\multiQueryConfigurePage.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._registerMultiQueryConfigurePage = exports.MultiQueryConfigurePage = void 0;\nvar ko = require(\"knockout\");\nvar $ = require(\"jquery\");\nvar dataSourceWizardState_1 = require(\"../../dataSourceWizardState\");\nvar _utils_1 = require(\"../../internal/_utils\");\nvar _dbSchemaItemsProvider_1 = require(\"../../internal/_dbSchemaItemsProvider\");\nvar tableQuery_1 = require(\"../../../dataSource/sql/tableQuery\");\nvar utils_1 = require(\"../../../dataSource/utils\");\nvar _selectQuerySqlTextProvider_1 = require(\"../../internal/_selectQuerySqlTextProvider\");\nvar _sqlDataSourceWrapper_1 = require(\"../sqlDataSourceWizard/_sqlDataSourceWrapper\");\nvar pathRequest_1 = require(\"../../../../widgets/common/pathRequest\");\nvar storedProcQuery_1 = require(\"../../../dataSource/sql/storedProcQuery\");\nvar dataSourceParameter_1 = require(\"../../../dataSource/dataSourceParameter\");\nvar dbColumn_1 = require(\"../../../dataSource/dbColumn\");\nvar dataSourceParameterMeta_1 = require(\"../../../dataSource/dataSourceParameterMeta\");\nvar _arrayutils_1 = require(\"../../../../core/utils/_arrayutils\");\nvar _utils_2 = require(\"../../../dataSource/_utils\");\nvar _requestwrapper_1 = require(\"../../../utils/_requestwrapper\");\nvar _queryBuilderPopup_1 = require(\"../../internal/_queryBuilderPopup\");\nvar popupWizard_1 = require(\"../../popupWizard\");\nvar customSqlQuery_1 = require(\"../../../dataSource/sql/customSqlQuery\");\nvar serializer_1 = require(\"../../../../serializer/serializer\");\nvar _dbSchemaTreeListController_1 = require(\"../../internal/_dbSchemaTreeListController\");\nvar localization_utils_1 = require(\"../../../../property-grid/localization/localization_utils\");\nvar _options_1 = require(\"../../../widgets/ace/_options\");\nvar pageId_1 = require(\"../../pageId\");\nvar _ace_available_1 = require(\"../../../../widgets/ace/_ace-available\");\nvar wizardPageBase_1 = require(\"../wizardPageBase\");\nvar _constants_1 = require(\"../../internal/_constants\");\nvar MultiQueryConfigurePage = (function (_super) {\n    __extends(MultiQueryConfigurePage, _super);\n    function MultiQueryConfigurePage(_options) {\n        var _this = _super.call(this) || this;\n        _this._options = _options;\n        _this._selectedPath = ko.observable(null);\n        _this._itemsProvider = ko.observable();\n        _this._customQueries = ko.observableArray([]);\n        _this._checkedQueries = ko.observableArray([]);\n        _this._sqlDataSourceWrapper = new _sqlDataSourceWrapper_1._SqlDataSourceWrapper(undefined, undefined, undefined);\n        _this._dataSource = function () {\n            return _this._sqlDataSourceWrapper && _this._sqlDataSourceWrapper.sqlDataSource;\n        };\n        _this._dataConnection = function () {\n            return _this._dataSource() && _this._dataSource().connection;\n        };\n        _this._showStatementPopup = function (query) {\n            _this._popupSelectStatement.isVisible(true);\n            _this._popupSelectStatement.query = query;\n            _this._popupSelectStatement.data(query.sqlString());\n        };\n        _this._showQbCallBack = function (name, isCustomQuery) {\n            if (name === void 0) { name = null; }\n            if (isCustomQuery === void 0) { isCustomQuery = false; }\n            if (name !== null) {\n                var query = _arrayutils_1.findFirstItemMatchesCondition(_this._customQueries(), function (item) { return name === (item.name() || item.generateName()); });\n                _this._queryEditIndex(_this._customQueries().indexOf(query));\n                if (query.type() === utils_1.SqlQueryType.customSqlQuery) {\n                    _this._showStatementPopup(query);\n                }\n                else {\n                    _this._popupQueryBuilder.show(query, _this._dataSource());\n                }\n            }\n            else {\n                _this._queryEditIndex(-1);\n                if (isCustomQuery) {\n                    _this._showStatementPopup(new customSqlQuery_1.CustomSqlQuery({ '@Name': null }, _this._dataSource()));\n                }\n                else {\n                    var queryNew = new tableQuery_1.TableQuery({ '@Name': null }, _this._dataSource());\n                    _this._popupQueryBuilder.show(queryNew, _this._dataSource());\n                }\n            }\n        };\n        _this._popupSelectStatement = ({\n            isVisible: ko.observable(false),\n            title: function () { return localization_utils_1.getLocalization('Custom SQL Editor', 'AnalyticsCoreStringId.SqlDSWizard_CustomSqlEditor'); },\n            query: null,\n            data: ko.observable(),\n            okButtonText: function () { return localization_utils_1.getLocalization('OK', 'DataAccessUIStringId.Button_OK'); },\n            okButtonHandler: function (e) {\n                _this._popupSelectStatement.query.sqlString(e.model.data());\n                _this._setCustomSqlQuery(_this._popupSelectStatement.query);\n                e.model.isVisible(false);\n            },\n            aceOptions: _options_1.createDefaultSQLAceOptions(),\n            aceAvailable: _ace_available_1.aceAvailable(),\n            additionalOptions: _options_1.createDefaultSQLAdditionalOptions(function (newVal) { _this._popupSelectStatement.data(newVal); }),\n            languageHelper: _options_1.createDefaultSQLLanguageHelper(),\n            closest: function (element, parentSelector) {\n                return $(element).closest(parentSelector);\n            }\n        });\n        _this._customResetOptions = $.noop;\n        _this._queryEditIndex = ko.observable(-1);\n        _this.disableCustomSql = true;\n        _this._scrollViewHeight = 'calc(100% - 37px)';\n        _this._customizeDBSchemaTreeListActions = null;\n        _this._isDataLoadingInProcess = ko.observable(false);\n        _this._callbacks = _this._options.callbacks;\n        _this._sqlTextProvider = new _selectQuerySqlTextProvider_1.SelectQuerySqlTextProvider(_requestwrapper_1.wrapGetSelectStatement(_this._callbacks.selectStatement), _this._dataConnection);\n        _this._popupQueryBuilder = new _queryBuilderPopup_1.QueryBuilderPopup(function (newQuery, isInProcess) { return _this._setTableQuery(newQuery, isInProcess); }, _options.rtl, _options.callbacks.customizeQBInitData);\n        _this._fieldListModel = ko.observable(null);\n        _this._disposables.push(_this._hasParametersToEdit = ko.pureComputed(function () { return _this._itemsProvider().hasParametersToEdit(); }));\n        _this._disposables.push(_this._isDataLoadingInProcess.subscribe(function (newVal) {\n            if (!newVal)\n                _this._onChange();\n            _this[_constants_1.__loadingStateFunctionName] && _this[_constants_1.__loadingStateFunctionName](newVal);\n        }));\n        _this.disableCustomSql = _this._options.disableCustomSql;\n        _this._getItemsAfterCheck = function (node) {\n            _this._resetDataSourceResult();\n            _this._isDataLoadingInProcess(true);\n            if (node.checked.peek() && node.isList) {\n                if (node.name === 'tables' || node.name === 'views') {\n                    _this._itemsProvider().getItems(new pathRequest_1.PathRequest(node.name)).done(function () {\n                        if (node.isList && node.children.peek().length > 0) {\n                            $.when.apply($, node.children.peek().map(function (item) {\n                                return _this._getItemsPromise(new pathRequest_1.PathRequest(node.name + '.' + item.name));\n                            })).always(function () { return _this._isDataLoadingInProcess(false); });\n                        }\n                        else {\n                            _this._isDataLoadingInProcess(false);\n                        }\n                    });\n                }\n                else if (node.specifics === 'table' || node.specifics === 'view') {\n                    _this['_itemsProvider']().getItems(new pathRequest_1.PathRequest(node.specifics + '.' + node.name))\n                        .always(function () { return _this._isDataLoadingInProcess(false); });\n                }\n                else if (node.name === 'procedures') {\n                    _this['_itemsProvider']().getItems(new pathRequest_1.PathRequest(node.name))\n                        .always(function () { return _this._isDataLoadingInProcess(false); });\n                }\n                else {\n                    _this._isDataLoadingInProcess(false);\n                }\n            }\n            else {\n                _this._isDataLoadingInProcess(false);\n            }\n        };\n        return _this;\n    }\n    MultiQueryConfigurePage.prototype._addQueryAlgorithm = function (elements, specifics, dataSource, customQueries) {\n        if (!elements.unChecked() || specifics === 'queries') {\n            if (elements.children().length === 0) {\n                this._itemsProvider().getItems(new pathRequest_1.PathRequest(specifics));\n            }\n            if (specifics === 'tables' || specifics === 'views') {\n                this._addQueryFromTables(elements, dataSource);\n            }\n            else if (specifics === 'procedures') {\n                this._addQueryFromStoredProcedures(elements, dataSource);\n            }\n            else {\n                this._addQueryFromCustomQueries(elements, customQueries, dataSource.queries);\n            }\n        }\n        else {\n            elements.children().forEach(function (node) {\n                MultiQueryConfigurePage._removeQuery(dataSource.queries, node);\n            });\n        }\n    };\n    MultiQueryConfigurePage.prototype._addQueryFromTables = function (elements, dataSource) {\n        for (var i = 0; i < elements.children().length; i++) {\n            var table = elements.children()[i];\n            if (!table.unChecked()) {\n                var columns = {};\n                var queryJSON = {\n                    'Columns': columns,\n                    'Tables': {\n                        'SelectedTables': {\n                            'Item1': {\n                                '@Name': table.name,\n                                '@ControlType': 'Table',\n                                '@ItemType': 'Table'\n                            }\n                        },\n                    }\n                };\n                if (table.children().length === 0) {\n                    this._itemsProvider().getItems(new pathRequest_1.PathRequest('tables.' + table.name)).done(function () {\n                        table.initializeChildren(table.children());\n                    });\n                }\n                for (var j = 0; j < table.children().length; j++) {\n                    var column = table.children()[j];\n                    if (column.checked()) {\n                        columns['Item' + (j + 1)] = {\n                            '@Table': table.name,\n                            '@Name': column.name,\n                            '@ItemType': 'Column'\n                        };\n                    }\n                }\n                MultiQueryConfigurePage._pushQuery(new tableQuery_1.TableQuery(queryJSON, dataSource), table, dataSource.queries);\n            }\n            else {\n                MultiQueryConfigurePage._removeQuery(dataSource.queries, table);\n            }\n        }\n    };\n    MultiQueryConfigurePage.prototype._addQueryFromStoredProcedures = function (elements, dataSource) {\n        for (var i = 0; i < elements.children().length; i++) {\n            var procedure = elements.children()[i];\n            if (procedure.checked()) {\n                var newQuery = new storedProcQuery_1.StoredProcQuery({ '@Name': procedure.name, 'ProcName': procedure.name }, dataSource);\n                procedure.arguments.forEach(function (arg) {\n                    newQuery.parameters.push(new dataSourceParameter_1.DataSourceParameter({ '@Name': arg.name, '@Type': dbColumn_1.DBColumn.GetType(arg.type) }, null, dataSourceParameterMeta_1.storedProcParameterSerializationsInfo(dbColumn_1.DBColumn.GetType(arg.type))));\n                });\n                MultiQueryConfigurePage._pushQuery(newQuery, procedure, dataSource.queries);\n            }\n            else {\n                MultiQueryConfigurePage._removeQuery(dataSource.queries, procedure);\n            }\n        }\n    };\n    MultiQueryConfigurePage.prototype._addQueryFromCustomQueries = function (elements, queries, allQueries) {\n        for (var i = 0; i < elements.children().length; i++) {\n            var queryNode = elements.children()[i];\n            var query = _arrayutils_1.findFirstItemMatchesCondition(queries.peek(), function (item) { return queryNode.name === (item.name() || item.generateName()); });\n            if (queryNode.checked()) {\n                query.name(_utils_2.generateQueryUniqueName(allQueries.peek(), query));\n                this._checkedQueries.push(query);\n            }\n        }\n    };\n    MultiQueryConfigurePage.prototype._getItemsPromise = function (pathRequest) {\n        return this._itemsProvider().getItems(pathRequest);\n    };\n    MultiQueryConfigurePage.prototype._resetDataSourceResult = function () {\n        this._customResetOptions();\n        this._dataSource().relations([]);\n        this._dataSource().resultSet = null;\n        this._onChange();\n    };\n    MultiQueryConfigurePage.prototype._setQueryCore = function (query) {\n        var provider = this._fieldListModel().itemsProvider;\n        var queryEditIndex = this._queryEditIndex();\n        if (queryEditIndex >= 0) {\n            this._itemsProvider().queries().children()[queryEditIndex].name = query.name();\n            provider.customQueries().splice(queryEditIndex, 1, query);\n        }\n        else {\n            query.name(_utils_2.generateQueryUniqueName(provider.customQueries().peek(), query));\n            provider.customQueries().push(query);\n            this._selectedPath('queries.' + query.name());\n            var childrens = this._itemsProvider().queries().children();\n            var children = childrens[childrens.length - 1];\n            children.setChecked(true);\n            children['_afterCheckToggled'] && children['_afterCheckToggled'](children);\n        }\n        this._resetDataSourceResult();\n    };\n    MultiQueryConfigurePage._pushQuery = function (newQuery, node, queries) {\n        if (!_arrayutils_1.findFirstItemMatchesCondition(queries.peek(), function (item) { return item.name() === (newQuery.name() || newQuery.generateName()); })) {\n            newQuery.name(_utils_2.generateQueryUniqueName(queries.peek(), newQuery));\n            queries.push(newQuery);\n        }\n        node.hasQuery = true;\n    };\n    MultiQueryConfigurePage._removeQuery = function (queries, node) {\n        if (node.hasQuery) {\n            var queryIndex = -1;\n            var existUncheck = queries.peek().some(function (value, index) {\n                if (value.name() === node.name || value.generateName() === node.name) {\n                    queryIndex = index;\n                    return true;\n                }\n                return false;\n            });\n            if (existUncheck) {\n                queries.splice(queryIndex, 1);\n            }\n            node.hasQuery = false;\n        }\n    };\n    MultiQueryConfigurePage.prototype.canNext = function () {\n        return !this._itemsProvider().nextButtonDisabled() && this.canFinish();\n    };\n    MultiQueryConfigurePage.prototype.canFinish = function () {\n        return this._itemsProvider() && this._itemsProvider().hasCheckedItems() && !this._isDataLoadingInProcess();\n    };\n    MultiQueryConfigurePage.prototype._AddQueryWithBuilder = function () {\n    };\n    MultiQueryConfigurePage.prototype._runQueryBuilder = function () {\n    };\n    MultiQueryConfigurePage.prototype._loadPanelViewModel = function (element) {\n        return popupWizard_1.PopupWizard._getLoadPanelViewModel(element, this._isDataLoadingInProcess);\n    };\n    MultiQueryConfigurePage.prototype._setTableQuery = function (query, isInProcess) {\n        var _this = this;\n        isInProcess && isInProcess(true);\n        return this._sqlTextProvider.getQuerySqlText(query)\n            .done(function () { return _this._setQueryCore(query); })\n            .always(function () {\n            isInProcess && isInProcess(false);\n        });\n    };\n    MultiQueryConfigurePage.prototype._setCustomSqlQuery = function (query) {\n        this._setQueryCore(query);\n    };\n    MultiQueryConfigurePage.prototype._createTreeListFactory = function () {\n        return new _utils_1.MultiQueryTreeListItemFactory();\n    };\n    MultiQueryConfigurePage.prototype.commit = function () {\n        var _this = this;\n        this._dataSource().queries.removeAll();\n        this._checkedQueries.removeAll();\n        this._addQueryAlgorithm(this._itemsProvider().tables(), 'tables', this._dataSource());\n        this._addQueryAlgorithm(this._itemsProvider().views(), 'views', this._dataSource());\n        this._addQueryAlgorithm(this._itemsProvider().procedures(), 'procedures', this._dataSource());\n        this._addQueryAlgorithm(this._itemsProvider().queries(), 'queries', this._dataSource(), this._customQueries);\n        ko.utils.arrayPushAll(this._dataSource().queries(), this._checkedQueries());\n        this._dataSource().queries.valueHasMutated();\n        var checkedCustomQueries = this._itemsProvider().queries().children().filter(function (x) { return x.checked(); }).map(function (query) { return query.name; });\n        var customQueries = this._sqlDataSourceWrapper.sqlDataSource.queries().filter(function (x) {\n            return checkedCustomQueries.some(function (queryName) { return queryName === x.name(); }) || x instanceof storedProcQuery_1.StoredProcQuery;\n        });\n        customQueries.forEach(function (item) { return _this._sqlDataSourceWrapper.sqlDataSource.queries.remove(item); });\n        var serializer = new serializer_1.ModelSerializer();\n        return $.Deferred().resolve({\n            sqlDataSourceJSON: this._sqlDataSourceWrapper.save(),\n            customQueries: customQueries.map(function (x) { return JSON.stringify(serializer.serialize(x)); })\n        }).promise();\n    };\n    MultiQueryConfigurePage.prototype.initialize = function (state) {\n        var _this = this;\n        this._sqlDataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._options.requestWrapper);\n        var customQueriesPromise = this._callbacks.customQueriesPreset\n            ? this._callbacks.customQueriesPreset(this._dataSource())\n            : $.Deferred().resolve([]).promise();\n        var deferred = $.Deferred();\n        customQueriesPromise.done(function (queries) {\n            _this._customQueries(queries);\n            _this._selectedPath('');\n            var itemsProvider = new _dbSchemaItemsProvider_1.DBSchemaItemsProvider(_this._dataSource().dbSchemaProvider, _this._customQueries, _this._showQbCallBack, _this.disableCustomSql, _this._getItemsAfterCheck);\n            _this._disposables.push(itemsProvider);\n            _this._itemsProvider(itemsProvider);\n            _this._getItemsPromise(new pathRequest_1.PathRequest('queries'));\n            _this._fieldListModel({\n                factory: _this._createTreeListFactory(),\n                itemsProvider: _this._itemsProvider(),\n                selectedPath: _this._selectedPath,\n                treeListController: new _dbSchemaTreeListController_1.DBSchemaTreeListController(_this._customizeDBSchemaTreeListActions),\n                templateName: 'dxrd-treelist-with-checkbox'\n            });\n            _this._popupQueryBuilder.isVisible(false);\n            _this._dataSource()\n                .dbSchemaProvider.getDbSchema()\n                .done(function () {\n                deferred.resolve();\n            })\n                .fail(deferred.reject);\n        })\n            .fail(deferred.reject);\n        return deferred.promise();\n    };\n    return MultiQueryConfigurePage;\n}(wizardPageBase_1.WizardPageBase));\nexports.MultiQueryConfigurePage = MultiQueryConfigurePage;\nfunction _registerMultiQueryConfigurePage(factory, wizardOptions) {\n    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage, {\n        create: function () {\n            return new MultiQueryConfigurePage(wizardOptions);\n        },\n        setState: function (data, state) {\n            state.sqlDataSourceJSON = data.sqlDataSourceJSON;\n            state.customQueries = data.customQueries;\n        },\n        getState: function (state) {\n            return state.sqlDataSourceWizard;\n        },\n        resetState: function (state, defaultState) {\n            state.sqlDataSourceJSON = defaultState.sqlDataSourceJSON;\n            state.customQueries = defaultState.customQueries;\n        },\n        description: localization_utils_1.getLocalization('Columns selected from specific tables and/or views will be automatically included into a separate query.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureMultiQuery'),\n        template: 'dxrd-wizard-add-queries-page'\n    });\n}\nexports._registerMultiQueryConfigurePage = _registerMultiQueryConfigurePage;\n"]},"metadata":{},"sourceType":"script"}