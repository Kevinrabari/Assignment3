{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/html_editor/formats/link.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport { isObject } from \"../../../core/utils/type\";\nvar ExtLink = {};\n\nif (Quill) {\n  var Link = Quill.import(\"formats/link\");\n  ExtLink = class ExtLink extends Link {\n    static create(data) {\n      var HREF = data && data.href || data;\n      var node = super.create(HREF);\n\n      if (isObject(data)) {\n        if (data.text) {\n          node.innerText = data.text;\n        }\n\n        if (!data.target) {\n          node.removeAttribute(\"target\");\n        }\n      }\n\n      return node;\n    }\n\n    static formats(domNode) {\n      return {\n        href: domNode.getAttribute(\"href\"),\n        target: domNode.getAttribute(\"target\")\n      };\n    }\n\n    formats() {\n      var formats = super.formats();\n      var {\n        href: href,\n        target: target\n      } = ExtLink.formats(this.domNode);\n      formats.link = href;\n      formats.target = target;\n      return formats;\n    }\n\n    format(name, value) {\n      if (\"link\" === name && isObject(value)) {\n        if (value.text) {\n          this.domNode.innerText = value.text;\n        }\n\n        if (value.target) {\n          this.domNode.setAttribute(\"target\", \"_blank\");\n        } else {\n          this.domNode.removeAttribute(\"target\");\n        }\n\n        this.domNode.setAttribute(\"href\", value.href);\n      } else {\n        super.format(name, value);\n      }\n    }\n\n    static value(domNode) {\n      return {\n        href: domNode.getAttribute(\"href\"),\n        text: domNode.innerText,\n        target: !!domNode.getAttribute(\"target\")\n      };\n    }\n\n  };\n}\n\nexport default ExtLink;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/html_editor/formats/link.js"],"names":["Quill","isObject","ExtLink","Link","import","create","data","HREF","href","node","text","innerText","target","removeAttribute","formats","domNode","getAttribute","link","format","name","value","setAttribute"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SACIC,QADJ,QAEO,0BAFP;AAGA,IAAIC,OAAO,GAAG,EAAd;;AACA,IAAIF,KAAJ,EAAW;AACP,MAAIG,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa,cAAb,CAAX;AACAF,EAAAA,OAAO,GAAG,MAAMA,OAAN,SAAsBC,IAAtB,CAA2B;AACjC,WAAOE,MAAP,CAAcC,IAAd,EAAoB;AAChB,UAAIC,IAAI,GAAGD,IAAI,IAAIA,IAAI,CAACE,IAAb,IAAqBF,IAAhC;AACA,UAAIG,IAAI,GAAG,MAAMJ,MAAN,CAAaE,IAAb,CAAX;;AACA,UAAIN,QAAQ,CAACK,IAAD,CAAZ,EAAoB;AAChB,YAAIA,IAAI,CAACI,IAAT,EAAe;AACXD,UAAAA,IAAI,CAACE,SAAL,GAAiBL,IAAI,CAACI,IAAtB;AACH;;AACD,YAAI,CAACJ,IAAI,CAACM,MAAV,EAAkB;AACdH,UAAAA,IAAI,CAACI,eAAL,CAAqB,QAArB;AACH;AACJ;;AACD,aAAOJ,IAAP;AACH;;AACD,WAAOK,OAAP,CAAeC,OAAf,EAAwB;AACpB,aAAO;AACHP,QAAAA,IAAI,EAAEO,OAAO,CAACC,YAAR,CAAqB,MAArB,CADH;AAEHJ,QAAAA,MAAM,EAAEG,OAAO,CAACC,YAAR,CAAqB,QAArB;AAFL,OAAP;AAIH;;AACDF,IAAAA,OAAO,GAAG;AACN,UAAIA,OAAO,GAAG,MAAMA,OAAN,EAAd;AACA,UAAI;AACAN,QAAAA,IAAI,EAAEA,IADN;AAEAI,QAAAA,MAAM,EAAEA;AAFR,UAGAV,OAAO,CAACY,OAAR,CAAgB,KAAKC,OAArB,CAHJ;AAIAD,MAAAA,OAAO,CAACG,IAAR,GAAeT,IAAf;AACAM,MAAAA,OAAO,CAACF,MAAR,GAAiBA,MAAjB;AACA,aAAOE,OAAP;AACH;;AACDI,IAAAA,MAAM,CAACC,IAAD,EAAOC,KAAP,EAAc;AAChB,UAAI,WAAWD,IAAX,IAAmBlB,QAAQ,CAACmB,KAAD,CAA/B,EAAwC;AACpC,YAAIA,KAAK,CAACV,IAAV,EAAgB;AACZ,eAAKK,OAAL,CAAaJ,SAAb,GAAyBS,KAAK,CAACV,IAA/B;AACH;;AACD,YAAIU,KAAK,CAACR,MAAV,EAAkB;AACd,eAAKG,OAAL,CAAaM,YAAb,CAA0B,QAA1B,EAAoC,QAApC;AACH,SAFD,MAEO;AACH,eAAKN,OAAL,CAAaF,eAAb,CAA6B,QAA7B;AACH;;AACD,aAAKE,OAAL,CAAaM,YAAb,CAA0B,MAA1B,EAAkCD,KAAK,CAACZ,IAAxC;AACH,OAVD,MAUO;AACH,cAAMU,MAAN,CAAaC,IAAb,EAAmBC,KAAnB;AACH;AACJ;;AACD,WAAOA,KAAP,CAAaL,OAAb,EAAsB;AAClB,aAAO;AACHP,QAAAA,IAAI,EAAEO,OAAO,CAACC,YAAR,CAAqB,MAArB,CADH;AAEHN,QAAAA,IAAI,EAAEK,OAAO,CAACJ,SAFX;AAGHC,QAAAA,MAAM,EAAE,CAAC,CAACG,OAAO,CAACC,YAAR,CAAqB,QAArB;AAHP,OAAP;AAKH;;AAnDgC,GAArC;AAqDH;;AACD,eAAed,OAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/html_editor/formats/link.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Quill from \"devextreme-quill\";\r\nimport {\r\n    isObject\r\n} from \"../../../core/utils/type\";\r\nvar ExtLink = {};\r\nif (Quill) {\r\n    var Link = Quill.import(\"formats/link\");\r\n    ExtLink = class ExtLink extends Link {\r\n        static create(data) {\r\n            var HREF = data && data.href || data;\r\n            var node = super.create(HREF);\r\n            if (isObject(data)) {\r\n                if (data.text) {\r\n                    node.innerText = data.text\r\n                }\r\n                if (!data.target) {\r\n                    node.removeAttribute(\"target\")\r\n                }\r\n            }\r\n            return node\r\n        }\r\n        static formats(domNode) {\r\n            return {\r\n                href: domNode.getAttribute(\"href\"),\r\n                target: domNode.getAttribute(\"target\")\r\n            }\r\n        }\r\n        formats() {\r\n            var formats = super.formats();\r\n            var {\r\n                href: href,\r\n                target: target\r\n            } = ExtLink.formats(this.domNode);\r\n            formats.link = href;\r\n            formats.target = target;\r\n            return formats\r\n        }\r\n        format(name, value) {\r\n            if (\"link\" === name && isObject(value)) {\r\n                if (value.text) {\r\n                    this.domNode.innerText = value.text\r\n                }\r\n                if (value.target) {\r\n                    this.domNode.setAttribute(\"target\", \"_blank\")\r\n                } else {\r\n                    this.domNode.removeAttribute(\"target\")\r\n                }\r\n                this.domNode.setAttribute(\"href\", value.href)\r\n            } else {\r\n                super.format(name, value)\r\n            }\r\n        }\r\n        static value(domNode) {\r\n            return {\r\n                href: domNode.getAttribute(\"href\"),\r\n                text: domNode.innerText,\r\n                target: !!domNode.getAttribute(\"target\")\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ExtLink;\r\n"]},"metadata":{},"sourceType":"module"}