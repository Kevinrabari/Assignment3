{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.items_list.thumbnails.list_box.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth, getOuterHeight, getInnerWidth, getInnerHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport holdEvent from \"../../events/hold\";\nimport { addNamespace, isCommandKeyPressed } from \"../../events/utils/index\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport ScrollView from \"../scroll_view\";\nimport CollectionWidget from \"../collection/ui.collection_widget.edit\";\nimport Selection from \"../selection/selection\";\nvar FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS = \"dx-filemanager-thumbnails-view-port\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS = \"dx-filemanager-thumbnails-container\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS = \"dx-filemanager-thumbnails-item-name\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS = \"dx-filemanager-thumbnails-item-spacer\";\nvar FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY = \"dxFileManagerItemData\";\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE = \"dxFileManagerThumbnailsListBox\";\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME = addNamespace(holdEvent.name, FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE);\n\nclass FileManagerThumbnailListBox extends CollectionWidget {\n  _initMarkup() {\n    this._initActions();\n\n    this._lockFocusedItemProcessing = false;\n    this.$element().addClass(FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS);\n\n    this._renderScrollView();\n\n    this._renderItemsContainer();\n\n    this._createScrollViewControl();\n\n    super._initMarkup();\n\n    this.onFocusedItemChanged = this._onFocusedItemChanged.bind(this);\n    this._layoutUtils = new ListBoxLayoutUtils(this._scrollView, this.$element(), this._$itemContainer, this.itemElements().first());\n\n    this._syncFocusedItemKey();\n  }\n\n  _initActions() {\n    this._actions = {\n      onItemEnterKeyPressed: this._createActionByOption(\"onItemEnterKeyPressed\"),\n      onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\")\n    };\n  }\n\n  _initTemplates() {\n    super._initTemplates();\n\n    this._itemThumbnailTemplate = this.option(\"itemThumbnailTemplate\");\n    this._getTooltipText = this.option(\"getTooltipText\");\n\n    this._templateManager.addDefaultTemplates({\n      item: new BindableTemplate(function ($container, data, itemModel) {\n        var $itemElement = this._getDefaultItemTemplate(itemModel, $container);\n\n        $container.append($itemElement);\n      }.bind(this), [\"fileItem\"], this.option(\"integrationOptions.watchMethod\"))\n    });\n  }\n\n  _createScrollViewControl() {\n    if (!this._scrollView) {\n      this._scrollView = this._createComponent(this._$scrollView, ScrollView, {\n        scrollByContent: true,\n        scrollByThumb: true,\n        useKeyboard: false,\n        showScrollbar: \"onHover\"\n      });\n    }\n  }\n\n  _renderScrollView() {\n    if (!this._$scrollView) {\n      this._$scrollView = $(\"<div>\").appendTo(this.$element());\n    }\n  }\n\n  _renderItemsContainer() {\n    if (!this._$itemContainer) {\n      this._$itemContainer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS).appendTo(this._$scrollView);\n    }\n  }\n\n  _render() {\n    super._render();\n\n    this._detachEventHandlers();\n\n    this._attachEventHandlers();\n  }\n\n  _clean() {\n    this._detachEventHandlers();\n\n    super._clean();\n  }\n\n  _supportedKeys() {\n    return extend(super._supportedKeys(), {\n      upArrow(e) {\n        this._beforeKeyProcessing(e);\n\n        this._processArrowKeys(-1, false, e);\n      },\n\n      downArrow(e) {\n        this._beforeKeyProcessing(e);\n\n        this._processArrowKeys(1, false, e);\n      },\n\n      home(e) {\n        this._beforeKeyProcessing(e);\n\n        this._processHomeEndKeys(0, true, e);\n      },\n\n      end(e) {\n        this._beforeKeyProcessing(e);\n\n        this._processHomeEndKeys(this._getItemsLength() - 1, true, e);\n      },\n\n      pageUp(e) {\n        this._beforeKeyProcessing(e);\n\n        this._processPageChange(true, e);\n      },\n\n      pageDown(e) {\n        this._beforeKeyProcessing(e);\n\n        this._processPageChange(false, e);\n      },\n\n      enter(e) {\n        this._beforeKeyProcessing(e);\n\n        this._actions.onItemEnterKeyPressed(this._getFocusedItem());\n      },\n\n      A(e) {\n        this._beforeKeyProcessing(e);\n\n        if (isCommandKeyPressed(e)) {\n          this.selectAll();\n        }\n      }\n\n    });\n  }\n\n  _beforeKeyProcessing(e) {\n    e.preventDefault();\n\n    this._layoutUtils.reset();\n  }\n\n  _processArrowKeys(offset, horizontal, eventArgs) {\n    var item = this._getFocusedItem();\n\n    if (item) {\n      if (!horizontal) {\n        var layout = this._layoutUtils.getLayoutModel();\n\n        if (!layout) {\n          return;\n        }\n\n        offset *= layout.itemPerRowCount;\n      }\n\n      var newItemIndex = this._getIndexByItem(item) + offset;\n\n      this._focusItemByIndex(newItemIndex, true, eventArgs);\n    }\n  }\n\n  _processHomeEndKeys(index, scrollToItem, eventArgs) {\n    this._focusItemByIndex(index, scrollToItem, eventArgs);\n  }\n\n  _processPageChange(pageUp, eventArgs) {\n    var item = this._getFocusedItem();\n\n    if (!item) {\n      return;\n    }\n\n    var layout = this._layoutUtils.getLayoutModel();\n\n    if (!layout) {\n      return;\n    }\n\n    var itemLayout = this._layoutUtils.createItemLayoutModel(this._getIndexByItem(item));\n\n    var rowOffset = pageUp ? layout.rowPerPageRate : -layout.rowPerPageRate;\n    var newRowRate = itemLayout.itemRowIndex - rowOffset;\n    var roundFunc = pageUp ? Math.ceil : Math.floor;\n    var newRowIndex = roundFunc(newRowRate);\n    var newItemIndex = newRowIndex * layout.itemPerRowCount + itemLayout.itemColumnIndex;\n\n    if (newItemIndex < 0) {\n      newItemIndex = 0;\n    } else if (newItemIndex >= this._getItemsLength()) {\n      newItemIndex = this._getItemsLength() - 1;\n    }\n\n    this._focusItemByIndex(newItemIndex, true, eventArgs);\n  }\n\n  _processLongTap(e) {\n    var $targetItem = this._closestItemElement($(e.target));\n\n    var itemIndex = this._getIndexByItemElement($targetItem);\n\n    this._selection.changeItemSelection(itemIndex, {\n      control: true\n    });\n  }\n\n  _attachEventHandlers() {\n    if (\"multiple\" === this.option(\"selectionMode\")) {\n      eventsEngine.on(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME, \".\".concat(this._itemContentClass()), e => {\n        this._processLongTap(e);\n\n        e.stopPropagation();\n      });\n    }\n\n    eventsEngine.on(this._itemContainer(), \"mousedown selectstart\", e => {\n      if (e.shiftKey) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  _detachEventHandlers() {\n    eventsEngine.off(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME);\n    eventsEngine.off(this._itemContainer(), \"mousedown selectstart\");\n  }\n\n  _itemContainer() {\n    return this._$itemContainer;\n  }\n\n  _itemClass() {\n    return FILE_MANAGER_THUMBNAILS_ITEM_CLASS;\n  }\n\n  _itemDataKey() {\n    return FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY;\n  }\n\n  _getDefaultItemTemplate(fileItemInfo, $itemElement) {\n    $itemElement.attr(\"title\", this._getTooltipText(fileItemInfo));\n\n    var $itemThumbnail = this._itemThumbnailTemplate(fileItemInfo);\n\n    var $itemSpacer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS);\n    var $itemName = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS).text(fileItemInfo.fileItem.name);\n    $itemElement.append($itemThumbnail, $itemSpacer, $itemName);\n  }\n\n  _itemSelectHandler(e) {\n    var options = {};\n\n    if (\"multiple\" === this.option(\"selectionMode\")) {\n      if (!this._isPreserveSelectionMode) {\n        this._isPreserveSelectionMode = isCommandKeyPressed(e) || e.shiftKey;\n      }\n\n      options = {\n        control: this._isPreserveSelectionMode,\n        shift: e.shiftKey\n      };\n    }\n\n    var index = this._getIndexByItemElement(e.currentTarget);\n\n    this._selection.changeItemSelection(index, options);\n  }\n\n  _initSelectionModule() {\n    super._initSelectionModule();\n\n    var options = extend(this._selection.options, {\n      selectedKeys: this.option(\"selectedItemKeys\"),\n      onSelectionChanged: args => {\n        this.option(\"selectedItems\", this._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\n\n        this._updateSelectedItems(args);\n      }\n    });\n    this._selection = new Selection(options);\n  }\n\n  _updateSelectedItems(args) {\n    var addedItemKeys = args.addedItemKeys;\n    var removedItemKeys = args.removedItemKeys;\n\n    if (this._rendered && (addedItemKeys.length || removedItemKeys.length)) {\n      var selectionChangePromise = this._selectionChangePromise;\n\n      if (!this._rendering) {\n        var addedSelection = [];\n        var normalizedIndex;\n        var removedSelection = [];\n\n        this._editStrategy.beginCache();\n\n        for (var i = 0; i < removedItemKeys.length; i++) {\n          normalizedIndex = this._getIndexByKey(removedItemKeys[i]);\n          removedSelection.push(normalizedIndex);\n\n          this._removeSelection(normalizedIndex);\n        }\n\n        for (var _i = 0; _i < addedItemKeys.length; _i++) {\n          normalizedIndex = this._getIndexByKey(addedItemKeys[_i]);\n          addedSelection.push(normalizedIndex);\n\n          this._addSelection(normalizedIndex);\n        }\n\n        this._editStrategy.endCache();\n\n        this._updateSelection(addedSelection, removedSelection);\n      }\n\n      when(selectionChangePromise).done(() => this._fireSelectionChangeEvent(args));\n    }\n  }\n\n  _fireSelectionChangeEvent(args) {\n    this._createActionByOption(\"onSelectionChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    })(args);\n  }\n\n  _updateSelection(addedSelection, removedSelection) {\n    var selectedItemsCount = this.getSelectedItems().length;\n\n    if (0 === selectedItemsCount) {\n      this._isPreserveSelectionMode = false;\n    }\n  }\n\n  _normalizeSelectedItems() {\n    var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\n\n    var oldKeys = this._selection.getSelectedItemKeys();\n\n    if (!this._compareKeys(oldKeys, newKeys)) {\n      this._selection.setSelection(newKeys);\n    }\n\n    return new Deferred().resolve().promise();\n  }\n\n  _focusOutHandler() {}\n\n  _getItems() {\n    return this.option(\"items\") || [];\n  }\n\n  _getItemsLength() {\n    return this._getItems().length;\n  }\n\n  _getIndexByItemElement(itemElement) {\n    return this._editStrategy.getNormalizedIndex(itemElement);\n  }\n\n  _getItemByIndex(index) {\n    return this._getItems()[index];\n  }\n\n  _getFocusedItem() {\n    return this.getItemByItemElement(this.option(\"focusedElement\"));\n  }\n\n  _focusItem(item, scrollToItem) {\n    this.option(\"focusedElement\", this.getItemElementByItem(item));\n\n    if (scrollToItem) {\n      this._layoutUtils.scrollToItem(this._getIndexByItem(item));\n    }\n  }\n\n  _focusItemByIndex(index, scrollToItem, eventArgs) {\n    if (index >= 0 && index < this._getItemsLength()) {\n      var item = this._getItemByIndex(index);\n\n      this._focusItem(item, scrollToItem, eventArgs);\n    }\n  }\n\n  _syncFocusedItemKey() {\n    if (!this._syncFocusedItemKeyDeferred) {\n      this._syncFocusedItemKeyDeferred = new Deferred();\n    }\n\n    var deferred = this._syncFocusedItemKeyDeferred;\n\n    if (this._dataSource && this._dataSource.isLoading()) {\n      return deferred.promise();\n    }\n\n    var focusedItemKey = this.option(\"focusedItemKey\");\n\n    if (isDefined(focusedItemKey)) {\n      var items = this.option(\"items\");\n      var focusedItem = items.find(item => this.keyOf(item) === focusedItemKey);\n\n      if (focusedItem) {\n        this._focusItem(focusedItem, true);\n\n        deferred.resolve();\n      } else {\n        this.option(\"focusedItemKey\", void 0);\n        deferred.reject();\n      }\n    } else {\n      deferred.resolve();\n    }\n\n    this._syncFocusedItemKeyDeferred = null;\n    return deferred.promise();\n  }\n\n  _onFocusedItemChanged() {\n    var focusedItem = this._getFocusedItem();\n\n    var newFocusedItemKey = this.keyOf(focusedItem);\n    var oldFocusedItemKey = this.option(\"focusedItemKey\");\n\n    if (newFocusedItemKey !== oldFocusedItemKey) {\n      this._lockFocusedItemProcessing = true;\n      this.option(\"focusedItemKey\", newFocusedItemKey);\n      this._lockFocusedItemProcessing = false;\n\n      this._raiseFocusedItemChanged(focusedItem);\n    }\n  }\n\n  _raiseFocusedItemChanged(focusedItem) {\n    var args = {\n      item: focusedItem,\n      itemElement: this.option(\"focusedElement\")\n    };\n\n    this._actions.onFocusedItemChanged(args);\n  }\n\n  _changeItemSelection(item, select) {\n    if (this.isItemSelected(item) === select) {\n      return;\n    }\n\n    var itemElement = this.getItemElementByItem(item);\n\n    var index = this._getIndexByItemElement(itemElement);\n\n    this._selection.changeItemSelection(index, {\n      control: this._isPreserveSelectionMode\n    });\n  }\n\n  _chooseSelectOption() {\n    return \"selectedItemKeys\";\n  }\n\n  getSelectedItems() {\n    return this._selection.getSelectedItems();\n  }\n\n  getItemElementByItem(item) {\n    return this._editStrategy.getItemElement(item);\n  }\n\n  getItemByItemElement(itemElement) {\n    return this._getItemByIndex(this._getIndexByItemElement(itemElement));\n  }\n\n  selectAll() {\n    if (\"multiple\" !== this.option(\"selectionMode\")) {\n      return;\n    }\n\n    this._selection.selectAll();\n\n    this._isPreserveSelectionMode = true;\n  }\n\n  selectItem(item) {\n    this._changeItemSelection(item, true);\n  }\n\n  deselectItem(item) {\n    this._changeItemSelection(item, false);\n  }\n\n  clearSelection() {\n    this._selection.deselectAll();\n  }\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"items\":\n        if (this._layoutUtils) {\n          this._layoutUtils.updateItems(this.itemElements().first());\n        }\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"focusedItemKey\":\n        if (this._lockFocusedItemProcessing) {\n          break;\n        }\n\n        if (isDefined(args.value)) {\n          this._syncFocusedItemKey().done(() => {\n            var focusedItem = this._getFocusedItem();\n\n            this._raiseFocusedItemChanged(focusedItem);\n          });\n        } else {\n          this.option(\"focusedElement\", null);\n\n          this._raiseFocusedItemChanged(null);\n        }\n\n        break;\n\n      case \"onItemEnterKeyPressed\":\n      case \"onFocusedItemChanged\":\n        this._actions[args.name] = this._createActionByOption(args.name);\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n}\n\nclass ListBoxLayoutUtils {\n  constructor(scrollView, $viewPort, $itemContainer, $item) {\n    this._layoutModel = null;\n    this._scrollView = scrollView;\n    this._$viewPort = $viewPort;\n    this._$itemContainer = $itemContainer;\n    this._$item = $item;\n  }\n\n  updateItems($item) {\n    this._$item = $item;\n  }\n\n  reset() {\n    this._layoutModel = null;\n  }\n\n  getLayoutModel() {\n    if (!this._layoutModel) {\n      this._layoutModel = this._createLayoutModel();\n    }\n\n    return this._layoutModel;\n  }\n\n  _createLayoutModel() {\n    if (!this._$item) {\n      return null;\n    }\n\n    var itemWidth = getOuterWidth(this._$item, true);\n\n    if (0 === itemWidth) {\n      return null;\n    }\n\n    var itemHeight = getOuterHeight(this._$item, true);\n    var viewPortWidth = getInnerWidth(this._$itemContainer);\n    var viewPortHeight = getInnerHeight(this._$viewPort);\n\n    var viewPortScrollTop = this._scrollView.scrollTop();\n\n    var viewPortScrollBottom = viewPortScrollTop + viewPortHeight;\n    var itemPerRowCount = Math.floor(viewPortWidth / itemWidth);\n    var rowPerPageRate = viewPortHeight / itemHeight;\n    return {\n      itemWidth: itemWidth,\n      itemHeight: itemHeight,\n      viewPortWidth: viewPortWidth,\n      viewPortHeight: viewPortHeight,\n      viewPortScrollTop: viewPortScrollTop,\n      viewPortScrollBottom: viewPortScrollBottom,\n      itemPerRowCount: itemPerRowCount,\n      rowPerPageRate: rowPerPageRate\n    };\n  }\n\n  createItemLayoutModel(index) {\n    var layout = this.getLayoutModel();\n\n    if (!layout) {\n      return null;\n    }\n\n    var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\n    var itemColumnIndex = index % layout.itemPerRowCount;\n    var itemTop = itemRowIndex * layout.itemHeight;\n    var itemBottom = itemTop + layout.itemHeight;\n    return {\n      itemRowIndex: itemRowIndex,\n      itemColumnIndex: itemColumnIndex,\n      itemTop: itemTop,\n      itemBottom: itemBottom\n    };\n  }\n\n  scrollToItem(index) {\n    var layout = this.getLayoutModel();\n\n    if (!layout) {\n      return;\n    }\n\n    var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\n    var itemTop = itemRowIndex * layout.itemHeight;\n    var itemBottom = itemTop + layout.itemHeight;\n    var newScrollTop = layout.viewPortScrollTop;\n\n    if (itemTop < layout.viewPortScrollTop) {\n      newScrollTop = itemTop;\n    } else if (itemBottom > layout.viewPortScrollBottom) {\n      newScrollTop = itemBottom - layout.viewPortHeight;\n    }\n\n    this._scrollView.scrollTo(newScrollTop);\n  }\n\n}\n\nexport default FileManagerThumbnailListBox;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.items_list.thumbnails.list_box.js"],"names":["getOuterWidth","getOuterHeight","getInnerWidth","getInnerHeight","$","extend","isDefined","Deferred","when","holdEvent","addNamespace","isCommandKeyPressed","eventsEngine","BindableTemplate","ScrollView","CollectionWidget","Selection","FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS","FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY","FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE","FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME","name","FileManagerThumbnailListBox","_initMarkup","_initActions","_lockFocusedItemProcessing","$element","addClass","_renderScrollView","_renderItemsContainer","_createScrollViewControl","onFocusedItemChanged","_onFocusedItemChanged","bind","_layoutUtils","ListBoxLayoutUtils","_scrollView","_$itemContainer","itemElements","first","_syncFocusedItemKey","_actions","onItemEnterKeyPressed","_createActionByOption","_initTemplates","_itemThumbnailTemplate","option","_getTooltipText","_templateManager","addDefaultTemplates","item","$container","data","itemModel","$itemElement","_getDefaultItemTemplate","append","_createComponent","_$scrollView","scrollByContent","scrollByThumb","useKeyboard","showScrollbar","appendTo","_render","_detachEventHandlers","_attachEventHandlers","_clean","_supportedKeys","upArrow","e","_beforeKeyProcessing","_processArrowKeys","downArrow","home","_processHomeEndKeys","end","_getItemsLength","pageUp","_processPageChange","pageDown","enter","_getFocusedItem","A","selectAll","preventDefault","reset","offset","horizontal","eventArgs","layout","getLayoutModel","itemPerRowCount","newItemIndex","_getIndexByItem","_focusItemByIndex","index","scrollToItem","itemLayout","createItemLayoutModel","rowOffset","rowPerPageRate","newRowRate","itemRowIndex","roundFunc","Math","ceil","floor","newRowIndex","itemColumnIndex","_processLongTap","$targetItem","_closestItemElement","target","itemIndex","_getIndexByItemElement","_selection","changeItemSelection","control","on","_itemContainer","concat","_itemContentClass","stopPropagation","shiftKey","off","_itemClass","_itemDataKey","fileItemInfo","attr","$itemThumbnail","$itemSpacer","$itemName","text","fileItem","_itemSelectHandler","options","_isPreserveSelectionMode","shift","currentTarget","_initSelectionModule","selectedKeys","onSelectionChanged","args","_getItemsByKeys","selectedItemKeys","selectedItems","_updateSelectedItems","addedItemKeys","removedItemKeys","_rendered","length","selectionChangePromise","_selectionChangePromise","_rendering","addedSelection","normalizedIndex","removedSelection","_editStrategy","beginCache","i","_getIndexByKey","push","_removeSelection","_i","_addSelection","endCache","_updateSelection","done","_fireSelectionChangeEvent","excludeValidators","selectedItemsCount","getSelectedItems","_normalizeSelectedItems","newKeys","_getKeysByItems","oldKeys","getSelectedItemKeys","_compareKeys","setSelection","resolve","promise","_focusOutHandler","_getItems","itemElement","getNormalizedIndex","_getItemByIndex","getItemByItemElement","_focusItem","getItemElementByItem","_syncFocusedItemKeyDeferred","deferred","_dataSource","isLoading","focusedItemKey","items","focusedItem","find","keyOf","reject","newFocusedItemKey","oldFocusedItemKey","_raiseFocusedItemChanged","_changeItemSelection","select","isItemSelected","_chooseSelectOption","getItemElement","selectItem","deselectItem","clearSelection","deselectAll","_optionChanged","updateItems","value","constructor","scrollView","$viewPort","$itemContainer","$item","_layoutModel","_$viewPort","_$item","_createLayoutModel","itemWidth","itemHeight","viewPortWidth","viewPortHeight","viewPortScrollTop","scrollTop","viewPortScrollBottom","itemTop","itemBottom","newScrollTop","scrollTo"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.items_list.thumbnails.list_box.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight,\r\n    getInnerWidth,\r\n    getInnerHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport ScrollView from \"../scroll_view\";\r\nimport CollectionWidget from \"../collection/ui.collection_widget.edit\";\r\nimport Selection from \"../selection/selection\";\r\nvar FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS = \"dx-filemanager-thumbnails-view-port\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS = \"dx-filemanager-thumbnails-container\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_CLASS = \"dx-filemanager-thumbnails-item\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS = \"dx-filemanager-thumbnails-item-name\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS = \"dx-filemanager-thumbnails-item-spacer\";\r\nvar FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY = \"dxFileManagerItemData\";\r\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE = \"dxFileManagerThumbnailsListBox\";\r\nvar FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME = addNamespace(holdEvent.name, FILE_MANAGER_THUMBNAILS_LIST_BOX_NAMESPACE);\r\nclass FileManagerThumbnailListBox extends CollectionWidget {\r\n    _initMarkup() {\r\n        this._initActions();\r\n        this._lockFocusedItemProcessing = false;\r\n        this.$element().addClass(FILE_MANAGER_THUMBNAILS_VIEW_PORT_CLASS);\r\n        this._renderScrollView();\r\n        this._renderItemsContainer();\r\n        this._createScrollViewControl();\r\n        super._initMarkup();\r\n        this.onFocusedItemChanged = this._onFocusedItemChanged.bind(this);\r\n        this._layoutUtils = new ListBoxLayoutUtils(this._scrollView, this.$element(), this._$itemContainer, this.itemElements().first());\r\n        this._syncFocusedItemKey()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onItemEnterKeyPressed: this._createActionByOption(\"onItemEnterKeyPressed\"),\r\n            onFocusedItemChanged: this._createActionByOption(\"onFocusedItemChanged\")\r\n        }\r\n    }\r\n    _initTemplates() {\r\n        super._initTemplates();\r\n        this._itemThumbnailTemplate = this.option(\"itemThumbnailTemplate\");\r\n        this._getTooltipText = this.option(\"getTooltipText\");\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(function($container, data, itemModel) {\r\n                var $itemElement = this._getDefaultItemTemplate(itemModel, $container);\r\n                $container.append($itemElement)\r\n            }.bind(this), [\"fileItem\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    }\r\n    _createScrollViewControl() {\r\n        if (!this._scrollView) {\r\n            this._scrollView = this._createComponent(this._$scrollView, ScrollView, {\r\n                scrollByContent: true,\r\n                scrollByThumb: true,\r\n                useKeyboard: false,\r\n                showScrollbar: \"onHover\"\r\n            })\r\n        }\r\n    }\r\n    _renderScrollView() {\r\n        if (!this._$scrollView) {\r\n            this._$scrollView = $(\"<div>\").appendTo(this.$element())\r\n        }\r\n    }\r\n    _renderItemsContainer() {\r\n        if (!this._$itemContainer) {\r\n            this._$itemContainer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_LIST_CONTAINER_CLASS).appendTo(this._$scrollView)\r\n        }\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._detachEventHandlers();\r\n        this._attachEventHandlers()\r\n    }\r\n    _clean() {\r\n        this._detachEventHandlers();\r\n        super._clean()\r\n    }\r\n    _supportedKeys() {\r\n        return extend(super._supportedKeys(), {\r\n            upArrow(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processArrowKeys(-1, false, e)\r\n            },\r\n            downArrow(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processArrowKeys(1, false, e)\r\n            },\r\n            home(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processHomeEndKeys(0, true, e)\r\n            },\r\n            end(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processHomeEndKeys(this._getItemsLength() - 1, true, e)\r\n            },\r\n            pageUp(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processPageChange(true, e)\r\n            },\r\n            pageDown(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._processPageChange(false, e)\r\n            },\r\n            enter(e) {\r\n                this._beforeKeyProcessing(e);\r\n                this._actions.onItemEnterKeyPressed(this._getFocusedItem())\r\n            },\r\n            A(e) {\r\n                this._beforeKeyProcessing(e);\r\n                if (isCommandKeyPressed(e)) {\r\n                    this.selectAll()\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _beforeKeyProcessing(e) {\r\n        e.preventDefault();\r\n        this._layoutUtils.reset()\r\n    }\r\n    _processArrowKeys(offset, horizontal, eventArgs) {\r\n        var item = this._getFocusedItem();\r\n        if (item) {\r\n            if (!horizontal) {\r\n                var layout = this._layoutUtils.getLayoutModel();\r\n                if (!layout) {\r\n                    return\r\n                }\r\n                offset *= layout.itemPerRowCount\r\n            }\r\n            var newItemIndex = this._getIndexByItem(item) + offset;\r\n            this._focusItemByIndex(newItemIndex, true, eventArgs)\r\n        }\r\n    }\r\n    _processHomeEndKeys(index, scrollToItem, eventArgs) {\r\n        this._focusItemByIndex(index, scrollToItem, eventArgs)\r\n    }\r\n    _processPageChange(pageUp, eventArgs) {\r\n        var item = this._getFocusedItem();\r\n        if (!item) {\r\n            return\r\n        }\r\n        var layout = this._layoutUtils.getLayoutModel();\r\n        if (!layout) {\r\n            return\r\n        }\r\n        var itemLayout = this._layoutUtils.createItemLayoutModel(this._getIndexByItem(item));\r\n        var rowOffset = pageUp ? layout.rowPerPageRate : -layout.rowPerPageRate;\r\n        var newRowRate = itemLayout.itemRowIndex - rowOffset;\r\n        var roundFunc = pageUp ? Math.ceil : Math.floor;\r\n        var newRowIndex = roundFunc(newRowRate);\r\n        var newItemIndex = newRowIndex * layout.itemPerRowCount + itemLayout.itemColumnIndex;\r\n        if (newItemIndex < 0) {\r\n            newItemIndex = 0\r\n        } else if (newItemIndex >= this._getItemsLength()) {\r\n            newItemIndex = this._getItemsLength() - 1\r\n        }\r\n        this._focusItemByIndex(newItemIndex, true, eventArgs)\r\n    }\r\n    _processLongTap(e) {\r\n        var $targetItem = this._closestItemElement($(e.target));\r\n        var itemIndex = this._getIndexByItemElement($targetItem);\r\n        this._selection.changeItemSelection(itemIndex, {\r\n            control: true\r\n        })\r\n    }\r\n    _attachEventHandlers() {\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            eventsEngine.on(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME, \".\".concat(this._itemContentClass()), e => {\r\n                this._processLongTap(e);\r\n                e.stopPropagation()\r\n            })\r\n        }\r\n        eventsEngine.on(this._itemContainer(), \"mousedown selectstart\", e => {\r\n            if (e.shiftKey) {\r\n                e.preventDefault()\r\n            }\r\n        })\r\n    }\r\n    _detachEventHandlers() {\r\n        eventsEngine.off(this._itemContainer(), FILE_MANAGER_THUMBNAILS_LIST_BOX_HOLD_EVENT_NAME);\r\n        eventsEngine.off(this._itemContainer(), \"mousedown selectstart\")\r\n    }\r\n    _itemContainer() {\r\n        return this._$itemContainer\r\n    }\r\n    _itemClass() {\r\n        return FILE_MANAGER_THUMBNAILS_ITEM_CLASS\r\n    }\r\n    _itemDataKey() {\r\n        return FILE_MANAGER_THUMBNAILS_ITEM_DATA_KEY\r\n    }\r\n    _getDefaultItemTemplate(fileItemInfo, $itemElement) {\r\n        $itemElement.attr(\"title\", this._getTooltipText(fileItemInfo));\r\n        var $itemThumbnail = this._itemThumbnailTemplate(fileItemInfo);\r\n        var $itemSpacer = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_SPACER_CLASS);\r\n        var $itemName = $(\"<div>\").addClass(FILE_MANAGER_THUMBNAILS_ITEM_NAME_CLASS).text(fileItemInfo.fileItem.name);\r\n        $itemElement.append($itemThumbnail, $itemSpacer, $itemName)\r\n    }\r\n    _itemSelectHandler(e) {\r\n        var options = {};\r\n        if (\"multiple\" === this.option(\"selectionMode\")) {\r\n            if (!this._isPreserveSelectionMode) {\r\n                this._isPreserveSelectionMode = isCommandKeyPressed(e) || e.shiftKey\r\n            }\r\n            options = {\r\n                control: this._isPreserveSelectionMode,\r\n                shift: e.shiftKey\r\n            }\r\n        }\r\n        var index = this._getIndexByItemElement(e.currentTarget);\r\n        this._selection.changeItemSelection(index, options)\r\n    }\r\n    _initSelectionModule() {\r\n        super._initSelectionModule();\r\n        var options = extend(this._selection.options, {\r\n            selectedKeys: this.option(\"selectedItemKeys\"),\r\n            onSelectionChanged: args => {\r\n                this.option(\"selectedItems\", this._getItemsByKeys(args.selectedItemKeys, args.selectedItems));\r\n                this._updateSelectedItems(args)\r\n            }\r\n        });\r\n        this._selection = new Selection(options)\r\n    }\r\n    _updateSelectedItems(args) {\r\n        var addedItemKeys = args.addedItemKeys;\r\n        var removedItemKeys = args.removedItemKeys;\r\n        if (this._rendered && (addedItemKeys.length || removedItemKeys.length)) {\r\n            var selectionChangePromise = this._selectionChangePromise;\r\n            if (!this._rendering) {\r\n                var addedSelection = [];\r\n                var normalizedIndex;\r\n                var removedSelection = [];\r\n                this._editStrategy.beginCache();\r\n                for (var i = 0; i < removedItemKeys.length; i++) {\r\n                    normalizedIndex = this._getIndexByKey(removedItemKeys[i]);\r\n                    removedSelection.push(normalizedIndex);\r\n                    this._removeSelection(normalizedIndex)\r\n                }\r\n                for (var _i = 0; _i < addedItemKeys.length; _i++) {\r\n                    normalizedIndex = this._getIndexByKey(addedItemKeys[_i]);\r\n                    addedSelection.push(normalizedIndex);\r\n                    this._addSelection(normalizedIndex)\r\n                }\r\n                this._editStrategy.endCache();\r\n                this._updateSelection(addedSelection, removedSelection)\r\n            }\r\n            when(selectionChangePromise).done(() => this._fireSelectionChangeEvent(args))\r\n        }\r\n    }\r\n    _fireSelectionChangeEvent(args) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })(args)\r\n    }\r\n    _updateSelection(addedSelection, removedSelection) {\r\n        var selectedItemsCount = this.getSelectedItems().length;\r\n        if (0 === selectedItemsCount) {\r\n            this._isPreserveSelectionMode = false\r\n        }\r\n    }\r\n    _normalizeSelectedItems() {\r\n        var newKeys = this._getKeysByItems(this.option(\"selectedItems\"));\r\n        var oldKeys = this._selection.getSelectedItemKeys();\r\n        if (!this._compareKeys(oldKeys, newKeys)) {\r\n            this._selection.setSelection(newKeys)\r\n        }\r\n        return (new Deferred).resolve().promise()\r\n    }\r\n    _focusOutHandler() {}\r\n    _getItems() {\r\n        return this.option(\"items\") || []\r\n    }\r\n    _getItemsLength() {\r\n        return this._getItems().length\r\n    }\r\n    _getIndexByItemElement(itemElement) {\r\n        return this._editStrategy.getNormalizedIndex(itemElement)\r\n    }\r\n    _getItemByIndex(index) {\r\n        return this._getItems()[index]\r\n    }\r\n    _getFocusedItem() {\r\n        return this.getItemByItemElement(this.option(\"focusedElement\"))\r\n    }\r\n    _focusItem(item, scrollToItem) {\r\n        this.option(\"focusedElement\", this.getItemElementByItem(item));\r\n        if (scrollToItem) {\r\n            this._layoutUtils.scrollToItem(this._getIndexByItem(item))\r\n        }\r\n    }\r\n    _focusItemByIndex(index, scrollToItem, eventArgs) {\r\n        if (index >= 0 && index < this._getItemsLength()) {\r\n            var item = this._getItemByIndex(index);\r\n            this._focusItem(item, scrollToItem, eventArgs)\r\n        }\r\n    }\r\n    _syncFocusedItemKey() {\r\n        if (!this._syncFocusedItemKeyDeferred) {\r\n            this._syncFocusedItemKeyDeferred = new Deferred\r\n        }\r\n        var deferred = this._syncFocusedItemKeyDeferred;\r\n        if (this._dataSource && this._dataSource.isLoading()) {\r\n            return deferred.promise()\r\n        }\r\n        var focusedItemKey = this.option(\"focusedItemKey\");\r\n        if (isDefined(focusedItemKey)) {\r\n            var items = this.option(\"items\");\r\n            var focusedItem = items.find(item => this.keyOf(item) === focusedItemKey);\r\n            if (focusedItem) {\r\n                this._focusItem(focusedItem, true);\r\n                deferred.resolve()\r\n            } else {\r\n                this.option(\"focusedItemKey\", void 0);\r\n                deferred.reject()\r\n            }\r\n        } else {\r\n            deferred.resolve()\r\n        }\r\n        this._syncFocusedItemKeyDeferred = null;\r\n        return deferred.promise()\r\n    }\r\n    _onFocusedItemChanged() {\r\n        var focusedItem = this._getFocusedItem();\r\n        var newFocusedItemKey = this.keyOf(focusedItem);\r\n        var oldFocusedItemKey = this.option(\"focusedItemKey\");\r\n        if (newFocusedItemKey !== oldFocusedItemKey) {\r\n            this._lockFocusedItemProcessing = true;\r\n            this.option(\"focusedItemKey\", newFocusedItemKey);\r\n            this._lockFocusedItemProcessing = false;\r\n            this._raiseFocusedItemChanged(focusedItem)\r\n        }\r\n    }\r\n    _raiseFocusedItemChanged(focusedItem) {\r\n        var args = {\r\n            item: focusedItem,\r\n            itemElement: this.option(\"focusedElement\")\r\n        };\r\n        this._actions.onFocusedItemChanged(args)\r\n    }\r\n    _changeItemSelection(item, select) {\r\n        if (this.isItemSelected(item) === select) {\r\n            return\r\n        }\r\n        var itemElement = this.getItemElementByItem(item);\r\n        var index = this._getIndexByItemElement(itemElement);\r\n        this._selection.changeItemSelection(index, {\r\n            control: this._isPreserveSelectionMode\r\n        })\r\n    }\r\n    _chooseSelectOption() {\r\n        return \"selectedItemKeys\"\r\n    }\r\n    getSelectedItems() {\r\n        return this._selection.getSelectedItems()\r\n    }\r\n    getItemElementByItem(item) {\r\n        return this._editStrategy.getItemElement(item)\r\n    }\r\n    getItemByItemElement(itemElement) {\r\n        return this._getItemByIndex(this._getIndexByItemElement(itemElement))\r\n    }\r\n    selectAll() {\r\n        if (\"multiple\" !== this.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        this._selection.selectAll();\r\n        this._isPreserveSelectionMode = true\r\n    }\r\n    selectItem(item) {\r\n        this._changeItemSelection(item, true)\r\n    }\r\n    deselectItem(item) {\r\n        this._changeItemSelection(item, false)\r\n    }\r\n    clearSelection() {\r\n        this._selection.deselectAll()\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"items\":\r\n                if (this._layoutUtils) {\r\n                    this._layoutUtils.updateItems(this.itemElements().first())\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"focusedItemKey\":\r\n                if (this._lockFocusedItemProcessing) {\r\n                    break\r\n                }\r\n                if (isDefined(args.value)) {\r\n                    this._syncFocusedItemKey().done(() => {\r\n                        var focusedItem = this._getFocusedItem();\r\n                        this._raiseFocusedItemChanged(focusedItem)\r\n                    })\r\n                } else {\r\n                    this.option(\"focusedElement\", null);\r\n                    this._raiseFocusedItemChanged(null)\r\n                }\r\n                break;\r\n            case \"onItemEnterKeyPressed\":\r\n            case \"onFocusedItemChanged\":\r\n                this._actions[args.name] = this._createActionByOption(args.name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nclass ListBoxLayoutUtils {\r\n    constructor(scrollView, $viewPort, $itemContainer, $item) {\r\n        this._layoutModel = null;\r\n        this._scrollView = scrollView;\r\n        this._$viewPort = $viewPort;\r\n        this._$itemContainer = $itemContainer;\r\n        this._$item = $item\r\n    }\r\n    updateItems($item) {\r\n        this._$item = $item\r\n    }\r\n    reset() {\r\n        this._layoutModel = null\r\n    }\r\n    getLayoutModel() {\r\n        if (!this._layoutModel) {\r\n            this._layoutModel = this._createLayoutModel()\r\n        }\r\n        return this._layoutModel\r\n    }\r\n    _createLayoutModel() {\r\n        if (!this._$item) {\r\n            return null\r\n        }\r\n        var itemWidth = getOuterWidth(this._$item, true);\r\n        if (0 === itemWidth) {\r\n            return null\r\n        }\r\n        var itemHeight = getOuterHeight(this._$item, true);\r\n        var viewPortWidth = getInnerWidth(this._$itemContainer);\r\n        var viewPortHeight = getInnerHeight(this._$viewPort);\r\n        var viewPortScrollTop = this._scrollView.scrollTop();\r\n        var viewPortScrollBottom = viewPortScrollTop + viewPortHeight;\r\n        var itemPerRowCount = Math.floor(viewPortWidth / itemWidth);\r\n        var rowPerPageRate = viewPortHeight / itemHeight;\r\n        return {\r\n            itemWidth: itemWidth,\r\n            itemHeight: itemHeight,\r\n            viewPortWidth: viewPortWidth,\r\n            viewPortHeight: viewPortHeight,\r\n            viewPortScrollTop: viewPortScrollTop,\r\n            viewPortScrollBottom: viewPortScrollBottom,\r\n            itemPerRowCount: itemPerRowCount,\r\n            rowPerPageRate: rowPerPageRate\r\n        }\r\n    }\r\n    createItemLayoutModel(index) {\r\n        var layout = this.getLayoutModel();\r\n        if (!layout) {\r\n            return null\r\n        }\r\n        var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\r\n        var itemColumnIndex = index % layout.itemPerRowCount;\r\n        var itemTop = itemRowIndex * layout.itemHeight;\r\n        var itemBottom = itemTop + layout.itemHeight;\r\n        return {\r\n            itemRowIndex: itemRowIndex,\r\n            itemColumnIndex: itemColumnIndex,\r\n            itemTop: itemTop,\r\n            itemBottom: itemBottom\r\n        }\r\n    }\r\n    scrollToItem(index) {\r\n        var layout = this.getLayoutModel();\r\n        if (!layout) {\r\n            return\r\n        }\r\n        var itemRowIndex = Math.floor(index / layout.itemPerRowCount);\r\n        var itemTop = itemRowIndex * layout.itemHeight;\r\n        var itemBottom = itemTop + layout.itemHeight;\r\n        var newScrollTop = layout.viewPortScrollTop;\r\n        if (itemTop < layout.viewPortScrollTop) {\r\n            newScrollTop = itemTop\r\n        } else if (itemBottom > layout.viewPortScrollBottom) {\r\n            newScrollTop = itemBottom - layout.viewPortHeight\r\n        }\r\n        this._scrollView.scrollTo(newScrollTop)\r\n    }\r\n}\r\nexport default FileManagerThumbnailListBox;\r\n"]},"metadata":{},"sourceType":"module"}