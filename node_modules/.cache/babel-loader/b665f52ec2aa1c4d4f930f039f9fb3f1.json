{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\elements\\queryModel.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryViewModel = exports.QueryViewModelBase = void 0;\n\nvar ko = require(\"knockout\");\n\nvar queryElementModel_1 = require(\"./queryElementModel\");\n\nvar tableModel_1 = require(\"./tableModel\");\n\nvar columnExpression_1 = require(\"./columnExpression\");\n\nvar dbColumn_1 = require(\"../dataSource/dbColumn\");\n\nvar parameterModelMeta_1 = require(\"./parameterModelMeta\");\n\nvar serializer_1 = require(\"../../serializer/serializer\");\n\nvar utils_1 = require(\"../../serializer/utils\");\n\nvar columnExpressionMeta_1 = require(\"./columnExpressionMeta\");\n\nvar relationModel_1 = require(\"./relationModel\");\n\nvar parameterModel_1 = require(\"./parameterModel\");\n\nvar _getNameHelpers_1 = require(\"../../core/internal/_getNameHelpers\");\n\nvar _qbFilterStringOptions_1 = require(\"../widgets/filterEditor/_qbFilterStringOptions\");\n\nvar columnModelMeta_1 = require(\"./columnModelMeta\");\n\nvar _queryBuilderObjectsProvider_1 = require(\"../widgets/filterEditor/_queryBuilderObjectsProvider\");\n\nvar _groupFilterEditorSerializer_1 = require(\"../widgets/filterEditor/_groupFilterEditorSerializer\");\n\nvar margins_1 = require(\"../../core/elements/margins\");\n\nvar _utils_1 = require(\"../../property-grid/widgets/internal/_utils\");\n\nvar localization_utils_1 = require(\"../../property-grid/localization/localization_utils\");\n\nvar _infoMessageHelpers_1 = require(\"../../core/utils/_infoMessageHelpers\");\n\nvar queryModelMeta_1 = require(\"./queryModelMeta\");\n\nvar _arrayutils_1 = require(\"../../core/utils/_arrayutils\");\n\nvar _utils_2 = require(\"../../serializer/_utils\");\n\nvar QueryViewModelBase = function (_super) {\n  __extends(QueryViewModelBase, _super);\n\n  function QueryViewModelBase(querySource, dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) {\n    if (parametersMode === void 0) {\n      parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite;\n    }\n\n    var _this = _super.call(this, querySource, null, serializer) || this;\n\n    _this.topOffset = 65;\n\n    _this._findAncestorsRelations = function (table) {\n      var result = {\n        inner: 0,\n        outer: 0,\n        relations: []\n      };\n\n      _this.relations().forEach(function (item) {\n        if (item.nestedTable() === table) {\n          result.relations.push(item);\n          item.joinType() === 'LeftOuter' ? result.outer++ : result.inner++;\n\n          var parentResult = _this._findAncestorsRelations(item.parentTable());\n\n          result.inner += parentResult.inner;\n          result.outer += parentResult.outer;\n          result.relations.push.apply(result.relations, parentResult.relations);\n        }\n      });\n\n      return result;\n    };\n\n    _this.aggregatedColumnsCount = ko.observable(0);\n    _this.defaultPageHeight = 500;\n    _this.defaultPageWidth = 500;\n    _this.dbSchemaProvider = dbSchemaProvider;\n    _this.onSave = beforeSaveCallback;\n    _this.editableName = ko.observable(_this.name());\n\n    _this._disposables.push(_this.name = ko.pureComputed({\n      read: _this.editableName,\n      write: function (val) {}\n    }));\n\n    var _pageWidth = ko.observable(0);\n\n    _this._disposables.push(_this.pageWidth = ko.pureComputed({\n      read: function () {\n        var result = _this.defaultPageWidth;\n\n        _this.tables().forEach(function (table) {\n          var right = table.location.x() + table.size.width();\n\n          if (right > result) {\n            result = right;\n          }\n        });\n\n        return Math.max(_pageWidth(), result);\n      },\n      write: function (value) {\n        _pageWidth(value);\n      }\n    }));\n\n    _this._disposables.push(_this.pageHeight = ko.pureComputed(function () {\n      var result = _this.defaultPageHeight;\n\n      _this.tables().forEach(function (table) {\n        var bottom = table.location.y() + table.size.height();\n\n        if (bottom > result) {\n          result = bottom + QueryViewModel.pageMargin;\n        }\n      });\n\n      return result;\n    }));\n\n    _this.margins = margins_1.Margins.fromString();\n\n    _this._disposables.push(_this.isValid = ko.pureComputed(function () {\n      return _this._validate();\n    }));\n\n    var isAllColumnsAllTablesExpression = function (column) {\n      return !column.table() && column.itemType() === columnExpressionMeta_1.ColumnType.AllColumns;\n    };\n\n    _this._disposables.push(_this.allColumnsInTablesSelected = ko.pureComputed({\n      read: function () {\n        return _this.columns().some(isAllColumnsAllTablesExpression);\n      },\n      write: function (value) {\n        if (value) {\n          _this.columns.push(new columnExpression_1.ColumnExpression({\n            '@ItemType': 'AllColumns'\n          }, _this, serializer));\n        } else {\n          _this.columns.remove(isAllColumnsAllTablesExpression);\n        }\n      }\n    }));\n\n    if (!_this.sorting) _this.sorting = ko.observableArray([]);\n    if (!_this.grouping) _this.grouping = ko.observableArray([]);\n    return _this;\n  }\n\n  QueryViewModelBase.prototype._initializeTable = function (table) {\n    this.dbSchemaProvider.getDbTable(table.name()).done(function (dbTable) {\n      table.createColumns(dbTable);\n    });\n  };\n\n  QueryViewModelBase.prototype._addColumnsToTable = function (table, columns) {\n    table._initColumns(columns.map(function (x) {\n      return new dbColumn_1.DBColumn({\n        Name: x.column()\n      });\n    }));\n  };\n\n  QueryViewModelBase.prototype.dispose = function () {\n    _super.prototype.dispose.call(this);\n\n    this.onSave = null;\n  };\n\n  QueryViewModelBase.prototype.addChild = function (control) {\n    if (control instanceof relationModel_1.RelationViewModel) {\n      if (this.relations.indexOf(control) > -1) return;\n      control.parentModel(this);\n      this.relations.push(control);\n    } else if (control instanceof tableModel_1.TableViewModel) {\n      if (this.tables.indexOf(control) > -1) return;\n      control.parentModel(this);\n\n      if (_arrayutils_1.getFirstItemByPropertyValue(this.tables(), 'actualName', control.name()) !== null) {\n        control.alias(_getNameHelpers_1.getUniqueName(this.tables().map(function (table) {\n          return table.actualName();\n        }), control.name() + '_'));\n      }\n\n      this.tables.push(control);\n    } else {\n      _infoMessageHelpers_1.NotifyAboutWarning('Attempt to add wrong child control.');\n    }\n  };\n\n  QueryViewModelBase.prototype.removeChild = function (control) {\n    if (control instanceof relationModel_1.RelationViewModel) {\n      if (this.relations().length < 1) return;\n      var relation = control;\n      var indexRelation = this.relations().indexOf(relation);\n\n      while (relation.conditions().length > 0) relation.conditions.pop();\n\n      this.relations.splice(indexRelation, 1);\n    } else if (control instanceof tableModel_1.TableViewModel) {\n      if (this.tables().length < 1) return;\n      this.tables.splice(this.tables().indexOf(control), 1);\n      var relations = this.relations();\n\n      for (var i = relations.length - 1; i > -1; i--) {\n        if (relations[i].parentTable() === control || relations[i].nestedTable() === control) {\n          this.removeChild(relations[i]);\n        }\n      }\n\n      this.sorting.remove(function (item) {\n        return item.isDepended(control.actualName());\n      });\n      this.grouping.remove(function (item) {\n        return item.isDepended(control.actualName());\n      });\n      this.columns.remove(function (item) {\n        return item.isDepended(control.actualName());\n      });\n    } else {\n      _infoMessageHelpers_1.NotifyAboutWarning('Attempt to remove wrong child control.');\n    }\n  };\n\n  QueryViewModelBase.prototype._validate = function () {\n    if (this.tables().length === 0) return false;\n    if (!(this.allColumnsInTablesSelected() || this.columns().length > 0)) return false;\n    var tables = this.tables().map(function (table) {\n      return table.actualName();\n    });\n\n    this._validateTable(tables, tables[0]);\n\n    return tables.length < 1;\n  };\n\n  QueryViewModelBase.prototype._validateTable = function (tables, tableName) {\n    var _this = this;\n\n    var index = tables.indexOf(tableName);\n    if (index < 0) return;\n    tables.splice(index, 1);\n    var connectedTables = this.relations().map(function (relation) {\n      if (relation.parentTableName() === tableName) return relation.nestedTableName();\n      if (relation.nestedTableName() === tableName) return relation.parentTableName();\n      return null;\n    });\n    connectedTables.forEach(function (item) {\n      return _this._validateTable(tables, item);\n    });\n  };\n\n  QueryViewModelBase.prototype.createChild = function (info, tableViewModel, path) {\n    if (!tableViewModel) return _super.prototype.createChild.call(this, info);\n\n    this._initializeTable(tableViewModel);\n\n    this.addChild(tableViewModel);\n    return tableViewModel;\n  };\n\n  QueryViewModelBase.prototype.init = function () {\n    var _this = this;\n\n    this.tables().forEach(function (table) {\n      var columns = [];\n      var sorting = _this.sorting && _this.sorting() || [];\n      var grouping = _this.grouping && _this.grouping() || [];\n      [_this.columns(), sorting, grouping].forEach(function (currentColumns) {\n        currentColumns.forEach(function (column) {\n          if (table.name() === column.table() && column.itemType() === columnExpressionMeta_1.ColumnType.Column && columns.every(function (x) {\n            return x.column() !== column.column();\n          })) {\n            columns.push(column);\n          }\n        });\n      });\n\n      _this._addColumnsToTable(table, columns);\n\n      _this._initializeTable(table);\n    });\n    this.tables().reduce(function (posX, tableModel) {\n      tableModel.location.x(posX);\n      tableModel.location.y(_this.topOffset);\n      return posX + tableModel.size.width() + tableModel.size.width() / 2;\n    }, 30);\n    var inProcess = false;\n\n    this._disposables.push(ko.computed(function () {\n      if (!inProcess) {\n        inProcess = true;\n\n        var allColumns = _this.getAllColumns();\n\n        var withoutAggregate = allColumns.filter(function (x) {\n          return x.aggregate() === columnModelMeta_1.AggregationType.None;\n        });\n\n        _this.aggregatedColumnsCount(allColumns.length - withoutAggregate.length);\n\n        if (allColumns.length !== withoutAggregate.length) {\n          withoutAggregate.filter(function (x) {\n            return x.selected() && !x.groupBy.peek();\n          }).forEach(function (x) {\n            return x.groupBy(true);\n          });\n        } else {\n          if (!allColumns.every(function (x) {\n            return !x.selected.peek() || x.groupBy.peek();\n          })) {\n            allColumns.forEach(function (x) {\n              if (x.groupBy.peek()) {\n                x.groupBy(false);\n              }\n            });\n          }\n        }\n\n        inProcess = false;\n      }\n    }));\n  };\n\n  QueryViewModelBase.prototype.getTable = function (name) {\n    return _arrayutils_1.findFirstItemMatchesCondition(this.tables(), function (item) {\n      return item.actualName() === name;\n    });\n  };\n\n  QueryViewModelBase.prototype.canSave = function (showMessage) {\n    if (showMessage === void 0) {\n      showMessage = true;\n    }\n\n    var message = [];\n    this.tables().forEach(function (t) {\n      t.getInvalidColumns().forEach(function (column) {\n        message.push(_utils_1.formatUnicorn(localization_utils_1.getLocalization('The schema does not contain the following column: \"{0}\".\"{1}\".', 'DataAccessStringId.ColumnNotInSchemaValidationException'), t.actualName(), column.actualName()));\n      });\n    });\n\n    if (message.length > 0) {\n      showMessage && _infoMessageHelpers_1.ShowMessage(message.join('\\n'), 'error');\n      return false;\n    }\n\n    return true;\n  };\n\n  QueryViewModelBase.prototype.save = function () {\n    if (!this.canSave()) return;\n    var data = this.serialize(true);\n\n    if (this.onSave) {\n      this.onSave(data);\n    }\n\n    return data;\n  };\n\n  QueryViewModelBase.prototype.serialize = function (includeRootTag) {\n    if (includeRootTag === void 0) {\n      includeRootTag = false;\n    }\n\n    return includeRootTag ? {\n      'Query': this.serialize()\n    } : new serializer_1.ModelSerializer().serialize(this);\n  };\n\n  QueryViewModelBase.prototype._findTableInAncestors = function (child, probablyAncestor) {\n    var _this = this;\n\n    return this.relations().some(function (relation) {\n      return relation.nestedTable() === child && (relation.parentTable() === probablyAncestor || _this._findTableInAncestors(relation.parentTable(), probablyAncestor));\n    });\n  };\n\n  QueryViewModelBase.prototype._findHead = function (table) {\n    var result = null;\n    this.relations().some(function (relation) {\n      if (relation.nestedTable() === table) result = relation;\n      return !!result;\n    });\n    return result ? this._findHead(result.parentTable()) : table;\n  };\n\n  QueryViewModelBase.prototype._isHead = function (table) {\n    return !this.relations().some(function (relation) {\n      return relation.nestedTable() === table;\n    });\n  };\n\n  QueryViewModelBase.prototype._reverseRelations = function (table, relationsToReverse) {\n    relationsToReverse.forEach(function (item) {\n      var tempTable = item.parentTable();\n      item.parentTable(item.nestedTable());\n      item.nestedTable(tempTable);\n      item.conditions().forEach(function (condition) {\n        var tempColumn = condition.parentColumnName();\n        condition.parentColumnName(condition.nestedColumnName());\n        condition.nestedColumnName(tempColumn);\n      });\n    });\n  };\n\n  QueryViewModelBase.prototype.getAllColumns = function () {\n    return [].concat.apply([], this.tables().map(function (x) {\n      return x.columns();\n    }));\n  };\n\n  QueryViewModelBase.prototype.cerateJoinCondition = function (parentColumn, nestedColumn) {\n    var parentTable = parentColumn.parentModel();\n    var nestedTable = nestedColumn.parentModel();\n    if (parentTable === nestedTable) return null;\n    var isColumnsReplaced = false;\n\n    var relation = _arrayutils_1.findFirstItemMatchesCondition(this.relations(), function (relation) {\n      isColumnsReplaced = relation.parentTable() === nestedTable && relation.nestedTable() === parentTable;\n      return relation.parentTable() === parentTable && relation.nestedTable() === nestedTable || isColumnsReplaced;\n    });\n\n    if (relation) {} else if (this._findTableInAncestors(parentTable, nestedTable)) {\n      isColumnsReplaced = true;\n    } else if (this._findHead(parentTable) !== this._findHead(nestedTable) && !this._isHead(nestedTable)) {\n      var parentRelations = this._findAncestorsRelations(parentTable);\n\n      var nestedRelations = this._findAncestorsRelations(nestedTable);\n\n      if (parentRelations.outer > nestedRelations.outer) {\n        this._reverseRelations(nestedTable, nestedRelations.relations);\n      } else if (parentRelations.outer < nestedRelations.outer) {\n        this._reverseRelations(parentTable, parentRelations.relations);\n\n        isColumnsReplaced = true;\n      } else if (parentRelations.inner >= nestedRelations.inner) {\n        this._reverseRelations(nestedTable, nestedRelations.relations);\n      } else if (parentRelations.inner < nestedRelations.inner) {\n        this._reverseRelations(parentTable, parentRelations.relations);\n\n        isColumnsReplaced = true;\n      }\n    }\n\n    if (isColumnsReplaced) {\n      var tempTable = parentTable;\n      parentTable = nestedTable;\n      nestedTable = tempTable;\n      var tempColumn = parentColumn;\n      parentColumn = nestedColumn;\n      nestedColumn = tempColumn;\n    }\n\n    relation = relation || this.createChild({\n      '@ControlType': 'Relation',\n      '@Parent': parentTable.actualName(),\n      '@Nested': nestedTable.actualName(),\n      '@Type': 'Inner'\n    });\n\n    var joinCondition = _arrayutils_1.findFirstItemMatchesCondition(relation.conditions(), function (condition) {\n      return condition.parentColumn() === parentColumn && condition.nestedColumn() === nestedColumn;\n    });\n\n    if (!joinCondition) {\n      joinCondition = relation.createChild({\n        '@ControlType': 'JoinCondition',\n        '@Parent': parentColumn.name(),\n        '@Nested': nestedColumn.name()\n      });\n    }\n\n    return joinCondition;\n  };\n\n  QueryViewModelBase.prototype.tryToCreateRelationsByFK = function (sourceTable) {};\n\n  QueryViewModelBase.pageMargin = 20;\n  return QueryViewModelBase;\n}(queryElementModel_1.QueryElementBaseViewModel);\n\nexports.QueryViewModelBase = QueryViewModelBase;\n\nvar QueryViewModel = function (_super) {\n  __extends(QueryViewModel, _super);\n\n  function QueryViewModel(querySource, dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) {\n    if (parametersMode === void 0) {\n      parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite;\n    }\n\n    var _this = _super.call(this, _utils_2.extend(true, querySource, QueryViewModel.emptyModel, querySource), dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) || this;\n\n    _this.controlType = 'Query';\n\n    _this['type']('SelectQuery');\n\n    _this.tables = utils_1.deserializeArray(querySource['Tables']['SelectedTables'], function (item) {\n      return new tableModel_1.TableViewModel(item, _this, serializer);\n    });\n    _this.columns = utils_1.deserializeArray(querySource['Columns'], function (item) {\n      return new columnExpression_1.ColumnExpression(item, _this, serializer);\n    });\n    _this.sorting = utils_1.deserializeArray(querySource['Sorting'], function (item) {\n      return new columnExpression_1.ColumnExpression(item, _this, serializer);\n    });\n    _this.grouping = utils_1.deserializeArray(querySource['Grouping'], function (item) {\n      return new columnExpression_1.ColumnExpression(item, _this, serializer);\n    });\n    _this.relations = utils_1.deserializeArray(querySource['Tables']['Relations'], function (item) {\n      return new relationModel_1.RelationViewModel(item, _this, serializer);\n    });\n\n    _this.init();\n\n    _this['_tablesObject']['tables'] = _this.tables;\n    _this['_tablesObject']['relations'] = _this.relations;\n    var parameters = utils_1.deserializeArray(querySource['Parameters'], function (item) {\n      return new parameterModel_1.ParameterViewModel(item, serializer);\n    });\n\n    if (parametersMode === parameterModelMeta_1.ParametersMode.ReadWrite) {\n      _this.parameters = parameters;\n\n      _this._disposables.push(_this.parameters.subscribe(function (changes) {\n        changes.forEach(function (change) {\n          if (change.status === 'added' && !change.value.name()) change.value.name(_getNameHelpers_1.getUniqueName(_this.parameters().filter(function (x) {\n            return x !== change.value;\n          }).map(function (x) {\n            return x.name();\n          }), 'parameter'));\n        });\n      }, null, 'arrayChange'));\n    } else {\n      _this._disposables.push(_this.parameters = ko.computed(function () {\n        return parameters();\n      }));\n    }\n\n    _this.filterString = new _qbFilterStringOptions_1.QBFilterStringOptions(_this._filterString, null, ko.pureComputed(function () {\n      return _this.tables().length === 0 && _this.filterString && _this.filterString.value().length === 0;\n    }));\n\n    _this.filterString.initializeFilterStringHelper(_this.parameters, parametersMode);\n\n    _this.groupFilterString = new _qbFilterStringOptions_1.QBFilterStringOptions(_this._groupFilterString, null, ko.pureComputed(function () {\n      return !_this.columns().some(_queryBuilderObjectsProvider_1.isAggregatedExpression) && _this.groupFilterString && (_this.groupFilterString.value() || '').length === 0;\n    }));\n\n    _this.groupFilterString.initializeFilterStringHelper(_this.parameters, parametersMode, new _groupFilterEditorSerializer_1.GroupFilterEditorSerializer(_this.columns));\n\n    return _this;\n  }\n\n  QueryViewModel.prototype.isPropertyDisabled = function (name) {\n    if (name === 'skip') return this.skip() === 0 && !this.sorting().length;\n    return false;\n  };\n\n  QueryViewModel.prototype.getInfo = function () {\n    return queryModelMeta_1.querySerializationsInfo;\n  };\n\n  QueryViewModel.prototype.createChild = function (info) {\n    return _super.prototype.createChild.call(this, info, info['@ControlType'] === 'Table' ? new tableModel_1.TableViewModel(info, this) : undefined);\n  };\n\n  QueryViewModel.prototype.tryToCreateRelationsByFK = function (sourceTable) {\n    var _this = this;\n\n    this.dbSchemaProvider.getDbSchema().done(function (dbSchema) {\n      var dbSourceTable = dbSchema.tables.filter(function (item) {\n        return item.name === sourceTable.name();\n      })[0];\n\n      if (dbSourceTable) {\n        dbSourceTable.foreignKeys.forEach(function (fk) {\n          var pkTable = _arrayutils_1.getFirstItemByPropertyValue(_this.tables.peek(), 'name', fk.primaryKeyTable);\n\n          if (pkTable) {\n            for (var i = 0; i < fk.primaryKeyColumns.length; i++) {\n              var column1 = _arrayutils_1.getFirstItemByPropertyValue(sourceTable.columns(), 'name', fk.columns[i]);\n\n              var column2 = _arrayutils_1.getFirstItemByPropertyValue(pkTable.columns(), 'name', fk.primaryKeyColumns[i]);\n\n              if (column1 && column2) {\n                _this.cerateJoinCondition(column1, column2);\n              }\n            }\n          }\n        });\n      }\n\n      _this.tables.peek().forEach(function (table) {\n        var dbTable = dbSchema.tables.filter(function (item) {\n          return item.name === table.name();\n        })[0];\n\n        if (dbTable) {\n          dbTable.foreignKeys.forEach(function (fk) {\n            if (fk.primaryKeyTable === sourceTable.name()) {\n              for (var i = 0; i < fk.primaryKeyColumns.length; i++) {\n                var column1 = _arrayutils_1.getFirstItemByPropertyValue(sourceTable.columns(), 'name', fk.primaryKeyColumns[i]);\n\n                var column2 = _arrayutils_1.getFirstItemByPropertyValue(table.columns(), 'name', fk.columns[i]);\n\n                if (column1 && column2) {\n                  _this.cerateJoinCondition(column2, column1);\n                }\n              }\n            }\n          });\n        }\n      });\n    });\n  };\n\n  QueryViewModel.emptyModel = {\n    '@ItemType': 'Query',\n    'Tables': {\n      'SelectedTables': {},\n      'Relations': {}\n    },\n    'Columns': {},\n    'Sorting': {},\n    'Grouping': {}\n  };\n  return QueryViewModel;\n}(QueryViewModelBase);\n\nexports.QueryViewModel = QueryViewModel;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/elements/queryModel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","QueryViewModel","QueryViewModelBase","ko","require","queryElementModel_1","tableModel_1","columnExpression_1","dbColumn_1","parameterModelMeta_1","serializer_1","utils_1","columnExpressionMeta_1","relationModel_1","parameterModel_1","_getNameHelpers_1","_qbFilterStringOptions_1","columnModelMeta_1","_queryBuilderObjectsProvider_1","_groupFilterEditorSerializer_1","margins_1","_utils_1","localization_utils_1","_infoMessageHelpers_1","queryModelMeta_1","_arrayutils_1","_utils_2","_super","querySource","dbSchemaProvider","parametersMode","beforeSaveCallback","serializer","ParametersMode","ReadWrite","_this","topOffset","_findAncestorsRelations","table","result","inner","outer","relations","forEach","item","nestedTable","push","joinType","parentResult","parentTable","apply","aggregatedColumnsCount","observable","defaultPageHeight","defaultPageWidth","onSave","editableName","name","_disposables","pureComputed","read","write","val","_pageWidth","pageWidth","tables","right","location","x","size","width","Math","max","pageHeight","bottom","y","height","pageMargin","margins","Margins","fromString","isValid","_validate","isAllColumnsAllTablesExpression","column","itemType","ColumnType","AllColumns","allColumnsInTablesSelected","columns","some","ColumnExpression","remove","sorting","observableArray","grouping","_initializeTable","getDbTable","done","dbTable","createColumns","_addColumnsToTable","_initColumns","map","DBColumn","Name","dispose","addChild","control","RelationViewModel","indexOf","parentModel","TableViewModel","getFirstItemByPropertyValue","alias","getUniqueName","actualName","NotifyAboutWarning","removeChild","length","relation","indexRelation","conditions","pop","splice","i","isDepended","_validateTable","tableName","index","connectedTables","parentTableName","nestedTableName","createChild","info","tableViewModel","path","init","currentColumns","Column","every","reduce","posX","tableModel","inProcess","computed","allColumns","getAllColumns","withoutAggregate","filter","aggregate","AggregationType","None","selected","groupBy","peek","getTable","findFirstItemMatchesCondition","canSave","showMessage","message","t","getInvalidColumns","formatUnicorn","getLocalization","ShowMessage","join","save","data","serialize","includeRootTag","ModelSerializer","_findTableInAncestors","child","probablyAncestor","_findHead","_isHead","_reverseRelations","relationsToReverse","tempTable","condition","tempColumn","parentColumnName","nestedColumnName","concat","cerateJoinCondition","parentColumn","nestedColumn","isColumnsReplaced","parentRelations","nestedRelations","joinCondition","tryToCreateRelationsByFK","sourceTable","QueryElementBaseViewModel","extend","emptyModel","controlType","deserializeArray","parameters","ParameterViewModel","subscribe","changes","change","status","filterString","QBFilterStringOptions","_filterString","initializeFilterStringHelper","groupFilterString","_groupFilterString","isAggregatedExpression","GroupFilterEditorSerializer","isPropertyDisabled","skip","getInfo","querySerializationsInfo","undefined","getDbSchema","dbSchema","dbSourceTable","foreignKeys","fk","pkTable","primaryKeyTable","primaryKeyColumns","column1","column2"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\elements\\queryModel.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryViewModel = exports.QueryViewModelBase = void 0;\nvar ko = require(\"knockout\");\nvar queryElementModel_1 = require(\"./queryElementModel\");\nvar tableModel_1 = require(\"./tableModel\");\nvar columnExpression_1 = require(\"./columnExpression\");\nvar dbColumn_1 = require(\"../dataSource/dbColumn\");\nvar parameterModelMeta_1 = require(\"./parameterModelMeta\");\nvar serializer_1 = require(\"../../serializer/serializer\");\nvar utils_1 = require(\"../../serializer/utils\");\nvar columnExpressionMeta_1 = require(\"./columnExpressionMeta\");\nvar relationModel_1 = require(\"./relationModel\");\nvar parameterModel_1 = require(\"./parameterModel\");\nvar _getNameHelpers_1 = require(\"../../core/internal/_getNameHelpers\");\nvar _qbFilterStringOptions_1 = require(\"../widgets/filterEditor/_qbFilterStringOptions\");\nvar columnModelMeta_1 = require(\"./columnModelMeta\");\nvar _queryBuilderObjectsProvider_1 = require(\"../widgets/filterEditor/_queryBuilderObjectsProvider\");\nvar _groupFilterEditorSerializer_1 = require(\"../widgets/filterEditor/_groupFilterEditorSerializer\");\nvar margins_1 = require(\"../../core/elements/margins\");\nvar _utils_1 = require(\"../../property-grid/widgets/internal/_utils\");\nvar localization_utils_1 = require(\"../../property-grid/localization/localization_utils\");\nvar _infoMessageHelpers_1 = require(\"../../core/utils/_infoMessageHelpers\");\nvar queryModelMeta_1 = require(\"./queryModelMeta\");\nvar _arrayutils_1 = require(\"../../core/utils/_arrayutils\");\nvar _utils_2 = require(\"../../serializer/_utils\");\nvar QueryViewModelBase = (function (_super) {\n    __extends(QueryViewModelBase, _super);\n    function QueryViewModelBase(querySource, dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) {\n        if (parametersMode === void 0) { parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite; }\n        var _this = _super.call(this, querySource, null, serializer) || this;\n        _this.topOffset = 65;\n        _this._findAncestorsRelations = function (table) {\n            var result = { inner: 0, outer: 0, relations: [] };\n            _this.relations().forEach(function (item) {\n                if (item.nestedTable() === table) {\n                    result.relations.push(item);\n                    item.joinType() === 'LeftOuter' ? result.outer++ : result.inner++;\n                    var parentResult = _this._findAncestorsRelations(item.parentTable());\n                    result.inner += parentResult.inner;\n                    result.outer += parentResult.outer;\n                    result.relations.push.apply(result.relations, parentResult.relations);\n                }\n            });\n            return result;\n        };\n        _this.aggregatedColumnsCount = ko.observable(0);\n        _this.defaultPageHeight = 500;\n        _this.defaultPageWidth = 500;\n        _this.dbSchemaProvider = dbSchemaProvider;\n        _this.onSave = beforeSaveCallback;\n        _this.editableName = ko.observable(_this.name());\n        _this._disposables.push(_this.name = ko.pureComputed({\n            read: _this.editableName,\n            write: function (val) { }\n        }));\n        var _pageWidth = ko.observable(0);\n        _this._disposables.push(_this.pageWidth = ko.pureComputed({\n            read: function () {\n                var result = _this.defaultPageWidth;\n                _this.tables().forEach(function (table) {\n                    var right = table.location.x() + table.size.width();\n                    if (right > result) {\n                        result = right;\n                    }\n                });\n                return Math.max(_pageWidth(), result);\n            },\n            write: function (value) {\n                _pageWidth(value);\n            }\n        }));\n        _this._disposables.push(_this.pageHeight = ko.pureComputed(function () {\n            var result = _this.defaultPageHeight;\n            _this.tables().forEach(function (table) {\n                var bottom = table.location.y() + table.size.height();\n                if (bottom > result) {\n                    result = bottom + QueryViewModel.pageMargin;\n                }\n            });\n            return result;\n        }));\n        _this.margins = margins_1.Margins.fromString();\n        _this._disposables.push(_this.isValid = ko.pureComputed(function () { return _this._validate(); }));\n        var isAllColumnsAllTablesExpression = function (column) { return !column.table() && column.itemType() === columnExpressionMeta_1.ColumnType.AllColumns; };\n        _this._disposables.push(_this.allColumnsInTablesSelected = ko.pureComputed({\n            read: function () { return _this.columns().some(isAllColumnsAllTablesExpression); },\n            write: function (value) {\n                if (value) {\n                    _this.columns.push(new columnExpression_1.ColumnExpression({ '@ItemType': 'AllColumns' }, _this, serializer));\n                }\n                else {\n                    _this.columns.remove(isAllColumnsAllTablesExpression);\n                }\n            }\n        }));\n        if (!_this.sorting)\n            _this.sorting = ko.observableArray([]);\n        if (!_this.grouping)\n            _this.grouping = ko.observableArray([]);\n        return _this;\n    }\n    QueryViewModelBase.prototype._initializeTable = function (table) {\n        this.dbSchemaProvider.getDbTable(table.name())\n            .done(function (dbTable) {\n            table.createColumns(dbTable);\n        });\n    };\n    QueryViewModelBase.prototype._addColumnsToTable = function (table, columns) {\n        table._initColumns(columns.map(function (x) {\n            return new dbColumn_1.DBColumn({\n                Name: x.column()\n            });\n        }));\n    };\n    QueryViewModelBase.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onSave = null;\n    };\n    QueryViewModelBase.prototype.addChild = function (control) {\n        if (control instanceof relationModel_1.RelationViewModel) {\n            if (this.relations.indexOf(control) > -1)\n                return;\n            control.parentModel(this);\n            this.relations.push(control);\n        }\n        else if (control instanceof tableModel_1.TableViewModel) {\n            if (this.tables.indexOf(control) > -1)\n                return;\n            control.parentModel(this);\n            if (_arrayutils_1.getFirstItemByPropertyValue(this.tables(), 'actualName', control.name()) !== null) {\n                control.alias(_getNameHelpers_1.getUniqueName(this.tables().map(function (table) { return table.actualName(); }), control.name() + '_'));\n            }\n            this.tables.push(control);\n        }\n        else {\n            _infoMessageHelpers_1.NotifyAboutWarning('Attempt to add wrong child control.');\n        }\n    };\n    QueryViewModelBase.prototype.removeChild = function (control) {\n        if (control instanceof relationModel_1.RelationViewModel) {\n            if (this.relations().length < 1)\n                return;\n            var relation = control;\n            var indexRelation = this.relations().indexOf(relation);\n            while (relation.conditions().length > 0)\n                relation.conditions.pop();\n            this.relations.splice(indexRelation, 1);\n        }\n        else if (control instanceof tableModel_1.TableViewModel) {\n            if (this.tables().length < 1)\n                return;\n            this.tables.splice(this.tables().indexOf(control), 1);\n            var relations = this.relations();\n            for (var i = relations.length - 1; i > -1; i--) {\n                if (relations[i].parentTable() === control || relations[i].nestedTable() === control) {\n                    this.removeChild(relations[i]);\n                }\n            }\n            this.sorting.remove(function (item) { return item.isDepended(control.actualName()); });\n            this.grouping.remove(function (item) { return item.isDepended(control.actualName()); });\n            this.columns.remove(function (item) { return item.isDepended(control.actualName()); });\n        }\n        else {\n            _infoMessageHelpers_1.NotifyAboutWarning('Attempt to remove wrong child control.');\n        }\n    };\n    QueryViewModelBase.prototype._validate = function () {\n        if (this.tables().length === 0)\n            return false;\n        if (!(this.allColumnsInTablesSelected() || this.columns().length > 0))\n            return false;\n        var tables = this.tables().map(function (table) { return table.actualName(); });\n        this._validateTable(tables, tables[0]);\n        return tables.length < 1;\n    };\n    QueryViewModelBase.prototype._validateTable = function (tables, tableName) {\n        var _this = this;\n        var index = tables.indexOf(tableName);\n        if (index < 0)\n            return;\n        tables.splice(index, 1);\n        var connectedTables = this.relations().map(function (relation) {\n            if (relation.parentTableName() === tableName)\n                return relation.nestedTableName();\n            if (relation.nestedTableName() === tableName)\n                return relation.parentTableName();\n            return null;\n        });\n        connectedTables.forEach(function (item) { return _this._validateTable(tables, item); });\n    };\n    QueryViewModelBase.prototype.createChild = function (info, tableViewModel, path) {\n        if (!tableViewModel)\n            return _super.prototype.createChild.call(this, info);\n        this._initializeTable(tableViewModel);\n        this.addChild(tableViewModel);\n        return tableViewModel;\n    };\n    QueryViewModelBase.prototype.init = function () {\n        var _this = this;\n        this.tables().forEach(function (table) {\n            var columns = [];\n            var sorting = _this.sorting && _this.sorting() || [];\n            var grouping = _this.grouping && _this.grouping() || [];\n            [_this.columns(), sorting, grouping].forEach(function (currentColumns) {\n                currentColumns.forEach(function (column) {\n                    if (table.name() === column.table() && column.itemType() === columnExpressionMeta_1.ColumnType.Column &&\n                        columns.every(function (x) { return x.column() !== column.column(); })) {\n                        columns.push(column);\n                    }\n                });\n            });\n            _this._addColumnsToTable(table, columns);\n            _this._initializeTable(table);\n        });\n        this.tables().reduce(function (posX, tableModel) {\n            tableModel.location.x(posX);\n            tableModel.location.y(_this.topOffset);\n            return posX + tableModel.size.width() + tableModel.size.width() / 2;\n        }, 30);\n        var inProcess = false;\n        this._disposables.push(ko.computed(function () {\n            if (!inProcess) {\n                inProcess = true;\n                var allColumns = _this.getAllColumns();\n                var withoutAggregate = allColumns.filter(function (x) { return x.aggregate() === columnModelMeta_1.AggregationType.None; });\n                _this.aggregatedColumnsCount(allColumns.length - withoutAggregate.length);\n                if (allColumns.length !== withoutAggregate.length) {\n                    withoutAggregate.filter(function (x) { return x.selected() && !x.groupBy.peek(); }).forEach(function (x) { return x.groupBy(true); });\n                }\n                else {\n                    if (!allColumns.every(function (x) { return !x.selected.peek() || x.groupBy.peek(); })) {\n                        allColumns.forEach(function (x) { if (x.groupBy.peek()) {\n                            x.groupBy(false);\n                        } });\n                    }\n                }\n                inProcess = false;\n            }\n        }));\n    };\n    QueryViewModelBase.prototype.getTable = function (name) {\n        return _arrayutils_1.findFirstItemMatchesCondition(this.tables(), function (item) { return item.actualName() === name; });\n    };\n    QueryViewModelBase.prototype.canSave = function (showMessage) {\n        if (showMessage === void 0) { showMessage = true; }\n        var message = [];\n        this.tables().forEach(function (t) {\n            t.getInvalidColumns().forEach(function (column) {\n                message.push(_utils_1.formatUnicorn(localization_utils_1.getLocalization('The schema does not contain the following column: \"{0}\".\"{1}\".', 'DataAccessStringId.ColumnNotInSchemaValidationException'), t.actualName(), column.actualName()));\n            });\n        });\n        if (message.length > 0) {\n            showMessage && _infoMessageHelpers_1.ShowMessage(message.join('\\n'), 'error');\n            return false;\n        }\n        return true;\n    };\n    QueryViewModelBase.prototype.save = function () {\n        if (!this.canSave())\n            return;\n        var data = this.serialize(true);\n        if (this.onSave) {\n            this.onSave(data);\n        }\n        return data;\n    };\n    QueryViewModelBase.prototype.serialize = function (includeRootTag) {\n        if (includeRootTag === void 0) { includeRootTag = false; }\n        return includeRootTag ? { 'Query': this.serialize() } : (new serializer_1.ModelSerializer()).serialize(this);\n    };\n    QueryViewModelBase.prototype._findTableInAncestors = function (child, probablyAncestor) {\n        var _this = this;\n        return this.relations().some(function (relation) {\n            return relation.nestedTable() === child && (relation.parentTable() === probablyAncestor || _this._findTableInAncestors(relation.parentTable(), probablyAncestor));\n        });\n    };\n    QueryViewModelBase.prototype._findHead = function (table) {\n        var result = null;\n        this.relations().some(function (relation) {\n            if (relation.nestedTable() === table)\n                result = relation;\n            return !!result;\n        });\n        return result ? this._findHead(result.parentTable()) : table;\n    };\n    QueryViewModelBase.prototype._isHead = function (table) {\n        return !this.relations().some(function (relation) { return relation.nestedTable() === table; });\n    };\n    QueryViewModelBase.prototype._reverseRelations = function (table, relationsToReverse) {\n        relationsToReverse.forEach(function (item) {\n            var tempTable = item.parentTable();\n            item.parentTable(item.nestedTable());\n            item.nestedTable(tempTable);\n            item.conditions().forEach(function (condition) {\n                var tempColumn = condition.parentColumnName();\n                condition.parentColumnName(condition.nestedColumnName());\n                condition.nestedColumnName(tempColumn);\n            });\n        });\n    };\n    QueryViewModelBase.prototype.getAllColumns = function () {\n        return [].concat.apply([], this.tables().map(function (x) { return x.columns(); }));\n    };\n    QueryViewModelBase.prototype.cerateJoinCondition = function (parentColumn, nestedColumn) {\n        var parentTable = parentColumn.parentModel();\n        var nestedTable = nestedColumn.parentModel();\n        if (parentTable === nestedTable)\n            return null;\n        var isColumnsReplaced = false;\n        var relation = _arrayutils_1.findFirstItemMatchesCondition(this.relations(), function (relation) {\n            isColumnsReplaced = relation.parentTable() === nestedTable && relation.nestedTable() === parentTable;\n            return relation.parentTable() === parentTable && relation.nestedTable() === nestedTable || isColumnsReplaced;\n        });\n        if (relation) {\n        }\n        else if (this._findTableInAncestors(parentTable, nestedTable)) {\n            isColumnsReplaced = true;\n        }\n        else if (this._findHead(parentTable) !== this._findHead(nestedTable) && !this._isHead(nestedTable)) {\n            var parentRelations = this._findAncestorsRelations(parentTable);\n            var nestedRelations = this._findAncestorsRelations(nestedTable);\n            if (parentRelations.outer > nestedRelations.outer) {\n                this._reverseRelations(nestedTable, nestedRelations.relations);\n            }\n            else if (parentRelations.outer < nestedRelations.outer) {\n                this._reverseRelations(parentTable, parentRelations.relations);\n                isColumnsReplaced = true;\n            }\n            else if (parentRelations.inner >= nestedRelations.inner) {\n                this._reverseRelations(nestedTable, nestedRelations.relations);\n            }\n            else if (parentRelations.inner < nestedRelations.inner) {\n                this._reverseRelations(parentTable, parentRelations.relations);\n                isColumnsReplaced = true;\n            }\n        }\n        if (isColumnsReplaced) {\n            var tempTable = parentTable;\n            parentTable = nestedTable;\n            nestedTable = tempTable;\n            var tempColumn = parentColumn;\n            parentColumn = nestedColumn;\n            nestedColumn = tempColumn;\n        }\n        relation = relation || this.createChild({\n            '@ControlType': 'Relation',\n            '@Parent': parentTable.actualName(),\n            '@Nested': nestedTable.actualName(),\n            '@Type': 'Inner'\n        });\n        var joinCondition = _arrayutils_1.findFirstItemMatchesCondition(relation.conditions(), function (condition) {\n            return condition.parentColumn() === parentColumn && condition.nestedColumn() === nestedColumn;\n        });\n        if (!joinCondition) {\n            joinCondition = relation.createChild({ '@ControlType': 'JoinCondition', '@Parent': parentColumn.name(), '@Nested': nestedColumn.name() });\n        }\n        return joinCondition;\n    };\n    QueryViewModelBase.prototype.tryToCreateRelationsByFK = function (sourceTable) { };\n    QueryViewModelBase.pageMargin = 20;\n    return QueryViewModelBase;\n}(queryElementModel_1.QueryElementBaseViewModel));\nexports.QueryViewModelBase = QueryViewModelBase;\nvar QueryViewModel = (function (_super) {\n    __extends(QueryViewModel, _super);\n    function QueryViewModel(querySource, dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) {\n        if (parametersMode === void 0) { parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite; }\n        var _this = _super.call(this, _utils_2.extend(true, querySource, QueryViewModel.emptyModel, querySource), dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) || this;\n        _this.controlType = 'Query';\n        _this['type']('SelectQuery');\n        _this.tables = utils_1.deserializeArray(querySource['Tables']['SelectedTables'], function (item) { return new tableModel_1.TableViewModel(item, _this, serializer); });\n        _this.columns = utils_1.deserializeArray(querySource['Columns'], function (item) { return new columnExpression_1.ColumnExpression(item, _this, serializer); });\n        _this.sorting = utils_1.deserializeArray(querySource['Sorting'], function (item) { return new columnExpression_1.ColumnExpression(item, _this, serializer); });\n        _this.grouping = utils_1.deserializeArray(querySource['Grouping'], function (item) { return new columnExpression_1.ColumnExpression(item, _this, serializer); });\n        _this.relations = utils_1.deserializeArray(querySource['Tables']['Relations'], function (item) { return new relationModel_1.RelationViewModel(item, _this, serializer); });\n        _this.init();\n        _this['_tablesObject']['tables'] = _this.tables;\n        _this['_tablesObject']['relations'] = _this.relations;\n        var parameters = utils_1.deserializeArray(querySource['Parameters'], function (item) { return new parameterModel_1.ParameterViewModel(item, serializer); });\n        if (parametersMode === parameterModelMeta_1.ParametersMode.ReadWrite) {\n            _this.parameters = parameters;\n            _this._disposables.push(_this.parameters.subscribe(function (changes) {\n                changes.forEach(function (change) {\n                    if (change.status === 'added' && !change.value.name())\n                        change.value.name(_getNameHelpers_1.getUniqueName(_this.parameters().filter(function (x) { return x !== change.value; }).map(function (x) { return x.name(); }), 'parameter'));\n                });\n            }, null, 'arrayChange'));\n        }\n        else {\n            _this._disposables.push(_this.parameters = ko.computed(function () { return parameters(); }));\n        }\n        _this.filterString = new _qbFilterStringOptions_1.QBFilterStringOptions(_this._filterString, null, ko.pureComputed(function () { return (_this.tables().length === 0) && (_this.filterString && _this.filterString.value().length === 0); }));\n        _this.filterString.initializeFilterStringHelper(_this.parameters, parametersMode);\n        _this.groupFilterString = new _qbFilterStringOptions_1.QBFilterStringOptions(_this._groupFilterString, null, ko.pureComputed(function () { return !_this.columns().some(_queryBuilderObjectsProvider_1.isAggregatedExpression) && (_this.groupFilterString && (_this.groupFilterString.value() || '').length === 0); }));\n        _this.groupFilterString.initializeFilterStringHelper(_this.parameters, parametersMode, new _groupFilterEditorSerializer_1.GroupFilterEditorSerializer(_this.columns));\n        return _this;\n    }\n    QueryViewModel.prototype.isPropertyDisabled = function (name) {\n        if (name === 'skip')\n            return this.skip() === 0 && !this.sorting().length;\n        return false;\n    };\n    QueryViewModel.prototype.getInfo = function () {\n        return queryModelMeta_1.querySerializationsInfo;\n    };\n    QueryViewModel.prototype.createChild = function (info) {\n        return _super.prototype.createChild.call(this, info, info['@ControlType'] === 'Table' ? new tableModel_1.TableViewModel(info, this) : undefined);\n    };\n    QueryViewModel.prototype.tryToCreateRelationsByFK = function (sourceTable) {\n        var _this = this;\n        this.dbSchemaProvider.getDbSchema().done(function (dbSchema) {\n            var dbSourceTable = dbSchema.tables.filter(function (item) { return item.name === sourceTable.name(); })[0];\n            if (dbSourceTable) {\n                dbSourceTable.foreignKeys.forEach(function (fk) {\n                    var pkTable = _arrayutils_1.getFirstItemByPropertyValue(_this.tables.peek(), 'name', fk.primaryKeyTable);\n                    if (pkTable) {\n                        for (var i = 0; i < fk.primaryKeyColumns.length; i++) {\n                            var column1 = _arrayutils_1.getFirstItemByPropertyValue(sourceTable.columns(), 'name', fk.columns[i]);\n                            var column2 = _arrayutils_1.getFirstItemByPropertyValue(pkTable.columns(), 'name', fk.primaryKeyColumns[i]);\n                            if (column1 && column2) {\n                                _this.cerateJoinCondition(column1, column2);\n                            }\n                        }\n                    }\n                });\n            }\n            _this.tables.peek().forEach(function (table) {\n                var dbTable = dbSchema.tables.filter(function (item) { return item.name === table.name(); })[0];\n                if (dbTable) {\n                    dbTable.foreignKeys.forEach(function (fk) {\n                        if (fk.primaryKeyTable === sourceTable.name()) {\n                            for (var i = 0; i < fk.primaryKeyColumns.length; i++) {\n                                var column1 = _arrayutils_1.getFirstItemByPropertyValue(sourceTable.columns(), 'name', fk.primaryKeyColumns[i]);\n                                var column2 = _arrayutils_1.getFirstItemByPropertyValue(table.columns(), 'name', fk.columns[i]);\n                                if (column1 && column2) {\n                                    _this.cerateJoinCondition(column2, column1);\n                                }\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    };\n    QueryViewModel.emptyModel = { '@ItemType': 'Query', 'Tables': { 'SelectedTables': {}, 'Relations': {} }, 'Columns': {}, 'Sorting': {}, 'Grouping': {} };\n    return QueryViewModel;\n}(QueryViewModelBase));\nexports.QueryViewModel = QueryViewModel;\n"]},"metadata":{},"sourceType":"script"}