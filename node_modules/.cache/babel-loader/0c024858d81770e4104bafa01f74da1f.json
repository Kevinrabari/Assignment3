{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport modules from \"./ui.grid_core.modules\";\nimport Pager from \"../pager\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { hasWindow } from \"../../core/utils/window\";\nvar PAGER_CLASS = \"pager\";\nvar MAX_PAGES_COUNT = 10;\n\nvar getPageIndex = function (dataController) {\n  return 1 + (parseInt(dataController.pageIndex()) || 0);\n};\n\nvar PagerView = modules.View.inherit({\n  init: function () {\n    var dataController = this.getController(\"data\");\n    dataController.changed.add(e => {\n      if (e && e.repaintChangesOnly) {\n        var pager = this._pager;\n\n        if (pager) {\n          pager.option({\n            pageIndex: getPageIndex(dataController),\n            pageSize: dataController.pageSize(),\n            pageCount: dataController.pageCount(),\n            totalCount: dataController.totalCount(),\n            hasKnownLastPage: dataController.hasKnownLastPage()\n          });\n        } else {\n          this.render();\n        }\n      } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\n        this._pager = null;\n        this.render();\n      }\n    });\n  },\n  _renderCore: function () {\n    var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\n    var pagerOptions = this.option(\"pager\") || {};\n    var dataController = this.getController(\"data\");\n    var keyboardController = this.getController(\"keyboardNavigation\");\n    var options = {\n      maxPagesCount: MAX_PAGES_COUNT,\n      pageIndex: getPageIndex(dataController),\n      pageCount: dataController.pageCount(),\n      pageSize: dataController.pageSize(),\n      showPageSizes: pagerOptions.showPageSizeSelector,\n      showInfo: pagerOptions.showInfo,\n      displayMode: pagerOptions.displayMode,\n      pagesNavigatorVisible: pagerOptions.visible,\n      showNavigationButtons: pagerOptions.showNavigationButtons,\n      pageSizes: this.getPageSizes(),\n      totalCount: dataController.totalCount(),\n      hasKnownLastPage: dataController.hasKnownLastPage(),\n      pageIndexChanged: function (pageIndex) {\n        if (dataController.pageIndex() !== pageIndex - 1) {\n          dataController.pageIndex(pageIndex - 1);\n        }\n      },\n      pageSizeChanged: function (pageSize) {\n        dataController.pageSize(pageSize);\n      },\n      onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\n      useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\n      useKeyboard: this.option(\"keyboardNavigation.enabled\")\n    };\n\n    if (isDefined(pagerOptions.infoText)) {\n      options.infoText = pagerOptions.infoText;\n    }\n\n    if (this._pager) {\n      this._pager.repaint();\n\n      return;\n    }\n\n    if (hasWindow()) {\n      this._pager = this._createComponent($element, Pager, options);\n    } else {\n      $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>');\n    }\n  },\n  getPager: function () {\n    return this._pager;\n  },\n  getPageSizes: function () {\n    var dataController = this.getController(\"data\");\n    var pagerOptions = this.option(\"pager\");\n    var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\n    var pageSize = dataController.pageSize();\n\n    if (!isDefined(this._pageSizes) || !this._pageSizes.includes(pageSize)) {\n      this._pageSizes = [];\n\n      if (pagerOptions) {\n        if (Array.isArray(allowedPageSizes)) {\n          this._pageSizes = allowedPageSizes;\n        } else if (allowedPageSizes && pageSize > 1) {\n          this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize];\n        }\n      }\n    }\n\n    return this._pageSizes;\n  },\n  isVisible: function () {\n    var dataController = this.getController(\"data\");\n    var pagerOptions = this.option(\"pager\");\n    var pagerVisible = pagerOptions && pagerOptions.visible;\n    var scrolling = this.option(\"scrolling\");\n\n    if (\"auto\" === pagerVisible) {\n      if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\n        pagerVisible = false;\n      } else {\n        pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage();\n      }\n    }\n\n    return pagerVisible;\n  },\n  getHeight: function () {\n    return this.getElementHeight();\n  },\n  optionChanged: function (args) {\n    var name = args.name;\n    var isPager = \"pager\" === name;\n    var isPaging = \"paging\" === name;\n    var isDataSource = \"dataSource\" === name;\n    var isScrolling = \"scrolling\" === name;\n    var dataController = this.getController(\"data\");\n\n    if (isPager || isPaging || isScrolling || isDataSource) {\n      args.handled = true;\n\n      if (dataController.skipProcessingPagingChange(args.fullName)) {\n        return;\n      }\n\n      if (isPager || isPaging) {\n        this._pageSizes = null;\n      }\n\n      if (!isDataSource) {\n        this._pager = null;\n\n        this._invalidate();\n\n        if (hasWindow() && isPager && this.component) {\n          this.component.resize();\n        }\n      }\n    }\n  },\n  dispose: function () {\n    this._pager = null;\n  }\n});\nexport var pagerModule = {\n  defaultOptions: function () {\n    return {\n      pager: {\n        visible: \"auto\",\n        showPageSizeSelector: false,\n        allowedPageSizes: \"auto\"\n      }\n    };\n  },\n  views: {\n    pagerView: PagerView\n  }\n};","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.pager.js"],"names":["modules","Pager","isDefined","hasWindow","PAGER_CLASS","MAX_PAGES_COUNT","getPageIndex","dataController","parseInt","pageIndex","PagerView","View","inherit","init","getController","changed","add","e","repaintChangesOnly","pager","_pager","option","pageSize","pageCount","totalCount","hasKnownLastPage","render","changeType","_renderCore","$element","element","addClass","addWidgetPrefix","pagerOptions","keyboardController","options","maxPagesCount","showPageSizes","showPageSizeSelector","showInfo","displayMode","pagesNavigatorVisible","visible","showNavigationButtons","pageSizes","getPageSizes","pageIndexChanged","pageSizeChanged","onKeyDown","executeAction","useLegacyKeyboardNavigation","useKeyboard","infoText","repaint","_createComponent","html","getPager","allowedPageSizes","_pageSizes","includes","Array","isArray","Math","floor","isVisible","pagerVisible","scrolling","mode","isLoaded","getHeight","getElementHeight","optionChanged","args","name","isPager","isPaging","isDataSource","isScrolling","handled","skipProcessingPagingChange","fullName","_invalidate","component","resize","dispose","pagerModule","defaultOptions","views","pagerView"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Pager from \"../pager\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = modules.View.inherit({\r\n    init: function() {\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(e => {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = this._pager;\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    this.render()\r\n                }\r\n            } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\r\n                this._pager = null;\r\n                this.render()\r\n            }\r\n        })\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = this.option(\"pager\") || {};\r\n        var dataController = this.getController(\"data\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: this.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    dataController.pageIndex(pageIndex - 1)\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                dataController.pageSize(pageSize)\r\n            },\r\n            onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if (isDefined(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        if (this._pager) {\r\n            this._pager.repaint();\r\n            return\r\n        }\r\n        if (hasWindow()) {\r\n            this._pager = this._createComponent($element, Pager, options)\r\n        } else {\r\n            $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>')\r\n        }\r\n    },\r\n    getPager: function() {\r\n        return this._pager\r\n    },\r\n    getPageSizes: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!isDefined(this._pageSizes) || !this._pageSizes.includes(pageSize)) {\r\n            this._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    this._pageSizes = allowedPageSizes\r\n                } else if (allowedPageSizes && pageSize > 1) {\r\n                    this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                }\r\n            }\r\n        }\r\n        return this._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._pager = null;\r\n                this._invalidate();\r\n                if (hasWindow() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._pager = null\r\n    }\r\n});\r\nexport var pagerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}