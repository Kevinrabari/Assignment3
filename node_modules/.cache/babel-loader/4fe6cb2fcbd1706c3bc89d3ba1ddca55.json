{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getWindow } from \"../../core/utils/window\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { ModelChangesListener } from \"./ui.gantt.model_changes_listener\";\nimport DataOption from \"./ui.gantt.data.option\";\nimport LoadPanel from \"../load_panel\";\nimport registerComponent from \"../../core/component_registrator\";\nimport SplitterControl from \"../splitter\";\nimport Widget from \"../widget/ui.widget\";\nimport { GanttActionsManager } from \"./ui.gantt.actions\";\nimport { GanttCustomFieldsManager } from \"./ui.gantt.custom_fields\";\nimport { GanttDialog } from \"./ui.gantt.dialogs\";\nimport { GanttExportHelper } from \"./ui.gantt.export_helper\";\nimport { GanttHelper } from \"./ui.gantt.helper\";\nimport { GanttMappingHelper } from \"./ui.gantt.mapping_helper\";\nimport { GanttSizeHelper } from \"./ui.gantt.size_helper\";\nimport { GanttTemplatesManager } from \"./ui.gantt.templates\";\nimport { GanttToolbar, GanttContextMenuBar } from \"./ui.gantt.bars\";\nimport { GanttTreeList } from \"./ui.gantt.treelist\";\nimport { GanttView } from \"./ui.gantt.view\";\nvar window = getWindow();\nvar GANTT_CLASS = \"dx-gantt\";\nvar GANTT_VIEW_CLASS = \"dx-gantt-view\";\nvar GANTT_TREE_LIST_WRAPPER = \"dx-gantt-treelist-wrapper\";\nvar GANTT_TOOLBAR_WRAPPER = \"dx-gantt-toolbar-wrapper\";\nvar GANTT_MAIN_WRAPPER = \"dx-gantt-main-wrapper\";\nvar GANTT_TASKS = \"tasks\";\nvar GANTT_DEPENDENCIES = \"dependencies\";\nvar GANTT_RESOURCES = \"resources\";\nvar GANTT_RESOURCE_ASSIGNMENTS = \"resourceAssignments\";\nvar GANTT_NEW_TASK_CACHE_KEY = \"gantt_new_task_key\";\n\nclass Gantt extends Widget {\n  _init() {\n    super._init();\n\n    this._initGantt();\n\n    this._isGanttRendered = false;\n\n    this._initHelpers();\n  }\n\n  _initGantt() {\n    this._refreshDataSources();\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this.$element().addClass(GANTT_CLASS);\n    this._$toolbarWrapper = $(\"<div>\").addClass(GANTT_TOOLBAR_WRAPPER).appendTo(this.$element());\n    this._$toolbar = $(\"<div>\").appendTo(this._$toolbarWrapper);\n    this._$mainWrapper = $(\"<div>\").addClass(GANTT_MAIN_WRAPPER).appendTo(this.$element());\n    this._$treeListWrapper = $(\"<div>\").addClass(GANTT_TREE_LIST_WRAPPER).appendTo(this._$mainWrapper);\n    this._$treeList = $(\"<div>\").appendTo(this._$treeListWrapper);\n    this._$splitter = $(\"<div>\").appendTo(this._$mainWrapper);\n    this._$ganttView = $(\"<div>\").addClass(GANTT_VIEW_CLASS).appendTo(this._$mainWrapper);\n    this._$dialog = $(\"<div>\").appendTo(this.$element());\n    this._$loadPanel = $(\"<div>\").appendTo(this.$element());\n    this._$contextMenu = $(\"<div>\").appendTo(this.$element());\n  }\n\n  _clean() {\n    var _this$_ganttView;\n\n    null === (_this$_ganttView = this._ganttView) || void 0 === _this$_ganttView ? void 0 : _this$_ganttView._ganttViewCore.cleanMarkup();\n    delete this._ganttView;\n    delete this._dialogInstance;\n    delete this._loadPanel;\n    delete this._exportHelper;\n\n    super._clean();\n  }\n\n  _refresh() {\n    this._isGanttRendered = false;\n\n    super._refresh();\n  }\n\n  _dimensionChanged() {\n    var _this$_ganttView2;\n\n    null === (_this$_ganttView2 = this._ganttView) || void 0 === _this$_ganttView2 ? void 0 : _this$_ganttView2._onDimensionChanged();\n  }\n\n  _visibilityChanged(visible) {\n    if (visible) {\n      this._refreshGantt();\n    }\n  }\n\n  _refreshGantt() {\n    this._refreshDataSources();\n\n    this._refresh();\n  }\n\n  _refreshDataSources() {\n    this._refreshDataSource(GANTT_TASKS);\n\n    this._refreshDataSource(GANTT_DEPENDENCIES);\n\n    this._refreshDataSource(GANTT_RESOURCES);\n\n    this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS);\n  }\n\n  _renderContent() {\n    this._isMainElementVisible = this.$element().is(\":visible\");\n\n    if (this._isMainElementVisible && !this._isGanttRendered) {\n      this._isGanttRendered = true;\n\n      this._renderBars();\n\n      this._renderTreeList();\n\n      this._renderSplitter();\n    }\n  }\n\n  _renderTreeList() {\n    this._ganttTreeList = new GanttTreeList(this);\n    this._treeList = this._ganttTreeList.getTreeList();\n\n    this._ganttTreeList.onAfterTreeListCreate();\n  }\n\n  _renderSplitter() {\n    this._splitter = this._createComponent(this._$splitter, SplitterControl, {\n      container: this.$element(),\n      leftElement: this._$treeListWrapper,\n      rightElement: this._$ganttView,\n      onApplyPanelSize: e => {\n        this._sizeHelper.onApplyPanelSize(e);\n      }\n    });\n\n    this._splitter.option(\"initialLeftPanelWidth\", this.option(\"taskListWidth\"));\n  }\n\n  _renderBars() {\n    this._bars = [];\n    this._toolbar = new GanttToolbar(this._$toolbar, this);\n\n    this._updateToolbarContent();\n\n    this._bars.push(this._toolbar);\n\n    this._contextMenuBar = new GanttContextMenuBar(this._$contextMenu, this);\n\n    this._updateContextMenu();\n\n    this._bars.push(this._contextMenuBar);\n  }\n\n  _initHelpers() {\n    this._mappingHelper = new GanttMappingHelper(this);\n    this._customFieldsManager = new GanttCustomFieldsManager(this);\n    this._actionsManager = new GanttActionsManager(this);\n    this._ganttTemplatesManager = new GanttTemplatesManager(this);\n    this._sizeHelper = new GanttSizeHelper(this);\n  }\n\n  _initGanttView() {\n    if (this._ganttView) {\n      return;\n    }\n\n    this._ganttView = this._createComponent(this._$ganttView, GanttView, {\n      width: \"100%\",\n      height: this._ganttTreeList.getOffsetHeight(),\n      rowHeight: this._ganttTreeList.getRowHeight(),\n      headerHeight: this._ganttTreeList.getHeaderHeight(),\n      tasks: this._tasks,\n      dependencies: this._dependencies,\n      resources: this._resources,\n      resourceAssignments: this._resourceAssignments,\n      allowSelection: this.option(\"allowSelection\"),\n      selectedRowKey: this.option(\"selectedRowKey\"),\n      showResources: this.option(\"showResources\"),\n      showDependencies: this.option(\"showDependencies\"),\n      startDateRange: this.option(\"startDateRange\"),\n      endDateRange: this.option(\"endDateRange\"),\n      taskTitlePosition: this.option(\"taskTitlePosition\"),\n      firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n      showRowLines: this.option(\"showRowLines\"),\n      scaleType: this.option(\"scaleType\"),\n      scaleTypeRange: this.option(\"scaleTypeRange\"),\n      editing: this.option(\"editing\"),\n      validation: this.option(\"validation\"),\n      stripLines: this.option(\"stripLines\"),\n      bars: this._bars,\n      mainElement: this.$element(),\n      onSelectionChanged: e => {\n        this._ganttTreeList.selectRows(GanttHelper.getArrayFromOneElement(e.id));\n      },\n      onScroll: e => {\n        this._ganttTreeList.scrollBy(e.scrollTop);\n      },\n      onDialogShowing: this._showDialog.bind(this),\n      onPopupMenuShowing: this._showPopupMenu.bind(this),\n      onPopupMenuHiding: this._hidePopupMenu.bind(this),\n      onExpandAll: this._expandAll.bind(this),\n      onCollapseAll: this._collapseAll.bind(this),\n      modelChangesListener: ModelChangesListener.create(this),\n      exportHelper: this._getExportHelper(),\n      taskTooltipContentTemplate: this._ganttTemplatesManager.getTaskTooltipContentTemplateFunc(this.option(\"taskTooltipContentTemplate\")),\n      taskProgressTooltipContentTemplate: this._ganttTemplatesManager.getTaskProgressTooltipContentTemplateFunc(this.option(\"taskProgressTooltipContentTemplate\")),\n      taskTimeTooltipContentTemplate: this._ganttTemplatesManager.getTaskTimeTooltipContentTemplateFunc(this.option(\"taskTimeTooltipContentTemplate\")),\n      taskContentTemplate: this._ganttTemplatesManager.getTaskContentTemplateFunc(this.option(\"taskContentTemplate\")),\n      onTaskClick: e => {\n        this._ganttTreeList.onRowClick(e);\n      },\n      onTaskDblClick: e => {\n        this._ganttTreeList.onRowDblClick(e);\n      },\n      onAdjustControl: () => {\n        this._sizeHelper.onAdjustControl();\n      }\n    });\n\n    this._fireContentReadyAction();\n  }\n\n  _refreshDataSource(name) {\n    var dataOption = this[\"_\".concat(name, \"Option\")];\n\n    if (dataOption) {\n      dataOption.dispose();\n      delete this[\"_\".concat(name, \"Option\")];\n      delete this[\"_\".concat(name)];\n    }\n\n    dataOption = new DataOption(name, this._getLoadPanel.bind(this), (name, data) => {\n      this._dataSourceChanged(name, data);\n    });\n    dataOption.option(\"dataSource\", this._getSpecificDataSourceOption(name));\n\n    dataOption._refreshDataSource();\n\n    this[\"_\".concat(name, \"Option\")] = dataOption;\n  }\n\n  _getSpecificDataSourceOption(name) {\n    var dataSource = this.option(\"\".concat(name, \".dataSource\"));\n\n    if (!dataSource || Array.isArray(dataSource)) {\n      return {\n        store: {\n          type: \"array\",\n          data: null !== dataSource && void 0 !== dataSource ? dataSource : [],\n          key: this.option(\"\".concat(name, \".keyExpr\"))\n        }\n      };\n    }\n\n    return dataSource;\n  }\n\n  _dataSourceChanged(dataSourceName, data) {\n    var getters = GanttHelper.compileGettersByOption(this.option(dataSourceName));\n\n    var validatedData = this._validateSourceData(dataSourceName, data);\n\n    var mappedData = validatedData.map(GanttHelper.prepareMapHandler(getters));\n    this[\"_\".concat(dataSourceName)] = mappedData;\n\n    this._setGanttViewOption(dataSourceName, mappedData);\n\n    if (dataSourceName === GANTT_TASKS) {\n      var _this$_ganttTreeList, _this$_ganttTreeList2;\n\n      this._tasksRaw = validatedData;\n      var forceUpdate = !(null !== (_this$_ganttTreeList = this._ganttTreeList) && void 0 !== _this$_ganttTreeList && _this$_ganttTreeList.getDataSource()) && !this._ganttView;\n      null === (_this$_ganttTreeList2 = this._ganttTreeList) || void 0 === _this$_ganttTreeList2 ? void 0 : _this$_ganttTreeList2.updateDataSource(validatedData, forceUpdate);\n    }\n  }\n\n  _validateSourceData(dataSourceName, data) {\n    return data && dataSourceName === GANTT_TASKS ? this._validateTaskData(data) : data;\n  }\n\n  _validateTaskData(data) {\n    var _this$option;\n\n    var keyGetter = compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\n    var parentIdGetter = compileGetter(this.option(\"\".concat(GANTT_TASKS, \".parentIdExpr\")));\n    var rootValue = null !== (_this$option = this.option(\"rootValue\")) && void 0 !== _this$option ? _this$option : \"dx_dxt_gantt_default_root_value\";\n    var validationTree = {};\n\n    for (var i = 0; i < data.length; i++) {\n      var item = data[i];\n\n      if (item) {\n        var _validationTree$key;\n\n        var key = keyGetter(item);\n        var isRootTask = key === rootValue;\n        var treeItem = null !== (_validationTree$key = validationTree[key]) && void 0 !== _validationTree$key ? _validationTree$key : validationTree[key] = {\n          key: key,\n          children: []\n        };\n\n        if (!isRootTask) {\n          var _parentIdGetter, _validationTree$paren;\n\n          var parentId = null !== (_parentIdGetter = parentIdGetter(item)) && void 0 !== _parentIdGetter ? _parentIdGetter : rootValue;\n          var parentTreeItem = null !== (_validationTree$paren = validationTree[parentId]) && void 0 !== _validationTree$paren ? _validationTree$paren : validationTree[parentId] = {\n            key: parentId,\n            children: []\n          };\n          parentTreeItem.children.push(treeItem);\n          treeItem.parent = parentTreeItem;\n        }\n      }\n    }\n\n    var validKeys = [rootValue];\n\n    this._appendChildKeys(validationTree[rootValue], validKeys);\n\n    return data.filter(item => validKeys.indexOf(keyGetter(item)) > -1);\n  }\n\n  _appendChildKeys(treeItem, keys) {\n    var children = null === treeItem || void 0 === treeItem ? void 0 : treeItem.children;\n\n    for (var i = 0; i < (null === children || void 0 === children ? void 0 : children.length); i++) {\n      var child = children[i];\n      keys.push(child.key);\n\n      this._appendChildKeys(child, keys);\n    }\n  }\n\n  _onRecordInserted(optionName, record, callback) {\n    var dataOption = this[\"_\".concat(optionName, \"Option\")];\n\n    if (dataOption) {\n      var data = GanttHelper.getStoreObject(this.option(optionName), record);\n      var isTaskInsert = optionName === GANTT_TASKS;\n\n      if (isTaskInsert) {\n        this._customFieldsManager.addCustomFieldsDataFromCache(GANTT_NEW_TASK_CACHE_KEY, data);\n      }\n\n      dataOption.insert(data, response => {\n        var keyGetter = compileGetter(this.option(\"\".concat(optionName, \".keyExpr\")));\n        var insertedId = keyGetter(response);\n        callback(insertedId);\n\n        dataOption._reloadDataSource().done(data => {\n          if (isTaskInsert) {\n            this._ganttTreeList.onTaskInserted(insertedId, record.parentId);\n          }\n        });\n\n        this._actionsManager.raiseInsertedAction(optionName, data, insertedId);\n      });\n    }\n  }\n\n  _onRecordUpdated(optionName, key, values) {\n    var dataOption = this[\"_\".concat(optionName, \"Option\")];\n    var isTaskUpdated = optionName === GANTT_TASKS;\n\n    if (dataOption) {\n      var data = this._mappingHelper.convertCoreToMappedData(optionName, values);\n\n      var hasCustomFieldsData = isTaskUpdated && this._customFieldsManager.cache.hasData(key);\n\n      if (hasCustomFieldsData) {\n        this._customFieldsManager.addCustomFieldsDataFromCache(key, data);\n      }\n\n      dataOption.update(key, data, () => {\n        dataOption._reloadDataSource();\n\n        this._actionsManager.raiseUpdatedAction(optionName, data, key);\n      });\n    }\n  }\n\n  _onRecordRemoved(optionName, key, data) {\n    var dataOption = this[\"_\".concat(optionName, \"Option\")];\n\n    if (dataOption) {\n      dataOption.remove(key, () => {\n        dataOption._reloadDataSource();\n\n        this._actionsManager.raiseDeletedAction(optionName, key, this._mappingHelper.convertCoreToMappedData(optionName, data));\n      });\n    }\n  }\n\n  _onParentTaskUpdated(data) {\n    var mappedData = this.getTaskDataByCoreData(data);\n\n    this._actionsManager.raiseUpdatedAction(GANTT_TASKS, mappedData, data.id);\n  }\n\n  _onParentTasksRecalculated(data) {\n    if (!this.isSieving) {\n      var setters = GanttHelper.compileSettersByOption(this.option(GANTT_TASKS));\n\n      var treeDataSource = this._customFieldsManager.appendCustomFields(data.map(GanttHelper.prepareSetterMapHandler(setters)));\n\n      setTimeout(() => {\n        var _this$_ganttTreeList3;\n\n        return null === (_this$_ganttTreeList3 = this._ganttTreeList) || void 0 === _this$_ganttTreeList3 ? void 0 : _this$_ganttTreeList3.setDataSource(treeDataSource);\n      });\n    }\n\n    this.isSieving = false;\n  }\n\n  _sortAndFilter() {\n    var columns = this._treeList.getVisibleColumns();\n\n    var sortColumn = columns.filter(c => 0 === c.sortIndex)[0];\n    var filterColumn = columns.filter(c => {\n      var _c$filterValues;\n\n      return isDefined(c.filterValue) || (null === (_c$filterValues = c.filterValues) || void 0 === _c$filterValues ? void 0 : _c$filterValues.length);\n    })[0];\n    var sieveColumn = sortColumn || filterColumn;\n    var isClearSieving = this.sieveColumn && !sieveColumn;\n\n    if (sieveColumn || isClearSieving) {\n      var sievedItems = this._ganttTreeList.getSievedItems();\n\n      var sieveOptions = {\n        sievedItems: sievedItems,\n        sieveColumn: sieveColumn\n      };\n      this.isSieving = !isClearSieving;\n\n      this._setGanttViewOption(\"sieve\", isClearSieving ? void 0 : sieveOptions);\n    }\n\n    this.sieveColumn = sieveColumn;\n  }\n\n  _getToolbarItems() {\n    var items = this.option(\"toolbar.items\");\n    return items ? items : [];\n  }\n\n  _updateToolbarContent() {\n    var items = this._getToolbarItems();\n\n    if (items.length) {\n      this._$toolbarWrapper.show();\n    } else {\n      this._$toolbarWrapper.hide();\n    }\n\n    this._toolbar && this._toolbar.createItems(items);\n\n    this._updateBarItemsState();\n  }\n\n  _updateContextMenu() {\n    var contextMenuOptions = this.option(\"contextMenu\");\n\n    if (contextMenuOptions.enabled && this._contextMenuBar) {\n      this._contextMenuBar.createItems(contextMenuOptions.items);\n\n      this._updateBarItemsState();\n    }\n  }\n\n  _updateBarItemsState() {\n    this._ganttView && this._ganttView.updateBarItemsState();\n  }\n\n  _showDialog(e) {\n    if (!this._dialogInstance) {\n      this._dialogInstance = new GanttDialog(this, this._$dialog);\n    }\n\n    this._dialogInstance.show(e.name, e.parameters, e.callback, e.afterClosing, this.option(\"editing\"));\n  }\n\n  _showPopupMenu(info) {\n    if (this.option(\"contextMenu.enabled\")) {\n      this._ganttView.getBarManager().updateContextMenu();\n\n      var args = {\n        cancel: false,\n        event: info.event,\n        targetType: info.type,\n        targetKey: info.key,\n        items: extend(true, [], this._contextMenuBar._items),\n        data: \"task\" === info.type ? this.getTaskData(info.key) : this.getDependencyData(info.key)\n      };\n\n      this._actionsManager.raiseContextMenuPreparing(args);\n\n      if (!args.cancel) {\n        this._contextMenuBar.show(info.position, args.items);\n      }\n    }\n  }\n\n  _hidePopupMenu() {\n    this._contextMenuBar.hide();\n  }\n\n  _getLoadPanel() {\n    if (!this._loadPanel) {\n      this._loadPanel = this._createComponent(this._$loadPanel, LoadPanel, {\n        position: {\n          of: this.$element()\n        }\n      });\n    }\n\n    return this._loadPanel;\n  }\n\n  _getTaskKeyGetter() {\n    return compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\n  }\n\n  _findTaskByKey(key) {\n    var _this$_tasksOption;\n\n    var tasks = null === (_this$_tasksOption = this._tasksOption) || void 0 === _this$_tasksOption ? void 0 : _this$_tasksOption._getItems();\n\n    var keyGetter = this._getTaskKeyGetter();\n\n    return tasks.find(t => keyGetter(t) === key);\n  }\n\n  _setGanttViewOption(optionName, value) {\n    this._ganttView && this._ganttView.option(optionName, value);\n  }\n\n  _getGanttViewOption(optionName, value) {\n    var _this$_ganttView3;\n\n    return null === (_this$_ganttView3 = this._ganttView) || void 0 === _this$_ganttView3 ? void 0 : _this$_ganttView3.option(optionName);\n  }\n\n  _getExportHelper() {\n    var _this$_exportHelper;\n\n    null !== (_this$_exportHelper = this._exportHelper) && void 0 !== _this$_exportHelper ? _this$_exportHelper : this._exportHelper = new GanttExportHelper(this);\n    return this._exportHelper;\n  }\n\n  _executeCoreCommand(id) {\n    this._ganttView.executeCoreCommand(id);\n  }\n\n  _expandAll() {\n    this._changeExpandAll(true);\n  }\n\n  _collapseAll() {\n    this._changeExpandAll(false);\n  }\n\n  _onTreeListRowExpandChanged(e, expanded) {\n    if (!this._lockRowExpandEvent) {\n      this._ganttView.changeTaskExpanded(e.key, expanded);\n\n      this._sizeHelper.adjustHeight();\n    }\n  }\n\n  _changeExpandAll(expanded, level, rowKey) {\n    var _promise;\n\n    var allExpandableNodes = [];\n    var nodesToExpand = [];\n\n    this._treeList.forEachNode(node => {\n      var _node$children;\n\n      if (null !== (_node$children = node.children) && void 0 !== _node$children && _node$children.length) {\n        allExpandableNodes.push(node);\n      }\n    });\n\n    if (rowKey) {\n      var node = this._treeList.getNodeByKey(rowKey);\n\n      GanttHelper.getAllParentNodesKeys(node, nodesToExpand);\n    }\n\n    var promise;\n    this._lockRowExpandEvent = allExpandableNodes.length > 0;\n    var state = allExpandableNodes.reduce((previous, node, index) => {\n      if (rowKey) {\n        expanded = nodesToExpand.includes(node.key);\n      } else if (level) {\n        expanded = node.level < level;\n      }\n\n      previous[node.key] = expanded;\n      var action = expanded ? this._treeList.expandRow : this._treeList.collapseRow;\n      var isLast = index === allExpandableNodes.length - 1;\n\n      if (isLast) {\n        promise = action(node.key);\n      } else {\n        action(node.key);\n      }\n\n      return previous;\n    }, {});\n    null === (_promise = promise) || void 0 === _promise ? void 0 : _promise.then(() => {\n      this._ganttView._ganttViewCore.applyTasksExpandedState(state);\n\n      this._sizeHelper.adjustHeight();\n\n      delete this._lockRowExpandEvent;\n    });\n  }\n\n  getTaskResources(key) {\n    if (!isDefined(key)) {\n      return null;\n    }\n\n    var coreData = this._ganttView._ganttViewCore.getTaskResources(key);\n\n    return coreData.map(r => this._mappingHelper.convertCoreToMappedData(GANTT_RESOURCES, r));\n  }\n\n  getVisibleTaskKeys() {\n    return this._ganttView._ganttViewCore.getVisibleTaskKeys();\n  }\n\n  getVisibleDependencyKeys() {\n    return this._ganttView._ganttViewCore.getVisibleDependencyKeys();\n  }\n\n  getVisibleResourceKeys() {\n    return this._ganttView._ganttViewCore.getVisibleResourceKeys();\n  }\n\n  getVisibleResourceAssignmentKeys() {\n    return this._ganttView._ganttViewCore.getVisibleResourceAssignmentKeys();\n  }\n\n  getTaskData(key) {\n    if (!isDefined(key)) {\n      return null;\n    }\n\n    var coreData = this._ganttView._ganttViewCore.getTaskData(key);\n\n    var mappedData = this.getTaskDataByCoreData(coreData);\n    return mappedData;\n  }\n\n  getTaskDataByCoreData(coreData) {\n    var mappedData = coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_TASKS, coreData) : null;\n\n    this._customFieldsManager.addCustomFieldsData(coreData.id, mappedData);\n\n    return mappedData;\n  }\n\n  insertTask(data) {\n    this._customFieldsManager.saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, data);\n\n    this._ganttView._ganttViewCore.insertTask(this._mappingHelper.convertMappedToCoreData(GANTT_TASKS, data));\n  }\n\n  deleteTask(key) {\n    this._ganttView._ganttViewCore.deleteTask(key);\n  }\n\n  updateTask(key, data) {\n    var coreTaskData = this._mappingHelper.convertMappedToCoreData(GANTT_TASKS, data);\n\n    var isCustomFieldsUpdateOnly = !Object.keys(coreTaskData).length;\n\n    this._customFieldsManager.saveCustomFieldsDataToCache(key, data, true, isCustomFieldsUpdateOnly);\n\n    if (isCustomFieldsUpdateOnly) {\n      var customFieldsData = this._customFieldsManager._getCustomFieldsData(data);\n\n      if (Object.keys(customFieldsData).length > 0) {\n        this._actionsManager.raiseUpdatingAction(GANTT_TASKS, {\n          cancel: false,\n          key: key,\n          newValues: {}\n        });\n      }\n    } else {\n      this._ganttView._ganttViewCore.updateTask(key, coreTaskData);\n    }\n  }\n\n  getDependencyData(key) {\n    if (!isDefined(key)) {\n      return null;\n    }\n\n    var coreData = this._ganttView._ganttViewCore.getDependencyData(key);\n\n    return coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_DEPENDENCIES, coreData) : null;\n  }\n\n  insertDependency(data) {\n    this._ganttView._ganttViewCore.insertDependency(this._mappingHelper.convertMappedToCoreData(GANTT_DEPENDENCIES, data));\n  }\n\n  deleteDependency(key) {\n    this._ganttView._ganttViewCore.deleteDependency(key);\n  }\n\n  getResourceData(key) {\n    var coreData = this._ganttView._ganttViewCore.getResourceData(key);\n\n    return coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_RESOURCES, coreData) : null;\n  }\n\n  deleteResource(key) {\n    this._ganttView._ganttViewCore.deleteResource(key);\n  }\n\n  insertResource(data, taskKeys) {\n    this._ganttView._ganttViewCore.insertResource(this._mappingHelper.convertMappedToCoreData(GANTT_RESOURCES, data), taskKeys);\n  }\n\n  getResourceAssignmentData(key) {\n    var coreData = this._ganttView._ganttViewCore.getResourceAssignmentData(key);\n\n    return coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_RESOURCE_ASSIGNMENTS, coreData) : null;\n  }\n\n  assignResourceToTask(resourceKey, taskKey) {\n    this._ganttView._ganttViewCore.assignResourceToTask(resourceKey, taskKey);\n  }\n\n  unassignResourceFromTask(resourceKey, taskKey) {\n    this._ganttView._ganttViewCore.unassignResourceFromTask(resourceKey, taskKey);\n  }\n\n  unassignAllResourcesFromTask(taskKey) {\n    this._ganttView._ganttViewCore.unassignAllResourcesFromTask(taskKey);\n  }\n\n  updateDimensions() {\n    this._sizeHelper.onAdjustControl();\n  }\n\n  scrollToDate(date) {\n    this._ganttView._ganttViewCore.scrollToDate(date);\n  }\n\n  showResourceManagerDialog() {\n    this._ganttView._ganttViewCore.showResourcesDialog();\n  }\n\n  showTaskDetailsDialog(taskKey) {\n    this._ganttView._ganttViewCore.showTaskDetailsDialog(taskKey);\n  }\n\n  exportToPdf(options) {\n    return this._exportToPdf(options);\n  }\n\n  _exportToPdf(options) {\n    var _fullOptions$pdfDocum, _fullOptions$docCreat, _window$jspdf$jsPDF, _window$jspdf, _fullOptions$format;\n\n    this._exportHelper.reset();\n\n    var fullOptions = extend({}, options);\n\n    if (fullOptions.createDocumentMethod) {\n      fullOptions.docCreateMethod = fullOptions.createDocumentMethod;\n    }\n\n    null !== (_fullOptions$pdfDocum = fullOptions.pdfDocument) && void 0 !== _fullOptions$pdfDocum ? _fullOptions$pdfDocum : fullOptions.pdfDocument = fullOptions.jsPDFDocument;\n    null !== (_fullOptions$docCreat = fullOptions.docCreateMethod) && void 0 !== _fullOptions$docCreat ? _fullOptions$docCreat : fullOptions.docCreateMethod = null !== (_window$jspdf$jsPDF = null === (_window$jspdf = window.jspdf) || void 0 === _window$jspdf ? void 0 : _window$jspdf.jsPDF) && void 0 !== _window$jspdf$jsPDF ? _window$jspdf$jsPDF : window.jsPDF;\n    null !== (_fullOptions$format = fullOptions.format) && void 0 !== _fullOptions$format ? _fullOptions$format : fullOptions.format = \"a4\";\n    return new Promise(resolve => {\n      var _this$_ganttView4;\n\n      var doc = null === (_this$_ganttView4 = this._ganttView) || void 0 === _this$_ganttView4 ? void 0 : _this$_ganttView4._ganttViewCore.exportToPdf(fullOptions);\n      resolve(doc);\n    });\n  }\n\n  refresh() {\n    return new Promise((resolve, reject) => {\n      try {\n        this._refreshGantt();\n\n        resolve();\n      } catch (e) {\n        reject(e.message);\n      }\n    });\n  }\n\n  expandAll() {\n    this._expandAll();\n  }\n\n  collapseAll() {\n    this._collapseAll();\n  }\n\n  expandAllToLevel(level) {\n    this._changeExpandAll(false, level);\n  }\n\n  expandToTask(key) {\n    var _node$parent;\n\n    var node = this._treeList.getNodeByKey(key);\n\n    this._changeExpandAll(false, 0, null === node || void 0 === node ? void 0 : null === (_node$parent = node.parent) || void 0 === _node$parent ? void 0 : _node$parent.key);\n  }\n\n  collapseTask(key) {\n    this._treeList.collapseRow(key);\n  }\n\n  expandTask(key) {\n    this._treeList.expandRow(key);\n  }\n\n  showResources(value) {\n    this.option(\"showResources\", value);\n  }\n\n  showDependencies(value) {\n    this.option(\"showDependencies\", value);\n  }\n\n  zoomIn() {\n    this._ganttView._ganttViewCore.zoomIn();\n  }\n\n  zoomOut() {\n    this._ganttView._ganttViewCore.zoomOut();\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), GanttHelper.getDefaultOptions());\n  }\n\n  _optionChanged(args) {\n    var _this$_ganttTreeList4, _this$_sizeHelper, _this$_ganttTreeList5, _this$_actionsManager, _this$_actionsManager2, _this$_actionsManager3, _this$_actionsManager4, _this$_actionsManager5, _this$_actionsManager6, _this$_actionsManager7, _this$_actionsManager8, _this$_actionsManager9, _this$_actionsManager10, _this$_actionsManager11, _this$_actionsManager12, _this$_actionsManager13, _this$_actionsManager14, _this$_actionsManager15, _this$_actionsManager16, _this$_actionsManager17, _this$_actionsManager18, _this$_actionsManager19, _this$_actionsManager20, _this$_actionsManager21, _this$_actionsManager22, _this$_actionsManager23, _this$_actionsManager24, _this$_actionsManager25, _this$_actionsManager26, _this$_actionsManager27, _this$_ganttTreeList6, _this$_ganttTreeList7, _this$_ganttTemplates, _this$_ganttTemplates2, _this$_ganttTemplates3, _this$_ganttTemplates4, _this$_ganttTreeList8, _this$_sizeHelper2, _this$_sizeHelper3, _this$_ganttTreeList9, _this$_ganttTreeList10, _this$_ganttTreeList11;\n\n    switch (args.name) {\n      case \"tasks\":\n        this._refreshDataSource(GANTT_TASKS);\n\n        break;\n\n      case \"dependencies\":\n        this._refreshDataSource(GANTT_DEPENDENCIES);\n\n        break;\n\n      case \"resources\":\n        this._refreshDataSource(GANTT_RESOURCES);\n\n        break;\n\n      case \"resourceAssignments\":\n        this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS);\n\n        break;\n\n      case \"columns\":\n        null === (_this$_ganttTreeList4 = this._ganttTreeList) || void 0 === _this$_ganttTreeList4 ? void 0 : _this$_ganttTreeList4.setOption(\"columns\", this._ganttTreeList.getColumns());\n        break;\n\n      case \"taskListWidth\":\n        null === (_this$_sizeHelper = this._sizeHelper) || void 0 === _this$_sizeHelper ? void 0 : _this$_sizeHelper.setInnerElementsWidth();\n        break;\n\n      case \"showResources\":\n        this._setGanttViewOption(\"showResources\", args.value);\n\n        break;\n\n      case \"showDependencies\":\n        this._setGanttViewOption(\"showDependencies\", args.value);\n\n        break;\n\n      case \"taskTitlePosition\":\n        this._setGanttViewOption(\"taskTitlePosition\", args.value);\n\n        break;\n\n      case \"firstDayOfWeek\":\n        this._setGanttViewOption(\"firstDayOfWeek\", args.value);\n\n        break;\n\n      case \"startDateRange\":\n        this._setGanttViewOption(\"startDateRange\", args.value);\n\n        break;\n\n      case \"endDateRange\":\n        this._setGanttViewOption(\"endDateRange\", args.value);\n\n        break;\n\n      case \"selectedRowKey\":\n        null === (_this$_ganttTreeList5 = this._ganttTreeList) || void 0 === _this$_ganttTreeList5 ? void 0 : _this$_ganttTreeList5.selectRows(GanttHelper.getArrayFromOneElement(args.value));\n        break;\n\n      case \"onSelectionChanged\":\n        null === (_this$_actionsManager = this._actionsManager) || void 0 === _this$_actionsManager ? void 0 : _this$_actionsManager.createSelectionChangedAction();\n        break;\n\n      case \"onTaskClick\":\n        null === (_this$_actionsManager2 = this._actionsManager) || void 0 === _this$_actionsManager2 ? void 0 : _this$_actionsManager2.createTaskClickAction();\n        break;\n\n      case \"onTaskDblClick\":\n        null === (_this$_actionsManager3 = this._actionsManager) || void 0 === _this$_actionsManager3 ? void 0 : _this$_actionsManager3.createTaskDblClickAction();\n        break;\n\n      case \"onTaskInserting\":\n        null === (_this$_actionsManager4 = this._actionsManager) || void 0 === _this$_actionsManager4 ? void 0 : _this$_actionsManager4.createTaskInsertingAction();\n        break;\n\n      case \"onTaskInserted\":\n        null === (_this$_actionsManager5 = this._actionsManager) || void 0 === _this$_actionsManager5 ? void 0 : _this$_actionsManager5.createTaskInsertedAction();\n        break;\n\n      case \"onTaskDeleting\":\n        null === (_this$_actionsManager6 = this._actionsManager) || void 0 === _this$_actionsManager6 ? void 0 : _this$_actionsManager6.createTaskDeletingAction();\n        break;\n\n      case \"onTaskDeleted\":\n        null === (_this$_actionsManager7 = this._actionsManager) || void 0 === _this$_actionsManager7 ? void 0 : _this$_actionsManager7.createTaskDeletedAction();\n        break;\n\n      case \"onTaskUpdating\":\n        null === (_this$_actionsManager8 = this._actionsManager) || void 0 === _this$_actionsManager8 ? void 0 : _this$_actionsManager8.createTaskUpdatingAction();\n        break;\n\n      case \"onTaskUpdated\":\n        null === (_this$_actionsManager9 = this._actionsManager) || void 0 === _this$_actionsManager9 ? void 0 : _this$_actionsManager9.createTaskUpdatedAction();\n        break;\n\n      case \"onTaskMoving\":\n        null === (_this$_actionsManager10 = this._actionsManager) || void 0 === _this$_actionsManager10 ? void 0 : _this$_actionsManager10.createTaskMovingAction();\n        break;\n\n      case \"onTaskEditDialogShowing\":\n        null === (_this$_actionsManager11 = this._actionsManager) || void 0 === _this$_actionsManager11 ? void 0 : _this$_actionsManager11.createTaskEditDialogShowingAction();\n        break;\n\n      case \"onResourceManagerDialogShowing\":\n        null === (_this$_actionsManager12 = this._actionsManager) || void 0 === _this$_actionsManager12 ? void 0 : _this$_actionsManager12.createResourceManagerDialogShowingAction();\n        break;\n\n      case \"onDependencyInserting\":\n        null === (_this$_actionsManager13 = this._actionsManager) || void 0 === _this$_actionsManager13 ? void 0 : _this$_actionsManager13.createDependencyInsertingAction();\n        break;\n\n      case \"onDependencyInserted\":\n        null === (_this$_actionsManager14 = this._actionsManager) || void 0 === _this$_actionsManager14 ? void 0 : _this$_actionsManager14.createDependencyInsertedAction();\n        break;\n\n      case \"onDependencyDeleting\":\n        null === (_this$_actionsManager15 = this._actionsManager) || void 0 === _this$_actionsManager15 ? void 0 : _this$_actionsManager15.createDependencyDeletingAction();\n        break;\n\n      case \"onDependencyDeleted\":\n        null === (_this$_actionsManager16 = this._actionsManager) || void 0 === _this$_actionsManager16 ? void 0 : _this$_actionsManager16.createDependencyDeletedAction();\n        break;\n\n      case \"onResourceInserting\":\n        null === (_this$_actionsManager17 = this._actionsManager) || void 0 === _this$_actionsManager17 ? void 0 : _this$_actionsManager17.createResourceInsertingAction();\n        break;\n\n      case \"onResourceInserted\":\n        null === (_this$_actionsManager18 = this._actionsManager) || void 0 === _this$_actionsManager18 ? void 0 : _this$_actionsManager18.createResourceInsertedAction();\n        break;\n\n      case \"onResourceDeleting\":\n        null === (_this$_actionsManager19 = this._actionsManager) || void 0 === _this$_actionsManager19 ? void 0 : _this$_actionsManager19.createResourceDeletingAction();\n        break;\n\n      case \"onResourceDeleted\":\n        null === (_this$_actionsManager20 = this._actionsManager) || void 0 === _this$_actionsManager20 ? void 0 : _this$_actionsManager20.createResourceDeletedAction();\n        break;\n\n      case \"onResourceAssigning\":\n        null === (_this$_actionsManager21 = this._actionsManager) || void 0 === _this$_actionsManager21 ? void 0 : _this$_actionsManager21.createResourceAssigningAction();\n        break;\n\n      case \"onResourceAssigned\":\n        null === (_this$_actionsManager22 = this._actionsManager) || void 0 === _this$_actionsManager22 ? void 0 : _this$_actionsManager22.createResourceAssignedAction();\n        break;\n\n      case \"onResourceUnassigning\":\n        null === (_this$_actionsManager23 = this._actionsManager) || void 0 === _this$_actionsManager23 ? void 0 : _this$_actionsManager23.createResourceUnassigningAction();\n        break;\n\n      case \"onResourceUnassigned\":\n        null === (_this$_actionsManager24 = this._actionsManager) || void 0 === _this$_actionsManager24 ? void 0 : _this$_actionsManager24.createResourceUnassignedAction();\n        break;\n\n      case \"onCustomCommand\":\n        null === (_this$_actionsManager25 = this._actionsManager) || void 0 === _this$_actionsManager25 ? void 0 : _this$_actionsManager25.createCustomCommandAction();\n        break;\n\n      case \"onContextMenuPreparing\":\n        null === (_this$_actionsManager26 = this._actionsManager) || void 0 === _this$_actionsManager26 ? void 0 : _this$_actionsManager26.createContextMenuPreparingAction();\n        break;\n\n      case \"onScaleCellPrepared\":\n        null === (_this$_actionsManager27 = this._actionsManager) || void 0 === _this$_actionsManager27 ? void 0 : _this$_actionsManager27.createScaleCellPreparedAction();\n        break;\n\n      case \"allowSelection\":\n        null === (_this$_ganttTreeList6 = this._ganttTreeList) || void 0 === _this$_ganttTreeList6 ? void 0 : _this$_ganttTreeList6.setOption(\"selection.mode\", GanttHelper.getSelectionMode(args.value));\n\n        this._setGanttViewOption(\"allowSelection\", args.value);\n\n        break;\n\n      case \"showRowLines\":\n        null === (_this$_ganttTreeList7 = this._ganttTreeList) || void 0 === _this$_ganttTreeList7 ? void 0 : _this$_ganttTreeList7.setOption(\"showRowLines\", args.value);\n\n        this._setGanttViewOption(\"showRowLines\", args.value);\n\n        break;\n\n      case \"stripLines\":\n        this._setGanttViewOption(\"stripLines\", args.value);\n\n        break;\n\n      case \"scaleType\":\n        this._setGanttViewOption(\"scaleType\", args.value);\n\n        break;\n\n      case \"scaleTypeRange\":\n        this._setGanttViewOption(\"scaleTypeRange\", this.option(args.name));\n\n        break;\n\n      case \"editing\":\n        this._setGanttViewOption(\"editing\", this.option(args.name));\n\n        break;\n\n      case \"validation\":\n        this._setGanttViewOption(\"validation\", this.option(args.name));\n\n        break;\n\n      case \"toolbar\":\n        this._updateToolbarContent();\n\n        break;\n\n      case \"contextMenu\":\n        this._updateContextMenu();\n\n        break;\n\n      case \"taskTooltipContentTemplate\":\n        this._setGanttViewOption(\"taskTooltipContentTemplate\", null === (_this$_ganttTemplates = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates ? void 0 : _this$_ganttTemplates.getTaskTooltipContentTemplateFunc(args.value));\n\n        break;\n\n      case \"taskProgressTooltipContentTemplate\":\n        this._setGanttViewOption(\"taskProgressTooltipContentTemplate\", null === (_this$_ganttTemplates2 = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates2 ? void 0 : _this$_ganttTemplates2.getTaskProgressTooltipContentTemplateFunc(args.value));\n\n        break;\n\n      case \"taskTimeTooltipContentTemplate\":\n        this._setGanttViewOption(\"taskTimeTooltipContentTemplate\", null === (_this$_ganttTemplates3 = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates3 ? void 0 : _this$_ganttTemplates3.getTaskTimeTooltipContentTemplateFunc(args.value));\n\n        break;\n\n      case \"taskContentTemplate\":\n        this._setGanttViewOption(\"taskContentTemplate\", null === (_this$_ganttTemplates4 = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates4 ? void 0 : _this$_ganttTemplates4.getTaskContentTemplateFunc(args.value));\n\n        break;\n\n      case \"rootValue\":\n        null === (_this$_ganttTreeList8 = this._ganttTreeList) || void 0 === _this$_ganttTreeList8 ? void 0 : _this$_ganttTreeList8.setOption(\"rootValue\", args.value);\n        break;\n\n      case \"width\":\n        super._optionChanged(args);\n\n        null === (_this$_sizeHelper2 = this._sizeHelper) || void 0 === _this$_sizeHelper2 ? void 0 : _this$_sizeHelper2.updateGanttWidth();\n        break;\n\n      case \"height\":\n        super._optionChanged(args);\n\n        null === (_this$_sizeHelper3 = this._sizeHelper) || void 0 === _this$_sizeHelper3 ? void 0 : _this$_sizeHelper3.setGanttHeight(getHeight(this._$element));\n        break;\n\n      case \"sorting\":\n        null === (_this$_ganttTreeList9 = this._ganttTreeList) || void 0 === _this$_ganttTreeList9 ? void 0 : _this$_ganttTreeList9.setOption(\"sorting\", this.option(args.name));\n        break;\n\n      case \"filterRow\":\n        null === (_this$_ganttTreeList10 = this._ganttTreeList) || void 0 === _this$_ganttTreeList10 ? void 0 : _this$_ganttTreeList10.setOption(\"filterRow\", this.option(args.name));\n        break;\n\n      case \"headerFilter\":\n        null === (_this$_ganttTreeList11 = this._ganttTreeList) || void 0 === _this$_ganttTreeList11 ? void 0 : _this$_ganttTreeList11.setOption(\"headerFilter\", this.option(args.name));\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n}\n\nregisterComponent(\"dxGantt\", Gantt);\nexport default Gantt;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/gantt/ui.gantt.js"],"names":["getHeight","$","compileGetter","extend","getWindow","isDefined","ModelChangesListener","DataOption","LoadPanel","registerComponent","SplitterControl","Widget","GanttActionsManager","GanttCustomFieldsManager","GanttDialog","GanttExportHelper","GanttHelper","GanttMappingHelper","GanttSizeHelper","GanttTemplatesManager","GanttToolbar","GanttContextMenuBar","GanttTreeList","GanttView","window","GANTT_CLASS","GANTT_VIEW_CLASS","GANTT_TREE_LIST_WRAPPER","GANTT_TOOLBAR_WRAPPER","GANTT_MAIN_WRAPPER","GANTT_TASKS","GANTT_DEPENDENCIES","GANTT_RESOURCES","GANTT_RESOURCE_ASSIGNMENTS","GANTT_NEW_TASK_CACHE_KEY","Gantt","_init","_initGantt","_isGanttRendered","_initHelpers","_refreshDataSources","_initMarkup","$element","addClass","_$toolbarWrapper","appendTo","_$toolbar","_$mainWrapper","_$treeListWrapper","_$treeList","_$splitter","_$ganttView","_$dialog","_$loadPanel","_$contextMenu","_clean","_this$_ganttView","_ganttView","_ganttViewCore","cleanMarkup","_dialogInstance","_loadPanel","_exportHelper","_refresh","_dimensionChanged","_this$_ganttView2","_onDimensionChanged","_visibilityChanged","visible","_refreshGantt","_refreshDataSource","_renderContent","_isMainElementVisible","is","_renderBars","_renderTreeList","_renderSplitter","_ganttTreeList","_treeList","getTreeList","onAfterTreeListCreate","_splitter","_createComponent","container","leftElement","rightElement","onApplyPanelSize","e","_sizeHelper","option","_bars","_toolbar","_updateToolbarContent","push","_contextMenuBar","_updateContextMenu","_mappingHelper","_customFieldsManager","_actionsManager","_ganttTemplatesManager","_initGanttView","width","height","getOffsetHeight","rowHeight","getRowHeight","headerHeight","getHeaderHeight","tasks","_tasks","dependencies","_dependencies","resources","_resources","resourceAssignments","_resourceAssignments","allowSelection","selectedRowKey","showResources","showDependencies","startDateRange","endDateRange","taskTitlePosition","firstDayOfWeek","showRowLines","scaleType","scaleTypeRange","editing","validation","stripLines","bars","mainElement","onSelectionChanged","selectRows","getArrayFromOneElement","id","onScroll","scrollBy","scrollTop","onDialogShowing","_showDialog","bind","onPopupMenuShowing","_showPopupMenu","onPopupMenuHiding","_hidePopupMenu","onExpandAll","_expandAll","onCollapseAll","_collapseAll","modelChangesListener","create","exportHelper","_getExportHelper","taskTooltipContentTemplate","getTaskTooltipContentTemplateFunc","taskProgressTooltipContentTemplate","getTaskProgressTooltipContentTemplateFunc","taskTimeTooltipContentTemplate","getTaskTimeTooltipContentTemplateFunc","taskContentTemplate","getTaskContentTemplateFunc","onTaskClick","onRowClick","onTaskDblClick","onRowDblClick","onAdjustControl","_fireContentReadyAction","name","dataOption","concat","dispose","_getLoadPanel","data","_dataSourceChanged","_getSpecificDataSourceOption","dataSource","Array","isArray","store","type","key","dataSourceName","getters","compileGettersByOption","validatedData","_validateSourceData","mappedData","map","prepareMapHandler","_setGanttViewOption","_this$_ganttTreeList","_this$_ganttTreeList2","_tasksRaw","forceUpdate","getDataSource","updateDataSource","_validateTaskData","_this$option","keyGetter","parentIdGetter","rootValue","validationTree","i","length","item","_validationTree$key","isRootTask","treeItem","children","_parentIdGetter","_validationTree$paren","parentId","parentTreeItem","parent","validKeys","_appendChildKeys","filter","indexOf","keys","child","_onRecordInserted","optionName","record","callback","getStoreObject","isTaskInsert","addCustomFieldsDataFromCache","insert","response","insertedId","_reloadDataSource","done","onTaskInserted","raiseInsertedAction","_onRecordUpdated","values","isTaskUpdated","convertCoreToMappedData","hasCustomFieldsData","cache","hasData","update","raiseUpdatedAction","_onRecordRemoved","remove","raiseDeletedAction","_onParentTaskUpdated","getTaskDataByCoreData","_onParentTasksRecalculated","isSieving","setters","compileSettersByOption","treeDataSource","appendCustomFields","prepareSetterMapHandler","setTimeout","_this$_ganttTreeList3","setDataSource","_sortAndFilter","columns","getVisibleColumns","sortColumn","c","sortIndex","filterColumn","_c$filterValues","filterValue","filterValues","sieveColumn","isClearSieving","sievedItems","getSievedItems","sieveOptions","_getToolbarItems","items","show","hide","createItems","_updateBarItemsState","contextMenuOptions","enabled","updateBarItemsState","parameters","afterClosing","info","getBarManager","updateContextMenu","args","cancel","event","targetType","targetKey","_items","getTaskData","getDependencyData","raiseContextMenuPreparing","position","of","_getTaskKeyGetter","_findTaskByKey","_this$_tasksOption","_tasksOption","_getItems","find","t","value","_getGanttViewOption","_this$_ganttView3","_this$_exportHelper","_executeCoreCommand","executeCoreCommand","_changeExpandAll","_onTreeListRowExpandChanged","expanded","_lockRowExpandEvent","changeTaskExpanded","adjustHeight","level","rowKey","_promise","allExpandableNodes","nodesToExpand","forEachNode","node","_node$children","getNodeByKey","getAllParentNodesKeys","promise","state","reduce","previous","index","includes","action","expandRow","collapseRow","isLast","then","applyTasksExpandedState","getTaskResources","coreData","r","getVisibleTaskKeys","getVisibleDependencyKeys","getVisibleResourceKeys","getVisibleResourceAssignmentKeys","addCustomFieldsData","insertTask","saveCustomFieldsDataToCache","convertMappedToCoreData","deleteTask","updateTask","coreTaskData","isCustomFieldsUpdateOnly","Object","customFieldsData","_getCustomFieldsData","raiseUpdatingAction","newValues","insertDependency","deleteDependency","getResourceData","deleteResource","insertResource","taskKeys","getResourceAssignmentData","assignResourceToTask","resourceKey","taskKey","unassignResourceFromTask","unassignAllResourcesFromTask","updateDimensions","scrollToDate","date","showResourceManagerDialog","showResourcesDialog","showTaskDetailsDialog","exportToPdf","options","_exportToPdf","_fullOptions$pdfDocum","_fullOptions$docCreat","_window$jspdf$jsPDF","_window$jspdf","_fullOptions$format","reset","fullOptions","createDocumentMethod","docCreateMethod","pdfDocument","jsPDFDocument","jspdf","jsPDF","format","Promise","resolve","_this$_ganttView4","doc","refresh","reject","message","expandAll","collapseAll","expandAllToLevel","expandToTask","_node$parent","collapseTask","expandTask","zoomIn","zoomOut","_getDefaultOptions","getDefaultOptions","_optionChanged","_this$_ganttTreeList4","_this$_sizeHelper","_this$_ganttTreeList5","_this$_actionsManager","_this$_actionsManager2","_this$_actionsManager3","_this$_actionsManager4","_this$_actionsManager5","_this$_actionsManager6","_this$_actionsManager7","_this$_actionsManager8","_this$_actionsManager9","_this$_actionsManager10","_this$_actionsManager11","_this$_actionsManager12","_this$_actionsManager13","_this$_actionsManager14","_this$_actionsManager15","_this$_actionsManager16","_this$_actionsManager17","_this$_actionsManager18","_this$_actionsManager19","_this$_actionsManager20","_this$_actionsManager21","_this$_actionsManager22","_this$_actionsManager23","_this$_actionsManager24","_this$_actionsManager25","_this$_actionsManager26","_this$_actionsManager27","_this$_ganttTreeList6","_this$_ganttTreeList7","_this$_ganttTemplates","_this$_ganttTemplates2","_this$_ganttTemplates3","_this$_ganttTemplates4","_this$_ganttTreeList8","_this$_sizeHelper2","_this$_sizeHelper3","_this$_ganttTreeList9","_this$_ganttTreeList10","_this$_ganttTreeList11","setOption","getColumns","setInnerElementsWidth","createSelectionChangedAction","createTaskClickAction","createTaskDblClickAction","createTaskInsertingAction","createTaskInsertedAction","createTaskDeletingAction","createTaskDeletedAction","createTaskUpdatingAction","createTaskUpdatedAction","createTaskMovingAction","createTaskEditDialogShowingAction","createResourceManagerDialogShowingAction","createDependencyInsertingAction","createDependencyInsertedAction","createDependencyDeletingAction","createDependencyDeletedAction","createResourceInsertingAction","createResourceInsertedAction","createResourceDeletingAction","createResourceDeletedAction","createResourceAssigningAction","createResourceAssignedAction","createResourceUnassigningAction","createResourceUnassignedAction","createCustomCommandAction","createContextMenuPreparingAction","createScaleCellPreparedAction","getSelectionMode","updateGanttWidth","setGanttHeight","_$element"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    ModelChangesListener\r\n} from \"./ui.gantt.model_changes_listener\";\r\nimport DataOption from \"./ui.gantt.data.option\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport SplitterControl from \"../splitter\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    GanttActionsManager\r\n} from \"./ui.gantt.actions\";\r\nimport {\r\n    GanttCustomFieldsManager\r\n} from \"./ui.gantt.custom_fields\";\r\nimport {\r\n    GanttDialog\r\n} from \"./ui.gantt.dialogs\";\r\nimport {\r\n    GanttExportHelper\r\n} from \"./ui.gantt.export_helper\";\r\nimport {\r\n    GanttHelper\r\n} from \"./ui.gantt.helper\";\r\nimport {\r\n    GanttMappingHelper\r\n} from \"./ui.gantt.mapping_helper\";\r\nimport {\r\n    GanttSizeHelper\r\n} from \"./ui.gantt.size_helper\";\r\nimport {\r\n    GanttTemplatesManager\r\n} from \"./ui.gantt.templates\";\r\nimport {\r\n    GanttToolbar,\r\n    GanttContextMenuBar\r\n} from \"./ui.gantt.bars\";\r\nimport {\r\n    GanttTreeList\r\n} from \"./ui.gantt.treelist\";\r\nimport {\r\n    GanttView\r\n} from \"./ui.gantt.view\";\r\nvar window = getWindow();\r\nvar GANTT_CLASS = \"dx-gantt\";\r\nvar GANTT_VIEW_CLASS = \"dx-gantt-view\";\r\nvar GANTT_TREE_LIST_WRAPPER = \"dx-gantt-treelist-wrapper\";\r\nvar GANTT_TOOLBAR_WRAPPER = \"dx-gantt-toolbar-wrapper\";\r\nvar GANTT_MAIN_WRAPPER = \"dx-gantt-main-wrapper\";\r\nvar GANTT_TASKS = \"tasks\";\r\nvar GANTT_DEPENDENCIES = \"dependencies\";\r\nvar GANTT_RESOURCES = \"resources\";\r\nvar GANTT_RESOURCE_ASSIGNMENTS = \"resourceAssignments\";\r\nvar GANTT_NEW_TASK_CACHE_KEY = \"gantt_new_task_key\";\r\nclass Gantt extends Widget {\r\n    _init() {\r\n        super._init();\r\n        this._initGantt();\r\n        this._isGanttRendered = false;\r\n        this._initHelpers()\r\n    }\r\n    _initGantt() {\r\n        this._refreshDataSources()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.$element().addClass(GANTT_CLASS);\r\n        this._$toolbarWrapper = $(\"<div>\").addClass(GANTT_TOOLBAR_WRAPPER).appendTo(this.$element());\r\n        this._$toolbar = $(\"<div>\").appendTo(this._$toolbarWrapper);\r\n        this._$mainWrapper = $(\"<div>\").addClass(GANTT_MAIN_WRAPPER).appendTo(this.$element());\r\n        this._$treeListWrapper = $(\"<div>\").addClass(GANTT_TREE_LIST_WRAPPER).appendTo(this._$mainWrapper);\r\n        this._$treeList = $(\"<div>\").appendTo(this._$treeListWrapper);\r\n        this._$splitter = $(\"<div>\").appendTo(this._$mainWrapper);\r\n        this._$ganttView = $(\"<div>\").addClass(GANTT_VIEW_CLASS).appendTo(this._$mainWrapper);\r\n        this._$dialog = $(\"<div>\").appendTo(this.$element());\r\n        this._$loadPanel = $(\"<div>\").appendTo(this.$element());\r\n        this._$contextMenu = $(\"<div>\").appendTo(this.$element())\r\n    }\r\n    _clean() {\r\n        var _this$_ganttView;\r\n        null === (_this$_ganttView = this._ganttView) || void 0 === _this$_ganttView ? void 0 : _this$_ganttView._ganttViewCore.cleanMarkup();\r\n        delete this._ganttView;\r\n        delete this._dialogInstance;\r\n        delete this._loadPanel;\r\n        delete this._exportHelper;\r\n        super._clean()\r\n    }\r\n    _refresh() {\r\n        this._isGanttRendered = false;\r\n        super._refresh()\r\n    }\r\n    _dimensionChanged() {\r\n        var _this$_ganttView2;\r\n        null === (_this$_ganttView2 = this._ganttView) || void 0 === _this$_ganttView2 ? void 0 : _this$_ganttView2._onDimensionChanged()\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this._refreshGantt()\r\n        }\r\n    }\r\n    _refreshGantt() {\r\n        this._refreshDataSources();\r\n        this._refresh()\r\n    }\r\n    _refreshDataSources() {\r\n        this._refreshDataSource(GANTT_TASKS);\r\n        this._refreshDataSource(GANTT_DEPENDENCIES);\r\n        this._refreshDataSource(GANTT_RESOURCES);\r\n        this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS)\r\n    }\r\n    _renderContent() {\r\n        this._isMainElementVisible = this.$element().is(\":visible\");\r\n        if (this._isMainElementVisible && !this._isGanttRendered) {\r\n            this._isGanttRendered = true;\r\n            this._renderBars();\r\n            this._renderTreeList();\r\n            this._renderSplitter()\r\n        }\r\n    }\r\n    _renderTreeList() {\r\n        this._ganttTreeList = new GanttTreeList(this);\r\n        this._treeList = this._ganttTreeList.getTreeList();\r\n        this._ganttTreeList.onAfterTreeListCreate()\r\n    }\r\n    _renderSplitter() {\r\n        this._splitter = this._createComponent(this._$splitter, SplitterControl, {\r\n            container: this.$element(),\r\n            leftElement: this._$treeListWrapper,\r\n            rightElement: this._$ganttView,\r\n            onApplyPanelSize: e => {\r\n                this._sizeHelper.onApplyPanelSize(e)\r\n            }\r\n        });\r\n        this._splitter.option(\"initialLeftPanelWidth\", this.option(\"taskListWidth\"))\r\n    }\r\n    _renderBars() {\r\n        this._bars = [];\r\n        this._toolbar = new GanttToolbar(this._$toolbar, this);\r\n        this._updateToolbarContent();\r\n        this._bars.push(this._toolbar);\r\n        this._contextMenuBar = new GanttContextMenuBar(this._$contextMenu, this);\r\n        this._updateContextMenu();\r\n        this._bars.push(this._contextMenuBar)\r\n    }\r\n    _initHelpers() {\r\n        this._mappingHelper = new GanttMappingHelper(this);\r\n        this._customFieldsManager = new GanttCustomFieldsManager(this);\r\n        this._actionsManager = new GanttActionsManager(this);\r\n        this._ganttTemplatesManager = new GanttTemplatesManager(this);\r\n        this._sizeHelper = new GanttSizeHelper(this)\r\n    }\r\n    _initGanttView() {\r\n        if (this._ganttView) {\r\n            return\r\n        }\r\n        this._ganttView = this._createComponent(this._$ganttView, GanttView, {\r\n            width: \"100%\",\r\n            height: this._ganttTreeList.getOffsetHeight(),\r\n            rowHeight: this._ganttTreeList.getRowHeight(),\r\n            headerHeight: this._ganttTreeList.getHeaderHeight(),\r\n            tasks: this._tasks,\r\n            dependencies: this._dependencies,\r\n            resources: this._resources,\r\n            resourceAssignments: this._resourceAssignments,\r\n            allowSelection: this.option(\"allowSelection\"),\r\n            selectedRowKey: this.option(\"selectedRowKey\"),\r\n            showResources: this.option(\"showResources\"),\r\n            showDependencies: this.option(\"showDependencies\"),\r\n            startDateRange: this.option(\"startDateRange\"),\r\n            endDateRange: this.option(\"endDateRange\"),\r\n            taskTitlePosition: this.option(\"taskTitlePosition\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            showRowLines: this.option(\"showRowLines\"),\r\n            scaleType: this.option(\"scaleType\"),\r\n            scaleTypeRange: this.option(\"scaleTypeRange\"),\r\n            editing: this.option(\"editing\"),\r\n            validation: this.option(\"validation\"),\r\n            stripLines: this.option(\"stripLines\"),\r\n            bars: this._bars,\r\n            mainElement: this.$element(),\r\n            onSelectionChanged: e => {\r\n                this._ganttTreeList.selectRows(GanttHelper.getArrayFromOneElement(e.id))\r\n            },\r\n            onScroll: e => {\r\n                this._ganttTreeList.scrollBy(e.scrollTop)\r\n            },\r\n            onDialogShowing: this._showDialog.bind(this),\r\n            onPopupMenuShowing: this._showPopupMenu.bind(this),\r\n            onPopupMenuHiding: this._hidePopupMenu.bind(this),\r\n            onExpandAll: this._expandAll.bind(this),\r\n            onCollapseAll: this._collapseAll.bind(this),\r\n            modelChangesListener: ModelChangesListener.create(this),\r\n            exportHelper: this._getExportHelper(),\r\n            taskTooltipContentTemplate: this._ganttTemplatesManager.getTaskTooltipContentTemplateFunc(this.option(\"taskTooltipContentTemplate\")),\r\n            taskProgressTooltipContentTemplate: this._ganttTemplatesManager.getTaskProgressTooltipContentTemplateFunc(this.option(\"taskProgressTooltipContentTemplate\")),\r\n            taskTimeTooltipContentTemplate: this._ganttTemplatesManager.getTaskTimeTooltipContentTemplateFunc(this.option(\"taskTimeTooltipContentTemplate\")),\r\n            taskContentTemplate: this._ganttTemplatesManager.getTaskContentTemplateFunc(this.option(\"taskContentTemplate\")),\r\n            onTaskClick: e => {\r\n                this._ganttTreeList.onRowClick(e)\r\n            },\r\n            onTaskDblClick: e => {\r\n                this._ganttTreeList.onRowDblClick(e)\r\n            },\r\n            onAdjustControl: () => {\r\n                this._sizeHelper.onAdjustControl()\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    }\r\n    _refreshDataSource(name) {\r\n        var dataOption = this[\"_\".concat(name, \"Option\")];\r\n        if (dataOption) {\r\n            dataOption.dispose();\r\n            delete this[\"_\".concat(name, \"Option\")];\r\n            delete this[\"_\".concat(name)]\r\n        }\r\n        dataOption = new DataOption(name, this._getLoadPanel.bind(this), (name, data) => {\r\n            this._dataSourceChanged(name, data)\r\n        });\r\n        dataOption.option(\"dataSource\", this._getSpecificDataSourceOption(name));\r\n        dataOption._refreshDataSource();\r\n        this[\"_\".concat(name, \"Option\")] = dataOption\r\n    }\r\n    _getSpecificDataSourceOption(name) {\r\n        var dataSource = this.option(\"\".concat(name, \".dataSource\"));\r\n        if (!dataSource || Array.isArray(dataSource)) {\r\n            return {\r\n                store: {\r\n                    type: \"array\",\r\n                    data: null !== dataSource && void 0 !== dataSource ? dataSource : [],\r\n                    key: this.option(\"\".concat(name, \".keyExpr\"))\r\n                }\r\n            }\r\n        }\r\n        return dataSource\r\n    }\r\n    _dataSourceChanged(dataSourceName, data) {\r\n        var getters = GanttHelper.compileGettersByOption(this.option(dataSourceName));\r\n        var validatedData = this._validateSourceData(dataSourceName, data);\r\n        var mappedData = validatedData.map(GanttHelper.prepareMapHandler(getters));\r\n        this[\"_\".concat(dataSourceName)] = mappedData;\r\n        this._setGanttViewOption(dataSourceName, mappedData);\r\n        if (dataSourceName === GANTT_TASKS) {\r\n            var _this$_ganttTreeList, _this$_ganttTreeList2;\r\n            this._tasksRaw = validatedData;\r\n            var forceUpdate = !(null !== (_this$_ganttTreeList = this._ganttTreeList) && void 0 !== _this$_ganttTreeList && _this$_ganttTreeList.getDataSource()) && !this._ganttView;\r\n            null === (_this$_ganttTreeList2 = this._ganttTreeList) || void 0 === _this$_ganttTreeList2 ? void 0 : _this$_ganttTreeList2.updateDataSource(validatedData, forceUpdate)\r\n        }\r\n    }\r\n    _validateSourceData(dataSourceName, data) {\r\n        return data && dataSourceName === GANTT_TASKS ? this._validateTaskData(data) : data\r\n    }\r\n    _validateTaskData(data) {\r\n        var _this$option;\r\n        var keyGetter = compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\r\n        var parentIdGetter = compileGetter(this.option(\"\".concat(GANTT_TASKS, \".parentIdExpr\")));\r\n        var rootValue = null !== (_this$option = this.option(\"rootValue\")) && void 0 !== _this$option ? _this$option : \"dx_dxt_gantt_default_root_value\";\r\n        var validationTree = {};\r\n        for (var i = 0; i < data.length; i++) {\r\n            var item = data[i];\r\n            if (item) {\r\n                var _validationTree$key;\r\n                var key = keyGetter(item);\r\n                var isRootTask = key === rootValue;\r\n                var treeItem = null !== (_validationTree$key = validationTree[key]) && void 0 !== _validationTree$key ? _validationTree$key : validationTree[key] = {\r\n                    key: key,\r\n                    children: []\r\n                };\r\n                if (!isRootTask) {\r\n                    var _parentIdGetter, _validationTree$paren;\r\n                    var parentId = null !== (_parentIdGetter = parentIdGetter(item)) && void 0 !== _parentIdGetter ? _parentIdGetter : rootValue;\r\n                    var parentTreeItem = null !== (_validationTree$paren = validationTree[parentId]) && void 0 !== _validationTree$paren ? _validationTree$paren : validationTree[parentId] = {\r\n                        key: parentId,\r\n                        children: []\r\n                    };\r\n                    parentTreeItem.children.push(treeItem);\r\n                    treeItem.parent = parentTreeItem\r\n                }\r\n            }\r\n        }\r\n        var validKeys = [rootValue];\r\n        this._appendChildKeys(validationTree[rootValue], validKeys);\r\n        return data.filter(item => validKeys.indexOf(keyGetter(item)) > -1)\r\n    }\r\n    _appendChildKeys(treeItem, keys) {\r\n        var children = null === treeItem || void 0 === treeItem ? void 0 : treeItem.children;\r\n        for (var i = 0; i < (null === children || void 0 === children ? void 0 : children.length); i++) {\r\n            var child = children[i];\r\n            keys.push(child.key);\r\n            this._appendChildKeys(child, keys)\r\n        }\r\n    }\r\n    _onRecordInserted(optionName, record, callback) {\r\n        var dataOption = this[\"_\".concat(optionName, \"Option\")];\r\n        if (dataOption) {\r\n            var data = GanttHelper.getStoreObject(this.option(optionName), record);\r\n            var isTaskInsert = optionName === GANTT_TASKS;\r\n            if (isTaskInsert) {\r\n                this._customFieldsManager.addCustomFieldsDataFromCache(GANTT_NEW_TASK_CACHE_KEY, data)\r\n            }\r\n            dataOption.insert(data, response => {\r\n                var keyGetter = compileGetter(this.option(\"\".concat(optionName, \".keyExpr\")));\r\n                var insertedId = keyGetter(response);\r\n                callback(insertedId);\r\n                dataOption._reloadDataSource().done(data => {\r\n                    if (isTaskInsert) {\r\n                        this._ganttTreeList.onTaskInserted(insertedId, record.parentId)\r\n                    }\r\n                });\r\n                this._actionsManager.raiseInsertedAction(optionName, data, insertedId)\r\n            })\r\n        }\r\n    }\r\n    _onRecordUpdated(optionName, key, values) {\r\n        var dataOption = this[\"_\".concat(optionName, \"Option\")];\r\n        var isTaskUpdated = optionName === GANTT_TASKS;\r\n        if (dataOption) {\r\n            var data = this._mappingHelper.convertCoreToMappedData(optionName, values);\r\n            var hasCustomFieldsData = isTaskUpdated && this._customFieldsManager.cache.hasData(key);\r\n            if (hasCustomFieldsData) {\r\n                this._customFieldsManager.addCustomFieldsDataFromCache(key, data)\r\n            }\r\n            dataOption.update(key, data, () => {\r\n                dataOption._reloadDataSource();\r\n                this._actionsManager.raiseUpdatedAction(optionName, data, key)\r\n            })\r\n        }\r\n    }\r\n    _onRecordRemoved(optionName, key, data) {\r\n        var dataOption = this[\"_\".concat(optionName, \"Option\")];\r\n        if (dataOption) {\r\n            dataOption.remove(key, () => {\r\n                dataOption._reloadDataSource();\r\n                this._actionsManager.raiseDeletedAction(optionName, key, this._mappingHelper.convertCoreToMappedData(optionName, data))\r\n            })\r\n        }\r\n    }\r\n    _onParentTaskUpdated(data) {\r\n        var mappedData = this.getTaskDataByCoreData(data);\r\n        this._actionsManager.raiseUpdatedAction(GANTT_TASKS, mappedData, data.id)\r\n    }\r\n    _onParentTasksRecalculated(data) {\r\n        if (!this.isSieving) {\r\n            var setters = GanttHelper.compileSettersByOption(this.option(GANTT_TASKS));\r\n            var treeDataSource = this._customFieldsManager.appendCustomFields(data.map(GanttHelper.prepareSetterMapHandler(setters)));\r\n            setTimeout(() => {\r\n                var _this$_ganttTreeList3;\r\n                return null === (_this$_ganttTreeList3 = this._ganttTreeList) || void 0 === _this$_ganttTreeList3 ? void 0 : _this$_ganttTreeList3.setDataSource(treeDataSource)\r\n            })\r\n        }\r\n        this.isSieving = false\r\n    }\r\n    _sortAndFilter() {\r\n        var columns = this._treeList.getVisibleColumns();\r\n        var sortColumn = columns.filter(c => 0 === c.sortIndex)[0];\r\n        var filterColumn = columns.filter(c => {\r\n            var _c$filterValues;\r\n            return isDefined(c.filterValue) || (null === (_c$filterValues = c.filterValues) || void 0 === _c$filterValues ? void 0 : _c$filterValues.length)\r\n        })[0];\r\n        var sieveColumn = sortColumn || filterColumn;\r\n        var isClearSieving = this.sieveColumn && !sieveColumn;\r\n        if (sieveColumn || isClearSieving) {\r\n            var sievedItems = this._ganttTreeList.getSievedItems();\r\n            var sieveOptions = {\r\n                sievedItems: sievedItems,\r\n                sieveColumn: sieveColumn\r\n            };\r\n            this.isSieving = !isClearSieving;\r\n            this._setGanttViewOption(\"sieve\", isClearSieving ? void 0 : sieveOptions)\r\n        }\r\n        this.sieveColumn = sieveColumn\r\n    }\r\n    _getToolbarItems() {\r\n        var items = this.option(\"toolbar.items\");\r\n        return items ? items : []\r\n    }\r\n    _updateToolbarContent() {\r\n        var items = this._getToolbarItems();\r\n        if (items.length) {\r\n            this._$toolbarWrapper.show()\r\n        } else {\r\n            this._$toolbarWrapper.hide()\r\n        }\r\n        this._toolbar && this._toolbar.createItems(items);\r\n        this._updateBarItemsState()\r\n    }\r\n    _updateContextMenu() {\r\n        var contextMenuOptions = this.option(\"contextMenu\");\r\n        if (contextMenuOptions.enabled && this._contextMenuBar) {\r\n            this._contextMenuBar.createItems(contextMenuOptions.items);\r\n            this._updateBarItemsState()\r\n        }\r\n    }\r\n    _updateBarItemsState() {\r\n        this._ganttView && this._ganttView.updateBarItemsState()\r\n    }\r\n    _showDialog(e) {\r\n        if (!this._dialogInstance) {\r\n            this._dialogInstance = new GanttDialog(this, this._$dialog)\r\n        }\r\n        this._dialogInstance.show(e.name, e.parameters, e.callback, e.afterClosing, this.option(\"editing\"))\r\n    }\r\n    _showPopupMenu(info) {\r\n        if (this.option(\"contextMenu.enabled\")) {\r\n            this._ganttView.getBarManager().updateContextMenu();\r\n            var args = {\r\n                cancel: false,\r\n                event: info.event,\r\n                targetType: info.type,\r\n                targetKey: info.key,\r\n                items: extend(true, [], this._contextMenuBar._items),\r\n                data: \"task\" === info.type ? this.getTaskData(info.key) : this.getDependencyData(info.key)\r\n            };\r\n            this._actionsManager.raiseContextMenuPreparing(args);\r\n            if (!args.cancel) {\r\n                this._contextMenuBar.show(info.position, args.items)\r\n            }\r\n        }\r\n    }\r\n    _hidePopupMenu() {\r\n        this._contextMenuBar.hide()\r\n    }\r\n    _getLoadPanel() {\r\n        if (!this._loadPanel) {\r\n            this._loadPanel = this._createComponent(this._$loadPanel, LoadPanel, {\r\n                position: {\r\n                    of: this.$element()\r\n                }\r\n            })\r\n        }\r\n        return this._loadPanel\r\n    }\r\n    _getTaskKeyGetter() {\r\n        return compileGetter(this.option(\"\".concat(GANTT_TASKS, \".keyExpr\")))\r\n    }\r\n    _findTaskByKey(key) {\r\n        var _this$_tasksOption;\r\n        var tasks = null === (_this$_tasksOption = this._tasksOption) || void 0 === _this$_tasksOption ? void 0 : _this$_tasksOption._getItems();\r\n        var keyGetter = this._getTaskKeyGetter();\r\n        return tasks.find(t => keyGetter(t) === key)\r\n    }\r\n    _setGanttViewOption(optionName, value) {\r\n        this._ganttView && this._ganttView.option(optionName, value)\r\n    }\r\n    _getGanttViewOption(optionName, value) {\r\n        var _this$_ganttView3;\r\n        return null === (_this$_ganttView3 = this._ganttView) || void 0 === _this$_ganttView3 ? void 0 : _this$_ganttView3.option(optionName)\r\n    }\r\n    _getExportHelper() {\r\n        var _this$_exportHelper;\r\n        null !== (_this$_exportHelper = this._exportHelper) && void 0 !== _this$_exportHelper ? _this$_exportHelper : this._exportHelper = new GanttExportHelper(this);\r\n        return this._exportHelper\r\n    }\r\n    _executeCoreCommand(id) {\r\n        this._ganttView.executeCoreCommand(id)\r\n    }\r\n    _expandAll() {\r\n        this._changeExpandAll(true)\r\n    }\r\n    _collapseAll() {\r\n        this._changeExpandAll(false)\r\n    }\r\n    _onTreeListRowExpandChanged(e, expanded) {\r\n        if (!this._lockRowExpandEvent) {\r\n            this._ganttView.changeTaskExpanded(e.key, expanded);\r\n            this._sizeHelper.adjustHeight()\r\n        }\r\n    }\r\n    _changeExpandAll(expanded, level, rowKey) {\r\n        var _promise;\r\n        var allExpandableNodes = [];\r\n        var nodesToExpand = [];\r\n        this._treeList.forEachNode(node => {\r\n            var _node$children;\r\n            if (null !== (_node$children = node.children) && void 0 !== _node$children && _node$children.length) {\r\n                allExpandableNodes.push(node)\r\n            }\r\n        });\r\n        if (rowKey) {\r\n            var node = this._treeList.getNodeByKey(rowKey);\r\n            GanttHelper.getAllParentNodesKeys(node, nodesToExpand)\r\n        }\r\n        var promise;\r\n        this._lockRowExpandEvent = allExpandableNodes.length > 0;\r\n        var state = allExpandableNodes.reduce((previous, node, index) => {\r\n            if (rowKey) {\r\n                expanded = nodesToExpand.includes(node.key)\r\n            } else if (level) {\r\n                expanded = node.level < level\r\n            }\r\n            previous[node.key] = expanded;\r\n            var action = expanded ? this._treeList.expandRow : this._treeList.collapseRow;\r\n            var isLast = index === allExpandableNodes.length - 1;\r\n            if (isLast) {\r\n                promise = action(node.key)\r\n            } else {\r\n                action(node.key)\r\n            }\r\n            return previous\r\n        }, {});\r\n        null === (_promise = promise) || void 0 === _promise ? void 0 : _promise.then(() => {\r\n            this._ganttView._ganttViewCore.applyTasksExpandedState(state);\r\n            this._sizeHelper.adjustHeight();\r\n            delete this._lockRowExpandEvent\r\n        })\r\n    }\r\n    getTaskResources(key) {\r\n        if (!isDefined(key)) {\r\n            return null\r\n        }\r\n        var coreData = this._ganttView._ganttViewCore.getTaskResources(key);\r\n        return coreData.map(r => this._mappingHelper.convertCoreToMappedData(GANTT_RESOURCES, r))\r\n    }\r\n    getVisibleTaskKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleTaskKeys()\r\n    }\r\n    getVisibleDependencyKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleDependencyKeys()\r\n    }\r\n    getVisibleResourceKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleResourceKeys()\r\n    }\r\n    getVisibleResourceAssignmentKeys() {\r\n        return this._ganttView._ganttViewCore.getVisibleResourceAssignmentKeys()\r\n    }\r\n    getTaskData(key) {\r\n        if (!isDefined(key)) {\r\n            return null\r\n        }\r\n        var coreData = this._ganttView._ganttViewCore.getTaskData(key);\r\n        var mappedData = this.getTaskDataByCoreData(coreData);\r\n        return mappedData\r\n    }\r\n    getTaskDataByCoreData(coreData) {\r\n        var mappedData = coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_TASKS, coreData) : null;\r\n        this._customFieldsManager.addCustomFieldsData(coreData.id, mappedData);\r\n        return mappedData\r\n    }\r\n    insertTask(data) {\r\n        this._customFieldsManager.saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, data);\r\n        this._ganttView._ganttViewCore.insertTask(this._mappingHelper.convertMappedToCoreData(GANTT_TASKS, data))\r\n    }\r\n    deleteTask(key) {\r\n        this._ganttView._ganttViewCore.deleteTask(key)\r\n    }\r\n    updateTask(key, data) {\r\n        var coreTaskData = this._mappingHelper.convertMappedToCoreData(GANTT_TASKS, data);\r\n        var isCustomFieldsUpdateOnly = !Object.keys(coreTaskData).length;\r\n        this._customFieldsManager.saveCustomFieldsDataToCache(key, data, true, isCustomFieldsUpdateOnly);\r\n        if (isCustomFieldsUpdateOnly) {\r\n            var customFieldsData = this._customFieldsManager._getCustomFieldsData(data);\r\n            if (Object.keys(customFieldsData).length > 0) {\r\n                this._actionsManager.raiseUpdatingAction(GANTT_TASKS, {\r\n                    cancel: false,\r\n                    key: key,\r\n                    newValues: {}\r\n                })\r\n            }\r\n        } else {\r\n            this._ganttView._ganttViewCore.updateTask(key, coreTaskData)\r\n        }\r\n    }\r\n    getDependencyData(key) {\r\n        if (!isDefined(key)) {\r\n            return null\r\n        }\r\n        var coreData = this._ganttView._ganttViewCore.getDependencyData(key);\r\n        return coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_DEPENDENCIES, coreData) : null\r\n    }\r\n    insertDependency(data) {\r\n        this._ganttView._ganttViewCore.insertDependency(this._mappingHelper.convertMappedToCoreData(GANTT_DEPENDENCIES, data))\r\n    }\r\n    deleteDependency(key) {\r\n        this._ganttView._ganttViewCore.deleteDependency(key)\r\n    }\r\n    getResourceData(key) {\r\n        var coreData = this._ganttView._ganttViewCore.getResourceData(key);\r\n        return coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_RESOURCES, coreData) : null\r\n    }\r\n    deleteResource(key) {\r\n        this._ganttView._ganttViewCore.deleteResource(key)\r\n    }\r\n    insertResource(data, taskKeys) {\r\n        this._ganttView._ganttViewCore.insertResource(this._mappingHelper.convertMappedToCoreData(GANTT_RESOURCES, data), taskKeys)\r\n    }\r\n    getResourceAssignmentData(key) {\r\n        var coreData = this._ganttView._ganttViewCore.getResourceAssignmentData(key);\r\n        return coreData ? this._mappingHelper.convertCoreToMappedData(GANTT_RESOURCE_ASSIGNMENTS, coreData) : null\r\n    }\r\n    assignResourceToTask(resourceKey, taskKey) {\r\n        this._ganttView._ganttViewCore.assignResourceToTask(resourceKey, taskKey)\r\n    }\r\n    unassignResourceFromTask(resourceKey, taskKey) {\r\n        this._ganttView._ganttViewCore.unassignResourceFromTask(resourceKey, taskKey)\r\n    }\r\n    unassignAllResourcesFromTask(taskKey) {\r\n        this._ganttView._ganttViewCore.unassignAllResourcesFromTask(taskKey)\r\n    }\r\n    updateDimensions() {\r\n        this._sizeHelper.onAdjustControl()\r\n    }\r\n    scrollToDate(date) {\r\n        this._ganttView._ganttViewCore.scrollToDate(date)\r\n    }\r\n    showResourceManagerDialog() {\r\n        this._ganttView._ganttViewCore.showResourcesDialog()\r\n    }\r\n    showTaskDetailsDialog(taskKey) {\r\n        this._ganttView._ganttViewCore.showTaskDetailsDialog(taskKey)\r\n    }\r\n    exportToPdf(options) {\r\n        return this._exportToPdf(options)\r\n    }\r\n    _exportToPdf(options) {\r\n        var _fullOptions$pdfDocum, _fullOptions$docCreat, _window$jspdf$jsPDF, _window$jspdf, _fullOptions$format;\r\n        this._exportHelper.reset();\r\n        var fullOptions = extend({}, options);\r\n        if (fullOptions.createDocumentMethod) {\r\n            fullOptions.docCreateMethod = fullOptions.createDocumentMethod\r\n        }\r\n        null !== (_fullOptions$pdfDocum = fullOptions.pdfDocument) && void 0 !== _fullOptions$pdfDocum ? _fullOptions$pdfDocum : fullOptions.pdfDocument = fullOptions.jsPDFDocument;\r\n        null !== (_fullOptions$docCreat = fullOptions.docCreateMethod) && void 0 !== _fullOptions$docCreat ? _fullOptions$docCreat : fullOptions.docCreateMethod = null !== (_window$jspdf$jsPDF = null === (_window$jspdf = window.jspdf) || void 0 === _window$jspdf ? void 0 : _window$jspdf.jsPDF) && void 0 !== _window$jspdf$jsPDF ? _window$jspdf$jsPDF : window.jsPDF;\r\n        null !== (_fullOptions$format = fullOptions.format) && void 0 !== _fullOptions$format ? _fullOptions$format : fullOptions.format = \"a4\";\r\n        return new Promise(resolve => {\r\n            var _this$_ganttView4;\r\n            var doc = null === (_this$_ganttView4 = this._ganttView) || void 0 === _this$_ganttView4 ? void 0 : _this$_ganttView4._ganttViewCore.exportToPdf(fullOptions);\r\n            resolve(doc)\r\n        })\r\n    }\r\n    refresh() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this._refreshGantt();\r\n                resolve()\r\n            } catch (e) {\r\n                reject(e.message)\r\n            }\r\n        })\r\n    }\r\n    expandAll() {\r\n        this._expandAll()\r\n    }\r\n    collapseAll() {\r\n        this._collapseAll()\r\n    }\r\n    expandAllToLevel(level) {\r\n        this._changeExpandAll(false, level)\r\n    }\r\n    expandToTask(key) {\r\n        var _node$parent;\r\n        var node = this._treeList.getNodeByKey(key);\r\n        this._changeExpandAll(false, 0, null === node || void 0 === node ? void 0 : null === (_node$parent = node.parent) || void 0 === _node$parent ? void 0 : _node$parent.key)\r\n    }\r\n    collapseTask(key) {\r\n        this._treeList.collapseRow(key)\r\n    }\r\n    expandTask(key) {\r\n        this._treeList.expandRow(key)\r\n    }\r\n    showResources(value) {\r\n        this.option(\"showResources\", value)\r\n    }\r\n    showDependencies(value) {\r\n        this.option(\"showDependencies\", value)\r\n    }\r\n    zoomIn() {\r\n        this._ganttView._ganttViewCore.zoomIn()\r\n    }\r\n    zoomOut() {\r\n        this._ganttView._ganttViewCore.zoomOut()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), GanttHelper.getDefaultOptions())\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_ganttTreeList4, _this$_sizeHelper, _this$_ganttTreeList5, _this$_actionsManager, _this$_actionsManager2, _this$_actionsManager3, _this$_actionsManager4, _this$_actionsManager5, _this$_actionsManager6, _this$_actionsManager7, _this$_actionsManager8, _this$_actionsManager9, _this$_actionsManager10, _this$_actionsManager11, _this$_actionsManager12, _this$_actionsManager13, _this$_actionsManager14, _this$_actionsManager15, _this$_actionsManager16, _this$_actionsManager17, _this$_actionsManager18, _this$_actionsManager19, _this$_actionsManager20, _this$_actionsManager21, _this$_actionsManager22, _this$_actionsManager23, _this$_actionsManager24, _this$_actionsManager25, _this$_actionsManager26, _this$_actionsManager27, _this$_ganttTreeList6, _this$_ganttTreeList7, _this$_ganttTemplates, _this$_ganttTemplates2, _this$_ganttTemplates3, _this$_ganttTemplates4, _this$_ganttTreeList8, _this$_sizeHelper2, _this$_sizeHelper3, _this$_ganttTreeList9, _this$_ganttTreeList10, _this$_ganttTreeList11;\r\n        switch (args.name) {\r\n            case \"tasks\":\r\n                this._refreshDataSource(GANTT_TASKS);\r\n                break;\r\n            case \"dependencies\":\r\n                this._refreshDataSource(GANTT_DEPENDENCIES);\r\n                break;\r\n            case \"resources\":\r\n                this._refreshDataSource(GANTT_RESOURCES);\r\n                break;\r\n            case \"resourceAssignments\":\r\n                this._refreshDataSource(GANTT_RESOURCE_ASSIGNMENTS);\r\n                break;\r\n            case \"columns\":\r\n                null === (_this$_ganttTreeList4 = this._ganttTreeList) || void 0 === _this$_ganttTreeList4 ? void 0 : _this$_ganttTreeList4.setOption(\"columns\", this._ganttTreeList.getColumns());\r\n                break;\r\n            case \"taskListWidth\":\r\n                null === (_this$_sizeHelper = this._sizeHelper) || void 0 === _this$_sizeHelper ? void 0 : _this$_sizeHelper.setInnerElementsWidth();\r\n                break;\r\n            case \"showResources\":\r\n                this._setGanttViewOption(\"showResources\", args.value);\r\n                break;\r\n            case \"showDependencies\":\r\n                this._setGanttViewOption(\"showDependencies\", args.value);\r\n                break;\r\n            case \"taskTitlePosition\":\r\n                this._setGanttViewOption(\"taskTitlePosition\", args.value);\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._setGanttViewOption(\"firstDayOfWeek\", args.value);\r\n                break;\r\n            case \"startDateRange\":\r\n                this._setGanttViewOption(\"startDateRange\", args.value);\r\n                break;\r\n            case \"endDateRange\":\r\n                this._setGanttViewOption(\"endDateRange\", args.value);\r\n                break;\r\n            case \"selectedRowKey\":\r\n                null === (_this$_ganttTreeList5 = this._ganttTreeList) || void 0 === _this$_ganttTreeList5 ? void 0 : _this$_ganttTreeList5.selectRows(GanttHelper.getArrayFromOneElement(args.value));\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                null === (_this$_actionsManager = this._actionsManager) || void 0 === _this$_actionsManager ? void 0 : _this$_actionsManager.createSelectionChangedAction();\r\n                break;\r\n            case \"onTaskClick\":\r\n                null === (_this$_actionsManager2 = this._actionsManager) || void 0 === _this$_actionsManager2 ? void 0 : _this$_actionsManager2.createTaskClickAction();\r\n                break;\r\n            case \"onTaskDblClick\":\r\n                null === (_this$_actionsManager3 = this._actionsManager) || void 0 === _this$_actionsManager3 ? void 0 : _this$_actionsManager3.createTaskDblClickAction();\r\n                break;\r\n            case \"onTaskInserting\":\r\n                null === (_this$_actionsManager4 = this._actionsManager) || void 0 === _this$_actionsManager4 ? void 0 : _this$_actionsManager4.createTaskInsertingAction();\r\n                break;\r\n            case \"onTaskInserted\":\r\n                null === (_this$_actionsManager5 = this._actionsManager) || void 0 === _this$_actionsManager5 ? void 0 : _this$_actionsManager5.createTaskInsertedAction();\r\n                break;\r\n            case \"onTaskDeleting\":\r\n                null === (_this$_actionsManager6 = this._actionsManager) || void 0 === _this$_actionsManager6 ? void 0 : _this$_actionsManager6.createTaskDeletingAction();\r\n                break;\r\n            case \"onTaskDeleted\":\r\n                null === (_this$_actionsManager7 = this._actionsManager) || void 0 === _this$_actionsManager7 ? void 0 : _this$_actionsManager7.createTaskDeletedAction();\r\n                break;\r\n            case \"onTaskUpdating\":\r\n                null === (_this$_actionsManager8 = this._actionsManager) || void 0 === _this$_actionsManager8 ? void 0 : _this$_actionsManager8.createTaskUpdatingAction();\r\n                break;\r\n            case \"onTaskUpdated\":\r\n                null === (_this$_actionsManager9 = this._actionsManager) || void 0 === _this$_actionsManager9 ? void 0 : _this$_actionsManager9.createTaskUpdatedAction();\r\n                break;\r\n            case \"onTaskMoving\":\r\n                null === (_this$_actionsManager10 = this._actionsManager) || void 0 === _this$_actionsManager10 ? void 0 : _this$_actionsManager10.createTaskMovingAction();\r\n                break;\r\n            case \"onTaskEditDialogShowing\":\r\n                null === (_this$_actionsManager11 = this._actionsManager) || void 0 === _this$_actionsManager11 ? void 0 : _this$_actionsManager11.createTaskEditDialogShowingAction();\r\n                break;\r\n            case \"onResourceManagerDialogShowing\":\r\n                null === (_this$_actionsManager12 = this._actionsManager) || void 0 === _this$_actionsManager12 ? void 0 : _this$_actionsManager12.createResourceManagerDialogShowingAction();\r\n                break;\r\n            case \"onDependencyInserting\":\r\n                null === (_this$_actionsManager13 = this._actionsManager) || void 0 === _this$_actionsManager13 ? void 0 : _this$_actionsManager13.createDependencyInsertingAction();\r\n                break;\r\n            case \"onDependencyInserted\":\r\n                null === (_this$_actionsManager14 = this._actionsManager) || void 0 === _this$_actionsManager14 ? void 0 : _this$_actionsManager14.createDependencyInsertedAction();\r\n                break;\r\n            case \"onDependencyDeleting\":\r\n                null === (_this$_actionsManager15 = this._actionsManager) || void 0 === _this$_actionsManager15 ? void 0 : _this$_actionsManager15.createDependencyDeletingAction();\r\n                break;\r\n            case \"onDependencyDeleted\":\r\n                null === (_this$_actionsManager16 = this._actionsManager) || void 0 === _this$_actionsManager16 ? void 0 : _this$_actionsManager16.createDependencyDeletedAction();\r\n                break;\r\n            case \"onResourceInserting\":\r\n                null === (_this$_actionsManager17 = this._actionsManager) || void 0 === _this$_actionsManager17 ? void 0 : _this$_actionsManager17.createResourceInsertingAction();\r\n                break;\r\n            case \"onResourceInserted\":\r\n                null === (_this$_actionsManager18 = this._actionsManager) || void 0 === _this$_actionsManager18 ? void 0 : _this$_actionsManager18.createResourceInsertedAction();\r\n                break;\r\n            case \"onResourceDeleting\":\r\n                null === (_this$_actionsManager19 = this._actionsManager) || void 0 === _this$_actionsManager19 ? void 0 : _this$_actionsManager19.createResourceDeletingAction();\r\n                break;\r\n            case \"onResourceDeleted\":\r\n                null === (_this$_actionsManager20 = this._actionsManager) || void 0 === _this$_actionsManager20 ? void 0 : _this$_actionsManager20.createResourceDeletedAction();\r\n                break;\r\n            case \"onResourceAssigning\":\r\n                null === (_this$_actionsManager21 = this._actionsManager) || void 0 === _this$_actionsManager21 ? void 0 : _this$_actionsManager21.createResourceAssigningAction();\r\n                break;\r\n            case \"onResourceAssigned\":\r\n                null === (_this$_actionsManager22 = this._actionsManager) || void 0 === _this$_actionsManager22 ? void 0 : _this$_actionsManager22.createResourceAssignedAction();\r\n                break;\r\n            case \"onResourceUnassigning\":\r\n                null === (_this$_actionsManager23 = this._actionsManager) || void 0 === _this$_actionsManager23 ? void 0 : _this$_actionsManager23.createResourceUnassigningAction();\r\n                break;\r\n            case \"onResourceUnassigned\":\r\n                null === (_this$_actionsManager24 = this._actionsManager) || void 0 === _this$_actionsManager24 ? void 0 : _this$_actionsManager24.createResourceUnassignedAction();\r\n                break;\r\n            case \"onCustomCommand\":\r\n                null === (_this$_actionsManager25 = this._actionsManager) || void 0 === _this$_actionsManager25 ? void 0 : _this$_actionsManager25.createCustomCommandAction();\r\n                break;\r\n            case \"onContextMenuPreparing\":\r\n                null === (_this$_actionsManager26 = this._actionsManager) || void 0 === _this$_actionsManager26 ? void 0 : _this$_actionsManager26.createContextMenuPreparingAction();\r\n                break;\r\n            case \"onScaleCellPrepared\":\r\n                null === (_this$_actionsManager27 = this._actionsManager) || void 0 === _this$_actionsManager27 ? void 0 : _this$_actionsManager27.createScaleCellPreparedAction();\r\n                break;\r\n            case \"allowSelection\":\r\n                null === (_this$_ganttTreeList6 = this._ganttTreeList) || void 0 === _this$_ganttTreeList6 ? void 0 : _this$_ganttTreeList6.setOption(\"selection.mode\", GanttHelper.getSelectionMode(args.value));\r\n                this._setGanttViewOption(\"allowSelection\", args.value);\r\n                break;\r\n            case \"showRowLines\":\r\n                null === (_this$_ganttTreeList7 = this._ganttTreeList) || void 0 === _this$_ganttTreeList7 ? void 0 : _this$_ganttTreeList7.setOption(\"showRowLines\", args.value);\r\n                this._setGanttViewOption(\"showRowLines\", args.value);\r\n                break;\r\n            case \"stripLines\":\r\n                this._setGanttViewOption(\"stripLines\", args.value);\r\n                break;\r\n            case \"scaleType\":\r\n                this._setGanttViewOption(\"scaleType\", args.value);\r\n                break;\r\n            case \"scaleTypeRange\":\r\n                this._setGanttViewOption(\"scaleTypeRange\", this.option(args.name));\r\n                break;\r\n            case \"editing\":\r\n                this._setGanttViewOption(\"editing\", this.option(args.name));\r\n                break;\r\n            case \"validation\":\r\n                this._setGanttViewOption(\"validation\", this.option(args.name));\r\n                break;\r\n            case \"toolbar\":\r\n                this._updateToolbarContent();\r\n                break;\r\n            case \"contextMenu\":\r\n                this._updateContextMenu();\r\n                break;\r\n            case \"taskTooltipContentTemplate\":\r\n                this._setGanttViewOption(\"taskTooltipContentTemplate\", null === (_this$_ganttTemplates = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates ? void 0 : _this$_ganttTemplates.getTaskTooltipContentTemplateFunc(args.value));\r\n                break;\r\n            case \"taskProgressTooltipContentTemplate\":\r\n                this._setGanttViewOption(\"taskProgressTooltipContentTemplate\", null === (_this$_ganttTemplates2 = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates2 ? void 0 : _this$_ganttTemplates2.getTaskProgressTooltipContentTemplateFunc(args.value));\r\n                break;\r\n            case \"taskTimeTooltipContentTemplate\":\r\n                this._setGanttViewOption(\"taskTimeTooltipContentTemplate\", null === (_this$_ganttTemplates3 = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates3 ? void 0 : _this$_ganttTemplates3.getTaskTimeTooltipContentTemplateFunc(args.value));\r\n                break;\r\n            case \"taskContentTemplate\":\r\n                this._setGanttViewOption(\"taskContentTemplate\", null === (_this$_ganttTemplates4 = this._ganttTemplatesManager) || void 0 === _this$_ganttTemplates4 ? void 0 : _this$_ganttTemplates4.getTaskContentTemplateFunc(args.value));\r\n                break;\r\n            case \"rootValue\":\r\n                null === (_this$_ganttTreeList8 = this._ganttTreeList) || void 0 === _this$_ganttTreeList8 ? void 0 : _this$_ganttTreeList8.setOption(\"rootValue\", args.value);\r\n                break;\r\n            case \"width\":\r\n                super._optionChanged(args);\r\n                null === (_this$_sizeHelper2 = this._sizeHelper) || void 0 === _this$_sizeHelper2 ? void 0 : _this$_sizeHelper2.updateGanttWidth();\r\n                break;\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                null === (_this$_sizeHelper3 = this._sizeHelper) || void 0 === _this$_sizeHelper3 ? void 0 : _this$_sizeHelper3.setGanttHeight(getHeight(this._$element));\r\n                break;\r\n            case \"sorting\":\r\n                null === (_this$_ganttTreeList9 = this._ganttTreeList) || void 0 === _this$_ganttTreeList9 ? void 0 : _this$_ganttTreeList9.setOption(\"sorting\", this.option(args.name));\r\n                break;\r\n            case \"filterRow\":\r\n                null === (_this$_ganttTreeList10 = this._ganttTreeList) || void 0 === _this$_ganttTreeList10 ? void 0 : _this$_ganttTreeList10.setOption(\"filterRow\", this.option(args.name));\r\n                break;\r\n            case \"headerFilter\":\r\n                null === (_this$_ganttTreeList11 = this._ganttTreeList) || void 0 === _this$_ganttTreeList11 ? void 0 : _this$_ganttTreeList11.setOption(\"headerFilter\", this.option(args.name));\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxGantt\", Gantt);\r\nexport default Gantt;\r\n"]},"metadata":{},"sourceType":"module"}