{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_notificator-view-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NotificationControllerViewModel = void 0;\n\nvar ko = require(\"knockout\");\n\nvar NotificationControllerViewModel = function () {\n  function NotificationControllerViewModel() {\n    var _this = this;\n\n    this._visible = false;\n    this.visible = ko.observable(false);\n    this.type = ko.observable('');\n    this.notifications = ko.observableArray([]);\n    this.suspended = ko.observable(false);\n    this.displayTime = ko.computed(function () {\n      if (_this.type() !== 'success') {\n        return 60 * 1000;\n      }\n\n      return 10 * 1000;\n    });\n\n    this.onInitialized = function (args) {\n      _this._widget = args.component;\n    };\n  }\n\n  NotificationControllerViewModel.prototype.reset = function () {\n    this.visible(false);\n    this._visible = false;\n  };\n\n  NotificationControllerViewModel.prototype.updateNotification = function (type, title, detail) {\n    var _this = this;\n\n    var notification = {\n      title: title,\n      detail: detail || null\n    };\n\n    if (this.visible() && this.type() === type) {\n      this.notifications.push(notification);\n      if (this._widget) this._widget.repaint();\n    } else {\n      var isFirstLoading = !this.visible();\n      this.visible(false);\n      this.notifications.removeAll();\n      this.notifications.push(notification);\n      this.type(type);\n      this._visible = true;\n\n      if (isFirstLoading) {\n        setTimeout(function () {\n          _this.visible(_this._visible);\n        }, 300);\n      } else {\n        this.visible(this._visible);\n      }\n    }\n  };\n\n  return NotificationControllerViewModel;\n}();\n\nexports.NotificationControllerViewModel = NotificationControllerViewModel;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/common/notification-controller/_notificator-view-model.js"],"names":["Object","defineProperty","exports","value","NotificationControllerViewModel","ko","require","_this","_visible","visible","observable","type","notifications","observableArray","suspended","displayTime","computed","onInitialized","args","_widget","component","prototype","reset","updateNotification","title","detail","notification","push","repaint","isFirstLoading","removeAll","setTimeout"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,+BAAR,GAA0C,KAAK,CAA/C;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIF,+BAA+B,GAAI,YAAY;AAC/C,WAASA,+BAAT,GAA2C;AACvC,QAAIG,KAAK,GAAG,IAAZ;;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,OAAL,GAAeJ,EAAE,CAACK,UAAH,CAAc,KAAd,CAAf;AACA,SAAKC,IAAL,GAAYN,EAAE,CAACK,UAAH,CAAc,EAAd,CAAZ;AACA,SAAKE,aAAL,GAAqBP,EAAE,CAACQ,eAAH,CAAmB,EAAnB,CAArB;AACA,SAAKC,SAAL,GAAiBT,EAAE,CAACK,UAAH,CAAc,KAAd,CAAjB;AACA,SAAKK,WAAL,GAAmBV,EAAE,CAACW,QAAH,CAAY,YAAY;AACvC,UAAIT,KAAK,CAACI,IAAN,OAAiB,SAArB,EAAgC;AAC5B,eAAO,KAAK,IAAZ;AACH;;AACD,aAAO,KAAK,IAAZ;AACH,KALkB,CAAnB;;AAMA,SAAKM,aAAL,GAAqB,UAAUC,IAAV,EAAgB;AACjCX,MAAAA,KAAK,CAACY,OAAN,GAAgBD,IAAI,CAACE,SAArB;AACH,KAFD;AAGH;;AACDhB,EAAAA,+BAA+B,CAACiB,SAAhC,CAA0CC,KAA1C,GAAkD,YAAY;AAC1D,SAAKb,OAAL,CAAa,KAAb;AACA,SAAKD,QAAL,GAAgB,KAAhB;AACH,GAHD;;AAIAJ,EAAAA,+BAA+B,CAACiB,SAAhC,CAA0CE,kBAA1C,GAA+D,UAAUZ,IAAV,EAAgBa,KAAhB,EAAuBC,MAAvB,EAA+B;AAC1F,QAAIlB,KAAK,GAAG,IAAZ;;AACA,QAAImB,YAAY,GAAG;AAAEF,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAAlC,KAAnB;;AACA,QAAI,KAAKhB,OAAL,MAAkB,KAAKE,IAAL,OAAgBA,IAAtC,EAA4C;AACxC,WAAKC,aAAL,CAAmBe,IAAnB,CAAwBD,YAAxB;AACA,UAAI,KAAKP,OAAT,EACI,KAAKA,OAAL,CAAaS,OAAb;AACP,KAJD,MAKK;AACD,UAAIC,cAAc,GAAG,CAAC,KAAKpB,OAAL,EAAtB;AACA,WAAKA,OAAL,CAAa,KAAb;AACA,WAAKG,aAAL,CAAmBkB,SAAnB;AACA,WAAKlB,aAAL,CAAmBe,IAAnB,CAAwBD,YAAxB;AACA,WAAKf,IAAL,CAAUA,IAAV;AACA,WAAKH,QAAL,GAAgB,IAAhB;;AACA,UAAIqB,cAAJ,EAAoB;AAChBE,QAAAA,UAAU,CAAC,YAAY;AAAExB,UAAAA,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACC,QAApB;AAAgC,SAA/C,EAAiD,GAAjD,CAAV;AACH,OAFD,MAGK;AACD,aAAKC,OAAL,CAAa,KAAKD,QAAlB;AACH;AACJ;AACJ,GAtBD;;AAuBA,SAAOJ,+BAAP;AACH,CA9CsC,EAAvC;;AA+CAF,OAAO,CAACE,+BAAR,GAA0CA,+BAA1C","sourcesContent":["/**\r\n* DevExpress Dashboard (_notificator-view-model.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotificationControllerViewModel = void 0;\nvar ko = require(\"knockout\");\nvar NotificationControllerViewModel = (function () {\n    function NotificationControllerViewModel() {\n        var _this = this;\n        this._visible = false;\n        this.visible = ko.observable(false);\n        this.type = ko.observable('');\n        this.notifications = ko.observableArray([]);\n        this.suspended = ko.observable(false);\n        this.displayTime = ko.computed(function () {\n            if (_this.type() !== 'success') {\n                return 60 * 1000;\n            }\n            return 10 * 1000;\n        });\n        this.onInitialized = function (args) {\n            _this._widget = args.component;\n        };\n    }\n    NotificationControllerViewModel.prototype.reset = function () {\n        this.visible(false);\n        this._visible = false;\n    };\n    NotificationControllerViewModel.prototype.updateNotification = function (type, title, detail) {\n        var _this = this;\n        var notification = { title: title, detail: detail || null };\n        if (this.visible() && this.type() === type) {\n            this.notifications.push(notification);\n            if (this._widget)\n                this._widget.repaint();\n        }\n        else {\n            var isFirstLoading = !this.visible();\n            this.visible(false);\n            this.notifications.removeAll();\n            this.notifications.push(notification);\n            this.type(type);\n            this._visible = true;\n            if (isFirstLoading) {\n                setTimeout(function () { _this.visible(_this._visible); }, 300);\n            }\n            else {\n                this.visible(this._visible);\n            }\n        }\n    };\n    return NotificationControllerViewModel;\n}());\nexports.NotificationControllerViewModel = NotificationControllerViewModel;\n"]},"metadata":{},"sourceType":"script"}