{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.custom_fields.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { compileGetter } from \"../../core/utils/data\";\nimport { GanttDataCache } from \"./ui.gantt.cache\";\nimport { GanttHelper } from \"./ui.gantt.helper\";\nvar GANTT_TASKS = \"tasks\";\nexport class GanttCustomFieldsManager {\n  constructor(gantt) {\n    this._gantt = gantt;\n    this._mappingHelper = gantt._mappingHelper;\n    this.cache = new GanttDataCache();\n  }\n\n  _getTaskCustomFields() {\n    var columns = this._gantt.option(\"columns\");\n\n    var columnFields = columns && columns.map(c => c.dataField);\n\n    var mappedFields = this._mappingHelper.getTaskMappedFieldNames();\n\n    return columnFields ? columnFields.filter(f => mappedFields.indexOf(f) < 0) : [];\n  }\n\n  _getCustomFieldsData(data) {\n    return this._getTaskCustomFields().reduce((previous, field) => {\n      if (data && void 0 !== data[field]) {\n        previous[field] = data[field];\n      }\n\n      return previous;\n    }, {});\n  }\n\n  addCustomFieldsData(key, data) {\n    if (data) {\n      var modelData = this._gantt._tasksOption && this._gantt._tasksOption._getItems();\n\n      var keyGetter = compileGetter(this._gantt.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\n      var modelItem = modelData && modelData.filter(obj => keyGetter(obj) === key)[0];\n\n      var customFields = this._getTaskCustomFields();\n\n      if (modelItem) {\n        for (var i = 0; i < customFields.length; i++) {\n          var field = customFields[i];\n\n          if (Object.prototype.hasOwnProperty.call(modelItem, field)) {\n            data[field] = modelItem[field];\n          }\n        }\n      }\n    }\n  }\n\n  appendCustomFields(data) {\n    var modelData = this._gantt._tasksOption && this._gantt._tasksOption._getItems();\n\n    var keyGetter = this._gantt._getTaskKeyGetter();\n\n    var invertedData = GanttHelper.getInvertedData(modelData, keyGetter);\n    return data.reduce((previous, item) => {\n      var key = keyGetter(item);\n      var modelItem = invertedData[key];\n\n      if (!modelItem) {\n        previous.push(item);\n      } else {\n        var updatedItem = {};\n\n        for (var field in modelItem) {\n          updatedItem[field] = Object.prototype.hasOwnProperty.call(item, field) ? item[field] : modelItem[field];\n        }\n\n        previous.push(updatedItem);\n      }\n\n      return previous;\n    }, []);\n  }\n\n  addCustomFieldsDataFromCache(key, data) {\n    this.cache.pullDataFromCache(key, data);\n  }\n\n  saveCustomFieldsDataToCache(key, data) {\n    var forceUpdateOnKeyExpire = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n    var isCustomFieldsUpdateOnly = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n\n    var customFieldsData = this._getCustomFieldsData(data);\n\n    if (Object.keys(customFieldsData).length > 0) {\n      this.cache.saveData(key, customFieldsData, forceUpdateOnKeyExpire ? (key, data) => {\n        var dataOption = this._gantt[\"_\".concat(GANTT_TASKS, \"Option\")];\n\n        if (dataOption && data) {\n          dataOption.update(key, data, (data, key) => {\n            var updatedCustomFields = {};\n            this.addCustomFieldsData(key, updatedCustomFields);\n\n            dataOption._reloadDataSource().done(data => {\n              this._gantt._ganttTreeList.updateDataSource(null !== data && void 0 !== data ? data : dataOption._dataSource, false, isCustomFieldsUpdateOnly);\n            });\n\n            var selectedRowKey = this._gantt.option(\"selectedRowKey\");\n\n            this._gantt._ganttView._selectTask(selectedRowKey);\n\n            this._gantt._actionsManager.raiseUpdatedAction(GANTT_TASKS, updatedCustomFields, key);\n          });\n        }\n      } : null);\n    }\n  }\n\n  resetCustomFieldsDataCache(key) {\n    this.cache.resetCache(key);\n  }\n\n}","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/gantt/ui.gantt.custom_fields.js"],"names":["compileGetter","GanttDataCache","GanttHelper","GANTT_TASKS","GanttCustomFieldsManager","constructor","gantt","_gantt","_mappingHelper","cache","_getTaskCustomFields","columns","option","columnFields","map","c","dataField","mappedFields","getTaskMappedFieldNames","filter","f","indexOf","_getCustomFieldsData","data","reduce","previous","field","addCustomFieldsData","key","modelData","_tasksOption","_getItems","keyGetter","concat","modelItem","obj","customFields","i","length","Object","prototype","hasOwnProperty","call","appendCustomFields","_getTaskKeyGetter","invertedData","getInvertedData","item","push","updatedItem","addCustomFieldsDataFromCache","pullDataFromCache","saveCustomFieldsDataToCache","forceUpdateOnKeyExpire","arguments","isCustomFieldsUpdateOnly","customFieldsData","keys","saveData","dataOption","update","updatedCustomFields","_reloadDataSource","done","_ganttTreeList","updateDataSource","_dataSource","selectedRowKey","_ganttView","_selectTask","_actionsManager","raiseUpdatedAction","resetCustomFieldsDataCache","resetCache"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.custom_fields.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    GanttDataCache\r\n} from \"./ui.gantt.cache\";\r\nimport {\r\n    GanttHelper\r\n} from \"./ui.gantt.helper\";\r\nvar GANTT_TASKS = \"tasks\";\r\nexport class GanttCustomFieldsManager {\r\n    constructor(gantt) {\r\n        this._gantt = gantt;\r\n        this._mappingHelper = gantt._mappingHelper;\r\n        this.cache = new GanttDataCache\r\n    }\r\n    _getTaskCustomFields() {\r\n        var columns = this._gantt.option(\"columns\");\r\n        var columnFields = columns && columns.map(c => c.dataField);\r\n        var mappedFields = this._mappingHelper.getTaskMappedFieldNames();\r\n        return columnFields ? columnFields.filter(f => mappedFields.indexOf(f) < 0) : []\r\n    }\r\n    _getCustomFieldsData(data) {\r\n        return this._getTaskCustomFields().reduce((previous, field) => {\r\n            if (data && void 0 !== data[field]) {\r\n                previous[field] = data[field]\r\n            }\r\n            return previous\r\n        }, {})\r\n    }\r\n    addCustomFieldsData(key, data) {\r\n        if (data) {\r\n            var modelData = this._gantt._tasksOption && this._gantt._tasksOption._getItems();\r\n            var keyGetter = compileGetter(this._gantt.option(\"\".concat(GANTT_TASKS, \".keyExpr\")));\r\n            var modelItem = modelData && modelData.filter(obj => keyGetter(obj) === key)[0];\r\n            var customFields = this._getTaskCustomFields();\r\n            if (modelItem) {\r\n                for (var i = 0; i < customFields.length; i++) {\r\n                    var field = customFields[i];\r\n                    if (Object.prototype.hasOwnProperty.call(modelItem, field)) {\r\n                        data[field] = modelItem[field]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    appendCustomFields(data) {\r\n        var modelData = this._gantt._tasksOption && this._gantt._tasksOption._getItems();\r\n        var keyGetter = this._gantt._getTaskKeyGetter();\r\n        var invertedData = GanttHelper.getInvertedData(modelData, keyGetter);\r\n        return data.reduce((previous, item) => {\r\n            var key = keyGetter(item);\r\n            var modelItem = invertedData[key];\r\n            if (!modelItem) {\r\n                previous.push(item)\r\n            } else {\r\n                var updatedItem = {};\r\n                for (var field in modelItem) {\r\n                    updatedItem[field] = Object.prototype.hasOwnProperty.call(item, field) ? item[field] : modelItem[field]\r\n                }\r\n                previous.push(updatedItem)\r\n            }\r\n            return previous\r\n        }, [])\r\n    }\r\n    addCustomFieldsDataFromCache(key, data) {\r\n        this.cache.pullDataFromCache(key, data)\r\n    }\r\n    saveCustomFieldsDataToCache(key, data) {\r\n        var forceUpdateOnKeyExpire = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\r\n        var isCustomFieldsUpdateOnly = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\r\n        var customFieldsData = this._getCustomFieldsData(data);\r\n        if (Object.keys(customFieldsData).length > 0) {\r\n            this.cache.saveData(key, customFieldsData, forceUpdateOnKeyExpire ? (key, data) => {\r\n                var dataOption = this._gantt[\"_\".concat(GANTT_TASKS, \"Option\")];\r\n                if (dataOption && data) {\r\n                    dataOption.update(key, data, (data, key) => {\r\n                        var updatedCustomFields = {};\r\n                        this.addCustomFieldsData(key, updatedCustomFields);\r\n                        dataOption._reloadDataSource().done(data => {\r\n                            this._gantt._ganttTreeList.updateDataSource(null !== data && void 0 !== data ? data : dataOption._dataSource, false, isCustomFieldsUpdateOnly)\r\n                        });\r\n                        var selectedRowKey = this._gantt.option(\"selectedRowKey\");\r\n                        this._gantt._ganttView._selectTask(selectedRowKey);\r\n                        this._gantt._actionsManager.raiseUpdatedAction(GANTT_TASKS, updatedCustomFields, key)\r\n                    })\r\n                }\r\n            } : null)\r\n        }\r\n    }\r\n    resetCustomFieldsDataCache(key) {\r\n        this.cache.resetCache(key)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}