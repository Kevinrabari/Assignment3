{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.notification.progress_panel.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { ensureDefined } from \"../../core/utils/common\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport messageLocalization from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport ProgressBar from \"../progress_bar\";\nimport Button from \"../button\";\nimport ScrollView from \"../scroll_view\";\nvar FILE_MANAGER_PROGRESS_PANEL_CLASS = \"dx-filemanager-progress-panel\";\nvar FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-container\");\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title\");\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title-text\");\nvar FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-close-button\");\nvar FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-infos-container\");\nvar FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-separator\");\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info\");\nvar FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-common\");\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info-with-details\");\nvar FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-details\");\nvar FILE_MANAGER_PROGRESS_BOX_CLASS = \"dx-filemanager-progress-box\";\nvar FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-error\");\nvar FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-without-close-button\");\nvar FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-image\");\nvar FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-wrapper\");\nvar FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-common\");\nvar FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-progress-bar\");\nvar FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-close-button\");\nvar DX_CARD_CLASS = \"dx-card\";\n\nclass FileManagerProgressPanel extends Widget {\n  _initMarkup() {\n    super._initMarkup();\n\n    this._initActions();\n\n    this._operationCount = 0;\n    this.$element().addClass(FILE_MANAGER_PROGRESS_PANEL_CLASS);\n    var $scrollView = $(\"<div>\").appendTo(this.$element());\n    var $container = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS).appendTo($scrollView);\n    this._scrollView = this._createComponent($scrollView, ScrollView, {\n      scrollByContent: true,\n      scrollByThumb: true,\n      showScrollbar: \"onScroll\"\n    });\n    var $title = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS).appendTo($container);\n    $(\"<div>\").text(messageLocalization.format(\"dxFileManager-notificationProgressPanelTitle\")).addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS).appendTo($title);\n    var $closeButton = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS).appendTo($title);\n\n    this._createComponent($closeButton, Button, {\n      icon: \"close\",\n      stylingMode: \"text\",\n      onClick: () => this._raisePanelClosed()\n    });\n\n    this._$infosContainer = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS).appendTo($container);\n\n    this._renderEmptyListText();\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      onOperationClosed: null,\n      onOperationCanceled: null,\n      onOperationItemCanceled: null,\n      onPanelClosed: null\n    });\n  }\n\n  _initActions() {\n    this._actions = {\n      onOperationClosed: this._createActionByOption(\"onOperationClosed\"),\n      onOperationCanceled: this._createActionByOption(\"onOperationCanceled\"),\n      onOperationItemCanceled: this._createActionByOption(\"onOperationItemCanceled\"),\n      onPanelClosed: this._createActionByOption(\"onPanelClosed\")\n    };\n  }\n\n  _optionChanged(args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"test\":\n        break;\n\n      case \"onOperationClosed\":\n      case \"onOperationCanceled\":\n      case \"onOperationItemCanceled\":\n        this._actions[name] = this._createActionByOption(name);\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  addOperation(commonText, showCloseButtonAlways, allowProgressAutoUpdate) {\n    if (this._operationCount) {\n      $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS).prependTo(this._$infosContainer);\n    } else {\n      this._$infosContainer.empty();\n    }\n\n    this._operationCount++;\n    var info = {\n      customCloseHandling: showCloseButtonAlways,\n      allowProgressAutoUpdate: ensureDefined(allowProgressAutoUpdate, true)\n    };\n    var $info = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS).prependTo(this._$infosContainer);\n    info.$info = $info;\n    var $common = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS).appendTo($info);\n    info.common = this._createProgressBox($common, {\n      commonText: commonText,\n      showCloseButton: true,\n      showCloseButtonAlways: showCloseButtonAlways,\n      onCloseButtonClick: () => this._closeOperation(info)\n    });\n    return info;\n  }\n\n  addOperationDetails(info, details, showCloseButton) {\n    info.$info.addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS);\n    var $details = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS).appendTo(info.$info);\n    info.details = details.map((itemInfo, index) => {\n      itemInfo.info = info;\n      return this._createDetailsItem($details, itemInfo, index, false, showCloseButton);\n    });\n  }\n\n  _createDetailsItem($container, item, itemIndex, skipProgressBox, showCloseButton) {\n    var $detailsItem = $(\"<div>\").appendTo($container);\n\n    if (-1 !== itemIndex) {\n      $detailsItem.addClass(DX_CARD_CLASS);\n    }\n\n    return this._createProgressBox($detailsItem, {\n      commonText: item.commonText,\n      imageUrl: item.imageUrl,\n      skipProgressBox: skipProgressBox,\n      showCloseButton: showCloseButton,\n      showCloseButtonAlways: showCloseButton,\n      onCloseButtonClick: () => this._cancelOperationItem(item, itemIndex)\n    });\n  }\n\n  completeOperationItem(operationInfo, itemIndex, commonProgress) {\n    if (operationInfo.allowProgressAutoUpdate) {\n      this.updateOperationItemProgress(operationInfo, itemIndex, 100, commonProgress);\n    }\n\n    this._setCloseButtonVisible(operationInfo.details[itemIndex], false);\n  }\n\n  updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress) {\n    operationInfo.common.progressBar.option(\"value\", commonProgress);\n\n    if (operationInfo.details) {\n      var detailsItem = operationInfo.details[itemIndex];\n      detailsItem.progressBar.option(\"value\", itemProgress);\n    }\n  }\n\n  completeOperation(info, commonText, isError, statusText) {\n    info.completed = true;\n    info.common.$commonText.text(commonText);\n\n    if (isError) {\n      this._removeProgressBar(info.common);\n    } else if (info.allowProgressAutoUpdate) {\n      info.common.progressBar.option(\"value\", 100);\n    }\n\n    if (statusText) {\n      this._setProgressBarText(info.common, statusText);\n    }\n\n    this._setCloseButtonVisible(info.common, true);\n  }\n\n  completeSingleOperationWithError(info, errorText) {\n    var _info$details;\n\n    var detailsItem = null === (_info$details = info.details) || void 0 === _info$details ? void 0 : _info$details[0];\n    info.completed = true;\n\n    this._renderOperationError(detailsItem || info.common, errorText);\n\n    this._setCloseButtonVisible(info.common, true);\n\n    if (detailsItem) {\n      this._setCloseButtonVisible(detailsItem, false);\n    }\n  }\n\n  addOperationDetailsError(info, index, errorText) {\n    var detailsItem = info.details[index];\n\n    this._renderOperationError(detailsItem, errorText);\n\n    this._setCloseButtonVisible(detailsItem, false);\n  }\n\n  _renderError($container, $target, errorText) {\n    $(\"<div>\").text(errorText).addClass(FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS).appendTo($container);\n  }\n\n  _renderEmptyListText() {\n    this._$infosContainer.text(messageLocalization.format(\"dxFileManager-notificationProgressPanelEmptyListText\"));\n  }\n\n  _renderOperationError(info, errorText) {\n    this._removeProgressBar(info);\n\n    this._renderError(info.$wrapper, info.$commonText, errorText);\n  }\n\n  _removeProgressBar(progressBox) {\n    if (progressBox.progressBar) {\n      progressBox.progressBar.dispose();\n      progressBox.progressBar.$element().remove();\n      progressBox.progressBar = null;\n    }\n  }\n\n  _createProgressBox($container, options) {\n    $container.addClass(FILE_MANAGER_PROGRESS_BOX_CLASS);\n\n    if (!options.showCloseButtonAlways) {\n      $container.addClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS);\n    }\n\n    if (options.imageUrl) {\n      getImageContainer(options.imageUrl).addClass(FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS).appendTo($container);\n    }\n\n    var $wrapper = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS).appendTo($container);\n    var $commonText = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS).text(options.commonText).appendTo($wrapper);\n    var progressBar = null;\n\n    if (!options.skipProgressBox) {\n      var $progressBar = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS).appendTo($wrapper);\n      progressBar = this._createComponent($progressBar, ProgressBar, {\n        min: 0,\n        max: 100,\n        width: \"100%\",\n        validationMessageMode: \"always\",\n        statusFormat: (ratio, value) => this._getStatusString(ratio, value)\n      });\n    }\n\n    var closeButton = null;\n\n    if (options.showCloseButton) {\n      var $button = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS).appendTo($container);\n      closeButton = this._createComponent($button, Button, {\n        icon: \"dx-filemanager-i dx-filemanager-i-cancel\",\n        stylingMode: \"text\",\n        visible: options.showCloseButtonAlways,\n        onClick: options.onCloseButtonClick\n      });\n    }\n\n    return {\n      $commonText: $commonText,\n      progressBar: progressBar,\n      $element: $container,\n      $wrapper: $wrapper,\n      closeButton: closeButton\n    };\n  }\n\n  _setCloseButtonVisible(progressBox, visible) {\n    if (progressBox.closeButton) {\n      progressBox.$element.toggleClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS, !visible);\n      progressBox.closeButton.option(\"visible\", visible);\n    }\n  }\n\n  _setProgressBarText(progressBox, text) {\n    progressBox.progressBar.option(\"statusFormat\", () => text);\n  }\n\n  _closeOperation(info) {\n    if (info.customCloseHandling && !info.completed) {\n      this._raiseOperationCanceled(info);\n\n      this._setCloseButtonVisible(info.common, false);\n\n      info.details.forEach(item => this._displayClosedOperationItem(item));\n    } else {\n      this._raiseOperationClosed(info);\n\n      info.$info.next(\".\".concat(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS)).remove();\n      info.$info.remove();\n      this._operationCount--;\n\n      if (!this._operationCount) {\n        this._renderEmptyListText();\n      }\n    }\n  }\n\n  _cancelOperationItem(item, itemIndex) {\n    this._raiseOperationItemCanceled(item, itemIndex);\n\n    var itemInfo = item.info.details[itemIndex];\n\n    this._displayClosedOperationItem(itemInfo);\n  }\n\n  _displayClosedOperationItem(itemInfo) {\n    this._setProgressBarText(itemInfo, messageLocalization.format(\"dxFileManager-notificationProgressPanelOperationCanceled\"));\n\n    this._setCloseButtonVisible(itemInfo, false);\n  }\n\n  _getStatusString(ratio, value) {\n    return 1 === ratio ? messageLocalization.format(\"Done\") : Math.round(100 * ratio) + \"%\";\n  }\n\n  _raiseOperationClosed(info) {\n    this._actions.onOperationClosed({\n      info: info\n    });\n  }\n\n  _raiseOperationCanceled(info) {\n    this._actions.onOperationCanceled({\n      info: info\n    });\n  }\n\n  _raiseOperationItemCanceled(item, itemIndex) {\n    this._actions.onOperationItemCanceled({\n      item: item,\n      itemIndex: itemIndex\n    });\n  }\n\n  _raisePanelClosed() {\n    this._actions.onPanelClosed();\n  }\n\n}\n\nexport default FileManagerProgressPanel;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.notification.progress_panel.js"],"names":["$","extend","ensureDefined","getImageContainer","messageLocalization","Widget","ProgressBar","Button","ScrollView","FILE_MANAGER_PROGRESS_PANEL_CLASS","FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS","concat","FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS","FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS","FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS","FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS","FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS","FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS","FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS","FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS","FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS","FILE_MANAGER_PROGRESS_BOX_CLASS","FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS","FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS","FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS","FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS","FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS","FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS","FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS","DX_CARD_CLASS","FileManagerProgressPanel","_initMarkup","_initActions","_operationCount","$element","addClass","$scrollView","appendTo","$container","_scrollView","_createComponent","scrollByContent","scrollByThumb","showScrollbar","$title","text","format","$closeButton","icon","stylingMode","onClick","_raisePanelClosed","_$infosContainer","_renderEmptyListText","_getDefaultOptions","onOperationClosed","onOperationCanceled","onOperationItemCanceled","onPanelClosed","_actions","_createActionByOption","_optionChanged","args","name","addOperation","commonText","showCloseButtonAlways","allowProgressAutoUpdate","prependTo","empty","info","customCloseHandling","$info","$common","common","_createProgressBox","showCloseButton","onCloseButtonClick","_closeOperation","addOperationDetails","details","$details","map","itemInfo","index","_createDetailsItem","item","itemIndex","skipProgressBox","$detailsItem","imageUrl","_cancelOperationItem","completeOperationItem","operationInfo","commonProgress","updateOperationItemProgress","_setCloseButtonVisible","itemProgress","progressBar","option","detailsItem","completeOperation","isError","statusText","completed","$commonText","_removeProgressBar","_setProgressBarText","completeSingleOperationWithError","errorText","_info$details","_renderOperationError","addOperationDetailsError","_renderError","$target","$wrapper","progressBox","dispose","remove","options","$progressBar","min","max","width","validationMessageMode","statusFormat","ratio","value","_getStatusString","closeButton","$button","visible","toggleClass","_raiseOperationCanceled","forEach","_displayClosedOperationItem","_raiseOperationClosed","next","_raiseOperationItemCanceled","Math","round"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.notification.progress_panel.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    ensureDefined\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport ProgressBar from \"../progress_bar\";\r\nimport Button from \"../button\";\r\nimport ScrollView from \"../scroll_view\";\r\nvar FILE_MANAGER_PROGRESS_PANEL_CLASS = \"dx-filemanager-progress-panel\";\r\nvar FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-container\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-title-text\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-close-button\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-infos-container\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-separator\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-common\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-info-with-details\");\r\nvar FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_PANEL_CLASS, \"-details\");\r\nvar FILE_MANAGER_PROGRESS_BOX_CLASS = \"dx-filemanager-progress-box\";\r\nvar FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-error\");\r\nvar FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-without-close-button\");\r\nvar FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-image\");\r\nvar FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-wrapper\");\r\nvar FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-common\");\r\nvar FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-progress-bar\");\r\nvar FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS = \"\".concat(FILE_MANAGER_PROGRESS_BOX_CLASS, \"-close-button\");\r\nvar DX_CARD_CLASS = \"dx-card\";\r\nclass FileManagerProgressPanel extends Widget {\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._initActions();\r\n        this._operationCount = 0;\r\n        this.$element().addClass(FILE_MANAGER_PROGRESS_PANEL_CLASS);\r\n        var $scrollView = $(\"<div>\").appendTo(this.$element());\r\n        var $container = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CONTAINER_CLASS).appendTo($scrollView);\r\n        this._scrollView = this._createComponent($scrollView, ScrollView, {\r\n            scrollByContent: true,\r\n            scrollByThumb: true,\r\n            showScrollbar: \"onScroll\"\r\n        });\r\n        var $title = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_CLASS).appendTo($container);\r\n        $(\"<div>\").text(messageLocalization.format(\"dxFileManager-notificationProgressPanelTitle\")).addClass(FILE_MANAGER_PROGRESS_PANEL_TITLE_TEXT_CLASS).appendTo($title);\r\n        var $closeButton = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_CLOSE_BUTTON_CLASS).appendTo($title);\r\n        this._createComponent($closeButton, Button, {\r\n            icon: \"close\",\r\n            stylingMode: \"text\",\r\n            onClick: () => this._raisePanelClosed()\r\n        });\r\n        this._$infosContainer = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFOS_CONTAINER_CLASS).appendTo($container);\r\n        this._renderEmptyListText()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            onOperationClosed: null,\r\n            onOperationCanceled: null,\r\n            onOperationItemCanceled: null,\r\n            onPanelClosed: null\r\n        })\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onOperationClosed: this._createActionByOption(\"onOperationClosed\"),\r\n            onOperationCanceled: this._createActionByOption(\"onOperationCanceled\"),\r\n            onOperationItemCanceled: this._createActionByOption(\"onOperationItemCanceled\"),\r\n            onPanelClosed: this._createActionByOption(\"onPanelClosed\")\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"test\":\r\n                break;\r\n            case \"onOperationClosed\":\r\n            case \"onOperationCanceled\":\r\n            case \"onOperationItemCanceled\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    addOperation(commonText, showCloseButtonAlways, allowProgressAutoUpdate) {\r\n        if (this._operationCount) {\r\n            $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS).prependTo(this._$infosContainer)\r\n        } else {\r\n            this._$infosContainer.empty()\r\n        }\r\n        this._operationCount++;\r\n        var info = {\r\n            customCloseHandling: showCloseButtonAlways,\r\n            allowProgressAutoUpdate: ensureDefined(allowProgressAutoUpdate, true)\r\n        };\r\n        var $info = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_CLASS).prependTo(this._$infosContainer);\r\n        info.$info = $info;\r\n        var $common = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_COMMON_CLASS).appendTo($info);\r\n        info.common = this._createProgressBox($common, {\r\n            commonText: commonText,\r\n            showCloseButton: true,\r\n            showCloseButtonAlways: showCloseButtonAlways,\r\n            onCloseButtonClick: () => this._closeOperation(info)\r\n        });\r\n        return info\r\n    }\r\n    addOperationDetails(info, details, showCloseButton) {\r\n        info.$info.addClass(FILE_MANAGER_PROGRESS_PANEL_INFO_WITH_DETAILS_CLASS);\r\n        var $details = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_PANEL_DETAILS_CLASS).appendTo(info.$info);\r\n        info.details = details.map((itemInfo, index) => {\r\n            itemInfo.info = info;\r\n            return this._createDetailsItem($details, itemInfo, index, false, showCloseButton)\r\n        })\r\n    }\r\n    _createDetailsItem($container, item, itemIndex, skipProgressBox, showCloseButton) {\r\n        var $detailsItem = $(\"<div>\").appendTo($container);\r\n        if (-1 !== itemIndex) {\r\n            $detailsItem.addClass(DX_CARD_CLASS)\r\n        }\r\n        return this._createProgressBox($detailsItem, {\r\n            commonText: item.commonText,\r\n            imageUrl: item.imageUrl,\r\n            skipProgressBox: skipProgressBox,\r\n            showCloseButton: showCloseButton,\r\n            showCloseButtonAlways: showCloseButton,\r\n            onCloseButtonClick: () => this._cancelOperationItem(item, itemIndex)\r\n        })\r\n    }\r\n    completeOperationItem(operationInfo, itemIndex, commonProgress) {\r\n        if (operationInfo.allowProgressAutoUpdate) {\r\n            this.updateOperationItemProgress(operationInfo, itemIndex, 100, commonProgress)\r\n        }\r\n        this._setCloseButtonVisible(operationInfo.details[itemIndex], false)\r\n    }\r\n    updateOperationItemProgress(operationInfo, itemIndex, itemProgress, commonProgress) {\r\n        operationInfo.common.progressBar.option(\"value\", commonProgress);\r\n        if (operationInfo.details) {\r\n            var detailsItem = operationInfo.details[itemIndex];\r\n            detailsItem.progressBar.option(\"value\", itemProgress)\r\n        }\r\n    }\r\n    completeOperation(info, commonText, isError, statusText) {\r\n        info.completed = true;\r\n        info.common.$commonText.text(commonText);\r\n        if (isError) {\r\n            this._removeProgressBar(info.common)\r\n        } else if (info.allowProgressAutoUpdate) {\r\n            info.common.progressBar.option(\"value\", 100)\r\n        }\r\n        if (statusText) {\r\n            this._setProgressBarText(info.common, statusText)\r\n        }\r\n        this._setCloseButtonVisible(info.common, true)\r\n    }\r\n    completeSingleOperationWithError(info, errorText) {\r\n        var _info$details;\r\n        var detailsItem = null === (_info$details = info.details) || void 0 === _info$details ? void 0 : _info$details[0];\r\n        info.completed = true;\r\n        this._renderOperationError(detailsItem || info.common, errorText);\r\n        this._setCloseButtonVisible(info.common, true);\r\n        if (detailsItem) {\r\n            this._setCloseButtonVisible(detailsItem, false)\r\n        }\r\n    }\r\n    addOperationDetailsError(info, index, errorText) {\r\n        var detailsItem = info.details[index];\r\n        this._renderOperationError(detailsItem, errorText);\r\n        this._setCloseButtonVisible(detailsItem, false)\r\n    }\r\n    _renderError($container, $target, errorText) {\r\n        $(\"<div>\").text(errorText).addClass(FILE_MANAGER_PROGRESS_BOX_ERROR_CLASS).appendTo($container)\r\n    }\r\n    _renderEmptyListText() {\r\n        this._$infosContainer.text(messageLocalization.format(\"dxFileManager-notificationProgressPanelEmptyListText\"))\r\n    }\r\n    _renderOperationError(info, errorText) {\r\n        this._removeProgressBar(info);\r\n        this._renderError(info.$wrapper, info.$commonText, errorText)\r\n    }\r\n    _removeProgressBar(progressBox) {\r\n        if (progressBox.progressBar) {\r\n            progressBox.progressBar.dispose();\r\n            progressBox.progressBar.$element().remove();\r\n            progressBox.progressBar = null\r\n        }\r\n    }\r\n    _createProgressBox($container, options) {\r\n        $container.addClass(FILE_MANAGER_PROGRESS_BOX_CLASS);\r\n        if (!options.showCloseButtonAlways) {\r\n            $container.addClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS)\r\n        }\r\n        if (options.imageUrl) {\r\n            getImageContainer(options.imageUrl).addClass(FILE_MANAGER_PROGRESS_BOX_IMAGE_CLASS).appendTo($container)\r\n        }\r\n        var $wrapper = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_WRAPPER_CLASS).appendTo($container);\r\n        var $commonText = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_COMMON_CLASS).text(options.commonText).appendTo($wrapper);\r\n        var progressBar = null;\r\n        if (!options.skipProgressBox) {\r\n            var $progressBar = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_PROGRESS_BAR_CLASS).appendTo($wrapper);\r\n            progressBar = this._createComponent($progressBar, ProgressBar, {\r\n                min: 0,\r\n                max: 100,\r\n                width: \"100%\",\r\n                validationMessageMode: \"always\",\r\n                statusFormat: (ratio, value) => this._getStatusString(ratio, value)\r\n            })\r\n        }\r\n        var closeButton = null;\r\n        if (options.showCloseButton) {\r\n            var $button = $(\"<div>\").addClass(FILE_MANAGER_PROGRESS_BOX_CLOSE_BUTTON_CLASS).appendTo($container);\r\n            closeButton = this._createComponent($button, Button, {\r\n                icon: \"dx-filemanager-i dx-filemanager-i-cancel\",\r\n                stylingMode: \"text\",\r\n                visible: options.showCloseButtonAlways,\r\n                onClick: options.onCloseButtonClick\r\n            })\r\n        }\r\n        return {\r\n            $commonText: $commonText,\r\n            progressBar: progressBar,\r\n            $element: $container,\r\n            $wrapper: $wrapper,\r\n            closeButton: closeButton\r\n        }\r\n    }\r\n    _setCloseButtonVisible(progressBox, visible) {\r\n        if (progressBox.closeButton) {\r\n            progressBox.$element.toggleClass(FILE_MANAGER_PROGRESS_BOX_WITHOUT_CLOSE_BUTTON_CLASS, !visible);\r\n            progressBox.closeButton.option(\"visible\", visible)\r\n        }\r\n    }\r\n    _setProgressBarText(progressBox, text) {\r\n        progressBox.progressBar.option(\"statusFormat\", () => text)\r\n    }\r\n    _closeOperation(info) {\r\n        if (info.customCloseHandling && !info.completed) {\r\n            this._raiseOperationCanceled(info);\r\n            this._setCloseButtonVisible(info.common, false);\r\n            info.details.forEach(item => this._displayClosedOperationItem(item))\r\n        } else {\r\n            this._raiseOperationClosed(info);\r\n            info.$info.next(\".\".concat(FILE_MANAGER_PROGRESS_PANEL_SEPARATOR_CLASS)).remove();\r\n            info.$info.remove();\r\n            this._operationCount--;\r\n            if (!this._operationCount) {\r\n                this._renderEmptyListText()\r\n            }\r\n        }\r\n    }\r\n    _cancelOperationItem(item, itemIndex) {\r\n        this._raiseOperationItemCanceled(item, itemIndex);\r\n        var itemInfo = item.info.details[itemIndex];\r\n        this._displayClosedOperationItem(itemInfo)\r\n    }\r\n    _displayClosedOperationItem(itemInfo) {\r\n        this._setProgressBarText(itemInfo, messageLocalization.format(\"dxFileManager-notificationProgressPanelOperationCanceled\"));\r\n        this._setCloseButtonVisible(itemInfo, false)\r\n    }\r\n    _getStatusString(ratio, value) {\r\n        return 1 === ratio ? messageLocalization.format(\"Done\") : Math.round(100 * ratio) + \"%\"\r\n    }\r\n    _raiseOperationClosed(info) {\r\n        this._actions.onOperationClosed({\r\n            info: info\r\n        })\r\n    }\r\n    _raiseOperationCanceled(info) {\r\n        this._actions.onOperationCanceled({\r\n            info: info\r\n        })\r\n    }\r\n    _raiseOperationItemCanceled(item, itemIndex) {\r\n        this._actions.onOperationItemCanceled({\r\n            item: item,\r\n            itemIndex: itemIndex\r\n        })\r\n    }\r\n    _raisePanelClosed() {\r\n        this._actions.onPanelClosed()\r\n    }\r\n}\r\nexport default FileManagerProgressPanel;\r\n"]},"metadata":{},"sourceType":"module"}