{"ast":null,"code":"/**\r\n* DevExpress Dashboard (_tree-element.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.treeViewFilterElement = exports.cssTreeViewClassNames = void 0;\n\nvar tree_list_1 = require(\"devextreme/ui/tree_list\");\n\nvar tree_view_1 = require(\"devextreme/ui/tree_view\");\n\nvar _filter_element_data_controller_1 = require(\"../../../data/data-controllers/_filter-element-data-controller\");\n\nvar _default_1 = require(\"../../../data/localization/_default\");\n\nvar special_values_1 = require(\"../../../data/special-values\");\n\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\n\nvar _localization_ids_1 = require(\"../../../data/_localization-ids\");\n\nvar _localizer_1 = require(\"../../../data/_localizer\");\n\nvar _utils_1 = require(\"../../../data/_utils\");\n\nvar legacy_settings_1 = require(\"../../legacy-settings\");\n\nvar _base_element_1 = require(\"./_base-element\");\n\nexports.cssTreeViewClassNames = {\n  borderVisible: 'dx-treeview-border-visible',\n  topBorder: 'dx-dashboard-top-border',\n  item: 'dx-dashboard-tree-item'\n};\n\nvar treeViewFilterElement = function (_super) {\n  __extends(treeViewFilterElement, _super);\n\n  function treeViewFilterElement() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(treeViewFilterElement.prototype, \"dataController\", {\n    get: function () {\n      return this._dataController;\n    },\n    set: function (dataController) {\n      this._dataController = dataController;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(treeViewFilterElement.prototype, \"filterDataController\", {\n    get: function () {\n      return this._dataController;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  treeViewFilterElement.prototype._setSelectionUnsafe = function (values) {\n    var _this = this;\n\n    _super.prototype._setSelectionUnsafe.call(this, values);\n\n    var selection = this._dataController.selection;\n\n    if (!legacy_settings_1.LegacySettings.useLegacyTreeView && this.widget != null && this.widget.getSelectedRowKeys('leavesOnly').sort().toString() !== selection.sort().toString()) {\n      this._lock();\n\n      this.widget.selectRows(selection).always(function () {\n        return _this._unlock();\n      });\n    }\n  };\n\n  treeViewFilterElement.prototype._generateInnerBorderClassesUnsafe = function (element) {\n    var classes = _super.prototype._generateInnerBorderClassesUnsafe.call(this, element);\n\n    if (!this._isPaneEmpty()) {\n      classes.push(exports.cssTreeViewClassNames.item);\n    }\n\n    if (element) {\n      if (this._isPaneEmpty()) {\n        element.classList.remove(exports.cssTreeViewClassNames.item);\n      } else {\n        element.classList.add(exports.cssTreeViewClassNames.item);\n      }\n    }\n\n    return classes;\n  };\n\n  treeViewFilterElement.prototype._clearSelectionUnsafe = function () {\n    var _this = this;\n\n    if (!!this.options.useNeutralFilterMode) {\n      this._lock();\n\n      this.widget.selectRows([]).always(function () {\n        return _this._unlock();\n      });\n    }\n  };\n\n  treeViewFilterElement.prototype.renderContentUnsafe = function (element, changeExisting, afterRenderCallback) {\n    _super.prototype.renderContentUnsafe.call(this, element, changeExisting, afterRenderCallback);\n\n    var widgetElement = _jquery_helpers_1.$unwrap(this.widget.element());\n\n    if (legacy_settings_1.LegacySettings.useLegacyTreeView && this._isPaneEmpty() && this.visualMode !== 'content') {\n      widgetElement.classList.add(exports.cssTreeViewClassNames.borderVisible);\n    } else {\n      widgetElement.classList.remove(exports.cssTreeViewClassNames.borderVisible);\n    }\n\n    return false;\n  };\n\n  treeViewFilterElement.prototype._getWidgetName = function () {\n    return legacy_settings_1.LegacySettings.useLegacyTreeView ? 'dxTreeView' : 'dxTreeList';\n  };\n\n  treeViewFilterElement.prototype._createWidget = function (div, opts) {\n    return legacy_settings_1.LegacySettings.useLegacyTreeView ? new tree_view_1.default(div, opts) : new tree_list_1.default(div, opts);\n  };\n\n  treeViewFilterElement.prototype._getOptions = function (includeActions) {\n    var _this = this;\n\n    var that = this;\n    return legacy_settings_1.LegacySettings.useLegacyTreeView ? {\n      items: that._dataController.dataSource,\n      width: '100%',\n      height: '100%',\n      keyExpr: 'key',\n      hoverStateEnabled: false,\n      scrollDirection: 'both',\n      showCheckBoxesMode: 'selectAll',\n      rootValue: null,\n      selectAllText: _localizer_1.ALL_ELEMENT.text,\n      selectNodesRecursive: true,\n      onSelectionChanged: includeActions ? function (e) {\n        return that._raiseItemClick(e.component.getNodes());\n      } : undefined,\n      noDataText: _default_1.getLocalizationById('DashboardStringId.FilterElementNoDataToDisplay')\n    } : {\n      dataSource: that._dataController.dataSource,\n      itemsExpr: 'items',\n      dataStructure: 'tree',\n      columns: [{\n        caption: _localizer_1.ALL_ELEMENT.text,\n        dataField: 'text',\n        encodeHtml: that._isEncodeHtml()\n      }],\n      selection: {\n        allowSelectAll: true,\n        mode: 'multiple',\n        recursive: true\n      },\n      scrolling: {\n        mode: 'virtual'\n      },\n      sorting: {\n        mode: 'none'\n      },\n      searchPanel: {\n        placeholder: _localizer_1.localizer.getString(_localization_ids_1.localizationId.SearchNullValuePrompt),\n        visible: this._enableSearch,\n        width: '100%',\n        searchVisibleColumnsOnly: true\n      },\n      autoExpandAll: that.options.ViewModel.AutoExpandNodes,\n      expandNodesOnFiltering: true,\n      showRowLines: false,\n      showBorders: that.hasParentContainer() && this.visualMode !== 'content',\n      width: '100%',\n      height: '100%',\n      keyExpr: _filter_element_data_controller_1.KEY_EXPR,\n      hoverStateEnabled: false,\n      rootValue: null,\n      noDataText: _default_1.getLocalizationById('DashboardStringId.FilterElementNoDataToDisplay'),\n      onContentReady: function (e) {\n        var scrollable = e.component.getScrollable();\n\n        if (scrollable) {\n          scrollable.off('scroll', _this._onScrollChanged);\n          scrollable.on('scroll', _this._onScrollChanged);\n        }\n      },\n      onEditorPrepared: function (e) {\n        _jquery_helpers_1.$unwrap(e.editorElement).classList.remove('dx-treelist-checkbox-size');\n      },\n      onSelectionChanged: includeActions ? function (e) {\n        if (!_this._isLocked()) {\n          if (e.currentSelectedRowKeys.length > 0 && e.currentDeselectedRowKeys.length > 0) throw new Error('TREEVIEW has an incorrect selection');\n\n          _this._raiseItemClick(_this._getSelectedBranches(e.currentSelectedRowKeys.length > 0 ? e.currentSelectedRowKeys : e.currentDeselectedRowKeys, e.currentSelectedRowKeys.length > 0));\n        }\n      } : undefined\n    };\n  };\n\n  treeViewFilterElement.prototype._fillChildren = function (node, branch, isSelected, branches, hash) {\n    var _this = this;\n\n    node.children && node.children.forEach(function (childNode) {\n      var childNodeBranch = branch.slice();\n      childNodeBranch.push(childNode.data.value);\n\n      _this._fillChildren(childNode, childNodeBranch, isSelected, branches, hash);\n    });\n\n    if (!node.children || !node.children.length) {\n      var nullValueItemsCount = this.dataController.multiData ? this.dataController.multiData.getDimensions().length - branch.length : 0;\n\n      for (var i = 0; i < nullValueItemsCount; i++) {\n        branch.push(special_values_1.specialValues.olapNullValueGuid);\n      }\n\n      if (isSelected && !!hash[branch] || !isSelected && !hash[branch]) return true;\n      branches[branch] = branch;\n    }\n  };\n\n  treeViewFilterElement.prototype._getSelectedBranches = function (keys, isSelected) {\n    if (isSelected === void 0) {\n      isSelected = false;\n    }\n\n    var branches = {};\n\n    var hash = _utils_1.wrapHash(this._getSelectedValues());\n\n    for (var i = 0; i < keys.length; i++) {\n      var treeList = this.widget;\n      var node = treeList.getNodeByKey(keys[i]);\n      var branch = [node.data.value];\n      var curNode = node;\n\n      while (curNode.parent && curNode.level > 0) {\n        branch.unshift(curNode.parent.data.value);\n        curNode = curNode.parent;\n      }\n\n      this._fillChildren(node, branch, isSelected, branches, hash);\n    }\n\n    return Object.keys(branches).map(function (key) {\n      return branches[key];\n    });\n  };\n\n  treeViewFilterElement.prototype._onScrollChanged = function (e) {\n    if (e.scrollOffset.top !== 0) {\n      _jquery_helpers_1.$unwrap(e.element).classList.add(exports.cssTreeViewClassNames.topBorder);\n    } else {\n      _jquery_helpers_1.$unwrap(e.element).classList.remove(exports.cssTreeViewClassNames.topBorder);\n    }\n  };\n\n  return treeViewFilterElement;\n}(_base_element_1.filterElementBaseItem);\n\nexports.treeViewFilterElement = treeViewFilterElement;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devexpress-dashboard/viewer-parts/viewer-items/filter-items/_tree-element.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","treeViewFilterElement","cssTreeViewClassNames","tree_list_1","require","tree_view_1","_filter_element_data_controller_1","_default_1","special_values_1","_jquery_helpers_1","_localization_ids_1","_localizer_1","_utils_1","legacy_settings_1","_base_element_1","borderVisible","topBorder","item","_super","apply","arguments","get","_dataController","set","dataController","enumerable","configurable","_setSelectionUnsafe","values","_this","selection","LegacySettings","useLegacyTreeView","widget","getSelectedRowKeys","sort","toString","_lock","selectRows","always","_unlock","_generateInnerBorderClassesUnsafe","element","classes","_isPaneEmpty","push","classList","remove","add","_clearSelectionUnsafe","options","useNeutralFilterMode","renderContentUnsafe","changeExisting","afterRenderCallback","widgetElement","$unwrap","visualMode","_getWidgetName","_createWidget","div","opts","default","_getOptions","includeActions","that","items","dataSource","width","height","keyExpr","hoverStateEnabled","scrollDirection","showCheckBoxesMode","rootValue","selectAllText","ALL_ELEMENT","text","selectNodesRecursive","onSelectionChanged","e","_raiseItemClick","component","getNodes","undefined","noDataText","getLocalizationById","itemsExpr","dataStructure","columns","caption","dataField","encodeHtml","_isEncodeHtml","allowSelectAll","mode","recursive","scrolling","sorting","searchPanel","placeholder","localizer","getString","localizationId","SearchNullValuePrompt","visible","_enableSearch","searchVisibleColumnsOnly","autoExpandAll","ViewModel","AutoExpandNodes","expandNodesOnFiltering","showRowLines","showBorders","hasParentContainer","KEY_EXPR","onContentReady","scrollable","getScrollable","off","_onScrollChanged","on","onEditorPrepared","editorElement","_isLocked","currentSelectedRowKeys","length","currentDeselectedRowKeys","Error","_getSelectedBranches","_fillChildren","node","branch","isSelected","branches","hash","children","forEach","childNode","childNodeBranch","slice","data","nullValueItemsCount","multiData","getDimensions","i","specialValues","olapNullValueGuid","keys","wrapHash","_getSelectedValues","treeList","getNodeByKey","curNode","parent","level","unshift","map","key","scrollOffset","top","filterElementBaseItem"],"mappings":"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","sourcesContent":["/**\r\n* DevExpress Dashboard (_tree-element.js)\r\n* Version:  22.1.3\r\n* Build date: Jun 13, 2022\r\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\r\n*/\r\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treeViewFilterElement = exports.cssTreeViewClassNames = void 0;\nvar tree_list_1 = require(\"devextreme/ui/tree_list\");\nvar tree_view_1 = require(\"devextreme/ui/tree_view\");\nvar _filter_element_data_controller_1 = require(\"../../../data/data-controllers/_filter-element-data-controller\");\nvar _default_1 = require(\"../../../data/localization/_default\");\nvar special_values_1 = require(\"../../../data/special-values\");\nvar _jquery_helpers_1 = require(\"../../../data/_jquery-helpers\");\nvar _localization_ids_1 = require(\"../../../data/_localization-ids\");\nvar _localizer_1 = require(\"../../../data/_localizer\");\nvar _utils_1 = require(\"../../../data/_utils\");\nvar legacy_settings_1 = require(\"../../legacy-settings\");\nvar _base_element_1 = require(\"./_base-element\");\nexports.cssTreeViewClassNames = {\n    borderVisible: 'dx-treeview-border-visible',\n    topBorder: 'dx-dashboard-top-border',\n    item: 'dx-dashboard-tree-item'\n};\nvar treeViewFilterElement = (function (_super) {\n    __extends(treeViewFilterElement, _super);\n    function treeViewFilterElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(treeViewFilterElement.prototype, \"dataController\", {\n        get: function () { return this._dataController; },\n        set: function (dataController) { this._dataController = dataController; },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(treeViewFilterElement.prototype, \"filterDataController\", {\n        get: function () { return this._dataController; },\n        enumerable: false,\n        configurable: true\n    });\n    treeViewFilterElement.prototype._setSelectionUnsafe = function (values) {\n        var _this = this;\n        _super.prototype._setSelectionUnsafe.call(this, values);\n        var selection = this._dataController.selection;\n        if (!legacy_settings_1.LegacySettings.useLegacyTreeView && this.widget != null && this.widget.getSelectedRowKeys('leavesOnly').sort().toString() !== selection.sort().toString()) {\n            this._lock();\n            this.widget.selectRows(selection).always(function () {\n                return _this._unlock();\n            });\n        }\n    };\n    treeViewFilterElement.prototype._generateInnerBorderClassesUnsafe = function (element) {\n        var classes = _super.prototype._generateInnerBorderClassesUnsafe.call(this, element);\n        if (!this._isPaneEmpty()) {\n            classes.push(exports.cssTreeViewClassNames.item);\n        }\n        if (element) {\n            if (this._isPaneEmpty()) {\n                element.classList.remove(exports.cssTreeViewClassNames.item);\n            }\n            else {\n                element.classList.add(exports.cssTreeViewClassNames.item);\n            }\n        }\n        return classes;\n    };\n    treeViewFilterElement.prototype._clearSelectionUnsafe = function () {\n        var _this = this;\n        if (!!this.options.useNeutralFilterMode) {\n            this._lock();\n            this.widget.selectRows([]).always(function () {\n                return _this._unlock();\n            });\n        }\n    };\n    treeViewFilterElement.prototype.renderContentUnsafe = function (element, changeExisting, afterRenderCallback) {\n        _super.prototype.renderContentUnsafe.call(this, element, changeExisting, afterRenderCallback);\n        var widgetElement = _jquery_helpers_1.$unwrap(this.widget.element());\n        if (legacy_settings_1.LegacySettings.useLegacyTreeView && this._isPaneEmpty() && this.visualMode !== 'content') {\n            widgetElement.classList.add(exports.cssTreeViewClassNames.borderVisible);\n        }\n        else {\n            widgetElement.classList.remove(exports.cssTreeViewClassNames.borderVisible);\n        }\n        return false;\n    };\n    treeViewFilterElement.prototype._getWidgetName = function () {\n        return legacy_settings_1.LegacySettings.useLegacyTreeView ? 'dxTreeView' : 'dxTreeList';\n    };\n    treeViewFilterElement.prototype._createWidget = function (div, opts) {\n        return legacy_settings_1.LegacySettings.useLegacyTreeView ? new tree_view_1.default(div, opts) : new tree_list_1.default(div, opts);\n    };\n    treeViewFilterElement.prototype._getOptions = function (includeActions) {\n        var _this = this;\n        var that = this;\n        return legacy_settings_1.LegacySettings.useLegacyTreeView ?\n            {\n                items: that._dataController.dataSource,\n                width: '100%',\n                height: '100%',\n                keyExpr: 'key',\n                hoverStateEnabled: false,\n                scrollDirection: 'both',\n                showCheckBoxesMode: 'selectAll',\n                rootValue: null,\n                selectAllText: _localizer_1.ALL_ELEMENT.text,\n                selectNodesRecursive: true,\n                onSelectionChanged: includeActions ? function (e) { return that._raiseItemClick(e.component.getNodes()); } : undefined,\n                noDataText: _default_1.getLocalizationById('DashboardStringId.FilterElementNoDataToDisplay'),\n            } :\n            {\n                dataSource: that._dataController.dataSource,\n                itemsExpr: 'items',\n                dataStructure: 'tree',\n                columns: [{\n                        caption: _localizer_1.ALL_ELEMENT.text,\n                        dataField: 'text',\n                        encodeHtml: that._isEncodeHtml()\n                    }],\n                selection: {\n                    allowSelectAll: true,\n                    mode: 'multiple',\n                    recursive: true\n                },\n                scrolling: {\n                    mode: 'virtual'\n                },\n                sorting: {\n                    mode: 'none'\n                },\n                searchPanel: {\n                    placeholder: _localizer_1.localizer.getString(_localization_ids_1.localizationId.SearchNullValuePrompt),\n                    visible: this._enableSearch,\n                    width: '100%',\n                    searchVisibleColumnsOnly: true\n                },\n                autoExpandAll: that.options.ViewModel.AutoExpandNodes,\n                expandNodesOnFiltering: true,\n                showRowLines: false,\n                showBorders: that.hasParentContainer() && this.visualMode !== 'content',\n                width: '100%',\n                height: '100%',\n                keyExpr: _filter_element_data_controller_1.KEY_EXPR,\n                hoverStateEnabled: false,\n                rootValue: null,\n                noDataText: _default_1.getLocalizationById('DashboardStringId.FilterElementNoDataToDisplay'),\n                onContentReady: function (e) {\n                    var scrollable = e.component.getScrollable();\n                    if (scrollable) {\n                        scrollable.off('scroll', _this._onScrollChanged);\n                        scrollable.on('scroll', _this._onScrollChanged);\n                    }\n                },\n                onEditorPrepared: function (e) {\n                    _jquery_helpers_1.$unwrap(e.editorElement).classList.remove('dx-treelist-checkbox-size');\n                },\n                onSelectionChanged: includeActions ? function (e) {\n                    if (!_this._isLocked()) {\n                        if (e.currentSelectedRowKeys.length > 0 && e.currentDeselectedRowKeys.length > 0)\n                            throw new Error('TREEVIEW has an incorrect selection');\n                        _this._raiseItemClick(_this._getSelectedBranches(e.currentSelectedRowKeys.length > 0 ? e.currentSelectedRowKeys : e.currentDeselectedRowKeys, e.currentSelectedRowKeys.length > 0));\n                    }\n                } : undefined\n            };\n    };\n    treeViewFilterElement.prototype._fillChildren = function (node, branch, isSelected, branches, hash) {\n        var _this = this;\n        node.children && node.children.forEach(function (childNode) {\n            var childNodeBranch = branch.slice();\n            childNodeBranch.push(childNode.data.value);\n            _this._fillChildren(childNode, childNodeBranch, isSelected, branches, hash);\n        });\n        if (!node.children || !node.children.length) {\n            var nullValueItemsCount = this.dataController.multiData ? this.dataController.multiData.getDimensions().length - branch.length : 0;\n            for (var i = 0; i < nullValueItemsCount; i++) {\n                branch.push(special_values_1.specialValues.olapNullValueGuid);\n            }\n            if ((isSelected && !!hash[branch]) || (!isSelected && !hash[branch]))\n                return true;\n            branches[branch] = branch;\n        }\n    };\n    treeViewFilterElement.prototype._getSelectedBranches = function (keys, isSelected) {\n        if (isSelected === void 0) { isSelected = false; }\n        var branches = {};\n        var hash = _utils_1.wrapHash(this._getSelectedValues());\n        for (var i = 0; i < keys.length; i++) {\n            var treeList = this.widget;\n            var node = treeList.getNodeByKey(keys[i]);\n            var branch = [node.data.value];\n            var curNode = node;\n            while (curNode.parent && curNode.level > 0) {\n                branch.unshift(curNode.parent.data.value);\n                curNode = curNode.parent;\n            }\n            this._fillChildren(node, branch, isSelected, branches, hash);\n        }\n        return Object.keys(branches).map(function (key) { return branches[key]; });\n    };\n    treeViewFilterElement.prototype._onScrollChanged = function (e) {\n        if (e.scrollOffset.top !== 0) {\n            _jquery_helpers_1.$unwrap(e.element).classList.add(exports.cssTreeViewClassNames.topBorder);\n        }\n        else {\n            _jquery_helpers_1.$unwrap(e.element).classList.remove(exports.cssTreeViewClassNames.topBorder);\n        }\n    };\n    return treeViewFilterElement;\n}(_base_element_1.filterElementBaseItem));\nexports.treeViewFilterElement = treeViewFilterElement;\n"]},"metadata":{},"sourceType":"script"}