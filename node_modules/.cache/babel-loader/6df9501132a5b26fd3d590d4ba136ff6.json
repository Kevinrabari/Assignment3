{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\binding\\eventGenerator.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventGenerator = void 0;\n\nvar localization = require(\"devextreme/localization\");\n\nvar localization_1 = require(\"../../property-grid/localization/localization\");\n\nvar EventGenerator = function () {\n  function EventGenerator() {}\n\n  EventGenerator.generateQueryBuilderEvents = function (fireEvent) {\n    function customizeActions(actions) {\n      fireEvent('CustomizeMenuActions', {\n        Actions: actions,\n        GetById: function (actionId) {\n          return actionId ? actions.filter(function (item) {\n            return actionId === item.id;\n          })[0] : null;\n        }\n      });\n    }\n\n    function customizeLocalization(localizationCallbacks) {\n      fireEvent('CustomizeLocalization', {\n        LoadMessages: function (messages) {\n          if (!messages) return;\n\n          if (typeof messages.then === 'function') {\n            localizationCallbacks.push(messages);\n          } else {\n            localization_1.loadMessages(messages);\n          }\n        },\n        WidgetLocalization: localization\n      });\n    }\n\n    function onServerError(args) {\n      fireEvent('OnServerError', {\n        Error: args\n      });\n    }\n\n    function beforeRender(designerModel) {\n      fireEvent('BeforeRender', designerModel);\n    }\n\n    function saveQueryRequested(queryModel) {\n      fireEvent('SaveQueryRequested', queryModel);\n    }\n\n    return {\n      beforeRender: beforeRender,\n      saveQueryRequested: saveQueryRequested,\n      customizeActions: customizeActions,\n      customizeLocalization: customizeLocalization,\n      onServerError: onServerError\n    };\n  };\n\n  return EventGenerator;\n}();\n\nexports.EventGenerator = EventGenerator;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/binding/eventGenerator.js"],"names":["Object","defineProperty","exports","value","EventGenerator","localization","require","localization_1","generateQueryBuilderEvents","fireEvent","customizeActions","actions","Actions","GetById","actionId","filter","item","id","customizeLocalization","localizationCallbacks","LoadMessages","messages","then","push","loadMessages","WidgetLocalization","onServerError","args","Error","beforeRender","designerModel","saveQueryRequested","queryModel"],"mappings":"AAAA;;;;;;;AAOA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,+CAAD,CAA5B;;AACA,IAAIF,cAAc,GAAI,YAAY;AAC9B,WAASA,cAAT,GAA0B,CACzB;;AACDA,EAAAA,cAAc,CAACI,0BAAf,GAA4C,UAAUC,SAAV,EAAqB;AAC7D,aAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/BF,MAAAA,SAAS,CAAC,sBAAD,EAAyB;AAC9BG,QAAAA,OAAO,EAAED,OADqB;AAE9BE,QAAAA,OAAO,EAAE,UAAUC,QAAV,EAAoB;AACzB,iBAAOA,QAAQ,GAAGH,OAAO,CAACI,MAAR,CAAe,UAAUC,IAAV,EAAgB;AAAE,mBAAOF,QAAQ,KAAKE,IAAI,CAACC,EAAzB;AAA8B,WAA/D,EAAiE,CAAjE,CAAH,GAAyE,IAAxF;AACH;AAJ6B,OAAzB,CAAT;AAMH;;AACD,aAASC,qBAAT,CAA+BC,qBAA/B,EAAsD;AAClDV,MAAAA,SAAS,CAAC,uBAAD,EAA0B;AAC/BW,QAAAA,YAAY,EAAE,UAAUC,QAAV,EAAoB;AAC9B,cAAI,CAACA,QAAL,EACI;;AACJ,cAAI,OAAOA,QAAQ,CAACC,IAAhB,KAAyB,UAA7B,EAAyC;AACrCH,YAAAA,qBAAqB,CAACI,IAAtB,CAA2BF,QAA3B;AACH,WAFD,MAGK;AACDd,YAAAA,cAAc,CAACiB,YAAf,CAA4BH,QAA5B;AACH;AACJ,SAV8B;AAW/BI,QAAAA,kBAAkB,EAAEpB;AAXW,OAA1B,CAAT;AAaH;;AACD,aAASqB,aAAT,CAAuBC,IAAvB,EAA6B;AACzBlB,MAAAA,SAAS,CAAC,eAAD,EAAkB;AAAEmB,QAAAA,KAAK,EAAED;AAAT,OAAlB,CAAT;AACH;;AACD,aAASE,YAAT,CAAsBC,aAAtB,EAAqC;AACjCrB,MAAAA,SAAS,CAAC,cAAD,EAAiBqB,aAAjB,CAAT;AACH;;AACD,aAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AACpCvB,MAAAA,SAAS,CAAC,oBAAD,EAAuBuB,UAAvB,CAAT;AACH;;AACD,WAAO;AACHH,MAAAA,YAAY,EAAEA,YADX;AAEHE,MAAAA,kBAAkB,EAAEA,kBAFjB;AAGHrB,MAAAA,gBAAgB,EAAEA,gBAHf;AAIHQ,MAAAA,qBAAqB,EAAEA,qBAJpB;AAKHQ,MAAAA,aAAa,EAAEA;AALZ,KAAP;AAOH,GAxCD;;AAyCA,SAAOtB,cAAP;AACH,CA7CqB,EAAtB;;AA8CAF,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\binding\\eventGenerator.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventGenerator = void 0;\nvar localization = require(\"devextreme/localization\");\nvar localization_1 = require(\"../../property-grid/localization/localization\");\nvar EventGenerator = (function () {\n    function EventGenerator() {\n    }\n    EventGenerator.generateQueryBuilderEvents = function (fireEvent) {\n        function customizeActions(actions) {\n            fireEvent('CustomizeMenuActions', {\n                Actions: actions,\n                GetById: function (actionId) {\n                    return actionId ? actions.filter(function (item) { return actionId === item.id; })[0] : null;\n                }\n            });\n        }\n        function customizeLocalization(localizationCallbacks) {\n            fireEvent('CustomizeLocalization', {\n                LoadMessages: function (messages) {\n                    if (!messages)\n                        return;\n                    if (typeof messages.then === 'function') {\n                        localizationCallbacks.push(messages);\n                    }\n                    else {\n                        localization_1.loadMessages(messages);\n                    }\n                },\n                WidgetLocalization: localization\n            });\n        }\n        function onServerError(args) {\n            fireEvent('OnServerError', { Error: args });\n        }\n        function beforeRender(designerModel) {\n            fireEvent('BeforeRender', designerModel);\n        }\n        function saveQueryRequested(queryModel) {\n            fireEvent('SaveQueryRequested', queryModel);\n        }\n        return {\n            beforeRender: beforeRender,\n            saveQueryRequested: saveQueryRequested,\n            customizeActions: customizeActions,\n            customizeLocalization: customizeLocalization,\n            onServerError: onServerError\n        };\n    };\n    return EventGenerator;\n}());\nexports.EventGenerator = EventGenerator;\n"]},"metadata":{},"sourceType":"script"}