{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.folder_chooser.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport messageLocalization from \"../../localization/message\";\nimport { getMapFromObject } from \"./ui.file_manager.common\";\nimport FileManagerDialogBase from \"./ui.file_manager.dialog\";\nimport FileManagerFilesTreeView from \"./ui.file_manager.files_tree_view\";\nvar FILE_MANAGER_DIALOG_FOLDER_CHOOSER = \"dx-filemanager-dialog-folder-chooser\";\nvar FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP = \"dx-filemanager-dialog-folder-chooser-popup\";\n\nclass FileManagerFolderChooserDialog extends FileManagerDialogBase {\n  show() {\n    var _this$_filesTreeView;\n\n    this._resetDialogSelectedDirectory();\n\n    null === (_this$_filesTreeView = this._filesTreeView) || void 0 === _this$_filesTreeView ? void 0 : _this$_filesTreeView.refresh();\n    super.show();\n  }\n\n  switchToCopyDialog(targetItemInfos) {\n    this._targetItemInfos = targetItemInfos;\n\n    this._setTitle(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserCopyTitle\"));\n\n    this._setButtonText(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserCopyButtonText\"));\n  }\n\n  switchToMoveDialog(targetItemInfos) {\n    this._targetItemInfos = targetItemInfos;\n\n    this._setTitle(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserMoveTitle\"));\n\n    this._setButtonText(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserMoveButtonText\"));\n  }\n\n  _getDialogOptions() {\n    return extend(super._getDialogOptions(), {\n      contentCssClass: FILE_MANAGER_DIALOG_FOLDER_CHOOSER,\n      popupCssClass: FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP\n    });\n  }\n\n  _createContentTemplate(element) {\n    super._createContentTemplate(element);\n\n    this._filesTreeView = this._createComponent($(\"<div>\"), FileManagerFilesTreeView, {\n      getDirectories: this.option(\"getDirectories\"),\n      getCurrentDirectory: () => this._getDialogSelectedDirectory(),\n      onDirectoryClick: e => this._onFilesTreeViewDirectoryClick(e),\n      onFilesTreeViewContentReady: () => this._toggleUnavailableLocationsDisabled(true)\n    });\n\n    this._$contentElement.append(this._filesTreeView.$element());\n  }\n\n  _getDialogResult() {\n    var result = this._getDialogSelectedDirectory();\n\n    return result ? {\n      folder: result\n    } : result;\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      getItems: null\n    });\n  }\n\n  _getDialogSelectedDirectory() {\n    return this._selectedDirectoryInfo;\n  }\n\n  _resetDialogSelectedDirectory() {\n    this._selectedDirectoryInfo = null;\n  }\n\n  _onFilesTreeViewDirectoryClick(_ref) {\n    var {\n      itemData: itemData\n    } = _ref;\n    this._selectedDirectoryInfo = itemData;\n\n    this._filesTreeView.updateCurrentDirectory();\n  }\n\n  _onPopupShown() {\n    this._toggleUnavailableLocationsDisabled(true);\n\n    super._onPopupShown();\n  }\n\n  _onPopupHidden() {\n    this._toggleUnavailableLocationsDisabled(false);\n\n    super._onPopupHidden();\n  }\n\n  _toggleUnavailableLocationsDisabled(isDisabled) {\n    if (!this._filesTreeView) {\n      return;\n    }\n\n    var locations = this._getLocationsToProcess(isDisabled);\n\n    this._filesTreeView.toggleDirectoryExpandedStateRecursive(locations.locationsToExpand[0], isDisabled).then(() => this._filesTreeView.toggleDirectoryLineExpandedState(locations.locationsToCollapse, !isDisabled).then(() => locations.locationKeysToDisable.forEach(key => this._filesTreeView.toggleNodeDisabledState(key, isDisabled))));\n  }\n\n  _getLocationsToProcess(isDisabled) {\n    var expandLocations = {};\n    var collapseLocations = {};\n\n    this._targetItemInfos.forEach(itemInfo => {\n      if (itemInfo.parentDirectory) {\n        expandLocations[itemInfo.parentDirectory.getInternalKey()] = itemInfo.parentDirectory;\n      }\n\n      if (itemInfo.fileItem.isDirectory) {\n        collapseLocations[itemInfo.getInternalKey()] = itemInfo;\n      }\n    });\n\n    var expandMap = getMapFromObject(expandLocations);\n    var collapseMap = getMapFromObject(collapseLocations);\n    return {\n      locationsToExpand: isDisabled ? expandMap.values : [],\n      locationsToCollapse: isDisabled ? collapseMap.values : [],\n      locationKeysToDisable: expandMap.keys.concat(...collapseMap.keys)\n    };\n  }\n\n}\n\nexport default FileManagerFolderChooserDialog;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.dialog.folder_chooser.js"],"names":["$","extend","messageLocalization","getMapFromObject","FileManagerDialogBase","FileManagerFilesTreeView","FILE_MANAGER_DIALOG_FOLDER_CHOOSER","FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP","FileManagerFolderChooserDialog","show","_this$_filesTreeView","_resetDialogSelectedDirectory","_filesTreeView","refresh","switchToCopyDialog","targetItemInfos","_targetItemInfos","_setTitle","format","_setButtonText","switchToMoveDialog","_getDialogOptions","contentCssClass","popupCssClass","_createContentTemplate","element","_createComponent","getDirectories","option","getCurrentDirectory","_getDialogSelectedDirectory","onDirectoryClick","e","_onFilesTreeViewDirectoryClick","onFilesTreeViewContentReady","_toggleUnavailableLocationsDisabled","_$contentElement","append","$element","_getDialogResult","result","folder","_getDefaultOptions","getItems","_selectedDirectoryInfo","_ref","itemData","updateCurrentDirectory","_onPopupShown","_onPopupHidden","isDisabled","locations","_getLocationsToProcess","toggleDirectoryExpandedStateRecursive","locationsToExpand","then","toggleDirectoryLineExpandedState","locationsToCollapse","locationKeysToDisable","forEach","key","toggleNodeDisabledState","expandLocations","collapseLocations","itemInfo","parentDirectory","getInternalKey","fileItem","isDirectory","expandMap","collapseMap","values","keys","concat"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.dialog.folder_chooser.js)\r\n * Version: 22.1.3\r\n * Build date: Mon Jun 13 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    getMapFromObject\r\n} from \"./ui.file_manager.common\";\r\nimport FileManagerDialogBase from \"./ui.file_manager.dialog\";\r\nimport FileManagerFilesTreeView from \"./ui.file_manager.files_tree_view\";\r\nvar FILE_MANAGER_DIALOG_FOLDER_CHOOSER = \"dx-filemanager-dialog-folder-chooser\";\r\nvar FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP = \"dx-filemanager-dialog-folder-chooser-popup\";\r\nclass FileManagerFolderChooserDialog extends FileManagerDialogBase {\r\n    show() {\r\n        var _this$_filesTreeView;\r\n        this._resetDialogSelectedDirectory();\r\n        null === (_this$_filesTreeView = this._filesTreeView) || void 0 === _this$_filesTreeView ? void 0 : _this$_filesTreeView.refresh();\r\n        super.show()\r\n    }\r\n    switchToCopyDialog(targetItemInfos) {\r\n        this._targetItemInfos = targetItemInfos;\r\n        this._setTitle(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserCopyTitle\"));\r\n        this._setButtonText(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserCopyButtonText\"))\r\n    }\r\n    switchToMoveDialog(targetItemInfos) {\r\n        this._targetItemInfos = targetItemInfos;\r\n        this._setTitle(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserMoveTitle\"));\r\n        this._setButtonText(messageLocalization.format(\"dxFileManager-dialogDirectoryChooserMoveButtonText\"))\r\n    }\r\n    _getDialogOptions() {\r\n        return extend(super._getDialogOptions(), {\r\n            contentCssClass: FILE_MANAGER_DIALOG_FOLDER_CHOOSER,\r\n            popupCssClass: FILE_MANAGER_DIALOG_FOLDER_CHOOSER_POPUP\r\n        })\r\n    }\r\n    _createContentTemplate(element) {\r\n        super._createContentTemplate(element);\r\n        this._filesTreeView = this._createComponent($(\"<div>\"), FileManagerFilesTreeView, {\r\n            getDirectories: this.option(\"getDirectories\"),\r\n            getCurrentDirectory: () => this._getDialogSelectedDirectory(),\r\n            onDirectoryClick: e => this._onFilesTreeViewDirectoryClick(e),\r\n            onFilesTreeViewContentReady: () => this._toggleUnavailableLocationsDisabled(true)\r\n        });\r\n        this._$contentElement.append(this._filesTreeView.$element())\r\n    }\r\n    _getDialogResult() {\r\n        var result = this._getDialogSelectedDirectory();\r\n        return result ? {\r\n            folder: result\r\n        } : result\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            getItems: null\r\n        })\r\n    }\r\n    _getDialogSelectedDirectory() {\r\n        return this._selectedDirectoryInfo\r\n    }\r\n    _resetDialogSelectedDirectory() {\r\n        this._selectedDirectoryInfo = null\r\n    }\r\n    _onFilesTreeViewDirectoryClick(_ref) {\r\n        var {\r\n            itemData: itemData\r\n        } = _ref;\r\n        this._selectedDirectoryInfo = itemData;\r\n        this._filesTreeView.updateCurrentDirectory()\r\n    }\r\n    _onPopupShown() {\r\n        this._toggleUnavailableLocationsDisabled(true);\r\n        super._onPopupShown()\r\n    }\r\n    _onPopupHidden() {\r\n        this._toggleUnavailableLocationsDisabled(false);\r\n        super._onPopupHidden()\r\n    }\r\n    _toggleUnavailableLocationsDisabled(isDisabled) {\r\n        if (!this._filesTreeView) {\r\n            return\r\n        }\r\n        var locations = this._getLocationsToProcess(isDisabled);\r\n        this._filesTreeView.toggleDirectoryExpandedStateRecursive(locations.locationsToExpand[0], isDisabled).then(() => this._filesTreeView.toggleDirectoryLineExpandedState(locations.locationsToCollapse, !isDisabled).then(() => locations.locationKeysToDisable.forEach(key => this._filesTreeView.toggleNodeDisabledState(key, isDisabled))))\r\n    }\r\n    _getLocationsToProcess(isDisabled) {\r\n        var expandLocations = {};\r\n        var collapseLocations = {};\r\n        this._targetItemInfos.forEach(itemInfo => {\r\n            if (itemInfo.parentDirectory) {\r\n                expandLocations[itemInfo.parentDirectory.getInternalKey()] = itemInfo.parentDirectory\r\n            }\r\n            if (itemInfo.fileItem.isDirectory) {\r\n                collapseLocations[itemInfo.getInternalKey()] = itemInfo\r\n            }\r\n        });\r\n        var expandMap = getMapFromObject(expandLocations);\r\n        var collapseMap = getMapFromObject(collapseLocations);\r\n        return {\r\n            locationsToExpand: isDisabled ? expandMap.values : [],\r\n            locationsToCollapse: isDisabled ? collapseMap.values : [],\r\n            locationKeysToDisable: expandMap.keys.concat(...collapseMap.keys)\r\n        }\r\n    }\r\n}\r\nexport default FileManagerFolderChooserDialog;\r\n"]},"metadata":{},"sourceType":"module"}