{"ast":null,"code":"/**\n* DevExpress Analytics (query-builder\\wizard\\pages\\sqlDataSourceWizard\\configureQueryPage.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._registerConfigureQueryPage = exports.ConfigureQueryPage = void 0;\n\nvar ko = require(\"knockout\");\n\nvar $ = require(\"jquery\");\n\nvar utils_1 = require(\"../../../dataSource/utils\");\n\nvar dataSourceWizardState_1 = require(\"../../dataSourceWizardState\");\n\nvar _storedProceduresQueryControl_1 = require(\"../../internal/_storedProceduresQueryControl\");\n\nvar _selectStatementQueryControl_1 = require(\"../../internal/_selectStatementQueryControl\");\n\nvar _utils_1 = require(\"../../../../property-grid/widgets/internal/_utils\");\n\nvar localization_utils_1 = require(\"../../../../property-grid/localization/localization_utils\");\n\nvar _selectQuerySqlTextProvider_1 = require(\"../../internal/_selectQuerySqlTextProvider\");\n\nvar _requestwrapper_1 = require(\"../../../utils/_requestwrapper\");\n\nvar _queryBuilderPopup_1 = require(\"../../internal/_queryBuilderPopup\");\n\nvar tableQuery_1 = require(\"../../../dataSource/sql/tableQuery\");\n\nvar storedProcQuery_1 = require(\"../../../dataSource/sql/storedProcQuery\");\n\nvar customSqlQuery_1 = require(\"../../../dataSource/sql/customSqlQuery\");\n\nvar _utils_2 = require(\"../../../dataSource/_utils\");\n\nvar pageId_1 = require(\"../../pageId\");\n\nvar _localization_1 = require(\"../../../../property-grid/localization/_localization\");\n\nvar _localizationStringIds_1 = require(\"../../../../property-grid/localization/_localizationStringIds\");\n\nvar wizardPageBase_1 = require(\"../wizardPageBase\");\n\nvar _constants_1 = require(\"../../internal/_constants\");\n\nvar ConfigureQueryPage = function (_super) {\n  __extends(ConfigureQueryPage, _super);\n\n  function ConfigureQueryPage(_options) {\n    var _this = _super.call(this) || this;\n\n    _this._options = _options;\n\n    _this._connection = function () {\n      return _this._dataSource().connection;\n    };\n\n    _this._dataSource = function () {\n      return _this._dataSourceWrapper && _this._dataSourceWrapper.sqlDataSource;\n    };\n\n    _this.queryNameCaption = function () {\n      return localization_utils_1.getLocalization('Query Name', 'AnalyticsCoreStringId.SqlDSWizard_QueryName') + ':';\n    };\n\n    _this.queryControl = ko.observable();\n    _this.runQueryBuilderBtnText = ko.pureComputed(function () {\n      return !_this._selectStatementControl.sqlString() || _this._selectStatementControl.getQuery().type() === utils_1.SqlQueryType.tableQuery ? localization_utils_1.getLocalization('Run Query Builder...', 'DataAccessUIStringId.Button_QueryBuilder') : localization_utils_1.getLocalization('Create New Query...', 'AnalyticsCoreStringId.SqlDSWizard_CreateNewQuery');\n    }).extend({\n      deferred: true\n    });\n\n    _this.placeholder = function () {\n      var queryControl = _this.queryControl();\n\n      var query = queryControl && queryControl.getQuery();\n      var queryName = _this.initialName || query && query.generateName();\n      return queryName ? _utils_1.formatUnicorn(localization_utils_1.getLocalization('Type custom query name (current name: {0})', 'AnalyticsCoreStringId.SqlDSWizard_QueryNamePlaceholder'), queryName) : queryName;\n    };\n\n    _this.queryName = ko.observable('');\n    _this.queryTypeItems = [ConfigureQueryPage.QUERY_TEXT, ConfigureQueryPage.SP_TEXT];\n    _this.selectedQueryType = ko.observable();\n    _this.initialName = '';\n    _this._proceduresList = new _storedProceduresQueryControl_1.StoredProceduresQueryControl();\n\n    _this._disposables.push(_this._selectStatementControl = new _selectStatementQueryControl_1.SelectStatementQueryControl(new _selectQuerySqlTextProvider_1.SelectQuerySqlTextProvider(_requestwrapper_1.wrapGetSelectStatement(_this._options.callbacks.selectStatement), _this._connection), _this._options.disableCustomSql));\n\n    _this._disposables.push(_this.selectedQueryType.subscribe(function (value) {\n      if (value === ConfigureQueryPage.SP_TEXT) {\n        _this[_constants_1.__loadingStateFunctionName] && _this[_constants_1.__loadingStateFunctionName](true);\n\n        _this._dataSource().dbSchemaProvider.getDbStoredProcedures().done(function (procedures) {\n          _this._proceduresList.storedProcedures([]);\n\n          _this._proceduresList.storedProcedures(procedures);\n        }).always(function (x) {\n          return _this[_constants_1.__loadingStateFunctionName] && _this[_constants_1.__loadingStateFunctionName](false);\n        });\n\n        _this.queryControl(_this._proceduresList);\n      } else {\n        _this.queryControl(_this._selectStatementControl);\n      }\n    }));\n\n    _this.selectedQueryType(ConfigureQueryPage.QUERY_TEXT);\n\n    _this.popupQueryBuilder = new _queryBuilderPopup_1.QueryBuilderPopup(function (newQuery, isInProcess) {\n      _this.queryName(newQuery.name() || newQuery.generateName());\n\n      return _this._selectStatementControl.setQuery(newQuery, isInProcess);\n    }, _this._options.rtl, _this._options.callbacks.customizeQBInitData);\n    return _this;\n  }\n\n  ConfigureQueryPage.prototype.canNext = function () {\n    return !this.queryControl().isNextDisabled();\n  };\n\n  ConfigureQueryPage.prototype.canFinish = function () {\n    return !this.queryControl().isFinishDisabled() || !this.queryControl().isNextDisabled();\n  };\n\n  ConfigureQueryPage.prototype.runQueryBuilder = function () {\n    var query = this.queryControl().getQuery();\n\n    if (query && query.type() === utils_1.SqlQueryType.tableQuery) {\n      query.name(this.queryName());\n      this.popupQueryBuilder.show(query, this._dataSource());\n    } else {\n      this.popupQueryBuilder.show(new tableQuery_1.TableQuery({\n        '@Name': this.queryName()\n      }, this._dataSource()), this._dataSource());\n    }\n  };\n\n  ConfigureQueryPage.prototype.localizeQueryType = function (queryTypeString) {\n    return ConfigureQueryPage.QUERY_TEXT === queryTypeString ? localization_utils_1.getLocalization(ConfigureQueryPage.QUERY_TEXT, 'DataAccessUIStringId.WizardPageConfigureQuery_Query') : localization_utils_1.getLocalization(ConfigureQueryPage.SP_TEXT, 'DataAccessUIStringId.WizardPageConfigureQuery_StoredProcedure');\n  };\n\n  ConfigureQueryPage.prototype.initialize = function (state) {\n    this._dataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._options.requestWrapper);\n\n    this._proceduresList.setQuery(new storedProcQuery_1.StoredProcQuery({}, this._dataSource()));\n\n    this._selectStatementControl.setQuery(new customSqlQuery_1.CustomSqlQuery({}, this._dataSource()));\n\n    this.popupQueryBuilder.isVisible(false);\n\n    if (this._dataSourceWrapper.sqlQuery) {\n      this.initialName = this._dataSourceWrapper.sqlQuery.name();\n      this.queryName(this.initialName);\n      this.selectedQueryType(this._dataSourceWrapper.sqlQuery.type() === utils_1.SqlQueryType.storedProcQuery ? ConfigureQueryPage.SP_TEXT : ConfigureQueryPage.QUERY_TEXT);\n      return this.queryControl().setQuery(this._dataSourceWrapper.sqlQuery);\n    } else {\n      this.selectedQueryType(ConfigureQueryPage.QUERY_TEXT);\n    }\n\n    return $.Deferred().resolve().promise();\n  };\n\n  ConfigureQueryPage.prototype.commit = function () {\n    var query = this.queryControl().getQuery();\n\n    if (query) {\n      var newQueryName = this.queryName() || this.initialName;\n      newQueryName && query.name(newQueryName);\n      if (!query.name() || !this._dataSourceWrapper.sqlQuery || this._dataSourceWrapper.sqlQuery.name() !== query.name()) query.name(_utils_2.generateQueryUniqueName(this._dataSource().queries(), query));\n      this._dataSourceWrapper.sqlQuery = query;\n    }\n\n    return $.Deferred().resolve({\n      queryName: this._dataSourceWrapper.sqlQuery.name(),\n      sqlDataSourceJSON: this._dataSourceWrapper.save()\n    }).promise();\n  };\n\n  ConfigureQueryPage.QUERY_TEXT = 'Query';\n  ConfigureQueryPage.SP_TEXT = 'Stored Procedure';\n  return ConfigureQueryPage;\n}(wizardPageBase_1.WizardPageBase);\n\nexports.ConfigureQueryPage = ConfigureQueryPage;\n\nfunction _registerConfigureQueryPage(factory, dataSourceWizardOptions) {\n  factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.ConfigureQueryPage, {\n    create: function () {\n      return new ConfigureQueryPage(dataSourceWizardOptions);\n    },\n    setState: function (data, state) {\n      state.queryName = data.queryName;\n      state.sqlDataSourceJSON = data.sqlDataSourceJSON;\n    },\n    getState: function (state) {\n      return state.sqlDataSourceWizard;\n    },\n    resetState: function (state, defaultState) {\n      state.sqlDataSourceJSON = defaultState.sqlDataSourceJSON;\n      state.queryName = defaultState.queryName;\n    },\n    template: 'dxrd-wizard-create-query-page',\n    description: _localization_1.isCustomizedWithUpdateLocalizationMethod('Create a query or select a stored procedure') || localization_utils_1.getLocalization('Create a query or select a stored procedure.', _localizationStringIds_1.StringId.WizardPageConfigureQuery)\n  });\n}\n\nexports._registerConfigureQueryPage = _registerConfigureQueryPage;","map":{"version":3,"sources":["/Users/krunalpatel/Downloads/React-Firebase-Auth-master 3/node_modules/@devexpress/analytics-core/query-builder/wizard/pages/sqlDataSourceWizard/configureQueryPage.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","_registerConfigureQueryPage","ConfigureQueryPage","ko","require","$","utils_1","dataSourceWizardState_1","_storedProceduresQueryControl_1","_selectStatementQueryControl_1","_utils_1","localization_utils_1","_selectQuerySqlTextProvider_1","_requestwrapper_1","_queryBuilderPopup_1","tableQuery_1","storedProcQuery_1","customSqlQuery_1","_utils_2","pageId_1","_localization_1","_localizationStringIds_1","wizardPageBase_1","_constants_1","_super","_options","_this","_connection","_dataSource","connection","_dataSourceWrapper","sqlDataSource","queryNameCaption","getLocalization","queryControl","observable","runQueryBuilderBtnText","pureComputed","_selectStatementControl","sqlString","getQuery","type","SqlQueryType","tableQuery","extend","deferred","placeholder","query","queryName","initialName","generateName","formatUnicorn","queryTypeItems","QUERY_TEXT","SP_TEXT","selectedQueryType","_proceduresList","StoredProceduresQueryControl","_disposables","push","SelectStatementQueryControl","SelectQuerySqlTextProvider","wrapGetSelectStatement","callbacks","selectStatement","disableCustomSql","subscribe","__loadingStateFunctionName","dbSchemaProvider","getDbStoredProcedures","done","procedures","storedProcedures","always","x","popupQueryBuilder","QueryBuilderPopup","newQuery","isInProcess","name","setQuery","rtl","customizeQBInitData","canNext","isNextDisabled","canFinish","isFinishDisabled","runQueryBuilder","show","TableQuery","localizeQueryType","queryTypeString","initialize","state","_restoreSqlDataSourceFromState","requestWrapper","StoredProcQuery","CustomSqlQuery","isVisible","sqlQuery","storedProcQuery","Deferred","resolve","promise","commit","newQueryName","generateQueryUniqueName","queries","sqlDataSourceJSON","save","WizardPageBase","factory","dataSourceWizardOptions","registerMetadata","SqlDataSourceWizardPageId","setState","data","getState","sqlDataSourceWizard","resetState","defaultState","template","description","isCustomizedWithUpdateLocalizationMethod","StringId","WizardPageConfigureQuery"],"mappings":"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","sourcesContent":["/**\n* DevExpress Analytics (query-builder\\wizard\\pages\\sqlDataSourceWizard\\configureQueryPage.js)\n* Version:  22.1.3\n* Build date: Jun 14, 2022\n* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n* License: https://www.devexpress.com/Support/EULAs/universal.xml\n*/\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._registerConfigureQueryPage = exports.ConfigureQueryPage = void 0;\nvar ko = require(\"knockout\");\nvar $ = require(\"jquery\");\nvar utils_1 = require(\"../../../dataSource/utils\");\nvar dataSourceWizardState_1 = require(\"../../dataSourceWizardState\");\nvar _storedProceduresQueryControl_1 = require(\"../../internal/_storedProceduresQueryControl\");\nvar _selectStatementQueryControl_1 = require(\"../../internal/_selectStatementQueryControl\");\nvar _utils_1 = require(\"../../../../property-grid/widgets/internal/_utils\");\nvar localization_utils_1 = require(\"../../../../property-grid/localization/localization_utils\");\nvar _selectQuerySqlTextProvider_1 = require(\"../../internal/_selectQuerySqlTextProvider\");\nvar _requestwrapper_1 = require(\"../../../utils/_requestwrapper\");\nvar _queryBuilderPopup_1 = require(\"../../internal/_queryBuilderPopup\");\nvar tableQuery_1 = require(\"../../../dataSource/sql/tableQuery\");\nvar storedProcQuery_1 = require(\"../../../dataSource/sql/storedProcQuery\");\nvar customSqlQuery_1 = require(\"../../../dataSource/sql/customSqlQuery\");\nvar _utils_2 = require(\"../../../dataSource/_utils\");\nvar pageId_1 = require(\"../../pageId\");\nvar _localization_1 = require(\"../../../../property-grid/localization/_localization\");\nvar _localizationStringIds_1 = require(\"../../../../property-grid/localization/_localizationStringIds\");\nvar wizardPageBase_1 = require(\"../wizardPageBase\");\nvar _constants_1 = require(\"../../internal/_constants\");\nvar ConfigureQueryPage = (function (_super) {\n    __extends(ConfigureQueryPage, _super);\n    function ConfigureQueryPage(_options) {\n        var _this = _super.call(this) || this;\n        _this._options = _options;\n        _this._connection = function () {\n            return _this._dataSource().connection;\n        };\n        _this._dataSource = function () {\n            return _this._dataSourceWrapper && _this._dataSourceWrapper.sqlDataSource;\n        };\n        _this.queryNameCaption = function () { return localization_utils_1.getLocalization('Query Name', 'AnalyticsCoreStringId.SqlDSWizard_QueryName') + ':'; };\n        _this.queryControl = ko.observable();\n        _this.runQueryBuilderBtnText = ko.pureComputed(function () {\n            return (!_this._selectStatementControl.sqlString() || _this._selectStatementControl.getQuery().type() === utils_1.SqlQueryType.tableQuery) ?\n                localization_utils_1.getLocalization('Run Query Builder...', 'DataAccessUIStringId.Button_QueryBuilder') :\n                localization_utils_1.getLocalization('Create New Query...', 'AnalyticsCoreStringId.SqlDSWizard_CreateNewQuery');\n        }).extend({ deferred: true });\n        _this.placeholder = function () {\n            var queryControl = _this.queryControl();\n            var query = queryControl && queryControl.getQuery();\n            var queryName = _this.initialName || (query && query.generateName());\n            return queryName ? _utils_1.formatUnicorn(localization_utils_1.getLocalization('Type custom query name (current name: {0})', 'AnalyticsCoreStringId.SqlDSWizard_QueryNamePlaceholder'), queryName) : queryName;\n        };\n        _this.queryName = ko.observable('');\n        _this.queryTypeItems = [ConfigureQueryPage.QUERY_TEXT, ConfigureQueryPage.SP_TEXT];\n        _this.selectedQueryType = ko.observable();\n        _this.initialName = '';\n        _this._proceduresList = new _storedProceduresQueryControl_1.StoredProceduresQueryControl();\n        _this._disposables.push(_this._selectStatementControl = new _selectStatementQueryControl_1.SelectStatementQueryControl(new _selectQuerySqlTextProvider_1.SelectQuerySqlTextProvider(_requestwrapper_1.wrapGetSelectStatement(_this._options.callbacks.selectStatement), _this._connection), _this._options.disableCustomSql));\n        _this._disposables.push(_this.selectedQueryType.subscribe(function (value) {\n            if (value === ConfigureQueryPage.SP_TEXT) {\n                _this[_constants_1.__loadingStateFunctionName] && _this[_constants_1.__loadingStateFunctionName](true);\n                _this._dataSource().dbSchemaProvider.getDbStoredProcedures().done(function (procedures) {\n                    _this._proceduresList.storedProcedures([]);\n                    _this._proceduresList.storedProcedures(procedures);\n                }).always(function (x) { return _this[_constants_1.__loadingStateFunctionName] && _this[_constants_1.__loadingStateFunctionName](false); });\n                _this.queryControl(_this._proceduresList);\n            }\n            else {\n                _this.queryControl(_this._selectStatementControl);\n            }\n        }));\n        _this.selectedQueryType(ConfigureQueryPage.QUERY_TEXT);\n        _this.popupQueryBuilder = new _queryBuilderPopup_1.QueryBuilderPopup(function (newQuery, isInProcess) {\n            _this.queryName(newQuery.name() || newQuery.generateName());\n            return _this._selectStatementControl.setQuery(newQuery, isInProcess);\n        }, _this._options.rtl, _this._options.callbacks.customizeQBInitData);\n        return _this;\n    }\n    ConfigureQueryPage.prototype.canNext = function () {\n        return !this.queryControl().isNextDisabled();\n    };\n    ConfigureQueryPage.prototype.canFinish = function () {\n        return !this.queryControl().isFinishDisabled() || !this.queryControl().isNextDisabled();\n    };\n    ConfigureQueryPage.prototype.runQueryBuilder = function () {\n        var query = this.queryControl().getQuery();\n        if (query && query.type() === utils_1.SqlQueryType.tableQuery) {\n            query.name(this.queryName());\n            this.popupQueryBuilder.show(query, this._dataSource());\n        }\n        else {\n            this.popupQueryBuilder.show(new tableQuery_1.TableQuery({ '@Name': this.queryName() }, this._dataSource()), this._dataSource());\n        }\n    };\n    ConfigureQueryPage.prototype.localizeQueryType = function (queryTypeString) {\n        return ConfigureQueryPage.QUERY_TEXT === queryTypeString ?\n            localization_utils_1.getLocalization(ConfigureQueryPage.QUERY_TEXT, 'DataAccessUIStringId.WizardPageConfigureQuery_Query') :\n            localization_utils_1.getLocalization(ConfigureQueryPage.SP_TEXT, 'DataAccessUIStringId.WizardPageConfigureQuery_StoredProcedure');\n    };\n    ConfigureQueryPage.prototype.initialize = function (state) {\n        this._dataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._options.requestWrapper);\n        this._proceduresList.setQuery(new storedProcQuery_1.StoredProcQuery({}, this._dataSource()));\n        this._selectStatementControl.setQuery(new customSqlQuery_1.CustomSqlQuery({}, this._dataSource()));\n        this.popupQueryBuilder.isVisible(false);\n        if (this._dataSourceWrapper.sqlQuery) {\n            this.initialName = this._dataSourceWrapper.sqlQuery.name();\n            this.queryName(this.initialName);\n            this.selectedQueryType(this._dataSourceWrapper.sqlQuery.type() === utils_1.SqlQueryType.storedProcQuery ? ConfigureQueryPage.SP_TEXT : ConfigureQueryPage.QUERY_TEXT);\n            return this.queryControl().setQuery(this._dataSourceWrapper.sqlQuery);\n        }\n        else {\n            this.selectedQueryType(ConfigureQueryPage.QUERY_TEXT);\n        }\n        return $.Deferred().resolve().promise();\n    };\n    ConfigureQueryPage.prototype.commit = function () {\n        var query = this.queryControl().getQuery();\n        if (query) {\n            var newQueryName = this.queryName() || this.initialName;\n            newQueryName && query.name(newQueryName);\n            if (!query.name() || !this._dataSourceWrapper.sqlQuery || this._dataSourceWrapper.sqlQuery.name() !== query.name())\n                query.name(_utils_2.generateQueryUniqueName(this._dataSource().queries(), query));\n            this._dataSourceWrapper.sqlQuery = query;\n        }\n        return $.Deferred().resolve({\n            queryName: this._dataSourceWrapper.sqlQuery.name(),\n            sqlDataSourceJSON: this._dataSourceWrapper.save()\n        }).promise();\n    };\n    ConfigureQueryPage.QUERY_TEXT = 'Query';\n    ConfigureQueryPage.SP_TEXT = 'Stored Procedure';\n    return ConfigureQueryPage;\n}(wizardPageBase_1.WizardPageBase));\nexports.ConfigureQueryPage = ConfigureQueryPage;\nfunction _registerConfigureQueryPage(factory, dataSourceWizardOptions) {\n    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.ConfigureQueryPage, {\n        create: function () {\n            return new ConfigureQueryPage(dataSourceWizardOptions);\n        },\n        setState: function (data, state) {\n            state.queryName = data.queryName;\n            state.sqlDataSourceJSON = data.sqlDataSourceJSON;\n        },\n        getState: function (state) {\n            return state.sqlDataSourceWizard;\n        },\n        resetState: function (state, defaultState) {\n            state.sqlDataSourceJSON = defaultState.sqlDataSourceJSON;\n            state.queryName = defaultState.queryName;\n        },\n        template: 'dxrd-wizard-create-query-page',\n        description: _localization_1.isCustomizedWithUpdateLocalizationMethod('Create a query or select a stored procedure') || localization_utils_1.getLocalization('Create a query or select a stored procedure.', _localizationStringIds_1.StringId.WizardPageConfigureQuery)\n    });\n}\nexports._registerConfigureQueryPage = _registerConfigureQueryPage;\n"]},"metadata":{},"sourceType":"script"}