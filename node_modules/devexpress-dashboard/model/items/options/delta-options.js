/**
* DevExpress Dashboard (delta-options.js)
* Version:  22.1.3
* Build date: Jun 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeltaOptions = exports.CardDeltaOptions = void 0;
var analytics_utils_1 = require("@devexpress/analytics-core/analytics-utils");
var serializable_model_1 = require("../../serializable-model");
var _delta_options_1 = require("./metadata/_delta-options");
var CardDeltaOptions = (function (_super) {
    __extends(CardDeltaOptions, _super);
    function CardDeltaOptions(modelJSON, serializer) {
        if (modelJSON === void 0) { modelJSON = {}; }
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        return _super.call(this, modelJSON, serializer) || this;
    }
    CardDeltaOptions.prototype.getInfo = function () {
        return _delta_options_1.cardDeltaOptionsSerializationsInfo;
    };
    return CardDeltaOptions;
}(serializable_model_1.SerializableModel));
exports.CardDeltaOptions = CardDeltaOptions;
var DeltaOptions = (function (_super) {
    __extends(DeltaOptions, _super);
    function DeltaOptions(modelJSON, serializer) {
        if (modelJSON === void 0) { modelJSON = {}; }
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        return _super.call(this, modelJSON, serializer) || this;
    }
    DeltaOptions.prototype.getInfo = function () {
        return _delta_options_1.deltaOptionsSerializationsInfo;
    };
    return DeltaOptions;
}(CardDeltaOptions));
exports.DeltaOptions = DeltaOptions;
