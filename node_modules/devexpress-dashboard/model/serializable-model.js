/**
* DevExpress Dashboard (serializable-model.js)
* Version:  22.1.3
* Build date: Jun 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.itemTypesMap = exports.TypedSerializableModel = exports.SerializableModel = void 0;
var analytics_utils_1 = require("@devexpress/analytics-core/analytics-utils");
var SerializableModel = (function () {
    function SerializableModel(model, serializer, info) {
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        var prevGetInfo = this.getInfo;
        if (info !== undefined)
            this.getInfo = undefined;
        serializer.deserialize(this, model || {}, info);
        if (info !== undefined)
            this.getInfo = prevGetInfo;
    }
    return SerializableModel;
}());
exports.SerializableModel = SerializableModel;
var TypedSerializableModel = (function (_super) {
    __extends(TypedSerializableModel, _super);
    function TypedSerializableModel(model, serializer, info) {
        var _this = _super.call(this, model, serializer, info) || this;
        !_this.itemType() && _this.itemType(_this._getDefaultItemType());
        return _this;
    }
    TypedSerializableModel.prototype._getUniqueNamePrefix = function () {
        return this.itemType().charAt(0).toLowerCase() + this.itemType().slice(1);
    };
    return TypedSerializableModel;
}(SerializableModel));
exports.TypedSerializableModel = TypedSerializableModel;
exports.itemTypesMap = {};
