/**
* DevExpress Dashboard (_layout-item-drag-item.js)
* Version:  22.1.3
* Build date: Jun 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LayoutItemDragItemInfo = void 0;
var _drag_item_info_1 = require("./_drag-item-info");
var LayoutItemDragItemInfo = (function (_super) {
    __extends(LayoutItemDragItemInfo, _super);
    function LayoutItemDragItemInfo(_currentLayoutItem) {
        var _this = _super.call(this) || this;
        _this._currentLayoutItem = _currentLayoutItem;
        return _this;
    }
    LayoutItemDragItemInfo.prototype.canDrop = function (layoutItem) {
        return this._currentLayoutItem !== layoutItem && layoutItem.canAttach(this._currentLayoutItem.viewModel);
    };
    LayoutItemDragItemInfo.prototype.drop = function (dragOverState) {
        this._currentLayoutItem.moveTo(dragOverState.targetItem, dragOverState.hoverLocation, dragOverState.targetItemBehavior);
    };
    LayoutItemDragItemInfo.prototype.dragStart = function () {
        this._currentLayoutItem.visible(false);
    };
    LayoutItemDragItemInfo.prototype.dragEnd = function () {
        this._currentLayoutItem.visible(true);
    };
    return LayoutItemDragItemInfo;
}(_drag_item_info_1.DashboardDragItemInfo));
exports.LayoutItemDragItemInfo = LayoutItemDragItemInfo;
