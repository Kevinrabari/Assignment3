/**
* DevExpress Dashboard (_file-picker.js)
* Version:  22.1.3
* Build date: Jun 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.dxDashboardFilePicker = void 0;
var analytics_widgets_internal_1 = require("@devexpress/analytics-core/analytics-widgets-internal");
var dxDashboardFilePicker = (function (_super) {
    __extends(dxDashboardFilePicker, _super);
    function dxDashboardFilePicker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxDashboardFilePicker.prototype._clearButtonVisibility = function () {
        return this.option('showClearButton') && !!this.option('value');
    };
    dxDashboardFilePicker.prototype._clearValueHandler = function (e) {
        this['_input']().val('');
        _super.prototype['_clearValueHandler'].call(this, e);
    };
    return dxDashboardFilePicker;
}(analytics_widgets_internal_1.dxFileImagePicker));
exports.dxDashboardFilePicker = dxDashboardFilePicker;
