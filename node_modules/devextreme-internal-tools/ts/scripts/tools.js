"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runModulesMetaGenerator = exports.runValidator = exports.runTsDiscoverer = exports.runModulesGuideValidator = exports.runTopicsValidation = exports.runSyntaxDataGenerator = exports.runSmdGenerator = exports.runNgSmdGenerator = exports.runLinksConverter = exports.runInjector = exports.runImdGenerator = exports.runExtraTopicsGenerator = exports.runTagCleaner = exports.runDtsBundler = exports.runDocGenerator = exports.runDiscoverer = exports.runContentMapGenerator = exports.runCollapser = void 0;
var path_1 = require("path");
var helpers_1 = require("./helpers");
var args_1 = require("./args");
var discovering_1 = require("../discoverer/discovering");
var collapser_1 = require("../collapser/collapser");
var bundler_1 = require("../bundler/bundler");
var logging_1 = require("../logging");
var tag_cleaner_1 = require("../tag-cleaner/tag-cleaner");
var modules_meta_generator_1 = require("../modules-meta-generator/modules-meta-generator");
function runCollapser(allArgs) {
    logging_1.setAreaName('TS Collapser');
    var logTotal = logging_1.logStart();
    var args = args_1.ensureArgs(allArgs, { required: ['jsScripts'], optional: ['exclude'] });
    collapser_1.collapse(args.jsScripts, args.exclude);
    logTotal();
}
exports.runCollapser = runCollapser;
function runContentMapGenerator(args) {
    runNetcoreTool('DevExtreme.WebSite.ContentMapCreator.dll', args);
}
exports.runContentMapGenerator = runContentMapGenerator;
function runDiscoverer(args) {
    runNetcoreTool('DevExtreme.Declarations.Discoverer.dll', args);
}
exports.runDiscoverer = runDiscoverer;
function runDocGenerator(args) {
    runNetcoreTool('DevExtreme.Topics.Generator.dll', args);
}
exports.runDocGenerator = runDocGenerator;
function runDtsBundler(allArgs) {
    logging_1.setAreaName('TS Bundler');
    var logTotal = logging_1.logStart();
    var args = args_1.ensureArgs(allArgs, { required: ['jsScripts', 'output'], optional: ['exclude'] });
    helpers_1.deleteFile(args.output);
    bundler_1.bundle({
        scriptsDir: args.jsScripts,
        outputFile: args.output,
    }, args.exclude);
    logTotal();
}
exports.runDtsBundler = runDtsBundler;
function runTagCleaner(allArgs) {
    var args = args_1.ensureArgs(allArgs, { required: ['jsScripts'], optional: ['exclude'] });
    tag_cleaner_1.cleanTags(args.jsScripts, args.exclude);
}
exports.runTagCleaner = runTagCleaner;
function runExtraTopicsGenerator(allArgs) {
    runNetcoreTool('DevExtreme.Topics.ExtraFilesGenerator.dll', allArgs);
}
exports.runExtraTopicsGenerator = runExtraTopicsGenerator;
function runImdGenerator(args) {
    runNetcoreTool('DevExtreme.IntegrationDataGenerator.dll', args);
}
exports.runImdGenerator = runImdGenerator;
function runInjector(args) {
    runNetcoreTool('DevExtreme.Descriptions.Injector.dll', args);
}
exports.runInjector = runInjector;
function runLinksConverter(args) {
    runNetcoreTool('DevExtreme.WebSite.LinksConverter.dll', args);
}
exports.runLinksConverter = runLinksConverter;
function runNgSmdGenerator(args) {
    runNetcoreTool('DevExtreme.NgSmdGenerator.dll', args);
}
exports.runNgSmdGenerator = runNgSmdGenerator;
function runSmdGenerator(args) {
    runNetcoreTool('DevExtreme.StrongMetaDataGenerator.dll', args);
}
exports.runSmdGenerator = runSmdGenerator;
function runSyntaxDataGenerator(args) {
    runNetcoreTool('DevExtreme.WebSite.SyntaxDataGenerator.dll', args);
}
exports.runSyntaxDataGenerator = runSyntaxDataGenerator;
function runTopicsValidation(args) {
    runNetcoreTool('DevExtreme.Topics.Validation.dll', args);
}
exports.runTopicsValidation = runTopicsValidation;
function runModulesGuideValidator(args) {
    runNetcoreTool('DevExtreme.Topics.ModulesGuideValidator.dll', args);
}
exports.runModulesGuideValidator = runModulesGuideValidator;
function runTsDiscoverer(allArgs) {
    logging_1.setAreaName('TS Declarations Discovering');
    var logTotal = logging_1.logStart();
    var args = args_1.ensureArgs(allArgs, { required: ['jsScripts', 'artifacts'], optional: ['exclude'] });
    var tsMetaPath = path_1.join(args.artifacts, 'ts-members-meta.json');
    helpers_1.deleteFile(tsMetaPath);
    discovering_1.discover({
        scripts: args.jsScripts,
        output: tsMetaPath,
    }, args.exclude);
    logTotal();
}
exports.runTsDiscoverer = runTsDiscoverer;
function runValidator(args) {
    runNetcoreTool('DevExtreme.Declarations.IntegrityValidator.dll', args);
}
exports.runValidator = runValidator;
function runModulesMetaGenerator(allArgs) {
    var args = args_1.ensureArgs(allArgs, { required: ['jsScripts', 'artifacts'], optional: ['exclude'] });
    var exclude = args.exclude ? new RegExp(args.exclude) : null;
    var modulesMetaPath = path_1.join(args.artifacts, 'modules-meta.json');
    modules_meta_generator_1.generateModulesMeta(args.jsScripts, modulesMetaPath, exclude, allArgs.toolsVersion);
}
exports.runModulesMetaGenerator = runModulesMetaGenerator;
function runNetcoreTool(dllName, args) {
    var dllPath = path_1.join(helpers_1.paths.binDir, dllName);
    var toolName = dllName.replace(/^DevExtreme\.(.*)\.dll$/i, '$1');
    helpers_1.exec("dotnet \"" + dllPath + "\" " + args_1.stringifyArgs(args));
    logging_1.log(toolName + " OK");
}
//# sourceMappingURL=tools.js.map