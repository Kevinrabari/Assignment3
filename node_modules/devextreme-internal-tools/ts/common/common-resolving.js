"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getParenthesizedType = exports.resolveNonSupportedType = exports.resolveValueType = void 0;
var typescript_1 = require("typescript");
var data_model_1 = require("../discoverer/data-model");
var ts_utils_1 = require("./ts-utils");
function resolveValueType(node) {
    var id = ts_utils_1.getValueType(node.kind);
    if (!id)
        return undefined;
    return {
        id: id,
        kind: data_model_1.TypingKind.Value,
    };
}
exports.resolveValueType = resolveValueType;
function resolveNonSupportedType(node) {
    if (typescript_1.isConditionalTypeNode(node)
        || typescript_1.isIndexedAccessTypeNode(node)
        || typescript_1.isPropertyDeclaration(node)) {
        return {
            kind: data_model_1.TypingKind.Value,
            id: ts_utils_1.getValueType(typescript_1.SyntaxKind.AnyKeyword),
        };
    }
    return undefined;
}
exports.resolveNonSupportedType = resolveNonSupportedType;
function getParenthesizedType(node) {
    return typescript_1.isParenthesizedTypeNode(node) ? node.type : undefined;
}
exports.getParenthesizedType = getParenthesizedType;
//# sourceMappingURL=common-resolving.js.map